
2moto1enco.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009a60  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000041c  08009b70  08009b70  00019b70  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009f8c  08009f8c  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  08009f8c  08009f8c  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08009f8c  08009f8c  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08009f8c  08009f8c  00019f8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009f94  08009f94  00019f94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08009f98  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001334  200001dc  0800a174  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001510  0800a174  00021510  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020205  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001a101  00000000  00000000  00020248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00003a88  00000000  00000000  0003a349  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000014f8  00000000  00000000  0003ddd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000103a  00000000  00000000  0003f2d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001dcb3  00000000  00000000  0004030a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00017a69  00000000  00000000  0005dfbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009cbb0  00000000  00000000  00075a26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00006848  00000000  00000000  001125d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  00118e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001dc 	.word	0x200001dc
 800012c:	00000000 	.word	0x00000000
 8000130:	08009b58 	.word	0x08009b58

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e0 	.word	0x200001e0
 800014c:	08009b58 	.word	0x08009b58

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2f>:
 8000a88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a90:	bf24      	itt	cs
 8000a92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a9a:	d90d      	bls.n	8000ab8 <__aeabi_d2f+0x30>
 8000a9c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000aa0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ab0:	bf08      	it	eq
 8000ab2:	f020 0001 	biceq.w	r0, r0, #1
 8000ab6:	4770      	bx	lr
 8000ab8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000abc:	d121      	bne.n	8000b02 <__aeabi_d2f+0x7a>
 8000abe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000ac2:	bfbc      	itt	lt
 8000ac4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000ac8:	4770      	bxlt	lr
 8000aca:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000ace:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ad2:	f1c2 0218 	rsb	r2, r2, #24
 8000ad6:	f1c2 0c20 	rsb	ip, r2, #32
 8000ada:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ade:	fa20 f002 	lsr.w	r0, r0, r2
 8000ae2:	bf18      	it	ne
 8000ae4:	f040 0001 	orrne.w	r0, r0, #1
 8000ae8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000af0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af4:	ea40 000c 	orr.w	r0, r0, ip
 8000af8:	fa23 f302 	lsr.w	r3, r3, r2
 8000afc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b00:	e7cc      	b.n	8000a9c <__aeabi_d2f+0x14>
 8000b02:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b06:	d107      	bne.n	8000b18 <__aeabi_d2f+0x90>
 8000b08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b0c:	bf1e      	ittt	ne
 8000b0e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b12:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b16:	4770      	bxne	lr
 8000b18:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b24:	4770      	bx	lr
 8000b26:	bf00      	nop

08000b28 <__aeabi_frsub>:
 8000b28:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b2c:	e002      	b.n	8000b34 <__addsf3>
 8000b2e:	bf00      	nop

08000b30 <__aeabi_fsub>:
 8000b30:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b34 <__addsf3>:
 8000b34:	0042      	lsls	r2, r0, #1
 8000b36:	bf1f      	itttt	ne
 8000b38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b3c:	ea92 0f03 	teqne	r2, r3
 8000b40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b48:	d06a      	beq.n	8000c20 <__addsf3+0xec>
 8000b4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b52:	bfc1      	itttt	gt
 8000b54:	18d2      	addgt	r2, r2, r3
 8000b56:	4041      	eorgt	r1, r0
 8000b58:	4048      	eorgt	r0, r1
 8000b5a:	4041      	eorgt	r1, r0
 8000b5c:	bfb8      	it	lt
 8000b5e:	425b      	neglt	r3, r3
 8000b60:	2b19      	cmp	r3, #25
 8000b62:	bf88      	it	hi
 8000b64:	4770      	bxhi	lr
 8000b66:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b6a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b6e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b72:	bf18      	it	ne
 8000b74:	4240      	negne	r0, r0
 8000b76:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b7e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b82:	bf18      	it	ne
 8000b84:	4249      	negne	r1, r1
 8000b86:	ea92 0f03 	teq	r2, r3
 8000b8a:	d03f      	beq.n	8000c0c <__addsf3+0xd8>
 8000b8c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b90:	fa41 fc03 	asr.w	ip, r1, r3
 8000b94:	eb10 000c 	adds.w	r0, r0, ip
 8000b98:	f1c3 0320 	rsb	r3, r3, #32
 8000b9c:	fa01 f103 	lsl.w	r1, r1, r3
 8000ba0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000ba4:	d502      	bpl.n	8000bac <__addsf3+0x78>
 8000ba6:	4249      	negs	r1, r1
 8000ba8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bac:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000bb0:	d313      	bcc.n	8000bda <__addsf3+0xa6>
 8000bb2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000bb6:	d306      	bcc.n	8000bc6 <__addsf3+0x92>
 8000bb8:	0840      	lsrs	r0, r0, #1
 8000bba:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bbe:	f102 0201 	add.w	r2, r2, #1
 8000bc2:	2afe      	cmp	r2, #254	; 0xfe
 8000bc4:	d251      	bcs.n	8000c6a <__addsf3+0x136>
 8000bc6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000bca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bce:	bf08      	it	eq
 8000bd0:	f020 0001 	biceq.w	r0, r0, #1
 8000bd4:	ea40 0003 	orr.w	r0, r0, r3
 8000bd8:	4770      	bx	lr
 8000bda:	0049      	lsls	r1, r1, #1
 8000bdc:	eb40 0000 	adc.w	r0, r0, r0
 8000be0:	3a01      	subs	r2, #1
 8000be2:	bf28      	it	cs
 8000be4:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000be8:	d2ed      	bcs.n	8000bc6 <__addsf3+0x92>
 8000bea:	fab0 fc80 	clz	ip, r0
 8000bee:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bf2:	ebb2 020c 	subs.w	r2, r2, ip
 8000bf6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bfa:	bfaa      	itet	ge
 8000bfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c00:	4252      	neglt	r2, r2
 8000c02:	4318      	orrge	r0, r3
 8000c04:	bfbc      	itt	lt
 8000c06:	40d0      	lsrlt	r0, r2
 8000c08:	4318      	orrlt	r0, r3
 8000c0a:	4770      	bx	lr
 8000c0c:	f092 0f00 	teq	r2, #0
 8000c10:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c14:	bf06      	itte	eq
 8000c16:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c1a:	3201      	addeq	r2, #1
 8000c1c:	3b01      	subne	r3, #1
 8000c1e:	e7b5      	b.n	8000b8c <__addsf3+0x58>
 8000c20:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c28:	bf18      	it	ne
 8000c2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c2e:	d021      	beq.n	8000c74 <__addsf3+0x140>
 8000c30:	ea92 0f03 	teq	r2, r3
 8000c34:	d004      	beq.n	8000c40 <__addsf3+0x10c>
 8000c36:	f092 0f00 	teq	r2, #0
 8000c3a:	bf08      	it	eq
 8000c3c:	4608      	moveq	r0, r1
 8000c3e:	4770      	bx	lr
 8000c40:	ea90 0f01 	teq	r0, r1
 8000c44:	bf1c      	itt	ne
 8000c46:	2000      	movne	r0, #0
 8000c48:	4770      	bxne	lr
 8000c4a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000c4e:	d104      	bne.n	8000c5a <__addsf3+0x126>
 8000c50:	0040      	lsls	r0, r0, #1
 8000c52:	bf28      	it	cs
 8000c54:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000c58:	4770      	bx	lr
 8000c5a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000c5e:	bf3c      	itt	cc
 8000c60:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c64:	4770      	bxcc	lr
 8000c66:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c6a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c6e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c72:	4770      	bx	lr
 8000c74:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c78:	bf16      	itet	ne
 8000c7a:	4608      	movne	r0, r1
 8000c7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c80:	4601      	movne	r1, r0
 8000c82:	0242      	lsls	r2, r0, #9
 8000c84:	bf06      	itte	eq
 8000c86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c8a:	ea90 0f01 	teqeq	r0, r1
 8000c8e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c92:	4770      	bx	lr

08000c94 <__aeabi_ui2f>:
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	e004      	b.n	8000ca4 <__aeabi_i2f+0x8>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_i2f>:
 8000c9c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000ca0:	bf48      	it	mi
 8000ca2:	4240      	negmi	r0, r0
 8000ca4:	ea5f 0c00 	movs.w	ip, r0
 8000ca8:	bf08      	it	eq
 8000caa:	4770      	bxeq	lr
 8000cac:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	f04f 0000 	mov.w	r0, #0
 8000cb6:	e01c      	b.n	8000cf2 <__aeabi_l2f+0x2a>

08000cb8 <__aeabi_ul2f>:
 8000cb8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cbc:	bf08      	it	eq
 8000cbe:	4770      	bxeq	lr
 8000cc0:	f04f 0300 	mov.w	r3, #0
 8000cc4:	e00a      	b.n	8000cdc <__aeabi_l2f+0x14>
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_l2f>:
 8000cc8:	ea50 0201 	orrs.w	r2, r0, r1
 8000ccc:	bf08      	it	eq
 8000cce:	4770      	bxeq	lr
 8000cd0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000cd4:	d502      	bpl.n	8000cdc <__aeabi_l2f+0x14>
 8000cd6:	4240      	negs	r0, r0
 8000cd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cdc:	ea5f 0c01 	movs.w	ip, r1
 8000ce0:	bf02      	ittt	eq
 8000ce2:	4684      	moveq	ip, r0
 8000ce4:	4601      	moveq	r1, r0
 8000ce6:	2000      	moveq	r0, #0
 8000ce8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000cec:	bf08      	it	eq
 8000cee:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000cf2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000cf6:	fabc f28c 	clz	r2, ip
 8000cfa:	3a08      	subs	r2, #8
 8000cfc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d00:	db10      	blt.n	8000d24 <__aeabi_l2f+0x5c>
 8000d02:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d06:	4463      	add	r3, ip
 8000d08:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d0c:	f1c2 0220 	rsb	r2, r2, #32
 8000d10:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d14:	fa20 f202 	lsr.w	r2, r0, r2
 8000d18:	eb43 0002 	adc.w	r0, r3, r2
 8000d1c:	bf08      	it	eq
 8000d1e:	f020 0001 	biceq.w	r0, r0, #1
 8000d22:	4770      	bx	lr
 8000d24:	f102 0220 	add.w	r2, r2, #32
 8000d28:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d2c:	f1c2 0220 	rsb	r2, r2, #32
 8000d30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d34:	fa21 f202 	lsr.w	r2, r1, r2
 8000d38:	eb43 0002 	adc.w	r0, r3, r2
 8000d3c:	bf08      	it	eq
 8000d3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d42:	4770      	bx	lr

08000d44 <__aeabi_fmul>:
 8000d44:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d52:	ea92 0f0c 	teqne	r2, ip
 8000d56:	ea93 0f0c 	teqne	r3, ip
 8000d5a:	d06f      	beq.n	8000e3c <__aeabi_fmul+0xf8>
 8000d5c:	441a      	add	r2, r3
 8000d5e:	ea80 0c01 	eor.w	ip, r0, r1
 8000d62:	0240      	lsls	r0, r0, #9
 8000d64:	bf18      	it	ne
 8000d66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d6a:	d01e      	beq.n	8000daa <__aeabi_fmul+0x66>
 8000d6c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000d70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d78:	fba0 3101 	umull	r3, r1, r0, r1
 8000d7c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000d80:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000d84:	bf3e      	ittt	cc
 8000d86:	0049      	lslcc	r1, r1, #1
 8000d88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d8c:	005b      	lslcc	r3, r3, #1
 8000d8e:	ea40 0001 	orr.w	r0, r0, r1
 8000d92:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000d96:	2afd      	cmp	r2, #253	; 0xfd
 8000d98:	d81d      	bhi.n	8000dd6 <__aeabi_fmul+0x92>
 8000d9a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000d9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da2:	bf08      	it	eq
 8000da4:	f020 0001 	biceq.w	r0, r0, #1
 8000da8:	4770      	bx	lr
 8000daa:	f090 0f00 	teq	r0, #0
 8000dae:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000db2:	bf08      	it	eq
 8000db4:	0249      	lsleq	r1, r1, #9
 8000db6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dbe:	3a7f      	subs	r2, #127	; 0x7f
 8000dc0:	bfc2      	ittt	gt
 8000dc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000dc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dca:	4770      	bxgt	lr
 8000dcc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000dd0:	f04f 0300 	mov.w	r3, #0
 8000dd4:	3a01      	subs	r2, #1
 8000dd6:	dc5d      	bgt.n	8000e94 <__aeabi_fmul+0x150>
 8000dd8:	f112 0f19 	cmn.w	r2, #25
 8000ddc:	bfdc      	itt	le
 8000dde:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000de2:	4770      	bxle	lr
 8000de4:	f1c2 0200 	rsb	r2, r2, #0
 8000de8:	0041      	lsls	r1, r0, #1
 8000dea:	fa21 f102 	lsr.w	r1, r1, r2
 8000dee:	f1c2 0220 	rsb	r2, r2, #32
 8000df2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dfa:	f140 0000 	adc.w	r0, r0, #0
 8000dfe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e02:	bf08      	it	eq
 8000e04:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e08:	4770      	bx	lr
 8000e0a:	f092 0f00 	teq	r2, #0
 8000e0e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e12:	bf02      	ittt	eq
 8000e14:	0040      	lsleq	r0, r0, #1
 8000e16:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e1a:	3a01      	subeq	r2, #1
 8000e1c:	d0f9      	beq.n	8000e12 <__aeabi_fmul+0xce>
 8000e1e:	ea40 000c 	orr.w	r0, r0, ip
 8000e22:	f093 0f00 	teq	r3, #0
 8000e26:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e2a:	bf02      	ittt	eq
 8000e2c:	0049      	lsleq	r1, r1, #1
 8000e2e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e32:	3b01      	subeq	r3, #1
 8000e34:	d0f9      	beq.n	8000e2a <__aeabi_fmul+0xe6>
 8000e36:	ea41 010c 	orr.w	r1, r1, ip
 8000e3a:	e78f      	b.n	8000d5c <__aeabi_fmul+0x18>
 8000e3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e40:	ea92 0f0c 	teq	r2, ip
 8000e44:	bf18      	it	ne
 8000e46:	ea93 0f0c 	teqne	r3, ip
 8000e4a:	d00a      	beq.n	8000e62 <__aeabi_fmul+0x11e>
 8000e4c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e50:	bf18      	it	ne
 8000e52:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e56:	d1d8      	bne.n	8000e0a <__aeabi_fmul+0xc6>
 8000e58:	ea80 0001 	eor.w	r0, r0, r1
 8000e5c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e60:	4770      	bx	lr
 8000e62:	f090 0f00 	teq	r0, #0
 8000e66:	bf17      	itett	ne
 8000e68:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000e6c:	4608      	moveq	r0, r1
 8000e6e:	f091 0f00 	teqne	r1, #0
 8000e72:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000e76:	d014      	beq.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e78:	ea92 0f0c 	teq	r2, ip
 8000e7c:	d101      	bne.n	8000e82 <__aeabi_fmul+0x13e>
 8000e7e:	0242      	lsls	r2, r0, #9
 8000e80:	d10f      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e82:	ea93 0f0c 	teq	r3, ip
 8000e86:	d103      	bne.n	8000e90 <__aeabi_fmul+0x14c>
 8000e88:	024b      	lsls	r3, r1, #9
 8000e8a:	bf18      	it	ne
 8000e8c:	4608      	movne	r0, r1
 8000e8e:	d108      	bne.n	8000ea2 <__aeabi_fmul+0x15e>
 8000e90:	ea80 0001 	eor.w	r0, r0, r1
 8000e94:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e98:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ea0:	4770      	bx	lr
 8000ea2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ea6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000eaa:	4770      	bx	lr

08000eac <__aeabi_fdiv>:
 8000eac:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000eb0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eb4:	bf1e      	ittt	ne
 8000eb6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eba:	ea92 0f0c 	teqne	r2, ip
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d069      	beq.n	8000f98 <__aeabi_fdiv+0xec>
 8000ec4:	eba2 0203 	sub.w	r2, r2, r3
 8000ec8:	ea80 0c01 	eor.w	ip, r0, r1
 8000ecc:	0249      	lsls	r1, r1, #9
 8000ece:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000ed2:	d037      	beq.n	8000f44 <__aeabi_fdiv+0x98>
 8000ed4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000ed8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000edc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ee0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000ee4:	428b      	cmp	r3, r1
 8000ee6:	bf38      	it	cc
 8000ee8:	005b      	lslcc	r3, r3, #1
 8000eea:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000eee:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000ef2:	428b      	cmp	r3, r1
 8000ef4:	bf24      	itt	cs
 8000ef6:	1a5b      	subcs	r3, r3, r1
 8000ef8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000efc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f00:	bf24      	itt	cs
 8000f02:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f06:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f0a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f0e:	bf24      	itt	cs
 8000f10:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f14:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f18:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f1c:	bf24      	itt	cs
 8000f1e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f22:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f26:	011b      	lsls	r3, r3, #4
 8000f28:	bf18      	it	ne
 8000f2a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f2e:	d1e0      	bne.n	8000ef2 <__aeabi_fdiv+0x46>
 8000f30:	2afd      	cmp	r2, #253	; 0xfd
 8000f32:	f63f af50 	bhi.w	8000dd6 <__aeabi_fmul+0x92>
 8000f36:	428b      	cmp	r3, r1
 8000f38:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f3c:	bf08      	it	eq
 8000f3e:	f020 0001 	biceq.w	r0, r0, #1
 8000f42:	4770      	bx	lr
 8000f44:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f48:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f4c:	327f      	adds	r2, #127	; 0x7f
 8000f4e:	bfc2      	ittt	gt
 8000f50:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f54:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f58:	4770      	bxgt	lr
 8000f5a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f5e:	f04f 0300 	mov.w	r3, #0
 8000f62:	3a01      	subs	r2, #1
 8000f64:	e737      	b.n	8000dd6 <__aeabi_fmul+0x92>
 8000f66:	f092 0f00 	teq	r2, #0
 8000f6a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000f6e:	bf02      	ittt	eq
 8000f70:	0040      	lsleq	r0, r0, #1
 8000f72:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000f76:	3a01      	subeq	r2, #1
 8000f78:	d0f9      	beq.n	8000f6e <__aeabi_fdiv+0xc2>
 8000f7a:	ea40 000c 	orr.w	r0, r0, ip
 8000f7e:	f093 0f00 	teq	r3, #0
 8000f82:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000f86:	bf02      	ittt	eq
 8000f88:	0049      	lsleq	r1, r1, #1
 8000f8a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f8e:	3b01      	subeq	r3, #1
 8000f90:	d0f9      	beq.n	8000f86 <__aeabi_fdiv+0xda>
 8000f92:	ea41 010c 	orr.w	r1, r1, ip
 8000f96:	e795      	b.n	8000ec4 <__aeabi_fdiv+0x18>
 8000f98:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f9c:	ea92 0f0c 	teq	r2, ip
 8000fa0:	d108      	bne.n	8000fb4 <__aeabi_fdiv+0x108>
 8000fa2:	0242      	lsls	r2, r0, #9
 8000fa4:	f47f af7d 	bne.w	8000ea2 <__aeabi_fmul+0x15e>
 8000fa8:	ea93 0f0c 	teq	r3, ip
 8000fac:	f47f af70 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fb0:	4608      	mov	r0, r1
 8000fb2:	e776      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fb4:	ea93 0f0c 	teq	r3, ip
 8000fb8:	d104      	bne.n	8000fc4 <__aeabi_fdiv+0x118>
 8000fba:	024b      	lsls	r3, r1, #9
 8000fbc:	f43f af4c 	beq.w	8000e58 <__aeabi_fmul+0x114>
 8000fc0:	4608      	mov	r0, r1
 8000fc2:	e76e      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fc4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000fc8:	bf18      	it	ne
 8000fca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000fce:	d1ca      	bne.n	8000f66 <__aeabi_fdiv+0xba>
 8000fd0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000fd4:	f47f af5c 	bne.w	8000e90 <__aeabi_fmul+0x14c>
 8000fd8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000fdc:	f47f af3c 	bne.w	8000e58 <__aeabi_fmul+0x114>
 8000fe0:	e75f      	b.n	8000ea2 <__aeabi_fmul+0x15e>
 8000fe2:	bf00      	nop

08000fe4 <__gesf2>:
 8000fe4:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000fe8:	e006      	b.n	8000ff8 <__cmpsf2+0x4>
 8000fea:	bf00      	nop

08000fec <__lesf2>:
 8000fec:	f04f 0c01 	mov.w	ip, #1
 8000ff0:	e002      	b.n	8000ff8 <__cmpsf2+0x4>
 8000ff2:	bf00      	nop

08000ff4 <__cmpsf2>:
 8000ff4:	f04f 0c01 	mov.w	ip, #1
 8000ff8:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000ffc:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001000:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001004:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001008:	bf18      	it	ne
 800100a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800100e:	d011      	beq.n	8001034 <__cmpsf2+0x40>
 8001010:	b001      	add	sp, #4
 8001012:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001016:	bf18      	it	ne
 8001018:	ea90 0f01 	teqne	r0, r1
 800101c:	bf58      	it	pl
 800101e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001022:	bf88      	it	hi
 8001024:	17c8      	asrhi	r0, r1, #31
 8001026:	bf38      	it	cc
 8001028:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800102c:	bf18      	it	ne
 800102e:	f040 0001 	orrne.w	r0, r0, #1
 8001032:	4770      	bx	lr
 8001034:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001038:	d102      	bne.n	8001040 <__cmpsf2+0x4c>
 800103a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800103e:	d105      	bne.n	800104c <__cmpsf2+0x58>
 8001040:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001044:	d1e4      	bne.n	8001010 <__cmpsf2+0x1c>
 8001046:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800104a:	d0e1      	beq.n	8001010 <__cmpsf2+0x1c>
 800104c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001050:	4770      	bx	lr
 8001052:	bf00      	nop

08001054 <__aeabi_cfrcmple>:
 8001054:	4684      	mov	ip, r0
 8001056:	4608      	mov	r0, r1
 8001058:	4661      	mov	r1, ip
 800105a:	e7ff      	b.n	800105c <__aeabi_cfcmpeq>

0800105c <__aeabi_cfcmpeq>:
 800105c:	b50f      	push	{r0, r1, r2, r3, lr}
 800105e:	f7ff ffc9 	bl	8000ff4 <__cmpsf2>
 8001062:	2800      	cmp	r0, #0
 8001064:	bf48      	it	mi
 8001066:	f110 0f00 	cmnmi.w	r0, #0
 800106a:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800106c <__aeabi_fcmpeq>:
 800106c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001070:	f7ff fff4 	bl	800105c <__aeabi_cfcmpeq>
 8001074:	bf0c      	ite	eq
 8001076:	2001      	moveq	r0, #1
 8001078:	2000      	movne	r0, #0
 800107a:	f85d fb08 	ldr.w	pc, [sp], #8
 800107e:	bf00      	nop

08001080 <__aeabi_fcmplt>:
 8001080:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001084:	f7ff ffea 	bl	800105c <__aeabi_cfcmpeq>
 8001088:	bf34      	ite	cc
 800108a:	2001      	movcc	r0, #1
 800108c:	2000      	movcs	r0, #0
 800108e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001092:	bf00      	nop

08001094 <__aeabi_fcmple>:
 8001094:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001098:	f7ff ffe0 	bl	800105c <__aeabi_cfcmpeq>
 800109c:	bf94      	ite	ls
 800109e:	2001      	movls	r0, #1
 80010a0:	2000      	movhi	r0, #0
 80010a2:	f85d fb08 	ldr.w	pc, [sp], #8
 80010a6:	bf00      	nop

080010a8 <__aeabi_fcmpge>:
 80010a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010ac:	f7ff ffd2 	bl	8001054 <__aeabi_cfrcmple>
 80010b0:	bf94      	ite	ls
 80010b2:	2001      	movls	r0, #1
 80010b4:	2000      	movhi	r0, #0
 80010b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80010ba:	bf00      	nop

080010bc <__aeabi_fcmpgt>:
 80010bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010c0:	f7ff ffc8 	bl	8001054 <__aeabi_cfrcmple>
 80010c4:	bf34      	ite	cc
 80010c6:	2001      	movcc	r0, #1
 80010c8:	2000      	movcs	r0, #0
 80010ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80010ce:	bf00      	nop

080010d0 <__aeabi_f2uiz>:
 80010d0:	0042      	lsls	r2, r0, #1
 80010d2:	d20e      	bcs.n	80010f2 <__aeabi_f2uiz+0x22>
 80010d4:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80010d8:	d30b      	bcc.n	80010f2 <__aeabi_f2uiz+0x22>
 80010da:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80010de:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80010e2:	d409      	bmi.n	80010f8 <__aeabi_f2uiz+0x28>
 80010e4:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80010e8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80010ec:	fa23 f002 	lsr.w	r0, r3, r2
 80010f0:	4770      	bx	lr
 80010f2:	f04f 0000 	mov.w	r0, #0
 80010f6:	4770      	bx	lr
 80010f8:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80010fc:	d101      	bne.n	8001102 <__aeabi_f2uiz+0x32>
 80010fe:	0242      	lsls	r2, r0, #9
 8001100:	d102      	bne.n	8001108 <__aeabi_f2uiz+0x38>
 8001102:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001106:	4770      	bx	lr
 8001108:	f04f 0000 	mov.w	r0, #0
 800110c:	4770      	bx	lr
 800110e:	bf00      	nop

08001110 <setCSLine>:
#include "AMT22.h"


void setCSLine(GPIO_TypeDef *encoderPort, uint16_t encoderPin,
		GPIO_PinState csLine) {
 8001110:	b580      	push	{r7, lr}
 8001112:	b082      	sub	sp, #8
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	460b      	mov	r3, r1
 800111a:	807b      	strh	r3, [r7, #2]
 800111c:	4613      	mov	r3, r2
 800111e:	707b      	strb	r3, [r7, #1]
	HAL_GPIO_WritePin(encoderPort, encoderPin, csLine);
 8001120:	787a      	ldrb	r2, [r7, #1]
 8001122:	887b      	ldrh	r3, [r7, #2]
 8001124:	4619      	mov	r1, r3
 8001126:	6878      	ldr	r0, [r7, #4]
 8001128:	f002 f854 	bl	80031d4 <HAL_GPIO_WritePin>

}
 800112c:	bf00      	nop
 800112e:	3708      	adds	r7, #8
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}

08001134 <spiWriteRead>:


uint8_t spiWriteRead(SPI_HandleTypeDef *hspi, uint8_t sendByte,
		GPIO_TypeDef *encoderPort, uint16_t encoderPin, uint8_t releaseLine) {
 8001134:	b580      	push	{r7, lr}
 8001136:	b088      	sub	sp, #32
 8001138:	af02      	add	r7, sp, #8
 800113a:	60f8      	str	r0, [r7, #12]
 800113c:	607a      	str	r2, [r7, #4]
 800113e:	461a      	mov	r2, r3
 8001140:	460b      	mov	r3, r1
 8001142:	72fb      	strb	r3, [r7, #11]
 8001144:	4613      	mov	r3, r2
 8001146:	813b      	strh	r3, [r7, #8]
	uint8_t data;
	setCSLine(encoderPort, encoderPin, GPIO_PIN_RESET);
 8001148:	893b      	ldrh	r3, [r7, #8]
 800114a:	2200      	movs	r2, #0
 800114c:	4619      	mov	r1, r3
 800114e:	6878      	ldr	r0, [r7, #4]
 8001150:	f7ff ffde 	bl	8001110 <setCSLine>
	delay(docDelay);
 8001154:	2003      	movs	r0, #3
 8001156:	f000 f923 	bl	80013a0 <delay>
	HAL_SPI_TransmitReceive(hspi, &sendByte, &data, 1, 10);
 800115a:	f107 0217 	add.w	r2, r7, #23
 800115e:	f107 010b 	add.w	r1, r7, #11
 8001162:	230a      	movs	r3, #10
 8001164:	9300      	str	r3, [sp, #0]
 8001166:	2301      	movs	r3, #1
 8001168:	68f8      	ldr	r0, [r7, #12]
 800116a:	f002 fd4f 	bl	8003c0c <HAL_SPI_TransmitReceive>
	delay(docDelay);
 800116e:	2003      	movs	r0, #3
 8001170:	f000 f916 	bl	80013a0 <delay>
	setCSLine(encoderPort, encoderPin, releaseLine);
 8001174:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001178:	893b      	ldrh	r3, [r7, #8]
 800117a:	4619      	mov	r1, r3
 800117c:	6878      	ldr	r0, [r7, #4]
 800117e:	f7ff ffc7 	bl	8001110 <setCSLine>
	return data;
 8001182:	7dfb      	ldrb	r3, [r7, #23]
}
 8001184:	4618      	mov	r0, r3
 8001186:	3718      	adds	r7, #24
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}

0800118c <getPositionSPI>:

uint16_t getPositionSPI(SPI_HandleTypeDef *hspi, GPIO_TypeDef *encoderPort,
		uint16_t encoderPin, uint8_t resolution) {
 800118c:	b580      	push	{r7, lr}
 800118e:	b08c      	sub	sp, #48	; 0x30
 8001190:	af02      	add	r7, sp, #8
 8001192:	60f8      	str	r0, [r7, #12]
 8001194:	60b9      	str	r1, [r7, #8]
 8001196:	4611      	mov	r1, r2
 8001198:	461a      	mov	r2, r3
 800119a:	460b      	mov	r3, r1
 800119c:	80fb      	strh	r3, [r7, #6]
 800119e:	4613      	mov	r3, r2
 80011a0:	717b      	strb	r3, [r7, #5]

	DWT_Delay_Init();
 80011a2:	f000 f90f 	bl	80013c4 <DWT_Delay_Init>

	uint16_t currentPosition = 0;
 80011a6:	2300      	movs	r3, #0
 80011a8:	84fb      	strh	r3, [r7, #38]	; 0x26
	uint8_t binaryArray[16];
	currentPosition = spiWriteRead(hspi, AMT22_NOP, encoderPort, encoderPin, 0) << 8;
 80011aa:	88fb      	ldrh	r3, [r7, #6]
 80011ac:	2200      	movs	r2, #0
 80011ae:	9200      	str	r2, [sp, #0]
 80011b0:	68ba      	ldr	r2, [r7, #8]
 80011b2:	2100      	movs	r1, #0
 80011b4:	68f8      	ldr	r0, [r7, #12]
 80011b6:	f7ff ffbd 	bl	8001134 <spiWriteRead>
 80011ba:	4603      	mov	r3, r0
 80011bc:	b29b      	uxth	r3, r3
 80011be:	021b      	lsls	r3, r3, #8
 80011c0:	84fb      	strh	r3, [r7, #38]	; 0x26
	delay(docDelay);
 80011c2:	2003      	movs	r0, #3
 80011c4:	f000 f8ec 	bl	80013a0 <delay>
	currentPosition |= spiWriteRead(hspi, AMT22_NOP, encoderPort, encoderPin, 1);
 80011c8:	88fb      	ldrh	r3, [r7, #6]
 80011ca:	2201      	movs	r2, #1
 80011cc:	9200      	str	r2, [sp, #0]
 80011ce:	68ba      	ldr	r2, [r7, #8]
 80011d0:	2100      	movs	r1, #0
 80011d2:	68f8      	ldr	r0, [r7, #12]
 80011d4:	f7ff ffae 	bl	8001134 <spiWriteRead>
 80011d8:	4603      	mov	r3, r0
 80011da:	b29a      	uxth	r2, r3
 80011dc:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80011de:	4313      	orrs	r3, r2
 80011e0:	84fb      	strh	r3, [r7, #38]	; 0x26
	for (int i = 0; i < 16; i++)
 80011e2:	2300      	movs	r3, #0
 80011e4:	623b      	str	r3, [r7, #32]
 80011e6:	e010      	b.n	800120a <getPositionSPI+0x7e>
		binaryArray[i] = (0x01) & (currentPosition >> (i));
 80011e8:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80011ea:	6a3b      	ldr	r3, [r7, #32]
 80011ec:	fa42 f303 	asr.w	r3, r2, r3
 80011f0:	b2db      	uxtb	r3, r3
 80011f2:	f003 0301 	and.w	r3, r3, #1
 80011f6:	b2d9      	uxtb	r1, r3
 80011f8:	f107 0210 	add.w	r2, r7, #16
 80011fc:	6a3b      	ldr	r3, [r7, #32]
 80011fe:	4413      	add	r3, r2
 8001200:	460a      	mov	r2, r1
 8001202:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 16; i++)
 8001204:	6a3b      	ldr	r3, [r7, #32]
 8001206:	3301      	adds	r3, #1
 8001208:	623b      	str	r3, [r7, #32]
 800120a:	6a3b      	ldr	r3, [r7, #32]
 800120c:	2b0f      	cmp	r3, #15
 800120e:	ddeb      	ble.n	80011e8 <getPositionSPI+0x5c>
	if ((binaryArray[15]
 8001210:	7ffb      	ldrb	r3, [r7, #31]
 8001212:	4619      	mov	r1, r3
			== !(binaryArray[13] ^ binaryArray[11] ^ binaryArray[9]
 8001214:	7f7a      	ldrb	r2, [r7, #29]
 8001216:	7efb      	ldrb	r3, [r7, #27]
 8001218:	4053      	eors	r3, r2
 800121a:	b2da      	uxtb	r2, r3
 800121c:	7e7b      	ldrb	r3, [r7, #25]
 800121e:	4053      	eors	r3, r2
 8001220:	b2da      	uxtb	r2, r3
					^ binaryArray[7] ^ binaryArray[5] ^ binaryArray[3]
 8001222:	7dfb      	ldrb	r3, [r7, #23]
			== !(binaryArray[13] ^ binaryArray[11] ^ binaryArray[9]
 8001224:	4053      	eors	r3, r2
 8001226:	b2da      	uxtb	r2, r3
					^ binaryArray[7] ^ binaryArray[5] ^ binaryArray[3]
 8001228:	7d7b      	ldrb	r3, [r7, #21]
			== !(binaryArray[13] ^ binaryArray[11] ^ binaryArray[9]
 800122a:	4053      	eors	r3, r2
 800122c:	b2da      	uxtb	r2, r3
					^ binaryArray[7] ^ binaryArray[5] ^ binaryArray[3]
 800122e:	7cfb      	ldrb	r3, [r7, #19]
			== !(binaryArray[13] ^ binaryArray[11] ^ binaryArray[9]
 8001230:	4053      	eors	r3, r2
 8001232:	b2da      	uxtb	r2, r3
					^ binaryArray[1]))
 8001234:	7c7b      	ldrb	r3, [r7, #17]
			== !(binaryArray[13] ^ binaryArray[11] ^ binaryArray[9]
 8001236:	429a      	cmp	r2, r3
 8001238:	bf0c      	ite	eq
 800123a:	2301      	moveq	r3, #1
 800123c:	2300      	movne	r3, #0
 800123e:	b2db      	uxtb	r3, r3
	if ((binaryArray[15]
 8001240:	4299      	cmp	r1, r3
 8001242:	d11e      	bne.n	8001282 <getPositionSPI+0xf6>
			&& (binaryArray[14]
 8001244:	7fbb      	ldrb	r3, [r7, #30]
 8001246:	4619      	mov	r1, r3
					== !(binaryArray[12] ^ binaryArray[10] ^ binaryArray[8]
 8001248:	7f3a      	ldrb	r2, [r7, #28]
 800124a:	7ebb      	ldrb	r3, [r7, #26]
 800124c:	4053      	eors	r3, r2
 800124e:	b2da      	uxtb	r2, r3
 8001250:	7e3b      	ldrb	r3, [r7, #24]
 8001252:	4053      	eors	r3, r2
 8001254:	b2da      	uxtb	r2, r3
							^ binaryArray[6] ^ binaryArray[4] ^ binaryArray[2]
 8001256:	7dbb      	ldrb	r3, [r7, #22]
					== !(binaryArray[12] ^ binaryArray[10] ^ binaryArray[8]
 8001258:	4053      	eors	r3, r2
 800125a:	b2da      	uxtb	r2, r3
							^ binaryArray[6] ^ binaryArray[4] ^ binaryArray[2]
 800125c:	7d3b      	ldrb	r3, [r7, #20]
					== !(binaryArray[12] ^ binaryArray[10] ^ binaryArray[8]
 800125e:	4053      	eors	r3, r2
 8001260:	b2da      	uxtb	r2, r3
							^ binaryArray[6] ^ binaryArray[4] ^ binaryArray[2]
 8001262:	7cbb      	ldrb	r3, [r7, #18]
					== !(binaryArray[12] ^ binaryArray[10] ^ binaryArray[8]
 8001264:	4053      	eors	r3, r2
 8001266:	b2da      	uxtb	r2, r3
							^ binaryArray[0]))) {
 8001268:	7c3b      	ldrb	r3, [r7, #16]
					== !(binaryArray[12] ^ binaryArray[10] ^ binaryArray[8]
 800126a:	429a      	cmp	r2, r3
 800126c:	bf0c      	ite	eq
 800126e:	2301      	moveq	r3, #1
 8001270:	2300      	movne	r3, #0
 8001272:	b2db      	uxtb	r3, r3
			&& (binaryArray[14]
 8001274:	4299      	cmp	r1, r3
 8001276:	d104      	bne.n	8001282 <getPositionSPI+0xf6>
		currentPosition &= 0x3FFF;
 8001278:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800127a:	f3c3 030d 	ubfx	r3, r3, #0, #14
 800127e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001280:	e002      	b.n	8001288 <getPositionSPI+0xfc>
	} else {
		currentPosition = 0xFFFF; //bad position
 8001282:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001286:	84fb      	strh	r3, [r7, #38]	; 0x26
	}

	//If the resolution is 12-bits, and wasn't 0xFFFF, then shift position, otherwise do nothing
	if ((resolution == RES12) && (currentPosition != 0xFFFF))
 8001288:	797b      	ldrb	r3, [r7, #5]
 800128a:	2b0c      	cmp	r3, #12
 800128c:	d107      	bne.n	800129e <getPositionSPI+0x112>
 800128e:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001290:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001294:	4293      	cmp	r3, r2
 8001296:	d002      	beq.n	800129e <getPositionSPI+0x112>
		currentPosition = currentPosition >> 2;
 8001298:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800129a:	089b      	lsrs	r3, r3, #2
 800129c:	84fb      	strh	r3, [r7, #38]	; 0x26
	return currentPosition;
 800129e:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
}
 80012a0:	4618      	mov	r0, r3
 80012a2:	3728      	adds	r7, #40	; 0x28
 80012a4:	46bd      	mov	sp, r7
 80012a6:	bd80      	pop	{r7, pc}

080012a8 <setZeroSPI>:

void setZeroSPI(SPI_HandleTypeDef *hspi, GPIO_TypeDef *encoderPort,
		uint16_t encoderPin) {
 80012a8:	b580      	push	{r7, lr}
 80012aa:	b086      	sub	sp, #24
 80012ac:	af02      	add	r7, sp, #8
 80012ae:	60f8      	str	r0, [r7, #12]
 80012b0:	60b9      	str	r1, [r7, #8]
 80012b2:	4613      	mov	r3, r2
 80012b4:	80fb      	strh	r3, [r7, #6]

	spiWriteRead(hspi, AMT22_NOP, encoderPort, encoderPin, 0);
 80012b6:	88fb      	ldrh	r3, [r7, #6]
 80012b8:	2200      	movs	r2, #0
 80012ba:	9200      	str	r2, [sp, #0]
 80012bc:	68ba      	ldr	r2, [r7, #8]
 80012be:	2100      	movs	r1, #0
 80012c0:	68f8      	ldr	r0, [r7, #12]
 80012c2:	f7ff ff37 	bl	8001134 <spiWriteRead>
	delay( docDelay);
 80012c6:	2003      	movs	r0, #3
 80012c8:	f000 f86a 	bl	80013a0 <delay>
	spiWriteRead(hspi, AMT22_ZERO, encoderPort, encoderPin, 1);
 80012cc:	88fb      	ldrh	r3, [r7, #6]
 80012ce:	2201      	movs	r2, #1
 80012d0:	9200      	str	r2, [sp, #0]
 80012d2:	68ba      	ldr	r2, [r7, #8]
 80012d4:	2170      	movs	r1, #112	; 0x70
 80012d6:	68f8      	ldr	r0, [r7, #12]
 80012d8:	f7ff ff2c 	bl	8001134 <spiWriteRead>
	delay( docDelayLong + docDelayLong);
 80012dc:	2064      	movs	r0, #100	; 0x64
 80012de:	f000 f85f 	bl	80013a0 <delay>

}
 80012e2:	bf00      	nop
 80012e4:	3710      	adds	r7, #16
 80012e6:	46bd      	mov	sp, r7
 80012e8:	bd80      	pop	{r7, pc}
	...

080012ec <calculateAngle>:

float calculateAngle(uint16_t encoderValue, uint8_t bitDepth) {
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b084      	sub	sp, #16
 80012f0:	af00      	add	r7, sp, #0
 80012f2:	4603      	mov	r3, r0
 80012f4:	460a      	mov	r2, r1
 80012f6:	80fb      	strh	r3, [r7, #6]
 80012f8:	4613      	mov	r3, r2
 80012fa:	717b      	strb	r3, [r7, #5]
	float angle = 0.0;
 80012fc:	f04f 0300 	mov.w	r3, #0
 8001300:	60fb      	str	r3, [r7, #12]
	if (bitDepth == 12) {
 8001302:	797b      	ldrb	r3, [r7, #5]
 8001304:	2b0c      	cmp	r3, #12
 8001306:	d11e      	bne.n	8001346 <calculateAngle+0x5a>
		angle = ((float) encoderValue * 360.00)/ ENCODER_RESOLUTION_12_BIT;
 8001308:	88fb      	ldrh	r3, [r7, #6]
 800130a:	4618      	mov	r0, r3
 800130c:	f7ff fcc2 	bl	8000c94 <__aeabi_ui2f>
 8001310:	4603      	mov	r3, r0
 8001312:	4618      	mov	r0, r3
 8001314:	f7ff f888 	bl	8000428 <__aeabi_f2d>
 8001318:	f04f 0200 	mov.w	r2, #0
 800131c:	4b1d      	ldr	r3, [pc, #116]	; (8001394 <calculateAngle+0xa8>)
 800131e:	f7ff f8db 	bl	80004d8 <__aeabi_dmul>
 8001322:	4602      	mov	r2, r0
 8001324:	460b      	mov	r3, r1
 8001326:	4610      	mov	r0, r2
 8001328:	4619      	mov	r1, r3
 800132a:	f04f 0200 	mov.w	r2, #0
 800132e:	4b1a      	ldr	r3, [pc, #104]	; (8001398 <calculateAngle+0xac>)
 8001330:	f7ff f9fc 	bl	800072c <__aeabi_ddiv>
 8001334:	4602      	mov	r2, r0
 8001336:	460b      	mov	r3, r1
 8001338:	4610      	mov	r0, r2
 800133a:	4619      	mov	r1, r3
 800133c:	f7ff fba4 	bl	8000a88 <__aeabi_d2f>
 8001340:	4603      	mov	r3, r0
 8001342:	60fb      	str	r3, [r7, #12]
 8001344:	e020      	b.n	8001388 <calculateAngle+0x9c>
	} else if (bitDepth == 14) {
 8001346:	797b      	ldrb	r3, [r7, #5]
 8001348:	2b0e      	cmp	r3, #14
 800134a:	d11d      	bne.n	8001388 <calculateAngle+0x9c>
		angle = ((float) encoderValue * 360.00)/ ENCODER_RESOLUTION_14_BIT;
 800134c:	88fb      	ldrh	r3, [r7, #6]
 800134e:	4618      	mov	r0, r3
 8001350:	f7ff fca0 	bl	8000c94 <__aeabi_ui2f>
 8001354:	4603      	mov	r3, r0
 8001356:	4618      	mov	r0, r3
 8001358:	f7ff f866 	bl	8000428 <__aeabi_f2d>
 800135c:	f04f 0200 	mov.w	r2, #0
 8001360:	4b0c      	ldr	r3, [pc, #48]	; (8001394 <calculateAngle+0xa8>)
 8001362:	f7ff f8b9 	bl	80004d8 <__aeabi_dmul>
 8001366:	4602      	mov	r2, r0
 8001368:	460b      	mov	r3, r1
 800136a:	4610      	mov	r0, r2
 800136c:	4619      	mov	r1, r3
 800136e:	f04f 0200 	mov.w	r2, #0
 8001372:	4b0a      	ldr	r3, [pc, #40]	; (800139c <calculateAngle+0xb0>)
 8001374:	f7ff f9da 	bl	800072c <__aeabi_ddiv>
 8001378:	4602      	mov	r2, r0
 800137a:	460b      	mov	r3, r1
 800137c:	4610      	mov	r0, r2
 800137e:	4619      	mov	r1, r3
 8001380:	f7ff fb82 	bl	8000a88 <__aeabi_d2f>
 8001384:	4603      	mov	r3, r0
 8001386:	60fb      	str	r3, [r7, #12]
	}

	// до 0.2 градусів за документацією
	//angle = roundf(angle * 100.0) / 100.0;
	return angle;
 8001388:	68fb      	ldr	r3, [r7, #12]
}
 800138a:	4618      	mov	r0, r3
 800138c:	3710      	adds	r7, #16
 800138e:	46bd      	mov	sp, r7
 8001390:	bd80      	pop	{r7, pc}
 8001392:	bf00      	nop
 8001394:	40768000 	.word	0x40768000
 8001398:	40b00000 	.word	0x40b00000
 800139c:	40d00000 	.word	0x40d00000

080013a0 <delay>:
	spiWriteRead((SPI_HandleTypeDef*) &hspi, AMT22_RESET, encoderPort,	encoderPin, 1);
	delay(docDelayLong);
}

//блокуючий хуйовий метод, треба через неблокуючий мабуть
void delay(uint32_t delayTime) {
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b082      	sub	sp, #8
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]

	DWT_Delay_us(delayTime);
 80013a8:	6878      	ldr	r0, [r7, #4]
 80013aa:	f000 f83b 	bl	8001424 <DWT_Delay_us>
//	while ((__HAL_TIM_GET_COUNTER(timer) - start_time) < delayTime) {
//		// wait suka
//	}
//	HAL_TIM_Base_Stop(timer);
//	__HAL_RCC_TIM2_CLK_DISABLE();
}
 80013ae:	bf00      	nop
 80013b0:	3708      	adds	r7, #8
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd80      	pop	{r7, pc}

080013b6 <startDWT>:

int startDWT(){
 80013b6:	b580      	push	{r7, lr}
 80013b8:	af00      	add	r7, sp, #0

	 DWT_Delay_Init();
 80013ba:	f000 f803 	bl	80013c4 <DWT_Delay_Init>

}
 80013be:	bf00      	nop
 80013c0:	4618      	mov	r0, r3
 80013c2:	bd80      	pop	{r7, pc}

080013c4 <DWT_Delay_Init>:
 */

#include "DWT_Delay.h"

uint32_t DWT_Delay_Init()
{
 80013c4:	b480      	push	{r7}
 80013c6:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 80013c8:	4b14      	ldr	r3, [pc, #80]	; (800141c <DWT_Delay_Init+0x58>)
 80013ca:	68db      	ldr	r3, [r3, #12]
 80013cc:	4a13      	ldr	r2, [pc, #76]	; (800141c <DWT_Delay_Init+0x58>)
 80013ce:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80013d2:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 80013d4:	4b11      	ldr	r3, [pc, #68]	; (800141c <DWT_Delay_Init+0x58>)
 80013d6:	68db      	ldr	r3, [r3, #12]
 80013d8:	4a10      	ldr	r2, [pc, #64]	; (800141c <DWT_Delay_Init+0x58>)
 80013da:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80013de:	60d3      	str	r3, [r2, #12]

    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 80013e0:	4b0f      	ldr	r3, [pc, #60]	; (8001420 <DWT_Delay_Init+0x5c>)
 80013e2:	681b      	ldr	r3, [r3, #0]
 80013e4:	4a0e      	ldr	r2, [pc, #56]	; (8001420 <DWT_Delay_Init+0x5c>)
 80013e6:	f023 0301 	bic.w	r3, r3, #1
 80013ea:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80013ec:	4b0c      	ldr	r3, [pc, #48]	; (8001420 <DWT_Delay_Init+0x5c>)
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	4a0b      	ldr	r2, [pc, #44]	; (8001420 <DWT_Delay_Init+0x5c>)
 80013f2:	f043 0301 	orr.w	r3, r3, #1
 80013f6:	6013      	str	r3, [r2, #0]

    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 80013f8:	4b09      	ldr	r3, [pc, #36]	; (8001420 <DWT_Delay_Init+0x5c>)
 80013fa:	2200      	movs	r2, #0
 80013fc:	605a      	str	r2, [r3, #4]

    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 80013fe:	bf00      	nop
    __ASM volatile ("NOP");
 8001400:	bf00      	nop
    __ASM volatile ("NOP");
 8001402:	bf00      	nop

    /* Check if clock cycle counter has started */
    if(DWT->CYCCNT)
 8001404:	4b06      	ldr	r3, [pc, #24]	; (8001420 <DWT_Delay_Init+0x5c>)
 8001406:	685b      	ldr	r3, [r3, #4]
 8001408:	2b00      	cmp	r3, #0
 800140a:	d001      	beq.n	8001410 <DWT_Delay_Init+0x4c>
    {
       return 0; /*clock cycle counter started*/
 800140c:	2300      	movs	r3, #0
 800140e:	e000      	b.n	8001412 <DWT_Delay_Init+0x4e>
    }
    else
    {
      return 1; /*clock cycle counter not started*/
 8001410:	2301      	movs	r3, #1
    }
}
 8001412:	4618      	mov	r0, r3
 8001414:	46bd      	mov	sp, r7
 8001416:	bc80      	pop	{r7}
 8001418:	4770      	bx	lr
 800141a:	bf00      	nop
 800141c:	e000edf0 	.word	0xe000edf0
 8001420:	e0001000 	.word	0xe0001000

08001424 <DWT_Delay_us>:

// This Function Provides Delay In Microseconds Using DWT
void DWT_Delay_us(volatile uint32_t au32_microseconds)
{
 8001424:	b580      	push	{r7, lr}
 8001426:	b084      	sub	sp, #16
 8001428:	af00      	add	r7, sp, #0
 800142a:	6078      	str	r0, [r7, #4]
  uint32_t au32_initial_ticks = DWT->CYCCNT;
 800142c:	4b0f      	ldr	r3, [pc, #60]	; (800146c <DWT_Delay_us+0x48>)
 800142e:	685b      	ldr	r3, [r3, #4]
 8001430:	60fb      	str	r3, [r7, #12]
  uint32_t au32_ticks = (HAL_RCC_GetHCLKFreq() / 1000000);
 8001432:	f002 facd 	bl	80039d0 <HAL_RCC_GetHCLKFreq>
 8001436:	4603      	mov	r3, r0
 8001438:	4a0d      	ldr	r2, [pc, #52]	; (8001470 <DWT_Delay_us+0x4c>)
 800143a:	fba2 2303 	umull	r2, r3, r2, r3
 800143e:	0c9b      	lsrs	r3, r3, #18
 8001440:	60bb      	str	r3, [r7, #8]
  au32_microseconds *= au32_ticks;
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	68ba      	ldr	r2, [r7, #8]
 8001446:	fb02 f303 	mul.w	r3, r2, r3
 800144a:	607b      	str	r3, [r7, #4]
  while ((DWT->CYCCNT - au32_initial_ticks) < au32_microseconds-au32_ticks);
 800144c:	bf00      	nop
 800144e:	4b07      	ldr	r3, [pc, #28]	; (800146c <DWT_Delay_us+0x48>)
 8001450:	685a      	ldr	r2, [r3, #4]
 8001452:	68fb      	ldr	r3, [r7, #12]
 8001454:	1ad2      	subs	r2, r2, r3
 8001456:	6879      	ldr	r1, [r7, #4]
 8001458:	68bb      	ldr	r3, [r7, #8]
 800145a:	1acb      	subs	r3, r1, r3
 800145c:	429a      	cmp	r2, r3
 800145e:	d3f6      	bcc.n	800144e <DWT_Delay_us+0x2a>
}
 8001460:	bf00      	nop
 8001462:	bf00      	nop
 8001464:	3710      	adds	r7, #16
 8001466:	46bd      	mov	sp, r7
 8001468:	bd80      	pop	{r7, pc}
 800146a:	bf00      	nop
 800146c:	e0001000 	.word	0xe0001000
 8001470:	431bde83 	.word	0x431bde83

08001474 <_ZSt3absf>:
  abs(double __x)
  { return __builtin_fabs(__x); }

  inline _GLIBCXX_CONSTEXPR float
  abs(float __x)
  { return __builtin_fabsf(__x); }
 8001474:	b480      	push	{r7}
 8001476:	b083      	sub	sp, #12
 8001478:	af00      	add	r7, sp, #0
 800147a:	6078      	str	r0, [r7, #4]
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8001482:	4618      	mov	r0, r3
 8001484:	370c      	adds	r7, #12
 8001486:	46bd      	mov	sp, r7
 8001488:	bc80      	pop	{r7}
 800148a:	4770      	bx	lr

0800148c <_ZSt4ceilf>:
  using ::ceil;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  ceil(float __x)
  { return __builtin_ceilf(__x); }
 800148c:	b580      	push	{r7, lr}
 800148e:	b082      	sub	sp, #8
 8001490:	af00      	add	r7, sp, #0
 8001492:	6078      	str	r0, [r7, #4]
 8001494:	6878      	ldr	r0, [r7, #4]
 8001496:	f005 fe7b 	bl	8007190 <ceilf>
 800149a:	4603      	mov	r3, r0
 800149c:	4618      	mov	r0, r3
 800149e:	3708      	adds	r7, #8
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bd80      	pop	{r7, pc}

080014a4 <_ZN7RoboArmC1Ehh>:
#include "RoboArm.h"

RoboArm::RoboArm(uint8_t defaultAngleT, uint8_t defaultDistanseT) {
 80014a4:	b580      	push	{r7, lr}
 80014a6:	b082      	sub	sp, #8
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	6078      	str	r0, [r7, #4]
 80014ac:	460b      	mov	r3, r1
 80014ae:	70fb      	strb	r3, [r7, #3]
 80014b0:	4613      	mov	r3, r2
 80014b2:	70bb      	strb	r3, [r7, #2]
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	4a1b      	ldr	r2, [pc, #108]	; (8001524 <_ZN7RoboArmC1Ehh+0x80>)
 80014b8:	601a      	str	r2, [r3, #0]
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	f04f 0200 	mov.w	r2, #0
 80014c0:	62da      	str	r2, [r3, #44]	; 0x2c
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	f04f 0200 	mov.w	r2, #0
 80014c8:	631a      	str	r2, [r3, #48]	; 0x30
 80014ca:	687b      	ldr	r3, [r7, #4]
 80014cc:	220e      	movs	r2, #14
 80014ce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	2200      	movs	r2, #0
 80014d6:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	2200      	movs	r2, #0
 80014de:	f883 205b 	strb.w	r2, [r3, #91]	; 0x5b
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	2200      	movs	r2, #0
 80014e6:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	2200      	movs	r2, #0
 80014ee:	f8a3 2064 	strh.w	r2, [r3, #100]	; 0x64
 80014f2:	687b      	ldr	r3, [r7, #4]
 80014f4:	f04f 0200 	mov.w	r2, #0
 80014f8:	669a      	str	r2, [r3, #104]	; 0x68
 80014fa:	687b      	ldr	r3, [r7, #4]
 80014fc:	2200      	movs	r2, #0
 80014fe:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
	defaultAngle = defaultAngleT;
 8001502:	78fb      	ldrb	r3, [r7, #3]
 8001504:	b29a      	uxth	r2, r3
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
	defaultDistanse = defaultDistanseT;
 800150c:	78bb      	ldrb	r3, [r7, #2]
 800150e:	b29a      	uxth	r2, r3
 8001510:	687b      	ldr	r3, [r7, #4]
 8001512:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
	startDWT();
 8001516:	f7ff ff4e 	bl	80013b6 <startDWT>
}
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	4618      	mov	r0, r3
 800151e:	3708      	adds	r7, #8
 8001520:	46bd      	mov	sp, r7
 8001522:	bd80      	pop	{r7, pc}
 8001524:	42200000 	.word	0x42200000

08001528 <_ZN7RoboArm15Move2MotorsSimuEft>:

	return 0;

}

int RoboArm::Move2MotorsSimu(float angle, uint16_t distance) {
 8001528:	b590      	push	{r4, r7, lr}
 800152a:	b08d      	sub	sp, #52	; 0x34
 800152c:	af00      	add	r7, sp, #0
 800152e:	60f8      	str	r0, [r7, #12]
 8001530:	60b9      	str	r1, [r7, #8]
 8001532:	4613      	mov	r3, r2
 8001534:	80fb      	strh	r3, [r7, #6]

	// TIM1 Х  enc1 -  угол 360  -  8 оборотов движка на 1 оборот энкодера
	// TIM2  Y  enc2 - линейный -  6,4516129 оборотов движка (это целое линейное перемещение с запасом) на 1 оборот энкодера

	HAL_TIM_PWM_Stop(htim1M1, TIM_CHANNEL_3);      //остановили PWM таймера
 8001536:	68fb      	ldr	r3, [r7, #12]
 8001538:	685b      	ldr	r3, [r3, #4]
 800153a:	2108      	movs	r1, #8
 800153c:	4618      	mov	r0, r3
 800153e:	f003 f881 	bl	8004644 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(htim2M2, TIM_CHANNEL_3);
 8001542:	68fb      	ldr	r3, [r7, #12]
 8001544:	689b      	ldr	r3, [r3, #8]
 8001546:	2108      	movs	r1, #8
 8001548:	4618      	mov	r0, r3
 800154a:	f003 f87b 	bl	8004644 <HAL_TIM_PWM_Stop>
	HAL_TIM_Base_Stop_IT(htim1M1);				// остановили прерывание таймеров
 800154e:	68fb      	ldr	r3, [r7, #12]
 8001550:	685b      	ldr	r3, [r3, #4]
 8001552:	4618      	mov	r0, r3
 8001554:	f002 ff56 	bl	8004404 <HAL_TIM_Base_Stop_IT>
	HAL_TIM_Base_Stop_IT(htim2M2);
 8001558:	68fb      	ldr	r3, [r7, #12]
 800155a:	689b      	ldr	r3, [r3, #8]
 800155c:	4618      	mov	r0, r3
 800155e:	f002 ff51 	bl	8004404 <HAL_TIM_Base_Stop_IT>

	SetEnable(1, false);
 8001562:	2200      	movs	r2, #0
 8001564:	2101      	movs	r1, #1
 8001566:	68f8      	ldr	r0, [r7, #12]
 8001568:	f000 fa8c 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>
	SetEnable(2, false);
 800156c:	2200      	movs	r2, #0
 800156e:	2102      	movs	r1, #2
 8001570:	68f8      	ldr	r0, [r7, #12]
 8001572:	f000 fa87 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>
	/* выставили в каку сторону ехать мотору*/

	if (lastPosAngle < angle) {
 8001576:	68fb      	ldr	r3, [r7, #12]
 8001578:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800157a:	4619      	mov	r1, r3
 800157c:	68b8      	ldr	r0, [r7, #8]
 800157e:	f7ff fd9d 	bl	80010bc <__aeabi_fcmpgt>
 8001582:	4603      	mov	r3, r0
 8001584:	2b00      	cmp	r3, #0
 8001586:	d008      	beq.n	800159a <_ZN7RoboArm15Move2MotorsSimuEft+0x72>
		HAL_GPIO_WritePin(Dir1_GPIO_Port_M1, Dir1_Pin_M1, GPIO_PIN_SET);
 8001588:	68fb      	ldr	r3, [r7, #12]
 800158a:	68d8      	ldr	r0, [r3, #12]
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	8a1b      	ldrh	r3, [r3, #16]
 8001590:	2201      	movs	r2, #1
 8001592:	4619      	mov	r1, r3
 8001594:	f001 fe1e 	bl	80031d4 <HAL_GPIO_WritePin>
 8001598:	e010      	b.n	80015bc <_ZN7RoboArm15Move2MotorsSimuEft+0x94>
	} else if (lastPosAngle > angle) {
 800159a:	68fb      	ldr	r3, [r7, #12]
 800159c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800159e:	4619      	mov	r1, r3
 80015a0:	68b8      	ldr	r0, [r7, #8]
 80015a2:	f7ff fd6d 	bl	8001080 <__aeabi_fcmplt>
 80015a6:	4603      	mov	r3, r0
 80015a8:	2b00      	cmp	r3, #0
 80015aa:	d007      	beq.n	80015bc <_ZN7RoboArm15Move2MotorsSimuEft+0x94>
		HAL_GPIO_WritePin(Dir1_GPIO_Port_M1, Dir1_Pin_M1, GPIO_PIN_RESET);
 80015ac:	68fb      	ldr	r3, [r7, #12]
 80015ae:	68d8      	ldr	r0, [r3, #12]
 80015b0:	68fb      	ldr	r3, [r7, #12]
 80015b2:	8a1b      	ldrh	r3, [r3, #16]
 80015b4:	2200      	movs	r2, #0
 80015b6:	4619      	mov	r1, r3
 80015b8:	f001 fe0c 	bl	80031d4 <HAL_GPIO_WritePin>
	}
	if (lastPosLinear < distance) {
 80015bc:	68fb      	ldr	r3, [r7, #12]
 80015be:	f8b3 3064 	ldrh.w	r3, [r3, #100]	; 0x64
 80015c2:	88fa      	ldrh	r2, [r7, #6]
 80015c4:	429a      	cmp	r2, r3
 80015c6:	d908      	bls.n	80015da <_ZN7RoboArm15Move2MotorsSimuEft+0xb2>
		HAL_GPIO_WritePin(Dir2_GPIO_Port_M2, Dir2_Pin_M2, GPIO_PIN_SET);
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	6958      	ldr	r0, [r3, #20]
 80015cc:	68fb      	ldr	r3, [r7, #12]
 80015ce:	8b1b      	ldrh	r3, [r3, #24]
 80015d0:	2201      	movs	r2, #1
 80015d2:	4619      	mov	r1, r3
 80015d4:	f001 fdfe 	bl	80031d4 <HAL_GPIO_WritePin>
 80015d8:	e00d      	b.n	80015f6 <_ZN7RoboArm15Move2MotorsSimuEft+0xce>
	} else if (lastPosLinear > distance) {
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	f8b3 3064 	ldrh.w	r3, [r3, #100]	; 0x64
 80015e0:	88fa      	ldrh	r2, [r7, #6]
 80015e2:	429a      	cmp	r2, r3
 80015e4:	d207      	bcs.n	80015f6 <_ZN7RoboArm15Move2MotorsSimuEft+0xce>
		HAL_GPIO_WritePin(Dir2_GPIO_Port_M2, Dir2_Pin_M2, GPIO_PIN_RESET);
 80015e6:	68fb      	ldr	r3, [r7, #12]
 80015e8:	6958      	ldr	r0, [r3, #20]
 80015ea:	68fb      	ldr	r3, [r7, #12]
 80015ec:	8b1b      	ldrh	r3, [r3, #24]
 80015ee:	2200      	movs	r2, #0
 80015f0:	4619      	mov	r1, r3
 80015f2:	f001 fdef 	bl	80031d4 <HAL_GPIO_WritePin>
	}

	float actualPosAngle = abs(lastPosAngle - angle);
 80015f6:	68fb      	ldr	r3, [r7, #12]
 80015f8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80015fa:	68b9      	ldr	r1, [r7, #8]
 80015fc:	4618      	mov	r0, r3
 80015fe:	f7ff fa97 	bl	8000b30 <__aeabi_fsub>
 8001602:	4603      	mov	r3, r0
 8001604:	4618      	mov	r0, r3
 8001606:	f7ff ff35 	bl	8001474 <_ZSt3absf>
 800160a:	62f8      	str	r0, [r7, #44]	; 0x2c
	float actualPosDistance = abs(lastPosLinear - distance);
 800160c:	68fb      	ldr	r3, [r7, #12]
 800160e:	f8b3 3064 	ldrh.w	r3, [r3, #100]	; 0x64
 8001612:	461a      	mov	r2, r3
 8001614:	88fb      	ldrh	r3, [r7, #6]
 8001616:	1ad3      	subs	r3, r2, r3
 8001618:	2b00      	cmp	r3, #0
 800161a:	bfb8      	it	lt
 800161c:	425b      	neglt	r3, r3
 800161e:	4618      	mov	r0, r3
 8001620:	f7ff fb3c 	bl	8000c9c <__aeabi_i2f>
 8001624:	4603      	mov	r3, r0
 8001626:	62bb      	str	r3, [r7, #40]	; 0x28

	anglePsteps = (actualPosAngle * (8 * motorStep * drvMicroSteps)) / 360; //angle to steps
 8001628:	4991      	ldr	r1, [pc, #580]	; (8001870 <_ZN7RoboArm15Move2MotorsSimuEft+0x348>)
 800162a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800162c:	f7ff fb8a 	bl	8000d44 <__aeabi_fmul>
 8001630:	4603      	mov	r3, r0
 8001632:	4990      	ldr	r1, [pc, #576]	; (8001874 <_ZN7RoboArm15Move2MotorsSimuEft+0x34c>)
 8001634:	4618      	mov	r0, r3
 8001636:	f7ff fc39 	bl	8000eac <__aeabi_fdiv>
 800163a:	4603      	mov	r3, r0
 800163c:	461a      	mov	r2, r3
 800163e:	68fb      	ldr	r3, [r7, #12]
 8001640:	631a      	str	r2, [r3, #48]	; 0x30
	distPsteps = actualPosDistance * linearStepsMil; //steps to distanse
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001648:	4618      	mov	r0, r3
 800164a:	f7ff fb7b 	bl	8000d44 <__aeabi_fmul>
 800164e:	4603      	mov	r3, r0
 8001650:	461a      	mov	r2, r3
 8001652:	68fb      	ldr	r3, [r7, #12]
 8001654:	62da      	str	r2, [r3, #44]	; 0x2c

	float distPangle = ((distPsteps / (motorStep * drvMicroSteps)) * 360
 8001656:	68fb      	ldr	r3, [r7, #12]
 8001658:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800165a:	4987      	ldr	r1, [pc, #540]	; (8001878 <_ZN7RoboArm15Move2MotorsSimuEft+0x350>)
 800165c:	4618      	mov	r0, r3
 800165e:	f7ff fc25 	bl	8000eac <__aeabi_fdiv>
 8001662:	4603      	mov	r3, r0
 8001664:	4983      	ldr	r1, [pc, #524]	; (8001874 <_ZN7RoboArm15Move2MotorsSimuEft+0x34c>)
 8001666:	4618      	mov	r0, r3
 8001668:	f7ff fb6c 	bl	8000d44 <__aeabi_fmul>
 800166c:	4603      	mov	r3, r0
 800166e:	4618      	mov	r0, r3
 8001670:	f7fe feda 	bl	8000428 <__aeabi_f2d>
			/ 6.45);
 8001674:	a37c      	add	r3, pc, #496	; (adr r3, 8001868 <_ZN7RoboArm15Move2MotorsSimuEft+0x340>)
 8001676:	e9d3 2300 	ldrd	r2, r3, [r3]
 800167a:	f7ff f857 	bl	800072c <__aeabi_ddiv>
 800167e:	4602      	mov	r2, r0
 8001680:	460b      	mov	r3, r1
	float distPangle = ((distPsteps / (motorStep * drvMicroSteps)) * 360
 8001682:	4610      	mov	r0, r2
 8001684:	4619      	mov	r1, r3
 8001686:	f7ff f9ff 	bl	8000a88 <__aeabi_d2f>
 800168a:	4603      	mov	r3, r0
 800168c:	627b      	str	r3, [r7, #36]	; 0x24

	lastPosAngle = angle;
 800168e:	68fb      	ldr	r3, [r7, #12]
 8001690:	68ba      	ldr	r2, [r7, #8]
 8001692:	669a      	str	r2, [r3, #104]	; 0x68
	lastPosLinear = distance;
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	88fa      	ldrh	r2, [r7, #6]
 8001698:	f8a3 2064 	strh.w	r2, [r3, #100]	; 0x64

// 1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36 и 72 - Це можлива обрана максимальна швидкість для мотора з більшої кількістю кроків. Це дільник таймера

	float periodM1 = 1200;
 800169c:	4b77      	ldr	r3, [pc, #476]	; (800187c <_ZN7RoboArm15Move2MotorsSimuEft+0x354>)
 800169e:	623b      	str	r3, [r7, #32]
	uint32_t psc = 72-1;
 80016a0:	2347      	movs	r3, #71	; 0x47
 80016a2:	61fb      	str	r3, [r7, #28]

	float delimiter=1;
 80016a4:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80016a8:	61bb      	str	r3, [r7, #24]
	float mnoj=1;
 80016aa:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80016ae:	617b      	str	r3, [r7, #20]

	if (anglePsteps > distPsteps) {
 80016b0:	68fb      	ldr	r3, [r7, #12]
 80016b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016b4:	68fb      	ldr	r3, [r7, #12]
 80016b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80016b8:	4619      	mov	r1, r3
 80016ba:	4610      	mov	r0, r2
 80016bc:	f7ff fcfe 	bl	80010bc <__aeabi_fcmpgt>
 80016c0:	4603      	mov	r3, r0
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d04b      	beq.n	800175e <_ZN7RoboArm15Move2MotorsSimuEft+0x236>

		htim1M1->Instance->PSC = psc;
 80016c6:	68fb      	ldr	r3, [r7, #12]
 80016c8:	685b      	ldr	r3, [r3, #4]
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	69fa      	ldr	r2, [r7, #28]
 80016ce:	629a      	str	r2, [r3, #40]	; 0x28
		htim1M1->Instance->ARR = periodM1;
 80016d0:	68fb      	ldr	r3, [r7, #12]
 80016d2:	685b      	ldr	r3, [r3, #4]
 80016d4:	681c      	ldr	r4, [r3, #0]
 80016d6:	6a38      	ldr	r0, [r7, #32]
 80016d8:	f7ff fcfa 	bl	80010d0 <__aeabi_f2uiz>
 80016dc:	4603      	mov	r3, r0
 80016de:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim1M1->Instance->CCR3 = periodM1/2;
 80016e0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80016e4:	6a38      	ldr	r0, [r7, #32]
 80016e6:	f7ff fbe1 	bl	8000eac <__aeabi_fdiv>
 80016ea:	4603      	mov	r3, r0
 80016ec:	461a      	mov	r2, r3
 80016ee:	68fb      	ldr	r3, [r7, #12]
 80016f0:	685b      	ldr	r3, [r3, #4]
 80016f2:	681c      	ldr	r4, [r3, #0]
 80016f4:	4610      	mov	r0, r2
 80016f6:	f7ff fceb 	bl	80010d0 <__aeabi_f2uiz>
 80016fa:	4603      	mov	r3, r0
 80016fc:	63e3      	str	r3, [r4, #60]	; 0x3c

		delimiter = anglePsteps / distPsteps;
 80016fe:	68fb      	ldr	r3, [r7, #12]
 8001700:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001702:	68fb      	ldr	r3, [r7, #12]
 8001704:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001706:	4619      	mov	r1, r3
 8001708:	4610      	mov	r0, r2
 800170a:	f7ff fbcf 	bl	8000eac <__aeabi_fdiv>
 800170e:	4603      	mov	r3, r0
 8001710:	61bb      	str	r3, [r7, #24]
		mnoj = ceil(periodM1 * delimiter);
 8001712:	69b9      	ldr	r1, [r7, #24]
 8001714:	6a38      	ldr	r0, [r7, #32]
 8001716:	f7ff fb15 	bl	8000d44 <__aeabi_fmul>
 800171a:	4603      	mov	r3, r0
 800171c:	4618      	mov	r0, r3
 800171e:	f7ff feb5 	bl	800148c <_ZSt4ceilf>
 8001722:	6178      	str	r0, [r7, #20]

		htim2M2->Instance->PSC = psc;
 8001724:	68fb      	ldr	r3, [r7, #12]
 8001726:	689b      	ldr	r3, [r3, #8]
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	69fa      	ldr	r2, [r7, #28]
 800172c:	629a      	str	r2, [r3, #40]	; 0x28
		htim2M2->Instance->ARR = mnoj;
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	689b      	ldr	r3, [r3, #8]
 8001732:	681c      	ldr	r4, [r3, #0]
 8001734:	6978      	ldr	r0, [r7, #20]
 8001736:	f7ff fccb 	bl	80010d0 <__aeabi_f2uiz>
 800173a:	4603      	mov	r3, r0
 800173c:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim2M2->Instance->CCR3 = mnoj / 2;
 800173e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001742:	6978      	ldr	r0, [r7, #20]
 8001744:	f7ff fbb2 	bl	8000eac <__aeabi_fdiv>
 8001748:	4603      	mov	r3, r0
 800174a:	461a      	mov	r2, r3
 800174c:	68fb      	ldr	r3, [r7, #12]
 800174e:	689b      	ldr	r3, [r3, #8]
 8001750:	681c      	ldr	r4, [r3, #0]
 8001752:	4610      	mov	r0, r2
 8001754:	f7ff fcbc 	bl	80010d0 <__aeabi_f2uiz>
 8001758:	4603      	mov	r3, r0
 800175a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800175c:	e055      	b.n	800180a <_ZN7RoboArm15Move2MotorsSimuEft+0x2e2>

	} else if (anglePsteps < distPsteps) {
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001762:	68fb      	ldr	r3, [r7, #12]
 8001764:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001766:	4619      	mov	r1, r3
 8001768:	4610      	mov	r0, r2
 800176a:	f7ff fc89 	bl	8001080 <__aeabi_fcmplt>
 800176e:	4603      	mov	r3, r0
 8001770:	2b00      	cmp	r3, #0
 8001772:	d04a      	beq.n	800180a <_ZN7RoboArm15Move2MotorsSimuEft+0x2e2>

		htim2M2->Instance->PSC = psc;
 8001774:	68fb      	ldr	r3, [r7, #12]
 8001776:	689b      	ldr	r3, [r3, #8]
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	69fa      	ldr	r2, [r7, #28]
 800177c:	629a      	str	r2, [r3, #40]	; 0x28
		htim2M2->Instance->ARR = periodM1;
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	689b      	ldr	r3, [r3, #8]
 8001782:	681c      	ldr	r4, [r3, #0]
 8001784:	6a38      	ldr	r0, [r7, #32]
 8001786:	f7ff fca3 	bl	80010d0 <__aeabi_f2uiz>
 800178a:	4603      	mov	r3, r0
 800178c:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim2M2->Instance->CCR3 = periodM1 / 2;
 800178e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001792:	6a38      	ldr	r0, [r7, #32]
 8001794:	f7ff fb8a 	bl	8000eac <__aeabi_fdiv>
 8001798:	4603      	mov	r3, r0
 800179a:	461a      	mov	r2, r3
 800179c:	68fb      	ldr	r3, [r7, #12]
 800179e:	689b      	ldr	r3, [r3, #8]
 80017a0:	681c      	ldr	r4, [r3, #0]
 80017a2:	4610      	mov	r0, r2
 80017a4:	f7ff fc94 	bl	80010d0 <__aeabi_f2uiz>
 80017a8:	4603      	mov	r3, r0
 80017aa:	63e3      	str	r3, [r4, #60]	; 0x3c

		delimiter = distPsteps / anglePsteps;
 80017ac:	68fb      	ldr	r3, [r7, #12]
 80017ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80017b0:	68fb      	ldr	r3, [r7, #12]
 80017b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017b4:	4619      	mov	r1, r3
 80017b6:	4610      	mov	r0, r2
 80017b8:	f7ff fb78 	bl	8000eac <__aeabi_fdiv>
 80017bc:	4603      	mov	r3, r0
 80017be:	61bb      	str	r3, [r7, #24]
		mnoj = ceil(periodM1 * delimiter);
 80017c0:	69b9      	ldr	r1, [r7, #24]
 80017c2:	6a38      	ldr	r0, [r7, #32]
 80017c4:	f7ff fabe 	bl	8000d44 <__aeabi_fmul>
 80017c8:	4603      	mov	r3, r0
 80017ca:	4618      	mov	r0, r3
 80017cc:	f7ff fe5e 	bl	800148c <_ZSt4ceilf>
 80017d0:	6178      	str	r0, [r7, #20]

		htim1M1->Instance->PSC = psc;
 80017d2:	68fb      	ldr	r3, [r7, #12]
 80017d4:	685b      	ldr	r3, [r3, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	69fa      	ldr	r2, [r7, #28]
 80017da:	629a      	str	r2, [r3, #40]	; 0x28
		htim1M1->Instance->ARR = mnoj;
 80017dc:	68fb      	ldr	r3, [r7, #12]
 80017de:	685b      	ldr	r3, [r3, #4]
 80017e0:	681c      	ldr	r4, [r3, #0]
 80017e2:	6978      	ldr	r0, [r7, #20]
 80017e4:	f7ff fc74 	bl	80010d0 <__aeabi_f2uiz>
 80017e8:	4603      	mov	r3, r0
 80017ea:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim1M1->Instance->CCR3 = mnoj / 2;
 80017ec:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80017f0:	6978      	ldr	r0, [r7, #20]
 80017f2:	f7ff fb5b 	bl	8000eac <__aeabi_fdiv>
 80017f6:	4603      	mov	r3, r0
 80017f8:	461a      	mov	r2, r3
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	685b      	ldr	r3, [r3, #4]
 80017fe:	681c      	ldr	r4, [r3, #0]
 8001800:	4610      	mov	r0, r2
 8001802:	f7ff fc65 	bl	80010d0 <__aeabi_f2uiz>
 8001806:	4603      	mov	r3, r0
 8001808:	63e3      	str	r3, [r4, #60]	; 0x3c
	}

	stateMoveM1 = true;
 800180a:	68fb      	ldr	r3, [r7, #12]
 800180c:	2201      	movs	r2, #1
 800180e:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
	stateMoveM2 = true;
 8001812:	68fb      	ldr	r3, [r7, #12]
 8001814:	2201      	movs	r2, #1
 8001816:	f883 205b 	strb.w	r2, [r3, #91]	; 0x5b

	SetEnable(1, true);
 800181a:	2201      	movs	r2, #1
 800181c:	2101      	movs	r1, #1
 800181e:	68f8      	ldr	r0, [r7, #12]
 8001820:	f000 f930 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>
	SetEnable(2, true);
 8001824:	2201      	movs	r2, #1
 8001826:	2102      	movs	r1, #2
 8001828:	68f8      	ldr	r0, [r7, #12]
 800182a:	f000 f92b 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>

	HAL_TIM_PWM_Start(htim1M1, TIM_CHANNEL_3);
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	685b      	ldr	r3, [r3, #4]
 8001832:	2108      	movs	r1, #8
 8001834:	4618      	mov	r0, r3
 8001836:	f002 fe63 	bl	8004500 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim2M2, TIM_CHANNEL_3);
 800183a:	68fb      	ldr	r3, [r7, #12]
 800183c:	689b      	ldr	r3, [r3, #8]
 800183e:	2108      	movs	r1, #8
 8001840:	4618      	mov	r0, r3
 8001842:	f002 fe5d 	bl	8004500 <HAL_TIM_PWM_Start>
	HAL_TIM_Base_Start_IT(htim1M1);
 8001846:	68fb      	ldr	r3, [r7, #12]
 8001848:	685b      	ldr	r3, [r3, #4]
 800184a:	4618      	mov	r0, r3
 800184c:	f002 fd88 	bl	8004360 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(htim2M2);
 8001850:	68fb      	ldr	r3, [r7, #12]
 8001852:	689b      	ldr	r3, [r3, #8]
 8001854:	4618      	mov	r0, r3
 8001856:	f002 fd83 	bl	8004360 <HAL_TIM_Base_Start_IT>

	return 0;
 800185a:	2300      	movs	r3, #0
}
 800185c:	4618      	mov	r0, r3
 800185e:	3734      	adds	r7, #52	; 0x34
 8001860:	46bd      	mov	sp, r7
 8001862:	bd90      	pop	{r4, r7, pc}
 8001864:	f3af 8000 	nop.w
 8001868:	cccccccd 	.word	0xcccccccd
 800186c:	4019cccc 	.word	0x4019cccc
 8001870:	46480000 	.word	0x46480000
 8001874:	43b40000 	.word	0x43b40000
 8001878:	44c80000 	.word	0x44c80000
 800187c:	44960000 	.word	0x44960000

08001880 <_ZN7RoboArm13setPrintStateEb>:

int RoboArm::OpenGripper() {
	return 0;
}

int RoboArm::setPrintState(bool state) {
 8001880:	b480      	push	{r7}
 8001882:	b083      	sub	sp, #12
 8001884:	af00      	add	r7, sp, #0
 8001886:	6078      	str	r0, [r7, #4]
 8001888:	460b      	mov	r3, r1
 800188a:	70fb      	strb	r3, [r7, #3]
	if (state) {
 800188c:	78fb      	ldrb	r3, [r7, #3]
 800188e:	2b00      	cmp	r3, #0
 8001890:	d004      	beq.n	800189c <_ZN7RoboArm13setPrintStateEb+0x1c>
		PrintAllState = true;
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	2201      	movs	r2, #1
 8001896:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 800189a:	e003      	b.n	80018a4 <_ZN7RoboArm13setPrintStateEb+0x24>
	} else {
		PrintAllState = false;
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	2200      	movs	r2, #0
 80018a0:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
	}
	return 0;
 80018a4:	2300      	movs	r3, #0
}
 80018a6:	4618      	mov	r0, r3
 80018a8:	370c      	adds	r7, #12
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bc80      	pop	{r7}
 80018ae:	4770      	bx	lr

080018b0 <_ZN7RoboArm13getPrintStateEv>:

bool RoboArm::getPrintState() {
 80018b0:	b480      	push	{r7}
 80018b2:	b083      	sub	sp, #12
 80018b4:	af00      	add	r7, sp, #0
 80018b6:	6078      	str	r0, [r7, #4]
	if (PrintAllState) {
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d001      	beq.n	80018c6 <_ZN7RoboArm13getPrintStateEv+0x16>
		return true;
 80018c2:	2301      	movs	r3, #1
 80018c4:	e000      	b.n	80018c8 <_ZN7RoboArm13getPrintStateEv+0x18>
	} else {
		return false;
 80018c6:	2300      	movs	r3, #0
	}
}
 80018c8:	4618      	mov	r0, r3
 80018ca:	370c      	adds	r7, #12
 80018cc:	46bd      	mov	sp, r7
 80018ce:	bc80      	pop	{r7}
 80018d0:	4770      	bx	lr

080018d2 <_ZN7RoboArm15SetSettEncodersER19__SPI_HandleTypeDefP12GPIO_TypeDeftS3_th>:
}

int RoboArm::SetSettEncoders(SPI_HandleTypeDef &arm_hspi1T,
		GPIO_TypeDef *CS_GPIO_Port_Enc1T, uint16_t CS_Pin_Enc1T,
		GPIO_TypeDef *CS_GPIO_Port_Enc2T, uint16_t CS_Pin_Enc2T,
		uint8_t ResolutionEncodersT) {
 80018d2:	b480      	push	{r7}
 80018d4:	b085      	sub	sp, #20
 80018d6:	af00      	add	r7, sp, #0
 80018d8:	60f8      	str	r0, [r7, #12]
 80018da:	60b9      	str	r1, [r7, #8]
 80018dc:	607a      	str	r2, [r7, #4]
 80018de:	807b      	strh	r3, [r7, #2]

	arm_hspi1 = &arm_hspi1T;
 80018e0:	68fb      	ldr	r3, [r7, #12]
 80018e2:	68ba      	ldr	r2, [r7, #8]
 80018e4:	639a      	str	r2, [r3, #56]	; 0x38
	CS_GPIO_Port_Enc1 = CS_GPIO_Port_Enc1T;
 80018e6:	68fb      	ldr	r3, [r7, #12]
 80018e8:	687a      	ldr	r2, [r7, #4]
 80018ea:	641a      	str	r2, [r3, #64]	; 0x40
	CS_Pin_Enc1 = CS_Pin_Enc1T;
 80018ec:	68fb      	ldr	r3, [r7, #12]
 80018ee:	887a      	ldrh	r2, [r7, #2]
 80018f0:	879a      	strh	r2, [r3, #60]	; 0x3c
	CS_Pin_Enc2 = CS_Pin_Enc2T;
 80018f2:	68fb      	ldr	r3, [r7, #12]
 80018f4:	8bba      	ldrh	r2, [r7, #28]
 80018f6:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
	CS_GPIO_Port_Enc2 = CS_GPIO_Port_Enc2T;
 80018fa:	68fb      	ldr	r3, [r7, #12]
 80018fc:	69ba      	ldr	r2, [r7, #24]
 80018fe:	649a      	str	r2, [r3, #72]	; 0x48
	ResolutionEncoders = ResolutionEncodersT;
 8001900:	68fb      	ldr	r3, [r7, #12]
 8001902:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001906:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
	return 0;
 800190a:	2300      	movs	r3, #0
}
 800190c:	4618      	mov	r0, r3
 800190e:	3714      	adds	r7, #20
 8001910:	46bd      	mov	sp, r7
 8001912:	bc80      	pop	{r7}
 8001914:	4770      	bx	lr

08001916 <_ZN7RoboArm16GetAngleEncodersEm>:

float RoboArm::GetAngleEncoders(uint32_t encoderValue) {
 8001916:	b580      	push	{r7, lr}
 8001918:	b082      	sub	sp, #8
 800191a:	af00      	add	r7, sp, #0
 800191c:	6078      	str	r0, [r7, #4]
 800191e:	6039      	str	r1, [r7, #0]
	//	https://www.cuidevices.com/product/resource/amt22.pdf
	return calculateAngle(encoderValue, ResolutionEncoders);
 8001920:	683b      	ldr	r3, [r7, #0]
 8001922:	b29a      	uxth	r2, r3
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800192a:	4619      	mov	r1, r3
 800192c:	4610      	mov	r0, r2
 800192e:	f7ff fcdd 	bl	80012ec <calculateAngle>
 8001932:	4603      	mov	r3, r0
}
 8001934:	4618      	mov	r0, r3
 8001936:	3708      	adds	r7, #8
 8001938:	46bd      	mov	sp, r7
 800193a:	bd80      	pop	{r7, pc}

0800193c <_ZN7RoboArm14GetPosEncodersEh>:

uint32_t RoboArm::GetPosEncoders(uint8_t numEnc) {
 800193c:	b580      	push	{r7, lr}
 800193e:	b082      	sub	sp, #8
 8001940:	af00      	add	r7, sp, #0
 8001942:	6078      	str	r0, [r7, #4]
 8001944:	460b      	mov	r3, r1
 8001946:	70fb      	strb	r3, [r7, #3]
	switch (numEnc) {
 8001948:	78fb      	ldrb	r3, [r7, #3]
 800194a:	2b01      	cmp	r3, #1
 800194c:	d002      	beq.n	8001954 <_ZN7RoboArm14GetPosEncodersEh+0x18>
 800194e:	2b02      	cmp	r3, #2
 8001950:	d012      	beq.n	8001978 <_ZN7RoboArm14GetPosEncodersEh+0x3c>
 8001952:	e024      	b.n	800199e <_ZN7RoboArm14GetPosEncodersEh+0x62>
	case 1:
		posNowEnc1 = getPositionSPI(arm_hspi1, CS_GPIO_Port_Enc1, CS_Pin_Enc1,
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	8f9a      	ldrh	r2, [r3, #60]	; 0x3c
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8001966:	f7ff fc11 	bl	800118c <getPositionSPI>
 800196a:	4603      	mov	r3, r0
 800196c:	461a      	mov	r2, r3
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	64da      	str	r2, [r3, #76]	; 0x4c
				ResolutionEncoders);
		return posNowEnc1;
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001976:	e013      	b.n	80019a0 <_ZN7RoboArm14GetPosEncodersEh+0x64>
		break;
	case 2:
		posNowEnc2 = getPositionSPI(arm_hspi1, CS_GPIO_Port_Enc2, CS_Pin_Enc2,
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800198c:	f7ff fbfe 	bl	800118c <getPositionSPI>
 8001990:	4603      	mov	r3, r0
 8001992:	461a      	mov	r2, r3
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	651a      	str	r2, [r3, #80]	; 0x50
				ResolutionEncoders);
		return posNowEnc2;
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800199c:	e000      	b.n	80019a0 <_ZN7RoboArm14GetPosEncodersEh+0x64>
		break;
	default:
		return 1;
 800199e:	2301      	movs	r3, #1
		break;
	}
	return 0;
}
 80019a0:	4618      	mov	r0, r3
 80019a2:	3708      	adds	r7, #8
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bd80      	pop	{r7, pc}

080019a8 <_ZN7RoboArm15SetZeroEncodersEv>:

int RoboArm::SetZeroEncoders() {
 80019a8:	b580      	push	{r7, lr}
 80019aa:	b082      	sub	sp, #8
 80019ac:	af00      	add	r7, sp, #0
 80019ae:	6078      	str	r0, [r7, #4]

	HAL_Delay(300);
 80019b0:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80019b4:	f001 f8d4 	bl	8002b60 <HAL_Delay>
	getPositionSPI(arm_hspi1, CS_GPIO_Port_Enc1, CS_Pin_Enc1,
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	8f9a      	ldrh	r2, [r3, #60]	; 0x3c
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80019ca:	f7ff fbdf 	bl	800118c <getPositionSPI>
			ResolutionEncoders);
	getPositionSPI(arm_hspi1, CS_GPIO_Port_Enc2, CS_Pin_Enc2,
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80019e2:	f7ff fbd3 	bl	800118c <getPositionSPI>
			ResolutionEncoders);
	//	resetAMT22();
	setZeroSPI(arm_hspi1, CS_GPIO_Port_Enc1, CS_Pin_Enc1);
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80019f2:	461a      	mov	r2, r3
 80019f4:	f7ff fc58 	bl	80012a8 <setZeroSPI>
	setZeroSPI(arm_hspi1, CS_GPIO_Port_Enc2, CS_Pin_Enc2);
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8001a06:	461a      	mov	r2, r3
 8001a08:	f7ff fc4e 	bl	80012a8 <setZeroSPI>
	HAL_Delay(250);
 8001a0c:	20fa      	movs	r0, #250	; 0xfa
 8001a0e:	f001 f8a7 	bl	8002b60 <HAL_Delay>
	return 0;
 8001a12:	2300      	movs	r3, #0
}
 8001a14:	4618      	mov	r0, r3
 8001a16:	3708      	adds	r7, #8
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bd80      	pop	{r7, pc}

08001a1c <_ZN7RoboArm13SetSettMotorsER17TIM_HandleTypeDefS1_P12GPIO_TypeDeftS3_tS3_tS3_t>:

int RoboArm::SetSettMotors(TIM_HandleTypeDef &htim1, TIM_HandleTypeDef &htim2,
		GPIO_TypeDef *Dir1_GPIO_Port_M1T, uint16_t Dir1_Pin_M1T,
		GPIO_TypeDef *Dir2_GPIO_Port_M2T, uint16_t Dir2_Pin_M2T,
		GPIO_TypeDef *EN1_GPIO_Port_M1T, uint16_t EN1_Pin_M1T,
		GPIO_TypeDef *EN2_GPIO_Port_M2T, uint16_t EN2_Pin_M2T) {
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	b084      	sub	sp, #16
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	60f8      	str	r0, [r7, #12]
 8001a24:	60b9      	str	r1, [r7, #8]
 8001a26:	607a      	str	r2, [r7, #4]
 8001a28:	603b      	str	r3, [r7, #0]
	htim1M1 = &htim1;
 8001a2a:	68fb      	ldr	r3, [r7, #12]
 8001a2c:	68ba      	ldr	r2, [r7, #8]
 8001a2e:	605a      	str	r2, [r3, #4]
	htim2M2 = &htim2;
 8001a30:	68fb      	ldr	r3, [r7, #12]
 8001a32:	687a      	ldr	r2, [r7, #4]
 8001a34:	609a      	str	r2, [r3, #8]

	Dir1_GPIO_Port_M1 = Dir1_GPIO_Port_M1T;
 8001a36:	68fb      	ldr	r3, [r7, #12]
 8001a38:	683a      	ldr	r2, [r7, #0]
 8001a3a:	60da      	str	r2, [r3, #12]
	Dir1_Pin_M1 = Dir1_Pin_M1T;
 8001a3c:	68fb      	ldr	r3, [r7, #12]
 8001a3e:	8b3a      	ldrh	r2, [r7, #24]
 8001a40:	821a      	strh	r2, [r3, #16]
	Dir2_GPIO_Port_M2 = Dir2_GPIO_Port_M2T;
 8001a42:	68fb      	ldr	r3, [r7, #12]
 8001a44:	69fa      	ldr	r2, [r7, #28]
 8001a46:	615a      	str	r2, [r3, #20]
	Dir2_Pin_M2 = Dir2_Pin_M2T;
 8001a48:	68fb      	ldr	r3, [r7, #12]
 8001a4a:	8c3a      	ldrh	r2, [r7, #32]
 8001a4c:	831a      	strh	r2, [r3, #24]
	EN1_GPIO_Port_M1 = EN1_GPIO_Port_M1T;
 8001a4e:	68fb      	ldr	r3, [r7, #12]
 8001a50:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a52:	61da      	str	r2, [r3, #28]
	EN1_Pin_M1 = EN1_Pin_M1T;
 8001a54:	68fb      	ldr	r3, [r7, #12]
 8001a56:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8001a58:	841a      	strh	r2, [r3, #32]
	EN2_GPIO_Port_M2 = EN2_GPIO_Port_M2T;
 8001a5a:	68fb      	ldr	r3, [r7, #12]
 8001a5c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001a5e:	625a      	str	r2, [r3, #36]	; 0x24
	EN2_Pin_M2 = EN2_Pin_M2T;
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 8001a64:	851a      	strh	r2, [r3, #40]	; 0x28

	SetEnable(1, false);
 8001a66:	2200      	movs	r2, #0
 8001a68:	2101      	movs	r1, #1
 8001a6a:	68f8      	ldr	r0, [r7, #12]
 8001a6c:	f000 f80a 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>
	SetEnable(2, false);
 8001a70:	2200      	movs	r2, #0
 8001a72:	2102      	movs	r1, #2
 8001a74:	68f8      	ldr	r0, [r7, #12]
 8001a76:	f000 f805 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>

	return 0;
 8001a7a:	2300      	movs	r3, #0
}
 8001a7c:	4618      	mov	r0, r3
 8001a7e:	3710      	adds	r7, #16
 8001a80:	46bd      	mov	sp, r7
 8001a82:	bd80      	pop	{r7, pc}

08001a84 <_ZN7RoboArm9SetEnableEtb>:

int RoboArm::SetEnable(uint16_t numMotor, bool state) {
 8001a84:	b580      	push	{r7, lr}
 8001a86:	b084      	sub	sp, #16
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	6078      	str	r0, [r7, #4]
 8001a8c:	460b      	mov	r3, r1
 8001a8e:	807b      	strh	r3, [r7, #2]
 8001a90:	4613      	mov	r3, r2
 8001a92:	707b      	strb	r3, [r7, #1]

	GPIO_PinState pinSet;

	if (state) {
 8001a94:	787b      	ldrb	r3, [r7, #1]
 8001a96:	2b00      	cmp	r3, #0
 8001a98:	d002      	beq.n	8001aa0 <_ZN7RoboArm9SetEnableEtb+0x1c>
		pinSet = GPIO_PIN_RESET;
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	73fb      	strb	r3, [r7, #15]
 8001a9e:	e001      	b.n	8001aa4 <_ZN7RoboArm9SetEnableEtb+0x20>
	} else {
		pinSet = GPIO_PIN_SET;
 8001aa0:	2301      	movs	r3, #1
 8001aa2:	73fb      	strb	r3, [r7, #15]
	}

	if (numMotor == 1) {
 8001aa4:	887b      	ldrh	r3, [r7, #2]
 8001aa6:	2b01      	cmp	r3, #1
 8001aa8:	d108      	bne.n	8001abc <_ZN7RoboArm9SetEnableEtb+0x38>
		HAL_GPIO_WritePin(EN1_GPIO_Port_M1, EN1_Pin_M1, pinSet);
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	69d8      	ldr	r0, [r3, #28]
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	8c1b      	ldrh	r3, [r3, #32]
 8001ab2:	7bfa      	ldrb	r2, [r7, #15]
 8001ab4:	4619      	mov	r1, r3
 8001ab6:	f001 fb8d 	bl	80031d4 <HAL_GPIO_WritePin>
 8001aba:	e00a      	b.n	8001ad2 <_ZN7RoboArm9SetEnableEtb+0x4e>
	} else if (numMotor == 2) {
 8001abc:	887b      	ldrh	r3, [r7, #2]
 8001abe:	2b02      	cmp	r3, #2
 8001ac0:	d107      	bne.n	8001ad2 <_ZN7RoboArm9SetEnableEtb+0x4e>
		HAL_GPIO_WritePin(EN2_GPIO_Port_M2, EN2_Pin_M2, pinSet);
 8001ac2:	687b      	ldr	r3, [r7, #4]
 8001ac4:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001aca:	7bfa      	ldrb	r2, [r7, #15]
 8001acc:	4619      	mov	r1, r3
 8001ace:	f001 fb81 	bl	80031d4 <HAL_GPIO_WritePin>
	} else {

	}
}
 8001ad2:	bf00      	nop
 8001ad4:	4618      	mov	r0, r3
 8001ad6:	3710      	adds	r7, #16
 8001ad8:	46bd      	mov	sp, r7
 8001ada:	bd80      	pop	{r7, pc}

08001adc <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8001adc:	b480      	push	{r7}
 8001ade:	b085      	sub	sp, #20
 8001ae0:	af00      	add	r7, sp, #0
 8001ae2:	60f8      	str	r0, [r7, #12]
 8001ae4:	60b9      	str	r1, [r7, #8]
 8001ae6:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 8001ae8:	68fb      	ldr	r3, [r7, #12]
 8001aea:	4a06      	ldr	r2, [pc, #24]	; (8001b04 <vApplicationGetIdleTaskMemory+0x28>)
 8001aec:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 8001aee:	68bb      	ldr	r3, [r7, #8]
 8001af0:	4a05      	ldr	r2, [pc, #20]	; (8001b08 <vApplicationGetIdleTaskMemory+0x2c>)
 8001af2:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	2280      	movs	r2, #128	; 0x80
 8001af8:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 8001afa:	bf00      	nop
 8001afc:	3714      	adds	r7, #20
 8001afe:	46bd      	mov	sp, r7
 8001b00:	bc80      	pop	{r7}
 8001b02:	4770      	bx	lr
 8001b04:	200001f8 	.word	0x200001f8
 8001b08:	2000024c 	.word	0x2000024c

08001b0c <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8001b0c:	b5b0      	push	{r4, r5, r7, lr}
 8001b0e:	b09e      	sub	sp, #120	; 0x78
 8001b10:	af08      	add	r7, sp, #32
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8001b12:	f000 fff3 	bl	8002afc <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8001b16:	f000 f887 	bl	8001c28 <_Z18SystemClock_Configv>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8001b1a:	f000 fa41 	bl	8001fa0 <_ZL12MX_GPIO_Initv>
	MX_TIM1_Init();
 8001b1e:	f000 f911 	bl	8001d44 <_ZL12MX_TIM1_Initv>
	MX_TIM2_Init();
 8001b22:	f000 f9a7 	bl	8001e74 <_ZL12MX_TIM2_Initv>
	MX_SPI1_Init();
 8001b26:	f000 f8d1 	bl	8001ccc <_ZL12MX_SPI1_Initv>
	MX_USART1_UART_Init();
 8001b2a:	f000 fa0b 	bl	8001f44 <_ZL19MX_USART1_UART_Initv>
	/* USER CODE BEGIN 2 */

	HAL_TIM_Base_Init(&htim1);
 8001b2e:	4832      	ldr	r0, [pc, #200]	; (8001bf8 <main+0xec>)
 8001b30:	f002 fbbe 	bl	80042b0 <HAL_TIM_Base_Init>
	HAL_TIM_Base_Init(&htim2);
 8001b34:	4831      	ldr	r0, [pc, #196]	; (8001bfc <main+0xf0>)
 8001b36:	f002 fbbb 	bl	80042b0 <HAL_TIM_Base_Init>

	arm.SetSettMotors(htim1, htim2, Dir_GPIO_Port, Dir_Pin, Dir2_GPIO_Port,
 8001b3a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001b3e:	9306      	str	r3, [sp, #24]
 8001b40:	4b2f      	ldr	r3, [pc, #188]	; (8001c00 <main+0xf4>)
 8001b42:	9305      	str	r3, [sp, #20]
 8001b44:	2320      	movs	r3, #32
 8001b46:	9304      	str	r3, [sp, #16]
 8001b48:	4b2d      	ldr	r3, [pc, #180]	; (8001c00 <main+0xf4>)
 8001b4a:	9303      	str	r3, [sp, #12]
 8001b4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001b50:	9302      	str	r3, [sp, #8]
 8001b52:	4b2c      	ldr	r3, [pc, #176]	; (8001c04 <main+0xf8>)
 8001b54:	9301      	str	r3, [sp, #4]
 8001b56:	2340      	movs	r3, #64	; 0x40
 8001b58:	9300      	str	r3, [sp, #0]
 8001b5a:	4b29      	ldr	r3, [pc, #164]	; (8001c00 <main+0xf4>)
 8001b5c:	4a27      	ldr	r2, [pc, #156]	; (8001bfc <main+0xf0>)
 8001b5e:	4926      	ldr	r1, [pc, #152]	; (8001bf8 <main+0xec>)
 8001b60:	4829      	ldr	r0, [pc, #164]	; (8001c08 <main+0xfc>)
 8001b62:	f7ff ff5b 	bl	8001a1c <_ZN7RoboArm13SetSettMotorsER17TIM_HandleTypeDefS1_P12GPIO_TypeDeftS3_tS3_tS3_t>
	Dir2_Pin, En_GPIO_Port, En_Pin, En2_GPIO_Port, En2_Pin);
	arm.SetSettEncoders(hspi1, CS_GPIO_Port, CS_Pin, CS2_GPIO_Port, CS2_Pin,
 8001b66:	230e      	movs	r3, #14
 8001b68:	9302      	str	r3, [sp, #8]
 8001b6a:	2302      	movs	r3, #2
 8001b6c:	9301      	str	r3, [sp, #4]
 8001b6e:	4b25      	ldr	r3, [pc, #148]	; (8001c04 <main+0xf8>)
 8001b70:	9300      	str	r3, [sp, #0]
 8001b72:	2301      	movs	r3, #1
 8001b74:	4a23      	ldr	r2, [pc, #140]	; (8001c04 <main+0xf8>)
 8001b76:	4925      	ldr	r1, [pc, #148]	; (8001c0c <main+0x100>)
 8001b78:	4823      	ldr	r0, [pc, #140]	; (8001c08 <main+0xfc>)
 8001b7a:	f7ff feaa 	bl	80018d2 <_ZN7RoboArm15SetSettEncodersER19__SPI_HandleTypeDefP12GPIO_TypeDeftS3_th>
			14);
	arm.SetZeroEncoders();
 8001b7e:	4822      	ldr	r0, [pc, #136]	; (8001c08 <main+0xfc>)
 8001b80:	f7ff ff12 	bl	80019a8 <_ZN7RoboArm15SetZeroEncodersEv>
	/* add queues, ... */
	/* USER CODE END RTOS_QUEUES */

	/* Create the thread(s) */
	/* definition and creation of defaultTask */
	osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 8001b84:	4b22      	ldr	r3, [pc, #136]	; (8001c10 <main+0x104>)
 8001b86:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 8001b8a:	461d      	mov	r5, r3
 8001b8c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001b8e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001b90:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001b94:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001b98:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001b9c:	2100      	movs	r1, #0
 8001b9e:	4618      	mov	r0, r3
 8001ba0:	f004 f93c 	bl	8005e1c <osThreadCreate>
 8001ba4:	4603      	mov	r3, r0
 8001ba6:	4a1b      	ldr	r2, [pc, #108]	; (8001c14 <main+0x108>)
 8001ba8:	6013      	str	r3, [r2, #0]

	/* definition and creation of myAMT22Task */
	osThreadDef(myAMT22Task, StartAMT22Data, osPriorityIdle, 0, 128);
 8001baa:	4b1b      	ldr	r3, [pc, #108]	; (8001c18 <main+0x10c>)
 8001bac:	f107 0420 	add.w	r4, r7, #32
 8001bb0:	461d      	mov	r5, r3
 8001bb2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001bb4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001bb6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001bba:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	myAMT22TaskHandle = osThreadCreate(osThread(myAMT22Task), NULL);
 8001bbe:	f107 0320 	add.w	r3, r7, #32
 8001bc2:	2100      	movs	r1, #0
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	f004 f929 	bl	8005e1c <osThreadCreate>
 8001bca:	4603      	mov	r3, r0
 8001bcc:	4a13      	ldr	r2, [pc, #76]	; (8001c1c <main+0x110>)
 8001bce:	6013      	str	r3, [r2, #0]

	/* definition and creation of myUARTTask */
	osThreadDef(myUARTTask, StartUARTData, osPriorityIdle, 0, 128);
 8001bd0:	4b13      	ldr	r3, [pc, #76]	; (8001c20 <main+0x114>)
 8001bd2:	1d3c      	adds	r4, r7, #4
 8001bd4:	461d      	mov	r5, r3
 8001bd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001bd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001bda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001bde:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	myUARTTaskHandle = osThreadCreate(osThread(myUARTTask), NULL);
 8001be2:	1d3b      	adds	r3, r7, #4
 8001be4:	2100      	movs	r1, #0
 8001be6:	4618      	mov	r0, r3
 8001be8:	f004 f918 	bl	8005e1c <osThreadCreate>
 8001bec:	4603      	mov	r3, r0
 8001bee:	4a0d      	ldr	r2, [pc, #52]	; (8001c24 <main+0x118>)
 8001bf0:	6013      	str	r3, [r2, #0]
	/* USER CODE BEGIN RTOS_THREADS */
	/* add threads, ... */
	/* USER CODE END RTOS_THREADS */

	/* Start scheduler */
	osKernelStart();
 8001bf2:	f004 f90c 	bl	8005e0e <osKernelStart>

	/* We should never get here as control is now taken by the scheduler */
	/* Infinite loop */
	/* USER CODE BEGIN WHILE */

	while (1) {
 8001bf6:	e7fe      	b.n	8001bf6 <main+0xea>
 8001bf8:	200004a4 	.word	0x200004a4
 8001bfc:	200004ec 	.word	0x200004ec
 8001c00:	40010800 	.word	0x40010800
 8001c04:	40010c00 	.word	0x40010c00
 8001c08:	200005b8 	.word	0x200005b8
 8001c0c:	2000044c 	.word	0x2000044c
 8001c10:	08009b7c 	.word	0x08009b7c
 8001c14:	2000057c 	.word	0x2000057c
 8001c18:	08009ba4 	.word	0x08009ba4
 8001c1c:	20000580 	.word	0x20000580
 8001c20:	08009bcc 	.word	0x08009bcc
 8001c24:	20000584 	.word	0x20000584

08001c28 <_Z18SystemClock_Configv>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b090      	sub	sp, #64	; 0x40
 8001c2c:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8001c2e:	f107 0318 	add.w	r3, r7, #24
 8001c32:	2228      	movs	r2, #40	; 0x28
 8001c34:	2100      	movs	r1, #0
 8001c36:	4618      	mov	r0, r3
 8001c38:	f006 f84d 	bl	8007cd6 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8001c3c:	1d3b      	adds	r3, r7, #4
 8001c3e:	2200      	movs	r2, #0
 8001c40:	601a      	str	r2, [r3, #0]
 8001c42:	605a      	str	r2, [r3, #4]
 8001c44:	609a      	str	r2, [r3, #8]
 8001c46:	60da      	str	r2, [r3, #12]
 8001c48:	611a      	str	r2, [r3, #16]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001c4a:	2301      	movs	r3, #1
 8001c4c:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001c4e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001c52:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8001c54:	2300      	movs	r3, #0
 8001c56:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001c58:	2301      	movs	r3, #1
 8001c5a:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001c5c:	2302      	movs	r3, #2
 8001c5e:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001c60:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001c64:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001c66:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8001c6a:	63fb      	str	r3, [r7, #60]	; 0x3c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8001c6c:	f107 0318 	add.w	r3, r7, #24
 8001c70:	4618      	mov	r0, r3
 8001c72:	f001 fae1 	bl	8003238 <HAL_RCC_OscConfig>
 8001c76:	4603      	mov	r3, r0
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	bf14      	ite	ne
 8001c7c:	2301      	movne	r3, #1
 8001c7e:	2300      	moveq	r3, #0
 8001c80:	b2db      	uxtb	r3, r3
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	d001      	beq.n	8001c8a <_Z18SystemClock_Configv+0x62>
		Error_Handler();
 8001c86:	f000 fbc3 	bl	8002410 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8001c8a:	230f      	movs	r3, #15
 8001c8c:	607b      	str	r3, [r7, #4]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001c8e:	2302      	movs	r3, #2
 8001c90:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c92:	2300      	movs	r3, #0
 8001c94:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001c96:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c9a:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001c9c:	2300      	movs	r3, #0
 8001c9e:	617b      	str	r3, [r7, #20]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8001ca0:	1d3b      	adds	r3, r7, #4
 8001ca2:	2102      	movs	r1, #2
 8001ca4:	4618      	mov	r0, r3
 8001ca6:	f001 fd49 	bl	800373c <HAL_RCC_ClockConfig>
 8001caa:	4603      	mov	r3, r0
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	bf14      	ite	ne
 8001cb0:	2301      	movne	r3, #1
 8001cb2:	2300      	moveq	r3, #0
 8001cb4:	b2db      	uxtb	r3, r3
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d001      	beq.n	8001cbe <_Z18SystemClock_Configv+0x96>
		Error_Handler();
 8001cba:	f000 fba9 	bl	8002410 <Error_Handler>
	}

	/** Enables the Clock Security System
	 */
	HAL_RCC_EnableCSS();
 8001cbe:	f001 fe27 	bl	8003910 <HAL_RCC_EnableCSS>
}
 8001cc2:	bf00      	nop
 8001cc4:	3740      	adds	r7, #64	; 0x40
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	bd80      	pop	{r7, pc}
	...

08001ccc <_ZL12MX_SPI1_Initv>:
/**
 * @brief SPI1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_SPI1_Init(void) {
 8001ccc:	b580      	push	{r7, lr}
 8001cce:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN SPI1_Init 1 */

	/* USER CODE END SPI1_Init 1 */
	/* SPI1 parameter configuration*/
	hspi1.Instance = SPI1;
 8001cd0:	4b1a      	ldr	r3, [pc, #104]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001cd2:	4a1b      	ldr	r2, [pc, #108]	; (8001d40 <_ZL12MX_SPI1_Initv+0x74>)
 8001cd4:	601a      	str	r2, [r3, #0]
	hspi1.Init.Mode = SPI_MODE_MASTER;
 8001cd6:	4b19      	ldr	r3, [pc, #100]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001cd8:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001cdc:	605a      	str	r2, [r3, #4]
	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8001cde:	4b17      	ldr	r3, [pc, #92]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	609a      	str	r2, [r3, #8]
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001ce4:	4b15      	ldr	r3, [pc, #84]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	60da      	str	r2, [r3, #12]
	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001cea:	4b14      	ldr	r3, [pc, #80]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001cec:	2200      	movs	r2, #0
 8001cee:	611a      	str	r2, [r3, #16]
	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001cf0:	4b12      	ldr	r3, [pc, #72]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	615a      	str	r2, [r3, #20]
	hspi1.Init.NSS = SPI_NSS_SOFT;
 8001cf6:	4b11      	ldr	r3, [pc, #68]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001cf8:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001cfc:	619a      	str	r2, [r3, #24]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001cfe:	4b0f      	ldr	r3, [pc, #60]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001d00:	2218      	movs	r2, #24
 8001d02:	61da      	str	r2, [r3, #28]
	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001d04:	4b0d      	ldr	r3, [pc, #52]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001d06:	2200      	movs	r2, #0
 8001d08:	621a      	str	r2, [r3, #32]
	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001d0a:	4b0c      	ldr	r3, [pc, #48]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001d0c:	2200      	movs	r2, #0
 8001d0e:	625a      	str	r2, [r3, #36]	; 0x24
	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001d10:	4b0a      	ldr	r3, [pc, #40]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001d12:	2200      	movs	r2, #0
 8001d14:	629a      	str	r2, [r3, #40]	; 0x28
	hspi1.Init.CRCPolynomial = 10;
 8001d16:	4b09      	ldr	r3, [pc, #36]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001d18:	220a      	movs	r2, #10
 8001d1a:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 8001d1c:	4807      	ldr	r0, [pc, #28]	; (8001d3c <_ZL12MX_SPI1_Initv+0x70>)
 8001d1e:	f001 fef1 	bl	8003b04 <HAL_SPI_Init>
 8001d22:	4603      	mov	r3, r0
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	bf14      	ite	ne
 8001d28:	2301      	movne	r3, #1
 8001d2a:	2300      	moveq	r3, #0
 8001d2c:	b2db      	uxtb	r3, r3
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d001      	beq.n	8001d36 <_ZL12MX_SPI1_Initv+0x6a>
		Error_Handler();
 8001d32:	f000 fb6d 	bl	8002410 <Error_Handler>
	}
	/* USER CODE BEGIN SPI1_Init 2 */

	/* USER CODE END SPI1_Init 2 */

}
 8001d36:	bf00      	nop
 8001d38:	bd80      	pop	{r7, pc}
 8001d3a:	bf00      	nop
 8001d3c:	2000044c 	.word	0x2000044c
 8001d40:	40013000 	.word	0x40013000

08001d44 <_ZL12MX_TIM1_Initv>:
/**
 * @brief TIM1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM1_Init(void) {
 8001d44:	b580      	push	{r7, lr}
 8001d46:	b092      	sub	sp, #72	; 0x48
 8001d48:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM1_Init 0 */

	/* USER CODE END TIM1_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001d4a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001d4e:	2200      	movs	r2, #0
 8001d50:	601a      	str	r2, [r3, #0]
 8001d52:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001d54:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001d58:	2200      	movs	r2, #0
 8001d5a:	601a      	str	r2, [r3, #0]
 8001d5c:	605a      	str	r2, [r3, #4]
 8001d5e:	609a      	str	r2, [r3, #8]
 8001d60:	60da      	str	r2, [r3, #12]
 8001d62:	611a      	str	r2, [r3, #16]
 8001d64:	615a      	str	r2, [r3, #20]
 8001d66:	619a      	str	r2, [r3, #24]
	TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = { 0 };
 8001d68:	1d3b      	adds	r3, r7, #4
 8001d6a:	2220      	movs	r2, #32
 8001d6c:	2100      	movs	r1, #0
 8001d6e:	4618      	mov	r0, r3
 8001d70:	f005 ffb1 	bl	8007cd6 <memset>

	/* USER CODE BEGIN TIM1_Init 1 */

	/* USER CODE END TIM1_Init 1 */
	htim1.Instance = TIM1;
 8001d74:	4b3d      	ldr	r3, [pc, #244]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d76:	4a3e      	ldr	r2, [pc, #248]	; (8001e70 <_ZL12MX_TIM1_Initv+0x12c>)
 8001d78:	601a      	str	r2, [r3, #0]
	htim1.Init.Prescaler = 72;
 8001d7a:	4b3c      	ldr	r3, [pc, #240]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d7c:	2248      	movs	r2, #72	; 0x48
 8001d7e:	605a      	str	r2, [r3, #4]
	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d80:	4b3a      	ldr	r3, [pc, #232]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d82:	2200      	movs	r2, #0
 8001d84:	609a      	str	r2, [r3, #8]
	htim1.Init.Period = 1000 - 1;
 8001d86:	4b39      	ldr	r3, [pc, #228]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d88:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001d8c:	60da      	str	r2, [r3, #12]
	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d8e:	4b37      	ldr	r3, [pc, #220]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d90:	2200      	movs	r2, #0
 8001d92:	611a      	str	r2, [r3, #16]
	htim1.Init.RepetitionCounter = 0;
 8001d94:	4b35      	ldr	r3, [pc, #212]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d96:	2200      	movs	r2, #0
 8001d98:	615a      	str	r2, [r3, #20]
	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001d9a:	4b34      	ldr	r3, [pc, #208]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_PWM_Init(&htim1) != HAL_OK) {
 8001da0:	4832      	ldr	r0, [pc, #200]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001da2:	f002 fb5d 	bl	8004460 <HAL_TIM_PWM_Init>
 8001da6:	4603      	mov	r3, r0
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	bf14      	ite	ne
 8001dac:	2301      	movne	r3, #1
 8001dae:	2300      	moveq	r3, #0
 8001db0:	b2db      	uxtb	r3, r3
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d001      	beq.n	8001dba <_ZL12MX_TIM1_Initv+0x76>
		Error_Handler();
 8001db6:	f000 fb2b 	bl	8002410 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001dba:	2300      	movs	r3, #0
 8001dbc:	643b      	str	r3, [r7, #64]	; 0x40
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	647b      	str	r3, [r7, #68]	; 0x44
	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig)
 8001dc2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001dc6:	4619      	mov	r1, r3
 8001dc8:	4828      	ldr	r0, [pc, #160]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001dca:	f003 f89b 	bl	8004f04 <HAL_TIMEx_MasterConfigSynchronization>
 8001dce:	4603      	mov	r3, r0
			!= HAL_OK) {
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	bf14      	ite	ne
 8001dd4:	2301      	movne	r3, #1
 8001dd6:	2300      	moveq	r3, #0
 8001dd8:	b2db      	uxtb	r3, r3
	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig)
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d001      	beq.n	8001de2 <_ZL12MX_TIM1_Initv+0x9e>
		Error_Handler();
 8001dde:	f000 fb17 	bl	8002410 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001de2:	2360      	movs	r3, #96	; 0x60
 8001de4:	627b      	str	r3, [r7, #36]	; 0x24
	sConfigOC.Pulse = 0;
 8001de6:	2300      	movs	r3, #0
 8001de8:	62bb      	str	r3, [r7, #40]	; 0x28
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001dea:	2300      	movs	r3, #0
 8001dec:	62fb      	str	r3, [r7, #44]	; 0x2c
	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001dee:	2300      	movs	r3, #0
 8001df0:	633b      	str	r3, [r7, #48]	; 0x30
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001df2:	2300      	movs	r3, #0
 8001df4:	637b      	str	r3, [r7, #52]	; 0x34
	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001df6:	2300      	movs	r3, #0
 8001df8:	63bb      	str	r3, [r7, #56]	; 0x38
	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001dfa:	2300      	movs	r3, #0
 8001dfc:	63fb      	str	r3, [r7, #60]	; 0x3c
	if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3)
 8001dfe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001e02:	2208      	movs	r2, #8
 8001e04:	4619      	mov	r1, r3
 8001e06:	4819      	ldr	r0, [pc, #100]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001e08:	f002 fd88 	bl	800491c <HAL_TIM_PWM_ConfigChannel>
 8001e0c:	4603      	mov	r3, r0
			!= HAL_OK) {
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	bf14      	ite	ne
 8001e12:	2301      	movne	r3, #1
 8001e14:	2300      	moveq	r3, #0
 8001e16:	b2db      	uxtb	r3, r3
	if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3)
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d001      	beq.n	8001e20 <_ZL12MX_TIM1_Initv+0xdc>
		Error_Handler();
 8001e1c:	f000 faf8 	bl	8002410 <Error_Handler>
	}
	sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001e20:	2300      	movs	r3, #0
 8001e22:	607b      	str	r3, [r7, #4]
	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001e24:	2300      	movs	r3, #0
 8001e26:	60bb      	str	r3, [r7, #8]
	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001e28:	2300      	movs	r3, #0
 8001e2a:	60fb      	str	r3, [r7, #12]
	sBreakDeadTimeConfig.DeadTime = 0;
 8001e2c:	2300      	movs	r3, #0
 8001e2e:	613b      	str	r3, [r7, #16]
	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001e30:	2300      	movs	r3, #0
 8001e32:	617b      	str	r3, [r7, #20]
	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001e34:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e38:	61bb      	str	r3, [r7, #24]
	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	623b      	str	r3, [r7, #32]
	if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig)
 8001e3e:	1d3b      	adds	r3, r7, #4
 8001e40:	4619      	mov	r1, r3
 8001e42:	480a      	ldr	r0, [pc, #40]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001e44:	f003 f8bc 	bl	8004fc0 <HAL_TIMEx_ConfigBreakDeadTime>
 8001e48:	4603      	mov	r3, r0
			!= HAL_OK) {
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	bf14      	ite	ne
 8001e4e:	2301      	movne	r3, #1
 8001e50:	2300      	moveq	r3, #0
 8001e52:	b2db      	uxtb	r3, r3
	if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig)
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	d001      	beq.n	8001e5c <_ZL12MX_TIM1_Initv+0x118>
		Error_Handler();
 8001e58:	f000 fada 	bl	8002410 <Error_Handler>
	}
	/* USER CODE BEGIN TIM1_Init 2 */

	/* USER CODE END TIM1_Init 2 */
	HAL_TIM_MspPostInit(&htim1);
 8001e5c:	4803      	ldr	r0, [pc, #12]	; (8001e6c <_ZL12MX_TIM1_Initv+0x128>)
 8001e5e:	f000 fbdf 	bl	8002620 <HAL_TIM_MspPostInit>

}
 8001e62:	bf00      	nop
 8001e64:	3748      	adds	r7, #72	; 0x48
 8001e66:	46bd      	mov	sp, r7
 8001e68:	bd80      	pop	{r7, pc}
 8001e6a:	bf00      	nop
 8001e6c:	200004a4 	.word	0x200004a4
 8001e70:	40012c00 	.word	0x40012c00

08001e74 <_ZL12MX_TIM2_Initv>:
/**
 * @brief TIM2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM2_Init(void) {
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b08a      	sub	sp, #40	; 0x28
 8001e78:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM2_Init 0 */

	/* USER CODE END TIM2_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001e7a:	f107 0320 	add.w	r3, r7, #32
 8001e7e:	2200      	movs	r2, #0
 8001e80:	601a      	str	r2, [r3, #0]
 8001e82:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001e84:	1d3b      	adds	r3, r7, #4
 8001e86:	2200      	movs	r2, #0
 8001e88:	601a      	str	r2, [r3, #0]
 8001e8a:	605a      	str	r2, [r3, #4]
 8001e8c:	609a      	str	r2, [r3, #8]
 8001e8e:	60da      	str	r2, [r3, #12]
 8001e90:	611a      	str	r2, [r3, #16]
 8001e92:	615a      	str	r2, [r3, #20]
 8001e94:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM2_Init 1 */

	/* USER CODE END TIM2_Init 1 */
	htim2.Instance = TIM2;
 8001e96:	4b2a      	ldr	r3, [pc, #168]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001e98:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001e9c:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 72;
 8001e9e:	4b28      	ldr	r3, [pc, #160]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001ea0:	2248      	movs	r2, #72	; 0x48
 8001ea2:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ea4:	4b26      	ldr	r3, [pc, #152]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 1000 - 1;
 8001eaa:	4b25      	ldr	r3, [pc, #148]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001eac:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001eb0:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001eb2:	4b23      	ldr	r3, [pc, #140]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001eb4:	2200      	movs	r2, #0
 8001eb6:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001eb8:	4b21      	ldr	r3, [pc, #132]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001eba:	2200      	movs	r2, #0
 8001ebc:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
 8001ebe:	4820      	ldr	r0, [pc, #128]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001ec0:	f002 face 	bl	8004460 <HAL_TIM_PWM_Init>
 8001ec4:	4603      	mov	r3, r0
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	bf14      	ite	ne
 8001eca:	2301      	movne	r3, #1
 8001ecc:	2300      	moveq	r3, #0
 8001ece:	b2db      	uxtb	r3, r3
 8001ed0:	2b00      	cmp	r3, #0
 8001ed2:	d001      	beq.n	8001ed8 <_ZL12MX_TIM2_Initv+0x64>
		Error_Handler();
 8001ed4:	f000 fa9c 	bl	8002410 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001ed8:	2300      	movs	r3, #0
 8001eda:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001edc:	2300      	movs	r3, #0
 8001ede:	627b      	str	r3, [r7, #36]	; 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig)
 8001ee0:	f107 0320 	add.w	r3, r7, #32
 8001ee4:	4619      	mov	r1, r3
 8001ee6:	4816      	ldr	r0, [pc, #88]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001ee8:	f003 f80c 	bl	8004f04 <HAL_TIMEx_MasterConfigSynchronization>
 8001eec:	4603      	mov	r3, r0
			!= HAL_OK) {
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	bf14      	ite	ne
 8001ef2:	2301      	movne	r3, #1
 8001ef4:	2300      	moveq	r3, #0
 8001ef6:	b2db      	uxtb	r3, r3
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig)
 8001ef8:	2b00      	cmp	r3, #0
 8001efa:	d001      	beq.n	8001f00 <_ZL12MX_TIM2_Initv+0x8c>
		Error_Handler();
 8001efc:	f000 fa88 	bl	8002410 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001f00:	2360      	movs	r3, #96	; 0x60
 8001f02:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 8001f04:	2300      	movs	r3, #0
 8001f06:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f08:	2300      	movs	r3, #0
 8001f0a:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f0c:	2300      	movs	r3, #0
 8001f0e:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3)
 8001f10:	1d3b      	adds	r3, r7, #4
 8001f12:	2208      	movs	r2, #8
 8001f14:	4619      	mov	r1, r3
 8001f16:	480a      	ldr	r0, [pc, #40]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001f18:	f002 fd00 	bl	800491c <HAL_TIM_PWM_ConfigChannel>
 8001f1c:	4603      	mov	r3, r0
			!= HAL_OK) {
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	bf14      	ite	ne
 8001f22:	2301      	movne	r3, #1
 8001f24:	2300      	moveq	r3, #0
 8001f26:	b2db      	uxtb	r3, r3
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3)
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d001      	beq.n	8001f30 <_ZL12MX_TIM2_Initv+0xbc>
		Error_Handler();
 8001f2c:	f000 fa70 	bl	8002410 <Error_Handler>
	}
	/* USER CODE BEGIN TIM2_Init 2 */

	/* USER CODE END TIM2_Init 2 */
	HAL_TIM_MspPostInit(&htim2);
 8001f30:	4803      	ldr	r0, [pc, #12]	; (8001f40 <_ZL12MX_TIM2_Initv+0xcc>)
 8001f32:	f000 fb75 	bl	8002620 <HAL_TIM_MspPostInit>

}
 8001f36:	bf00      	nop
 8001f38:	3728      	adds	r7, #40	; 0x28
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bd80      	pop	{r7, pc}
 8001f3e:	bf00      	nop
 8001f40:	200004ec 	.word	0x200004ec

08001f44 <_ZL19MX_USART1_UART_Initv>:
/**
 * @brief USART1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART1_UART_Init(void) {
 8001f44:	b580      	push	{r7, lr}
 8001f46:	af00      	add	r7, sp, #0
	/* USER CODE END USART1_Init 0 */

	/* USER CODE BEGIN USART1_Init 1 */

	/* USER CODE END USART1_Init 1 */
	huart1.Instance = USART1;
 8001f48:	4b13      	ldr	r3, [pc, #76]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f4a:	4a14      	ldr	r2, [pc, #80]	; (8001f9c <_ZL19MX_USART1_UART_Initv+0x58>)
 8001f4c:	601a      	str	r2, [r3, #0]
	huart1.Init.BaudRate = 115200;
 8001f4e:	4b12      	ldr	r3, [pc, #72]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f50:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001f54:	605a      	str	r2, [r3, #4]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001f56:	4b10      	ldr	r3, [pc, #64]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f58:	2200      	movs	r2, #0
 8001f5a:	609a      	str	r2, [r3, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 8001f5c:	4b0e      	ldr	r3, [pc, #56]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	60da      	str	r2, [r3, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 8001f62:	4b0d      	ldr	r3, [pc, #52]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f64:	2200      	movs	r2, #0
 8001f66:	611a      	str	r2, [r3, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8001f68:	4b0b      	ldr	r3, [pc, #44]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f6a:	220c      	movs	r2, #12
 8001f6c:	615a      	str	r2, [r3, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001f6e:	4b0a      	ldr	r3, [pc, #40]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f70:	2200      	movs	r2, #0
 8001f72:	619a      	str	r2, [r3, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001f74:	4b08      	ldr	r3, [pc, #32]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f76:	2200      	movs	r2, #0
 8001f78:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart1) != HAL_OK) {
 8001f7a:	4807      	ldr	r0, [pc, #28]	; (8001f98 <_ZL19MX_USART1_UART_Initv+0x54>)
 8001f7c:	f003 f883 	bl	8005086 <HAL_UART_Init>
 8001f80:	4603      	mov	r3, r0
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	bf14      	ite	ne
 8001f86:	2301      	movne	r3, #1
 8001f88:	2300      	moveq	r3, #0
 8001f8a:	b2db      	uxtb	r3, r3
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d001      	beq.n	8001f94 <_ZL19MX_USART1_UART_Initv+0x50>
		Error_Handler();
 8001f90:	f000 fa3e 	bl	8002410 <Error_Handler>
	}
	/* USER CODE BEGIN USART1_Init 2 */

	/* USER CODE END USART1_Init 2 */

}
 8001f94:	bf00      	nop
 8001f96:	bd80      	pop	{r7, pc}
 8001f98:	20000534 	.word	0x20000534
 8001f9c:	40013800 	.word	0x40013800

08001fa0 <_ZL12MX_GPIO_Initv>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	b088      	sub	sp, #32
 8001fa4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8001fa6:	f107 0310 	add.w	r3, r7, #16
 8001faa:	2200      	movs	r2, #0
 8001fac:	601a      	str	r2, [r3, #0]
 8001fae:	605a      	str	r2, [r3, #4]
 8001fb0:	609a      	str	r2, [r3, #8]
 8001fb2:	60da      	str	r2, [r3, #12]
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8001fb4:	4b39      	ldr	r3, [pc, #228]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fb6:	699b      	ldr	r3, [r3, #24]
 8001fb8:	4a38      	ldr	r2, [pc, #224]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fba:	f043 0310 	orr.w	r3, r3, #16
 8001fbe:	6193      	str	r3, [r2, #24]
 8001fc0:	4b36      	ldr	r3, [pc, #216]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fc2:	699b      	ldr	r3, [r3, #24]
 8001fc4:	f003 0310 	and.w	r3, r3, #16
 8001fc8:	60fb      	str	r3, [r7, #12]
 8001fca:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 8001fcc:	4b33      	ldr	r3, [pc, #204]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fce:	699b      	ldr	r3, [r3, #24]
 8001fd0:	4a32      	ldr	r2, [pc, #200]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fd2:	f043 0320 	orr.w	r3, r3, #32
 8001fd6:	6193      	str	r3, [r2, #24]
 8001fd8:	4b30      	ldr	r3, [pc, #192]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fda:	699b      	ldr	r3, [r3, #24]
 8001fdc:	f003 0320 	and.w	r3, r3, #32
 8001fe0:	60bb      	str	r3, [r7, #8]
 8001fe2:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001fe4:	4b2d      	ldr	r3, [pc, #180]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fe6:	699b      	ldr	r3, [r3, #24]
 8001fe8:	4a2c      	ldr	r2, [pc, #176]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001fea:	f043 0304 	orr.w	r3, r3, #4
 8001fee:	6193      	str	r3, [r2, #24]
 8001ff0:	4b2a      	ldr	r3, [pc, #168]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001ff2:	699b      	ldr	r3, [r3, #24]
 8001ff4:	f003 0304 	and.w	r3, r3, #4
 8001ff8:	607b      	str	r3, [r7, #4]
 8001ffa:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001ffc:	4b27      	ldr	r3, [pc, #156]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8001ffe:	699b      	ldr	r3, [r3, #24]
 8002000:	4a26      	ldr	r2, [pc, #152]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 8002002:	f043 0308 	orr.w	r3, r3, #8
 8002006:	6193      	str	r3, [r2, #24]
 8002008:	4b24      	ldr	r3, [pc, #144]	; (800209c <_ZL12MX_GPIO_Initv+0xfc>)
 800200a:	699b      	ldr	r3, [r3, #24]
 800200c:	f003 0308 	and.w	r3, r3, #8
 8002010:	603b      	str	r3, [r7, #0]
 8002012:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(Led_GPIO_Port, Led_Pin, GPIO_PIN_RESET);
 8002014:	2200      	movs	r2, #0
 8002016:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800201a:	4821      	ldr	r0, [pc, #132]	; (80020a0 <_ZL12MX_GPIO_Initv+0x100>)
 800201c:	f001 f8da 	bl	80031d4 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, En_Pin | Dir_Pin | En2_Pin, GPIO_PIN_RESET);
 8002020:	2200      	movs	r2, #0
 8002022:	f44f 6106 	mov.w	r1, #2144	; 0x860
 8002026:	481f      	ldr	r0, [pc, #124]	; (80020a4 <_ZL12MX_GPIO_Initv+0x104>)
 8002028:	f001 f8d4 	bl	80031d4 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB, CS_Pin | CS2_Pin | Dir2_Pin, GPIO_PIN_RESET);
 800202c:	2200      	movs	r2, #0
 800202e:	f240 4103 	movw	r1, #1027	; 0x403
 8002032:	481d      	ldr	r0, [pc, #116]	; (80020a8 <_ZL12MX_GPIO_Initv+0x108>)
 8002034:	f001 f8ce 	bl	80031d4 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : Led_Pin */
	GPIO_InitStruct.Pin = Led_Pin;
 8002038:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800203c:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800203e:	2301      	movs	r3, #1
 8002040:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002042:	2300      	movs	r3, #0
 8002044:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002046:	2302      	movs	r3, #2
 8002048:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(Led_GPIO_Port, &GPIO_InitStruct);
 800204a:	f107 0310 	add.w	r3, r7, #16
 800204e:	4619      	mov	r1, r3
 8002050:	4813      	ldr	r0, [pc, #76]	; (80020a0 <_ZL12MX_GPIO_Initv+0x100>)
 8002052:	f000 ff3b 	bl	8002ecc <HAL_GPIO_Init>

	/*Configure GPIO pins : En_Pin Dir_Pin En2_Pin */
	GPIO_InitStruct.Pin = En_Pin | Dir_Pin | En2_Pin;
 8002056:	f44f 6306 	mov.w	r3, #2144	; 0x860
 800205a:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800205c:	2301      	movs	r3, #1
 800205e:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002060:	2300      	movs	r3, #0
 8002062:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002064:	2302      	movs	r3, #2
 8002066:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002068:	f107 0310 	add.w	r3, r7, #16
 800206c:	4619      	mov	r1, r3
 800206e:	480d      	ldr	r0, [pc, #52]	; (80020a4 <_ZL12MX_GPIO_Initv+0x104>)
 8002070:	f000 ff2c 	bl	8002ecc <HAL_GPIO_Init>

	/*Configure GPIO pins : CS_Pin CS2_Pin Dir2_Pin */
	GPIO_InitStruct.Pin = CS_Pin | CS2_Pin | Dir2_Pin;
 8002074:	f240 4303 	movw	r3, #1027	; 0x403
 8002078:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800207a:	2301      	movs	r3, #1
 800207c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800207e:	2300      	movs	r3, #0
 8002080:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002082:	2302      	movs	r3, #2
 8002084:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002086:	f107 0310 	add.w	r3, r7, #16
 800208a:	4619      	mov	r1, r3
 800208c:	4806      	ldr	r0, [pc, #24]	; (80020a8 <_ZL12MX_GPIO_Initv+0x108>)
 800208e:	f000 ff1d 	bl	8002ecc <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 8002092:	bf00      	nop
 8002094:	3720      	adds	r7, #32
 8002096:	46bd      	mov	sp, r7
 8002098:	bd80      	pop	{r7, pc}
 800209a:	bf00      	nop
 800209c:	40021000 	.word	0x40021000
 80020a0:	40011000 	.word	0x40011000
 80020a4:	40010800 	.word	0x40010800
 80020a8:	40010c00 	.word	0x40010c00

080020ac <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 80020ac:	b580      	push	{r7, lr}
 80020ae:	b082      	sub	sp, #8
 80020b0:	af00      	add	r7, sp, #0
 80020b2:	6078      	str	r0, [r7, #4]
	//UNUSED(huart);
	if (huart == &huart1) {
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	4a19      	ldr	r2, [pc, #100]	; (800211c <HAL_UART_RxCpltCallback+0x70>)
 80020b8:	4293      	cmp	r3, r2
 80020ba:	d125      	bne.n	8002108 <HAL_UART_RxCpltCallback+0x5c>
//		if(!strcmp(rx_buffer,"TEXT")) {
//		}

//		uint8_t data[] = { '\\', 0x8f, 0xf8, 'B', 'q', '}', 0x16, 'C', 1, 1, 0, 0 };
		memcpy ( un.bytes, rx_buffer, sizeof(rx_buffer) );
 80020bc:	4b18      	ldr	r3, [pc, #96]	; (8002120 <HAL_UART_RxCpltCallback+0x74>)
 80020be:	4a19      	ldr	r2, [pc, #100]	; (8002124 <HAL_UART_RxCpltCallback+0x78>)
 80020c0:	ca07      	ldmia	r2, {r0, r1, r2}
 80020c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
		switch (un.params.hold){
 80020c6:	4b16      	ldr	r3, [pc, #88]	; (8002120 <HAL_UART_RxCpltCallback+0x74>)
 80020c8:	689b      	ldr	r3, [r3, #8]
 80020ca:	2b01      	cmp	r3, #1
 80020cc:	dc02      	bgt.n	80020d4 <HAL_UART_RxCpltCallback+0x28>
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	da03      	bge.n	80020da <HAL_UART_RxCpltCallback+0x2e>
 80020d2:	e00a      	b.n	80020ea <HAL_UART_RxCpltCallback+0x3e>
 80020d4:	2b32      	cmp	r3, #50	; 0x32
 80020d6:	d004      	beq.n	80020e2 <HAL_UART_RxCpltCallback+0x36>
 80020d8:	e007      	b.n	80020ea <HAL_UART_RxCpltCallback+0x3e>
		case 0:
		case 1:
			startFirstMove = true;
 80020da:	4b13      	ldr	r3, [pc, #76]	; (8002128 <HAL_UART_RxCpltCallback+0x7c>)
 80020dc:	2201      	movs	r2, #1
 80020de:	701a      	strb	r2, [r3, #0]
			break;
 80020e0:	e003      	b.n	80020ea <HAL_UART_RxCpltCallback+0x3e>
		case 50:
			sendDataFlag = true;
 80020e2:	4b12      	ldr	r3, [pc, #72]	; (800212c <HAL_UART_RxCpltCallback+0x80>)
 80020e4:	2201      	movs	r2, #1
 80020e6:	701a      	strb	r2, [r3, #0]
			break;
 80020e8:	bf00      	nop
//			recAngleF = (float) recAngle / 100.0;
//
//			recDist = ((rx_buffer[6] - '0') * 100) + ((rx_buffer[7] - '0') * 10)
//					+ (rx_buffer[8] - '0');
//
		HAL_UART_Transmit_IT(&huart1, rx_buffer, 8);
 80020ea:	2208      	movs	r2, #8
 80020ec:	490d      	ldr	r1, [pc, #52]	; (8002124 <HAL_UART_RxCpltCallback+0x78>)
 80020ee:	480b      	ldr	r0, [pc, #44]	; (800211c <HAL_UART_RxCpltCallback+0x70>)
 80020f0:	f003 f89c 	bl	800522c <HAL_UART_Transmit_IT>
//					break;
//				}
//				break;
//			}
//		}
		memset(rx_buffer, 0, sizeof(rx_buffer));
 80020f4:	220c      	movs	r2, #12
 80020f6:	2100      	movs	r1, #0
 80020f8:	480a      	ldr	r0, [pc, #40]	; (8002124 <HAL_UART_RxCpltCallback+0x78>)
 80020fa:	f005 fdec 	bl	8007cd6 <memset>
		HAL_GPIO_TogglePin(Led_GPIO_Port, Led_Pin);
 80020fe:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002102:	480b      	ldr	r0, [pc, #44]	; (8002130 <HAL_UART_RxCpltCallback+0x84>)
 8002104:	f001 f87e 	bl	8003204 <HAL_GPIO_TogglePin>
	}
	HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 8002108:	220c      	movs	r2, #12
 800210a:	4906      	ldr	r1, [pc, #24]	; (8002124 <HAL_UART_RxCpltCallback+0x78>)
 800210c:	4803      	ldr	r0, [pc, #12]	; (800211c <HAL_UART_RxCpltCallback+0x70>)
 800210e:	f003 f8c2 	bl	8005296 <HAL_UART_Receive_IT>
}
 8002112:	bf00      	nop
 8002114:	3708      	adds	r7, #8
 8002116:	46bd      	mov	sp, r7
 8002118:	bd80      	pop	{r7, pc}
 800211a:	bf00      	nop
 800211c:	20000534 	.word	0x20000534
 8002120:	20000598 	.word	0x20000598
 8002124:	20000588 	.word	0x20000588
 8002128:	20000594 	.word	0x20000594
 800212c:	20000596 	.word	0x20000596
 8002130:	40011000 	.word	0x40011000

08002134 <_Z16StartDefaultTaskPKv>:
 * @brief  Function implementing the defaultTask thread.
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const *argument) {
 8002134:	b590      	push	{r4, r7, lr}
 8002136:	b083      	sub	sp, #12
 8002138:	af00      	add	r7, sp, #0
 800213a:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN 5 */
	arm.setPrintState(false);
 800213c:	2100      	movs	r1, #0
 800213e:	480e      	ldr	r0, [pc, #56]	; (8002178 <_Z16StartDefaultTaskPKv+0x44>)
 8002140:	f7ff fb9e 	bl	8001880 <_ZN7RoboArm13setPrintStateEb>
	/* Infinite loop */
	for (;;) {

		if (startFirstMove) {
 8002144:	4b0d      	ldr	r3, [pc, #52]	; (800217c <_Z16StartDefaultTaskPKv+0x48>)
 8002146:	781b      	ldrb	r3, [r3, #0]
 8002148:	2b00      	cmp	r3, #0
 800214a:	d010      	beq.n	800216e <_Z16StartDefaultTaskPKv+0x3a>
			startFirstMove = false;
 800214c:	4b0b      	ldr	r3, [pc, #44]	; (800217c <_Z16StartDefaultTaskPKv+0x48>)
 800214e:	2200      	movs	r2, #0
 8002150:	701a      	strb	r2, [r3, #0]
			arm.Move2MotorsSimu(un.params.ang, un.params.lin);
 8002152:	4b0b      	ldr	r3, [pc, #44]	; (8002180 <_Z16StartDefaultTaskPKv+0x4c>)
 8002154:	685c      	ldr	r4, [r3, #4]
 8002156:	4b0a      	ldr	r3, [pc, #40]	; (8002180 <_Z16StartDefaultTaskPKv+0x4c>)
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	4618      	mov	r0, r3
 800215c:	f7fe ffb8 	bl	80010d0 <__aeabi_f2uiz>
 8002160:	4603      	mov	r3, r0
 8002162:	b29b      	uxth	r3, r3
 8002164:	461a      	mov	r2, r3
 8002166:	4621      	mov	r1, r4
 8002168:	4803      	ldr	r0, [pc, #12]	; (8002178 <_Z16StartDefaultTaskPKv+0x44>)
 800216a:	f7ff f9dd 	bl	8001528 <_ZN7RoboArm15Move2MotorsSimuEft>
//			correctPosFlag=true;
//			arm.correctPosition();
//
//		}

		osDelay(1);
 800216e:	2001      	movs	r0, #1
 8002170:	f003 fea0 	bl	8005eb4 <osDelay>
		if (startFirstMove) {
 8002174:	e7e6      	b.n	8002144 <_Z16StartDefaultTaskPKv+0x10>
 8002176:	bf00      	nop
 8002178:	200005b8 	.word	0x200005b8
 800217c:	20000594 	.word	0x20000594
 8002180:	20000598 	.word	0x20000598

08002184 <_Z14StartAMT22DataPKv>:
 * @brief Function implementing the myAMT22Task thread.
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartAMT22Data */
void StartAMT22Data(void const *argument) {
 8002184:	b580      	push	{r7, lr}
 8002186:	b082      	sub	sp, #8
 8002188:	af00      	add	r7, sp, #0
 800218a:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN StartAMT22Data */

	/* Infinite loop */
	for (;;) {

		osDelay(50);
 800218c:	2032      	movs	r0, #50	; 0x32
 800218e:	f003 fe91 	bl	8005eb4 <osDelay>
 8002192:	e7fb      	b.n	800218c <_Z14StartAMT22DataPKv+0x8>
 8002194:	0000      	movs	r0, r0
	...

08002198 <_Z13StartUARTDataPKv>:
 * @brief Function implementing the myUARTTask thread.
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartUARTData */
void StartUARTData(void const *argument) {
 8002198:	b580      	push	{r7, lr}
 800219a:	b0a2      	sub	sp, #136	; 0x88
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN StartUARTData */
	HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 80021a0:	220c      	movs	r2, #12
 80021a2:	4941      	ldr	r1, [pc, #260]	; (80022a8 <_Z13StartUARTDataPKv+0x110>)
 80021a4:	4841      	ldr	r0, [pc, #260]	; (80022ac <_Z13StartUARTDataPKv+0x114>)
 80021a6:	f003 f876 	bl	8005296 <HAL_UART_Receive_IT>
	uint32_t posnowT;
	float angleT = 0;
 80021aa:	f04f 0300 	mov.w	r3, #0
 80021ae:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
	uint32_t linearDist = 0;
 80021b2:	2300      	movs	r3, #0
 80021b4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	flagReadEnc = 1;
 80021b8:	4b3d      	ldr	r3, [pc, #244]	; (80022b0 <_Z13StartUARTDataPKv+0x118>)
 80021ba:	2201      	movs	r2, #1
 80021bc:	701a      	strb	r2, [r3, #0]
	uint32_t distPmm = 0;
 80021be:	2300      	movs	r3, #0
 80021c0:	67fb      	str	r3, [r7, #124]	; 0x7c
	arm.setPrintState(true);
 80021c2:	2101      	movs	r1, #1
 80021c4:	483b      	ldr	r0, [pc, #236]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 80021c6:	f7ff fb5b 	bl	8001880 <_ZN7RoboArm13setPrintStateEb>

	/* Infinite loop */
	for (;;) {

		if (arm.getPrintState() && sendDataFlag) {
 80021ca:	483a      	ldr	r0, [pc, #232]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 80021cc:	f7ff fb70 	bl	80018b0 <_ZN7RoboArm13getPrintStateEv>
 80021d0:	4603      	mov	r3, r0
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d005      	beq.n	80021e2 <_Z13StartUARTDataPKv+0x4a>
 80021d6:	4b38      	ldr	r3, [pc, #224]	; (80022b8 <_Z13StartUARTDataPKv+0x120>)
 80021d8:	781b      	ldrb	r3, [r3, #0]
 80021da:	2b00      	cmp	r3, #0
 80021dc:	d001      	beq.n	80021e2 <_Z13StartUARTDataPKv+0x4a>
 80021de:	2301      	movs	r3, #1
 80021e0:	e000      	b.n	80021e4 <_Z13StartUARTDataPKv+0x4c>
 80021e2:	2300      	movs	r3, #0
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d055      	beq.n	8002294 <_Z13StartUARTDataPKv+0xfc>

			sendDataFlag = false;
 80021e8:	4b33      	ldr	r3, [pc, #204]	; (80022b8 <_Z13StartUARTDataPKv+0x120>)
 80021ea:	2200      	movs	r2, #0
 80021ec:	701a      	strb	r2, [r3, #0]
			char str[100];
			posnowT = arm.GetPosEncoders(1);
 80021ee:	2101      	movs	r1, #1
 80021f0:	4830      	ldr	r0, [pc, #192]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 80021f2:	f7ff fba3 	bl	800193c <_ZN7RoboArm14GetPosEncodersEh>
 80021f6:	67b8      	str	r0, [r7, #120]	; 0x78
			angleT = arm.GetAngleEncoders(posnowT) * 100;
 80021f8:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 80021fa:	482e      	ldr	r0, [pc, #184]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 80021fc:	f7ff fb8b 	bl	8001916 <_ZN7RoboArm16GetAngleEncodersEm>
 8002200:	4603      	mov	r3, r0
 8002202:	492e      	ldr	r1, [pc, #184]	; (80022bc <_Z13StartUARTDataPKv+0x124>)
 8002204:	4618      	mov	r0, r3
 8002206:	f7fe fd9d 	bl	8000d44 <__aeabi_fmul>
 800220a:	4603      	mov	r3, r0
 800220c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
			//un_send.params.ang = angleT;

			posnowT = arm.GetPosEncoders(2);
 8002210:	2102      	movs	r1, #2
 8002212:	4828      	ldr	r0, [pc, #160]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 8002214:	f7ff fb92 	bl	800193c <_ZN7RoboArm14GetPosEncodersEh>
 8002218:	67b8      	str	r0, [r7, #120]	; 0x78
			angleT = arm.GetAngleEncoders(posnowT) * 100;
 800221a:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 800221c:	4825      	ldr	r0, [pc, #148]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 800221e:	f7ff fb7a 	bl	8001916 <_ZN7RoboArm16GetAngleEncodersEm>
 8002222:	4603      	mov	r3, r0
 8002224:	4925      	ldr	r1, [pc, #148]	; (80022bc <_Z13StartUARTDataPKv+0x124>)
 8002226:	4618      	mov	r0, r3
 8002228:	f7fe fd8c 	bl	8000d44 <__aeabi_fmul>
 800222c:	4603      	mov	r3, r0
 800222e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84

			float distPsteps = angleT * (motorStep * drvMicroSteps)
 8002232:	4923      	ldr	r1, [pc, #140]	; (80022c0 <_Z13StartUARTDataPKv+0x128>)
 8002234:	f8d7 0084 	ldr.w	r0, [r7, #132]	; 0x84
 8002238:	f7fe fd84 	bl	8000d44 <__aeabi_fmul>
 800223c:	4603      	mov	r3, r0
 800223e:	4618      	mov	r0, r3
 8002240:	f7fe f8f2 	bl	8000428 <__aeabi_f2d>
					* (6.45 / 360);
 8002244:	a316      	add	r3, pc, #88	; (adr r3, 80022a0 <_Z13StartUARTDataPKv+0x108>)
 8002246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800224a:	f7fe f945 	bl	80004d8 <__aeabi_dmul>
 800224e:	4602      	mov	r2, r0
 8002250:	460b      	mov	r3, r1
			float distPsteps = angleT * (motorStep * drvMicroSteps)
 8002252:	4610      	mov	r0, r2
 8002254:	4619      	mov	r1, r3
 8002256:	f7fe fc17 	bl	8000a88 <__aeabi_d2f>
 800225a:	4603      	mov	r3, r0
 800225c:	677b      	str	r3, [r7, #116]	; 0x74
			uint32_t mils = distPsteps / arm.linearStepsMil;
 800225e:	4b15      	ldr	r3, [pc, #84]	; (80022b4 <_Z13StartUARTDataPKv+0x11c>)
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	4619      	mov	r1, r3
 8002264:	6f78      	ldr	r0, [r7, #116]	; 0x74
 8002266:	f7fe fe21 	bl	8000eac <__aeabi_fdiv>
 800226a:	4603      	mov	r3, r0
 800226c:	4618      	mov	r0, r3
 800226e:	f7fe ff2f 	bl	80010d0 <__aeabi_f2uiz>
 8002272:	4603      	mov	r3, r0
 8002274:	673b      	str	r3, [r7, #112]	; 0x70

			//un_send.params.lin = mils;
			//un_send.params.hold = 0;
			un_send.params.lin = 120.5;
 8002276:	4b13      	ldr	r3, [pc, #76]	; (80022c4 <_Z13StartUARTDataPKv+0x12c>)
 8002278:	4a13      	ldr	r2, [pc, #76]	; (80022c8 <_Z13StartUARTDataPKv+0x130>)
 800227a:	601a      	str	r2, [r3, #0]
			un_send.params.ang = 360.0;
 800227c:	4b11      	ldr	r3, [pc, #68]	; (80022c4 <_Z13StartUARTDataPKv+0x12c>)
 800227e:	4a13      	ldr	r2, [pc, #76]	; (80022cc <_Z13StartUARTDataPKv+0x134>)
 8002280:	605a      	str	r2, [r3, #4]
			un_send.params.hold = 0;
 8002282:	4b10      	ldr	r3, [pc, #64]	; (80022c4 <_Z13StartUARTDataPKv+0x12c>)
 8002284:	2200      	movs	r2, #0
 8002286:	609a      	str	r2, [r3, #8]

//			sprintf(str, "%.2f:", send_params.ang);//, send_params.lin, 100);
			HAL_UART_Transmit(&huart1, un_send.bytes, sizeof(un_send.bytes), 12);
 8002288:	230c      	movs	r3, #12
 800228a:	220c      	movs	r2, #12
 800228c:	490d      	ldr	r1, [pc, #52]	; (80022c4 <_Z13StartUARTDataPKv+0x12c>)
 800228e:	4807      	ldr	r0, [pc, #28]	; (80022ac <_Z13StartUARTDataPKv+0x114>)
 8002290:	f002 ff49 	bl	8005126 <HAL_UART_Transmit>
//					(uint16_t) angleT, mils);
//
//			HAL_UART_Transmit(&huart1, (uint8_t*) str, strlen(str),
//					HAL_MAX_DELAY);
		}
		osDelay(500);
 8002294:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002298:	f003 fe0c 	bl	8005eb4 <osDelay>
	}
 800229c:	e795      	b.n	80021ca <_Z13StartUARTDataPKv+0x32>
 800229e:	bf00      	nop
 80022a0:	258bf259 	.word	0x258bf259
 80022a4:	3f9258bf 	.word	0x3f9258bf
 80022a8:	20000588 	.word	0x20000588
 80022ac:	20000534 	.word	0x20000534
 80022b0:	20000597 	.word	0x20000597
 80022b4:	200005b8 	.word	0x200005b8
 80022b8:	20000596 	.word	0x20000596
 80022bc:	42c80000 	.word	0x42c80000
 80022c0:	44c80000 	.word	0x44c80000
 80022c4:	200005a4 	.word	0x200005a4
 80022c8:	42f10000 	.word	0x42f10000
 80022cc:	43b40000 	.word	0x43b40000

080022d0 <HAL_TIM_PeriodElapsedCallback>:
 * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 * a global variable "uwTick" used as application time base.
 * @param  htim : TIM handle
 * @retval None
 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80022d0:	b580      	push	{r7, lr}
 80022d2:	b082      	sub	sp, #8
 80022d4:	af00      	add	r7, sp, #0
 80022d6:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN Callback 0 */

	if (htim->Instance == TIM1)/*Проверяем от какого таймера пришёл CallBack тут надо проверить точность*/
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	4a42      	ldr	r2, [pc, #264]	; (80023e8 <HAL_TIM_PeriodElapsedCallback+0x118>)
 80022de:	4293      	cmp	r3, r2
 80022e0:	d135      	bne.n	800234e <HAL_TIM_PeriodElapsedCallback+0x7e>
	{
		cntImpulse1++;
 80022e2:	4b42      	ldr	r3, [pc, #264]	; (80023ec <HAL_TIM_PeriodElapsedCallback+0x11c>)
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	3301      	adds	r3, #1
 80022e8:	4a40      	ldr	r2, [pc, #256]	; (80023ec <HAL_TIM_PeriodElapsedCallback+0x11c>)
 80022ea:	6013      	str	r3, [r2, #0]
		if (cntImpulse1 >= arm.anglePsteps) {
 80022ec:	4b3f      	ldr	r3, [pc, #252]	; (80023ec <HAL_TIM_PeriodElapsedCallback+0x11c>)
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	4618      	mov	r0, r3
 80022f2:	f7fe fccf 	bl	8000c94 <__aeabi_ui2f>
 80022f6:	4602      	mov	r2, r0
 80022f8:	4b3d      	ldr	r3, [pc, #244]	; (80023f0 <HAL_TIM_PeriodElapsedCallback+0x120>)
 80022fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022fc:	4619      	mov	r1, r3
 80022fe:	4610      	mov	r0, r2
 8002300:	f7fe fed2 	bl	80010a8 <__aeabi_fcmpge>
 8002304:	4603      	mov	r3, r0
 8002306:	2b00      	cmp	r3, #0
 8002308:	d063      	beq.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>

			HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 800230a:	2108      	movs	r1, #8
 800230c:	4839      	ldr	r0, [pc, #228]	; (80023f4 <HAL_TIM_PeriodElapsedCallback+0x124>)
 800230e:	f002 f999 	bl	8004644 <HAL_TIM_PWM_Stop>
			HAL_TIM_Base_Stop_IT(&htim1);
 8002312:	4838      	ldr	r0, [pc, #224]	; (80023f4 <HAL_TIM_PeriodElapsedCallback+0x124>)
 8002314:	f002 f876 	bl	8004404 <HAL_TIM_Base_Stop_IT>
			arm.SetEnable(1, false);
 8002318:	2200      	movs	r2, #0
 800231a:	2101      	movs	r1, #1
 800231c:	4834      	ldr	r0, [pc, #208]	; (80023f0 <HAL_TIM_PeriodElapsedCallback+0x120>)
 800231e:	f7ff fbb1 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>
			cntImpulse1 = 0;
 8002322:	4b32      	ldr	r3, [pc, #200]	; (80023ec <HAL_TIM_PeriodElapsedCallback+0x11c>)
 8002324:	2200      	movs	r2, #0
 8002326:	601a      	str	r2, [r3, #0]
			arm.stateMoveM1 = false;
 8002328:	4b31      	ldr	r3, [pc, #196]	; (80023f0 <HAL_TIM_PeriodElapsedCallback+0x120>)
 800232a:	2200      	movs	r2, #0
 800232c:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
			if (correctPosFlag) {
 8002330:	4b31      	ldr	r3, [pc, #196]	; (80023f8 <HAL_TIM_PeriodElapsedCallback+0x128>)
 8002332:	781b      	ldrb	r3, [r3, #0]
 8002334:	2b00      	cmp	r3, #0
 8002336:	d006      	beq.n	8002346 <HAL_TIM_PeriodElapsedCallback+0x76>
				timerFT1 = true;
 8002338:	4b30      	ldr	r3, [pc, #192]	; (80023fc <HAL_TIM_PeriodElapsedCallback+0x12c>)
 800233a:	2201      	movs	r2, #1
 800233c:	701a      	strb	r2, [r3, #0]
				correctPosFlag = false;
 800233e:	4b2e      	ldr	r3, [pc, #184]	; (80023f8 <HAL_TIM_PeriodElapsedCallback+0x128>)
 8002340:	2200      	movs	r2, #0
 8002342:	701a      	strb	r2, [r3, #0]
 8002344:	e045      	b.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>
			} else {
				timerFT1 = false;
 8002346:	4b2d      	ldr	r3, [pc, #180]	; (80023fc <HAL_TIM_PeriodElapsedCallback+0x12c>)
 8002348:	2200      	movs	r2, #0
 800234a:	701a      	strb	r2, [r3, #0]
 800234c:	e041      	b.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>
			}

		}

	} else if (htim->Instance == TIM2) {
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002356:	d135      	bne.n	80023c4 <HAL_TIM_PeriodElapsedCallback+0xf4>

		cntImpulse2++;
 8002358:	4b29      	ldr	r3, [pc, #164]	; (8002400 <HAL_TIM_PeriodElapsedCallback+0x130>)
 800235a:	681b      	ldr	r3, [r3, #0]
 800235c:	3301      	adds	r3, #1
 800235e:	4a28      	ldr	r2, [pc, #160]	; (8002400 <HAL_TIM_PeriodElapsedCallback+0x130>)
 8002360:	6013      	str	r3, [r2, #0]
		if (cntImpulse2 >= arm.distPsteps) {
 8002362:	4b27      	ldr	r3, [pc, #156]	; (8002400 <HAL_TIM_PeriodElapsedCallback+0x130>)
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	4618      	mov	r0, r3
 8002368:	f7fe fc94 	bl	8000c94 <__aeabi_ui2f>
 800236c:	4602      	mov	r2, r0
 800236e:	4b20      	ldr	r3, [pc, #128]	; (80023f0 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8002370:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002372:	4619      	mov	r1, r3
 8002374:	4610      	mov	r0, r2
 8002376:	f7fe fe97 	bl	80010a8 <__aeabi_fcmpge>
 800237a:	4603      	mov	r3, r0
 800237c:	2b00      	cmp	r3, #0
 800237e:	d028      	beq.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>
			HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_3);
 8002380:	2108      	movs	r1, #8
 8002382:	4820      	ldr	r0, [pc, #128]	; (8002404 <HAL_TIM_PeriodElapsedCallback+0x134>)
 8002384:	f002 f95e 	bl	8004644 <HAL_TIM_PWM_Stop>
			HAL_TIM_Base_Stop_IT(&htim2);
 8002388:	481e      	ldr	r0, [pc, #120]	; (8002404 <HAL_TIM_PeriodElapsedCallback+0x134>)
 800238a:	f002 f83b 	bl	8004404 <HAL_TIM_Base_Stop_IT>
			arm.SetEnable(2, false);
 800238e:	2200      	movs	r2, #0
 8002390:	2102      	movs	r1, #2
 8002392:	4817      	ldr	r0, [pc, #92]	; (80023f0 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8002394:	f7ff fb76 	bl	8001a84 <_ZN7RoboArm9SetEnableEtb>
			cntImpulse2 = 0;
 8002398:	4b19      	ldr	r3, [pc, #100]	; (8002400 <HAL_TIM_PeriodElapsedCallback+0x130>)
 800239a:	2200      	movs	r2, #0
 800239c:	601a      	str	r2, [r3, #0]
			arm.stateMoveM1 = false;
 800239e:	4b14      	ldr	r3, [pc, #80]	; (80023f0 <HAL_TIM_PeriodElapsedCallback+0x120>)
 80023a0:	2200      	movs	r2, #0
 80023a2:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
			if (correctPosFlag) {
 80023a6:	4b14      	ldr	r3, [pc, #80]	; (80023f8 <HAL_TIM_PeriodElapsedCallback+0x128>)
 80023a8:	781b      	ldrb	r3, [r3, #0]
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d006      	beq.n	80023bc <HAL_TIM_PeriodElapsedCallback+0xec>
				timerFT2 = true;
 80023ae:	4b16      	ldr	r3, [pc, #88]	; (8002408 <HAL_TIM_PeriodElapsedCallback+0x138>)
 80023b0:	2201      	movs	r2, #1
 80023b2:	701a      	strb	r2, [r3, #0]
				correctPosFlag = false;
 80023b4:	4b10      	ldr	r3, [pc, #64]	; (80023f8 <HAL_TIM_PeriodElapsedCallback+0x128>)
 80023b6:	2200      	movs	r2, #0
 80023b8:	701a      	strb	r2, [r3, #0]
 80023ba:	e00a      	b.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>
			} else {
				timerFT2 = false;
 80023bc:	4b12      	ldr	r3, [pc, #72]	; (8002408 <HAL_TIM_PeriodElapsedCallback+0x138>)
 80023be:	2200      	movs	r2, #0
 80023c0:	701a      	strb	r2, [r3, #0]
 80023c2:	e006      	b.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>
			}

		}
	} else if (htim->Instance == TIM4) {
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	681b      	ldr	r3, [r3, #0]
 80023c8:	4a10      	ldr	r2, [pc, #64]	; (800240c <HAL_TIM_PeriodElapsedCallback+0x13c>)
 80023ca:	4293      	cmp	r3, r2
 80023cc:	d101      	bne.n	80023d2 <HAL_TIM_PeriodElapsedCallback+0x102>
		HAL_IncTick();
 80023ce:	f000 fbab 	bl	8002b28 <HAL_IncTick>
	}

	/* USER CODE END Callback 0 */
	if (htim->Instance == TIM4) {
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	4a0d      	ldr	r2, [pc, #52]	; (800240c <HAL_TIM_PeriodElapsedCallback+0x13c>)
 80023d8:	4293      	cmp	r3, r2
 80023da:	d101      	bne.n	80023e0 <HAL_TIM_PeriodElapsedCallback+0x110>
		HAL_IncTick();
 80023dc:	f000 fba4 	bl	8002b28 <HAL_IncTick>
	}
	/* USER CODE BEGIN Callback 1 */

	/* USER CODE END Callback 1 */
}
 80023e0:	bf00      	nop
 80023e2:	3708      	adds	r7, #8
 80023e4:	46bd      	mov	sp, r7
 80023e6:	bd80      	pop	{r7, pc}
 80023e8:	40012c00 	.word	0x40012c00
 80023ec:	200005b0 	.word	0x200005b0
 80023f0:	200005b8 	.word	0x200005b8
 80023f4:	200004a4 	.word	0x200004a4
 80023f8:	20000595 	.word	0x20000595
 80023fc:	20000000 	.word	0x20000000
 8002400:	200005b4 	.word	0x200005b4
 8002404:	200004ec 	.word	0x200004ec
 8002408:	20000001 	.word	0x20000001
 800240c:	40000800 	.word	0x40000800

08002410 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8002410:	b480      	push	{r7}
 8002412:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002414:	b672      	cpsid	i
}
 8002416:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002418:	e7fe      	b.n	8002418 <Error_Handler+0x8>
	...

0800241c <_Z41__static_initialization_and_destruction_0ii>:
	}
	/* USER CODE END Error_Handler_Debug */
}
 800241c:	b580      	push	{r7, lr}
 800241e:	b082      	sub	sp, #8
 8002420:	af00      	add	r7, sp, #0
 8002422:	6078      	str	r0, [r7, #4]
 8002424:	6039      	str	r1, [r7, #0]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	2b01      	cmp	r3, #1
 800242a:	d109      	bne.n	8002440 <_Z41__static_initialization_and_destruction_0ii+0x24>
 800242c:	683b      	ldr	r3, [r7, #0]
 800242e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002432:	4293      	cmp	r3, r2
 8002434:	d104      	bne.n	8002440 <_Z41__static_initialization_and_destruction_0ii+0x24>
RoboArm arm(120, 124);
 8002436:	227c      	movs	r2, #124	; 0x7c
 8002438:	2178      	movs	r1, #120	; 0x78
 800243a:	4803      	ldr	r0, [pc, #12]	; (8002448 <_Z41__static_initialization_and_destruction_0ii+0x2c>)
 800243c:	f7ff f832 	bl	80014a4 <_ZN7RoboArmC1Ehh>
}
 8002440:	bf00      	nop
 8002442:	3708      	adds	r7, #8
 8002444:	46bd      	mov	sp, r7
 8002446:	bd80      	pop	{r7, pc}
 8002448:	200005b8 	.word	0x200005b8

0800244c <_GLOBAL__sub_I_hspi1>:
 800244c:	b580      	push	{r7, lr}
 800244e:	af00      	add	r7, sp, #0
 8002450:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002454:	2001      	movs	r0, #1
 8002456:	f7ff ffe1 	bl	800241c <_Z41__static_initialization_and_destruction_0ii>
 800245a:	bd80      	pop	{r7, pc}

0800245c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800245c:	b580      	push	{r7, lr}
 800245e:	b084      	sub	sp, #16
 8002460:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8002462:	4b1c      	ldr	r3, [pc, #112]	; (80024d4 <HAL_MspInit+0x78>)
 8002464:	699b      	ldr	r3, [r3, #24]
 8002466:	4a1b      	ldr	r2, [pc, #108]	; (80024d4 <HAL_MspInit+0x78>)
 8002468:	f043 0301 	orr.w	r3, r3, #1
 800246c:	6193      	str	r3, [r2, #24]
 800246e:	4b19      	ldr	r3, [pc, #100]	; (80024d4 <HAL_MspInit+0x78>)
 8002470:	699b      	ldr	r3, [r3, #24]
 8002472:	f003 0301 	and.w	r3, r3, #1
 8002476:	60bb      	str	r3, [r7, #8]
 8002478:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800247a:	4b16      	ldr	r3, [pc, #88]	; (80024d4 <HAL_MspInit+0x78>)
 800247c:	69db      	ldr	r3, [r3, #28]
 800247e:	4a15      	ldr	r2, [pc, #84]	; (80024d4 <HAL_MspInit+0x78>)
 8002480:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002484:	61d3      	str	r3, [r2, #28]
 8002486:	4b13      	ldr	r3, [pc, #76]	; (80024d4 <HAL_MspInit+0x78>)
 8002488:	69db      	ldr	r3, [r3, #28]
 800248a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800248e:	607b      	str	r3, [r7, #4]
 8002490:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002492:	2200      	movs	r2, #0
 8002494:	210f      	movs	r1, #15
 8002496:	f06f 0001 	mvn.w	r0, #1
 800249a:	f000 fc3a 	bl	8002d12 <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 5, 0);
 800249e:	2200      	movs	r2, #0
 80024a0:	2105      	movs	r1, #5
 80024a2:	2005      	movs	r0, #5
 80024a4:	f000 fc35 	bl	8002d12 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 80024a8:	2005      	movs	r0, #5
 80024aa:	f000 fc4e 	bl	8002d4a <HAL_NVIC_EnableIRQ>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80024ae:	4b0a      	ldr	r3, [pc, #40]	; (80024d8 <HAL_MspInit+0x7c>)
 80024b0:	685b      	ldr	r3, [r3, #4]
 80024b2:	60fb      	str	r3, [r7, #12]
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80024ba:	60fb      	str	r3, [r7, #12]
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80024c2:	60fb      	str	r3, [r7, #12]
 80024c4:	4a04      	ldr	r2, [pc, #16]	; (80024d8 <HAL_MspInit+0x7c>)
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80024ca:	bf00      	nop
 80024cc:	3710      	adds	r7, #16
 80024ce:	46bd      	mov	sp, r7
 80024d0:	bd80      	pop	{r7, pc}
 80024d2:	bf00      	nop
 80024d4:	40021000 	.word	0x40021000
 80024d8:	40010000 	.word	0x40010000

080024dc <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024dc:	b580      	push	{r7, lr}
 80024de:	b08a      	sub	sp, #40	; 0x28
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024e4:	f107 0314 	add.w	r3, r7, #20
 80024e8:	2200      	movs	r2, #0
 80024ea:	601a      	str	r2, [r3, #0]
 80024ec:	605a      	str	r2, [r3, #4]
 80024ee:	609a      	str	r2, [r3, #8]
 80024f0:	60da      	str	r2, [r3, #12]
  if(hspi->Instance==SPI1)
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	4a26      	ldr	r2, [pc, #152]	; (8002590 <HAL_SPI_MspInit+0xb4>)
 80024f8:	4293      	cmp	r3, r2
 80024fa:	d145      	bne.n	8002588 <HAL_SPI_MspInit+0xac>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80024fc:	4b25      	ldr	r3, [pc, #148]	; (8002594 <HAL_SPI_MspInit+0xb8>)
 80024fe:	699b      	ldr	r3, [r3, #24]
 8002500:	4a24      	ldr	r2, [pc, #144]	; (8002594 <HAL_SPI_MspInit+0xb8>)
 8002502:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002506:	6193      	str	r3, [r2, #24]
 8002508:	4b22      	ldr	r3, [pc, #136]	; (8002594 <HAL_SPI_MspInit+0xb8>)
 800250a:	699b      	ldr	r3, [r3, #24]
 800250c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002510:	613b      	str	r3, [r7, #16]
 8002512:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002514:	4b1f      	ldr	r3, [pc, #124]	; (8002594 <HAL_SPI_MspInit+0xb8>)
 8002516:	699b      	ldr	r3, [r3, #24]
 8002518:	4a1e      	ldr	r2, [pc, #120]	; (8002594 <HAL_SPI_MspInit+0xb8>)
 800251a:	f043 0308 	orr.w	r3, r3, #8
 800251e:	6193      	str	r3, [r2, #24]
 8002520:	4b1c      	ldr	r3, [pc, #112]	; (8002594 <HAL_SPI_MspInit+0xb8>)
 8002522:	699b      	ldr	r3, [r3, #24]
 8002524:	f003 0308 	and.w	r3, r3, #8
 8002528:	60fb      	str	r3, [r7, #12]
 800252a:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PB3     ------> SPI1_SCK
    PB4     ------> SPI1_MISO
    PB5     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_5;
 800252c:	2328      	movs	r3, #40	; 0x28
 800252e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002530:	2302      	movs	r3, #2
 8002532:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002534:	2303      	movs	r3, #3
 8002536:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002538:	f107 0314 	add.w	r3, r7, #20
 800253c:	4619      	mov	r1, r3
 800253e:	4816      	ldr	r0, [pc, #88]	; (8002598 <HAL_SPI_MspInit+0xbc>)
 8002540:	f000 fcc4 	bl	8002ecc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8002544:	2310      	movs	r3, #16
 8002546:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002548:	2300      	movs	r3, #0
 800254a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800254c:	2300      	movs	r3, #0
 800254e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002550:	f107 0314 	add.w	r3, r7, #20
 8002554:	4619      	mov	r1, r3
 8002556:	4810      	ldr	r0, [pc, #64]	; (8002598 <HAL_SPI_MspInit+0xbc>)
 8002558:	f000 fcb8 	bl	8002ecc <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_SPI1_ENABLE();
 800255c:	4b0f      	ldr	r3, [pc, #60]	; (800259c <HAL_SPI_MspInit+0xc0>)
 800255e:	685b      	ldr	r3, [r3, #4]
 8002560:	627b      	str	r3, [r7, #36]	; 0x24
 8002562:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002564:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8002568:	627b      	str	r3, [r7, #36]	; 0x24
 800256a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800256c:	f043 0301 	orr.w	r3, r3, #1
 8002570:	627b      	str	r3, [r7, #36]	; 0x24
 8002572:	4a0a      	ldr	r2, [pc, #40]	; (800259c <HAL_SPI_MspInit+0xc0>)
 8002574:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002576:	6053      	str	r3, [r2, #4]

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 5, 0);
 8002578:	2200      	movs	r2, #0
 800257a:	2105      	movs	r1, #5
 800257c:	2023      	movs	r0, #35	; 0x23
 800257e:	f000 fbc8 	bl	8002d12 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002582:	2023      	movs	r0, #35	; 0x23
 8002584:	f000 fbe1 	bl	8002d4a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8002588:	bf00      	nop
 800258a:	3728      	adds	r7, #40	; 0x28
 800258c:	46bd      	mov	sp, r7
 800258e:	bd80      	pop	{r7, pc}
 8002590:	40013000 	.word	0x40013000
 8002594:	40021000 	.word	0x40021000
 8002598:	40010c00 	.word	0x40010c00
 800259c:	40010000 	.word	0x40010000

080025a0 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80025a0:	b580      	push	{r7, lr}
 80025a2:	b084      	sub	sp, #16
 80025a4:	af00      	add	r7, sp, #0
 80025a6:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	681b      	ldr	r3, [r3, #0]
 80025ac:	4a1a      	ldr	r2, [pc, #104]	; (8002618 <HAL_TIM_PWM_MspInit+0x78>)
 80025ae:	4293      	cmp	r3, r2
 80025b0:	d114      	bne.n	80025dc <HAL_TIM_PWM_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80025b2:	4b1a      	ldr	r3, [pc, #104]	; (800261c <HAL_TIM_PWM_MspInit+0x7c>)
 80025b4:	699b      	ldr	r3, [r3, #24]
 80025b6:	4a19      	ldr	r2, [pc, #100]	; (800261c <HAL_TIM_PWM_MspInit+0x7c>)
 80025b8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80025bc:	6193      	str	r3, [r2, #24]
 80025be:	4b17      	ldr	r3, [pc, #92]	; (800261c <HAL_TIM_PWM_MspInit+0x7c>)
 80025c0:	699b      	ldr	r3, [r3, #24]
 80025c2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80025c6:	60fb      	str	r3, [r7, #12]
 80025c8:	68fb      	ldr	r3, [r7, #12]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_IRQn, 5, 0);
 80025ca:	2200      	movs	r2, #0
 80025cc:	2105      	movs	r1, #5
 80025ce:	2019      	movs	r0, #25
 80025d0:	f000 fb9f 	bl	8002d12 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 80025d4:	2019      	movs	r0, #25
 80025d6:	f000 fbb8 	bl	8002d4a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80025da:	e018      	b.n	800260e <HAL_TIM_PWM_MspInit+0x6e>
  else if(htim_pwm->Instance==TIM2)
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80025e4:	d113      	bne.n	800260e <HAL_TIM_PWM_MspInit+0x6e>
    __HAL_RCC_TIM2_CLK_ENABLE();
 80025e6:	4b0d      	ldr	r3, [pc, #52]	; (800261c <HAL_TIM_PWM_MspInit+0x7c>)
 80025e8:	69db      	ldr	r3, [r3, #28]
 80025ea:	4a0c      	ldr	r2, [pc, #48]	; (800261c <HAL_TIM_PWM_MspInit+0x7c>)
 80025ec:	f043 0301 	orr.w	r3, r3, #1
 80025f0:	61d3      	str	r3, [r2, #28]
 80025f2:	4b0a      	ldr	r3, [pc, #40]	; (800261c <HAL_TIM_PWM_MspInit+0x7c>)
 80025f4:	69db      	ldr	r3, [r3, #28]
 80025f6:	f003 0301 	and.w	r3, r3, #1
 80025fa:	60bb      	str	r3, [r7, #8]
 80025fc:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80025fe:	2200      	movs	r2, #0
 8002600:	2105      	movs	r1, #5
 8002602:	201c      	movs	r0, #28
 8002604:	f000 fb85 	bl	8002d12 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002608:	201c      	movs	r0, #28
 800260a:	f000 fb9e 	bl	8002d4a <HAL_NVIC_EnableIRQ>
}
 800260e:	bf00      	nop
 8002610:	3710      	adds	r7, #16
 8002612:	46bd      	mov	sp, r7
 8002614:	bd80      	pop	{r7, pc}
 8002616:	bf00      	nop
 8002618:	40012c00 	.word	0x40012c00
 800261c:	40021000 	.word	0x40021000

08002620 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002620:	b580      	push	{r7, lr}
 8002622:	b088      	sub	sp, #32
 8002624:	af00      	add	r7, sp, #0
 8002626:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002628:	f107 0310 	add.w	r3, r7, #16
 800262c:	2200      	movs	r2, #0
 800262e:	601a      	str	r2, [r3, #0]
 8002630:	605a      	str	r2, [r3, #4]
 8002632:	609a      	str	r2, [r3, #8]
 8002634:	60da      	str	r2, [r3, #12]
  if(htim->Instance==TIM1)
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	4a1f      	ldr	r2, [pc, #124]	; (80026b8 <HAL_TIM_MspPostInit+0x98>)
 800263c:	4293      	cmp	r3, r2
 800263e:	d119      	bne.n	8002674 <HAL_TIM_MspPostInit+0x54>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002640:	4b1e      	ldr	r3, [pc, #120]	; (80026bc <HAL_TIM_MspPostInit+0x9c>)
 8002642:	699b      	ldr	r3, [r3, #24]
 8002644:	4a1d      	ldr	r2, [pc, #116]	; (80026bc <HAL_TIM_MspPostInit+0x9c>)
 8002646:	f043 0304 	orr.w	r3, r3, #4
 800264a:	6193      	str	r3, [r2, #24]
 800264c:	4b1b      	ldr	r3, [pc, #108]	; (80026bc <HAL_TIM_MspPostInit+0x9c>)
 800264e:	699b      	ldr	r3, [r3, #24]
 8002650:	f003 0304 	and.w	r3, r3, #4
 8002654:	60fb      	str	r3, [r7, #12]
 8002656:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA10     ------> TIM1_CH3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002658:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800265c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800265e:	2302      	movs	r3, #2
 8002660:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002662:	2303      	movs	r3, #3
 8002664:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002666:	f107 0310 	add.w	r3, r7, #16
 800266a:	4619      	mov	r1, r3
 800266c:	4814      	ldr	r0, [pc, #80]	; (80026c0 <HAL_TIM_MspPostInit+0xa0>)
 800266e:	f000 fc2d 	bl	8002ecc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8002672:	e01c      	b.n	80026ae <HAL_TIM_MspPostInit+0x8e>
  else if(htim->Instance==TIM2)
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800267c:	d117      	bne.n	80026ae <HAL_TIM_MspPostInit+0x8e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800267e:	4b0f      	ldr	r3, [pc, #60]	; (80026bc <HAL_TIM_MspPostInit+0x9c>)
 8002680:	699b      	ldr	r3, [r3, #24]
 8002682:	4a0e      	ldr	r2, [pc, #56]	; (80026bc <HAL_TIM_MspPostInit+0x9c>)
 8002684:	f043 0304 	orr.w	r3, r3, #4
 8002688:	6193      	str	r3, [r2, #24]
 800268a:	4b0c      	ldr	r3, [pc, #48]	; (80026bc <HAL_TIM_MspPostInit+0x9c>)
 800268c:	699b      	ldr	r3, [r3, #24]
 800268e:	f003 0304 	and.w	r3, r3, #4
 8002692:	60bb      	str	r3, [r7, #8]
 8002694:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002696:	2304      	movs	r3, #4
 8002698:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800269a:	2302      	movs	r3, #2
 800269c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800269e:	2303      	movs	r3, #3
 80026a0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026a2:	f107 0310 	add.w	r3, r7, #16
 80026a6:	4619      	mov	r1, r3
 80026a8:	4805      	ldr	r0, [pc, #20]	; (80026c0 <HAL_TIM_MspPostInit+0xa0>)
 80026aa:	f000 fc0f 	bl	8002ecc <HAL_GPIO_Init>
}
 80026ae:	bf00      	nop
 80026b0:	3720      	adds	r7, #32
 80026b2:	46bd      	mov	sp, r7
 80026b4:	bd80      	pop	{r7, pc}
 80026b6:	bf00      	nop
 80026b8:	40012c00 	.word	0x40012c00
 80026bc:	40021000 	.word	0x40021000
 80026c0:	40010800 	.word	0x40010800

080026c4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80026c4:	b580      	push	{r7, lr}
 80026c6:	b08a      	sub	sp, #40	; 0x28
 80026c8:	af00      	add	r7, sp, #0
 80026ca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026cc:	f107 0314 	add.w	r3, r7, #20
 80026d0:	2200      	movs	r2, #0
 80026d2:	601a      	str	r2, [r3, #0]
 80026d4:	605a      	str	r2, [r3, #4]
 80026d6:	609a      	str	r2, [r3, #8]
 80026d8:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	681b      	ldr	r3, [r3, #0]
 80026de:	4a26      	ldr	r2, [pc, #152]	; (8002778 <HAL_UART_MspInit+0xb4>)
 80026e0:	4293      	cmp	r3, r2
 80026e2:	d145      	bne.n	8002770 <HAL_UART_MspInit+0xac>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80026e4:	4b25      	ldr	r3, [pc, #148]	; (800277c <HAL_UART_MspInit+0xb8>)
 80026e6:	699b      	ldr	r3, [r3, #24]
 80026e8:	4a24      	ldr	r2, [pc, #144]	; (800277c <HAL_UART_MspInit+0xb8>)
 80026ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80026ee:	6193      	str	r3, [r2, #24]
 80026f0:	4b22      	ldr	r3, [pc, #136]	; (800277c <HAL_UART_MspInit+0xb8>)
 80026f2:	699b      	ldr	r3, [r3, #24]
 80026f4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80026f8:	613b      	str	r3, [r7, #16]
 80026fa:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80026fc:	4b1f      	ldr	r3, [pc, #124]	; (800277c <HAL_UART_MspInit+0xb8>)
 80026fe:	699b      	ldr	r3, [r3, #24]
 8002700:	4a1e      	ldr	r2, [pc, #120]	; (800277c <HAL_UART_MspInit+0xb8>)
 8002702:	f043 0308 	orr.w	r3, r3, #8
 8002706:	6193      	str	r3, [r2, #24]
 8002708:	4b1c      	ldr	r3, [pc, #112]	; (800277c <HAL_UART_MspInit+0xb8>)
 800270a:	699b      	ldr	r3, [r3, #24]
 800270c:	f003 0308 	and.w	r3, r3, #8
 8002710:	60fb      	str	r3, [r7, #12]
 8002712:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8002714:	2340      	movs	r3, #64	; 0x40
 8002716:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002718:	2302      	movs	r3, #2
 800271a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800271c:	2303      	movs	r3, #3
 800271e:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002720:	f107 0314 	add.w	r3, r7, #20
 8002724:	4619      	mov	r1, r3
 8002726:	4816      	ldr	r0, [pc, #88]	; (8002780 <HAL_UART_MspInit+0xbc>)
 8002728:	f000 fbd0 	bl	8002ecc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 800272c:	2380      	movs	r3, #128	; 0x80
 800272e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002730:	2300      	movs	r3, #0
 8002732:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002734:	2300      	movs	r3, #0
 8002736:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002738:	f107 0314 	add.w	r3, r7, #20
 800273c:	4619      	mov	r1, r3
 800273e:	4810      	ldr	r0, [pc, #64]	; (8002780 <HAL_UART_MspInit+0xbc>)
 8002740:	f000 fbc4 	bl	8002ecc <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_USART1_ENABLE();
 8002744:	4b0f      	ldr	r3, [pc, #60]	; (8002784 <HAL_UART_MspInit+0xc0>)
 8002746:	685b      	ldr	r3, [r3, #4]
 8002748:	627b      	str	r3, [r7, #36]	; 0x24
 800274a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800274c:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8002750:	627b      	str	r3, [r7, #36]	; 0x24
 8002752:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002754:	f043 0304 	orr.w	r3, r3, #4
 8002758:	627b      	str	r3, [r7, #36]	; 0x24
 800275a:	4a0a      	ldr	r2, [pc, #40]	; (8002784 <HAL_UART_MspInit+0xc0>)
 800275c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800275e:	6053      	str	r3, [r2, #4]

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8002760:	2200      	movs	r2, #0
 8002762:	2105      	movs	r1, #5
 8002764:	2025      	movs	r0, #37	; 0x25
 8002766:	f000 fad4 	bl	8002d12 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 800276a:	2025      	movs	r0, #37	; 0x25
 800276c:	f000 faed 	bl	8002d4a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8002770:	bf00      	nop
 8002772:	3728      	adds	r7, #40	; 0x28
 8002774:	46bd      	mov	sp, r7
 8002776:	bd80      	pop	{r7, pc}
 8002778:	40013800 	.word	0x40013800
 800277c:	40021000 	.word	0x40021000
 8002780:	40010c00 	.word	0x40010c00
 8002784:	40010000 	.word	0x40010000

08002788 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b08e      	sub	sp, #56	; 0x38
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 8002790:	2300      	movs	r3, #0
 8002792:	62fb      	str	r3, [r7, #44]	; 0x2c

  uint32_t              uwPrescalerValue = 0U;
 8002794:	2300      	movs	r3, #0
 8002796:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status = HAL_OK;
 8002798:	2300      	movs	r3, #0
 800279a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33

  /* Enable TIM4 clock */
  __HAL_RCC_TIM4_CLK_ENABLE();
 800279e:	4b34      	ldr	r3, [pc, #208]	; (8002870 <HAL_InitTick+0xe8>)
 80027a0:	69db      	ldr	r3, [r3, #28]
 80027a2:	4a33      	ldr	r2, [pc, #204]	; (8002870 <HAL_InitTick+0xe8>)
 80027a4:	f043 0304 	orr.w	r3, r3, #4
 80027a8:	61d3      	str	r3, [r2, #28]
 80027aa:	4b31      	ldr	r3, [pc, #196]	; (8002870 <HAL_InitTick+0xe8>)
 80027ac:	69db      	ldr	r3, [r3, #28]
 80027ae:	f003 0304 	and.w	r3, r3, #4
 80027b2:	60fb      	str	r3, [r7, #12]
 80027b4:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027b6:	f107 0210 	add.w	r2, r7, #16
 80027ba:	f107 0314 	add.w	r3, r7, #20
 80027be:	4611      	mov	r1, r2
 80027c0:	4618      	mov	r0, r3
 80027c2:	f001 f937 	bl	8003a34 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 80027c6:	6a3b      	ldr	r3, [r7, #32]
 80027c8:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute TIM4 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80027ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80027cc:	2b00      	cmp	r3, #0
 80027ce:	d103      	bne.n	80027d8 <HAL_InitTick+0x50>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80027d0:	f001 f908 	bl	80039e4 <HAL_RCC_GetPCLK1Freq>
 80027d4:	6378      	str	r0, [r7, #52]	; 0x34
 80027d6:	e004      	b.n	80027e2 <HAL_InitTick+0x5a>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80027d8:	f001 f904 	bl	80039e4 <HAL_RCC_GetPCLK1Freq>
 80027dc:	4603      	mov	r3, r0
 80027de:	005b      	lsls	r3, r3, #1
 80027e0:	637b      	str	r3, [r7, #52]	; 0x34
  }

  /* Compute the prescaler value to have TIM4 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80027e4:	4a23      	ldr	r2, [pc, #140]	; (8002874 <HAL_InitTick+0xec>)
 80027e6:	fba2 2303 	umull	r2, r3, r2, r3
 80027ea:	0c9b      	lsrs	r3, r3, #18
 80027ec:	3b01      	subs	r3, #1
 80027ee:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM4 */
  htim4.Instance = TIM4;
 80027f0:	4b21      	ldr	r3, [pc, #132]	; (8002878 <HAL_InitTick+0xf0>)
 80027f2:	4a22      	ldr	r2, [pc, #136]	; (800287c <HAL_InitTick+0xf4>)
 80027f4:	601a      	str	r2, [r3, #0]
  + Period = [(TIM4CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim4.Init.Period = (1000000U / 1000U) - 1U;
 80027f6:	4b20      	ldr	r3, [pc, #128]	; (8002878 <HAL_InitTick+0xf0>)
 80027f8:	f240 32e7 	movw	r2, #999	; 0x3e7
 80027fc:	60da      	str	r2, [r3, #12]
  htim4.Init.Prescaler = uwPrescalerValue;
 80027fe:	4a1e      	ldr	r2, [pc, #120]	; (8002878 <HAL_InitTick+0xf0>)
 8002800:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002802:	6053      	str	r3, [r2, #4]
  htim4.Init.ClockDivision = 0;
 8002804:	4b1c      	ldr	r3, [pc, #112]	; (8002878 <HAL_InitTick+0xf0>)
 8002806:	2200      	movs	r2, #0
 8002808:	611a      	str	r2, [r3, #16]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800280a:	4b1b      	ldr	r3, [pc, #108]	; (8002878 <HAL_InitTick+0xf0>)
 800280c:	2200      	movs	r2, #0
 800280e:	609a      	str	r2, [r3, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002810:	4b19      	ldr	r3, [pc, #100]	; (8002878 <HAL_InitTick+0xf0>)
 8002812:	2200      	movs	r2, #0
 8002814:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim4);
 8002816:	4818      	ldr	r0, [pc, #96]	; (8002878 <HAL_InitTick+0xf0>)
 8002818:	f001 fd4a 	bl	80042b0 <HAL_TIM_Base_Init>
 800281c:	4603      	mov	r3, r0
 800281e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
  if (status == HAL_OK)
 8002822:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002826:	2b00      	cmp	r3, #0
 8002828:	d11b      	bne.n	8002862 <HAL_InitTick+0xda>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim4);
 800282a:	4813      	ldr	r0, [pc, #76]	; (8002878 <HAL_InitTick+0xf0>)
 800282c:	f001 fd98 	bl	8004360 <HAL_TIM_Base_Start_IT>
 8002830:	4603      	mov	r3, r0
 8002832:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    if (status == HAL_OK)
 8002836:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800283a:	2b00      	cmp	r3, #0
 800283c:	d111      	bne.n	8002862 <HAL_InitTick+0xda>
    {
    /* Enable the TIM4 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM4_IRQn);
 800283e:	201e      	movs	r0, #30
 8002840:	f000 fa83 	bl	8002d4a <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	2b0f      	cmp	r3, #15
 8002848:	d808      	bhi.n	800285c <HAL_InitTick+0xd4>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM4_IRQn, TickPriority, 0U);
 800284a:	2200      	movs	r2, #0
 800284c:	6879      	ldr	r1, [r7, #4]
 800284e:	201e      	movs	r0, #30
 8002850:	f000 fa5f 	bl	8002d12 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002854:	4a0a      	ldr	r2, [pc, #40]	; (8002880 <HAL_InitTick+0xf8>)
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	6013      	str	r3, [r2, #0]
 800285a:	e002      	b.n	8002862 <HAL_InitTick+0xda>
      }
      else
      {
        status = HAL_ERROR;
 800285c:	2301      	movs	r3, #1
 800285e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
      }
    }
  }

 /* Return function status */
  return status;
 8002862:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
}
 8002866:	4618      	mov	r0, r3
 8002868:	3738      	adds	r7, #56	; 0x38
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}
 800286e:	bf00      	nop
 8002870:	40021000 	.word	0x40021000
 8002874:	431bde83 	.word	0x431bde83
 8002878:	20000628 	.word	0x20000628
 800287c:	40000800 	.word	0x40000800
 8002880:	20000008 	.word	0x20000008

08002884 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002884:	b580      	push	{r7, lr}
 8002886:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 8002888:	f001 f904 	bl	8003a94 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800288c:	e7fe      	b.n	800288c <NMI_Handler+0x8>

0800288e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800288e:	b480      	push	{r7}
 8002890:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002892:	e7fe      	b.n	8002892 <HardFault_Handler+0x4>

08002894 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002894:	b480      	push	{r7}
 8002896:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002898:	e7fe      	b.n	8002898 <MemManage_Handler+0x4>

0800289a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800289a:	b480      	push	{r7}
 800289c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800289e:	e7fe      	b.n	800289e <BusFault_Handler+0x4>

080028a0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80028a0:	b480      	push	{r7}
 80028a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80028a4:	e7fe      	b.n	80028a4 <UsageFault_Handler+0x4>

080028a6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80028a6:	b480      	push	{r7}
 80028a8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80028aa:	bf00      	nop
 80028ac:	46bd      	mov	sp, r7
 80028ae:	bc80      	pop	{r7}
 80028b0:	4770      	bx	lr

080028b2 <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 80028b2:	b480      	push	{r7}
 80028b4:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 80028b6:	bf00      	nop
 80028b8:	46bd      	mov	sp, r7
 80028ba:	bc80      	pop	{r7}
 80028bc:	4770      	bx	lr
	...

080028c0 <TIM1_UP_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt.
  */
void TIM1_UP_IRQHandler(void)
{
 80028c0:	b580      	push	{r7, lr}
 80028c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80028c4:	4802      	ldr	r0, [pc, #8]	; (80028d0 <TIM1_UP_IRQHandler+0x10>)
 80028c6:	f001 ff21 	bl	800470c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_IRQn 1 */

  /* USER CODE END TIM1_UP_IRQn 1 */
}
 80028ca:	bf00      	nop
 80028cc:	bd80      	pop	{r7, pc}
 80028ce:	bf00      	nop
 80028d0:	200004a4 	.word	0x200004a4

080028d4 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80028d4:	b580      	push	{r7, lr}
 80028d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80028d8:	4802      	ldr	r0, [pc, #8]	; (80028e4 <TIM2_IRQHandler+0x10>)
 80028da:	f001 ff17 	bl	800470c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80028de:	bf00      	nop
 80028e0:	bd80      	pop	{r7, pc}
 80028e2:	bf00      	nop
 80028e4:	200004ec 	.word	0x200004ec

080028e8 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 80028e8:	b580      	push	{r7, lr}
 80028ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 80028ec:	4802      	ldr	r0, [pc, #8]	; (80028f8 <TIM4_IRQHandler+0x10>)
 80028ee:	f001 ff0d 	bl	800470c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 80028f2:	bf00      	nop
 80028f4:	bd80      	pop	{r7, pc}
 80028f6:	bf00      	nop
 80028f8:	20000628 	.word	0x20000628

080028fc <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 80028fc:	b580      	push	{r7, lr}
 80028fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8002900:	4802      	ldr	r0, [pc, #8]	; (800290c <SPI1_IRQHandler+0x10>)
 8002902:	f001 fb33 	bl	8003f6c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8002906:	bf00      	nop
 8002908:	bd80      	pop	{r7, pc}
 800290a:	bf00      	nop
 800290c:	2000044c 	.word	0x2000044c

08002910 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002910:	b580      	push	{r7, lr}
 8002912:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002914:	4802      	ldr	r0, [pc, #8]	; (8002920 <USART1_IRQHandler+0x10>)
 8002916:	f002 fce3 	bl	80052e0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 800291a:	bf00      	nop
 800291c:	bd80      	pop	{r7, pc}
 800291e:	bf00      	nop
 8002920:	20000534 	.word	0x20000534

08002924 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002924:	b480      	push	{r7}
 8002926:	af00      	add	r7, sp, #0
  return 1;
 8002928:	2301      	movs	r3, #1
}
 800292a:	4618      	mov	r0, r3
 800292c:	46bd      	mov	sp, r7
 800292e:	bc80      	pop	{r7}
 8002930:	4770      	bx	lr

08002932 <_kill>:

int _kill(int pid, int sig)
{
 8002932:	b580      	push	{r7, lr}
 8002934:	b082      	sub	sp, #8
 8002936:	af00      	add	r7, sp, #0
 8002938:	6078      	str	r0, [r7, #4]
 800293a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800293c:	f005 fa1e 	bl	8007d7c <__errno>
 8002940:	4603      	mov	r3, r0
 8002942:	2216      	movs	r2, #22
 8002944:	601a      	str	r2, [r3, #0]
  return -1;
 8002946:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800294a:	4618      	mov	r0, r3
 800294c:	3708      	adds	r7, #8
 800294e:	46bd      	mov	sp, r7
 8002950:	bd80      	pop	{r7, pc}

08002952 <_exit>:

void _exit (int status)
{
 8002952:	b580      	push	{r7, lr}
 8002954:	b082      	sub	sp, #8
 8002956:	af00      	add	r7, sp, #0
 8002958:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800295a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800295e:	6878      	ldr	r0, [r7, #4]
 8002960:	f7ff ffe7 	bl	8002932 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002964:	e7fe      	b.n	8002964 <_exit+0x12>

08002966 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002966:	b580      	push	{r7, lr}
 8002968:	b086      	sub	sp, #24
 800296a:	af00      	add	r7, sp, #0
 800296c:	60f8      	str	r0, [r7, #12]
 800296e:	60b9      	str	r1, [r7, #8]
 8002970:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002972:	2300      	movs	r3, #0
 8002974:	617b      	str	r3, [r7, #20]
 8002976:	e00a      	b.n	800298e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002978:	f3af 8000 	nop.w
 800297c:	4601      	mov	r1, r0
 800297e:	68bb      	ldr	r3, [r7, #8]
 8002980:	1c5a      	adds	r2, r3, #1
 8002982:	60ba      	str	r2, [r7, #8]
 8002984:	b2ca      	uxtb	r2, r1
 8002986:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002988:	697b      	ldr	r3, [r7, #20]
 800298a:	3301      	adds	r3, #1
 800298c:	617b      	str	r3, [r7, #20]
 800298e:	697a      	ldr	r2, [r7, #20]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	429a      	cmp	r2, r3
 8002994:	dbf0      	blt.n	8002978 <_read+0x12>
  }

  return len;
 8002996:	687b      	ldr	r3, [r7, #4]
}
 8002998:	4618      	mov	r0, r3
 800299a:	3718      	adds	r7, #24
 800299c:	46bd      	mov	sp, r7
 800299e:	bd80      	pop	{r7, pc}

080029a0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80029a0:	b580      	push	{r7, lr}
 80029a2:	b086      	sub	sp, #24
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	60f8      	str	r0, [r7, #12]
 80029a8:	60b9      	str	r1, [r7, #8]
 80029aa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ac:	2300      	movs	r3, #0
 80029ae:	617b      	str	r3, [r7, #20]
 80029b0:	e009      	b.n	80029c6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80029b2:	68bb      	ldr	r3, [r7, #8]
 80029b4:	1c5a      	adds	r2, r3, #1
 80029b6:	60ba      	str	r2, [r7, #8]
 80029b8:	781b      	ldrb	r3, [r3, #0]
 80029ba:	4618      	mov	r0, r3
 80029bc:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029c0:	697b      	ldr	r3, [r7, #20]
 80029c2:	3301      	adds	r3, #1
 80029c4:	617b      	str	r3, [r7, #20]
 80029c6:	697a      	ldr	r2, [r7, #20]
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	429a      	cmp	r2, r3
 80029cc:	dbf1      	blt.n	80029b2 <_write+0x12>
  }
  return len;
 80029ce:	687b      	ldr	r3, [r7, #4]
}
 80029d0:	4618      	mov	r0, r3
 80029d2:	3718      	adds	r7, #24
 80029d4:	46bd      	mov	sp, r7
 80029d6:	bd80      	pop	{r7, pc}

080029d8 <_close>:

int _close(int file)
{
 80029d8:	b480      	push	{r7}
 80029da:	b083      	sub	sp, #12
 80029dc:	af00      	add	r7, sp, #0
 80029de:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80029e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80029e4:	4618      	mov	r0, r3
 80029e6:	370c      	adds	r7, #12
 80029e8:	46bd      	mov	sp, r7
 80029ea:	bc80      	pop	{r7}
 80029ec:	4770      	bx	lr

080029ee <_fstat>:


int _fstat(int file, struct stat *st)
{
 80029ee:	b480      	push	{r7}
 80029f0:	b083      	sub	sp, #12
 80029f2:	af00      	add	r7, sp, #0
 80029f4:	6078      	str	r0, [r7, #4]
 80029f6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80029fe:	605a      	str	r2, [r3, #4]
  return 0;
 8002a00:	2300      	movs	r3, #0
}
 8002a02:	4618      	mov	r0, r3
 8002a04:	370c      	adds	r7, #12
 8002a06:	46bd      	mov	sp, r7
 8002a08:	bc80      	pop	{r7}
 8002a0a:	4770      	bx	lr

08002a0c <_isatty>:

int _isatty(int file)
{
 8002a0c:	b480      	push	{r7}
 8002a0e:	b083      	sub	sp, #12
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002a14:	2301      	movs	r3, #1
}
 8002a16:	4618      	mov	r0, r3
 8002a18:	370c      	adds	r7, #12
 8002a1a:	46bd      	mov	sp, r7
 8002a1c:	bc80      	pop	{r7}
 8002a1e:	4770      	bx	lr

08002a20 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002a20:	b480      	push	{r7}
 8002a22:	b085      	sub	sp, #20
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	60f8      	str	r0, [r7, #12]
 8002a28:	60b9      	str	r1, [r7, #8]
 8002a2a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002a2c:	2300      	movs	r3, #0
}
 8002a2e:	4618      	mov	r0, r3
 8002a30:	3714      	adds	r7, #20
 8002a32:	46bd      	mov	sp, r7
 8002a34:	bc80      	pop	{r7}
 8002a36:	4770      	bx	lr

08002a38 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002a38:	b580      	push	{r7, lr}
 8002a3a:	b086      	sub	sp, #24
 8002a3c:	af00      	add	r7, sp, #0
 8002a3e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002a40:	4a14      	ldr	r2, [pc, #80]	; (8002a94 <_sbrk+0x5c>)
 8002a42:	4b15      	ldr	r3, [pc, #84]	; (8002a98 <_sbrk+0x60>)
 8002a44:	1ad3      	subs	r3, r2, r3
 8002a46:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002a48:	697b      	ldr	r3, [r7, #20]
 8002a4a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002a4c:	4b13      	ldr	r3, [pc, #76]	; (8002a9c <_sbrk+0x64>)
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	2b00      	cmp	r3, #0
 8002a52:	d102      	bne.n	8002a5a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002a54:	4b11      	ldr	r3, [pc, #68]	; (8002a9c <_sbrk+0x64>)
 8002a56:	4a12      	ldr	r2, [pc, #72]	; (8002aa0 <_sbrk+0x68>)
 8002a58:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002a5a:	4b10      	ldr	r3, [pc, #64]	; (8002a9c <_sbrk+0x64>)
 8002a5c:	681a      	ldr	r2, [r3, #0]
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	4413      	add	r3, r2
 8002a62:	693a      	ldr	r2, [r7, #16]
 8002a64:	429a      	cmp	r2, r3
 8002a66:	d207      	bcs.n	8002a78 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002a68:	f005 f988 	bl	8007d7c <__errno>
 8002a6c:	4603      	mov	r3, r0
 8002a6e:	220c      	movs	r2, #12
 8002a70:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002a72:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002a76:	e009      	b.n	8002a8c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002a78:	4b08      	ldr	r3, [pc, #32]	; (8002a9c <_sbrk+0x64>)
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002a7e:	4b07      	ldr	r3, [pc, #28]	; (8002a9c <_sbrk+0x64>)
 8002a80:	681a      	ldr	r2, [r3, #0]
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	4413      	add	r3, r2
 8002a86:	4a05      	ldr	r2, [pc, #20]	; (8002a9c <_sbrk+0x64>)
 8002a88:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002a8a:	68fb      	ldr	r3, [r7, #12]
}
 8002a8c:	4618      	mov	r0, r3
 8002a8e:	3718      	adds	r7, #24
 8002a90:	46bd      	mov	sp, r7
 8002a92:	bd80      	pop	{r7, pc}
 8002a94:	20005000 	.word	0x20005000
 8002a98:	00000400 	.word	0x00000400
 8002a9c:	20000670 	.word	0x20000670
 8002aa0:	20001510 	.word	0x20001510

08002aa4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002aa4:	b480      	push	{r7}
 8002aa6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002aa8:	bf00      	nop
 8002aaa:	46bd      	mov	sp, r7
 8002aac:	bc80      	pop	{r7}
 8002aae:	4770      	bx	lr

08002ab0 <Reset_Handler>:
 8002ab0:	f7ff fff8 	bl	8002aa4 <SystemInit>
 8002ab4:	480b      	ldr	r0, [pc, #44]	; (8002ae4 <LoopFillZerobss+0xe>)
 8002ab6:	490c      	ldr	r1, [pc, #48]	; (8002ae8 <LoopFillZerobss+0x12>)
 8002ab8:	4a0c      	ldr	r2, [pc, #48]	; (8002aec <LoopFillZerobss+0x16>)
 8002aba:	2300      	movs	r3, #0
 8002abc:	e002      	b.n	8002ac4 <LoopCopyDataInit>

08002abe <CopyDataInit>:
 8002abe:	58d4      	ldr	r4, [r2, r3]
 8002ac0:	50c4      	str	r4, [r0, r3]
 8002ac2:	3304      	adds	r3, #4

08002ac4 <LoopCopyDataInit>:
 8002ac4:	18c4      	adds	r4, r0, r3
 8002ac6:	428c      	cmp	r4, r1
 8002ac8:	d3f9      	bcc.n	8002abe <CopyDataInit>
 8002aca:	4a09      	ldr	r2, [pc, #36]	; (8002af0 <LoopFillZerobss+0x1a>)
 8002acc:	4c09      	ldr	r4, [pc, #36]	; (8002af4 <LoopFillZerobss+0x1e>)
 8002ace:	2300      	movs	r3, #0
 8002ad0:	e001      	b.n	8002ad6 <LoopFillZerobss>

08002ad2 <FillZerobss>:
 8002ad2:	6013      	str	r3, [r2, #0]
 8002ad4:	3204      	adds	r2, #4

08002ad6 <LoopFillZerobss>:
 8002ad6:	42a2      	cmp	r2, r4
 8002ad8:	d3fb      	bcc.n	8002ad2 <FillZerobss>
 8002ada:	f005 f955 	bl	8007d88 <__libc_init_array>
 8002ade:	f7ff f815 	bl	8001b0c <main>
 8002ae2:	4770      	bx	lr
 8002ae4:	20000000 	.word	0x20000000
 8002ae8:	200001dc 	.word	0x200001dc
 8002aec:	08009f98 	.word	0x08009f98
 8002af0:	200001dc 	.word	0x200001dc
 8002af4:	20001510 	.word	0x20001510

08002af8 <ADC1_2_IRQHandler>:
 8002af8:	e7fe      	b.n	8002af8 <ADC1_2_IRQHandler>
	...

08002afc <HAL_Init>:
 8002afc:	b580      	push	{r7, lr}
 8002afe:	af00      	add	r7, sp, #0
 8002b00:	4b08      	ldr	r3, [pc, #32]	; (8002b24 <HAL_Init+0x28>)
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	4a07      	ldr	r2, [pc, #28]	; (8002b24 <HAL_Init+0x28>)
 8002b06:	f043 0310 	orr.w	r3, r3, #16
 8002b0a:	6013      	str	r3, [r2, #0]
 8002b0c:	2003      	movs	r0, #3
 8002b0e:	f000 f8f5 	bl	8002cfc <HAL_NVIC_SetPriorityGrouping>
 8002b12:	200f      	movs	r0, #15
 8002b14:	f7ff fe38 	bl	8002788 <HAL_InitTick>
 8002b18:	f7ff fca0 	bl	800245c <HAL_MspInit>
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	4618      	mov	r0, r3
 8002b20:	bd80      	pop	{r7, pc}
 8002b22:	bf00      	nop
 8002b24:	40022000 	.word	0x40022000

08002b28 <HAL_IncTick>:
 8002b28:	b480      	push	{r7}
 8002b2a:	af00      	add	r7, sp, #0
 8002b2c:	4b05      	ldr	r3, [pc, #20]	; (8002b44 <HAL_IncTick+0x1c>)
 8002b2e:	781b      	ldrb	r3, [r3, #0]
 8002b30:	461a      	mov	r2, r3
 8002b32:	4b05      	ldr	r3, [pc, #20]	; (8002b48 <HAL_IncTick+0x20>)
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	4413      	add	r3, r2
 8002b38:	4a03      	ldr	r2, [pc, #12]	; (8002b48 <HAL_IncTick+0x20>)
 8002b3a:	6013      	str	r3, [r2, #0]
 8002b3c:	bf00      	nop
 8002b3e:	46bd      	mov	sp, r7
 8002b40:	bc80      	pop	{r7}
 8002b42:	4770      	bx	lr
 8002b44:	2000000c 	.word	0x2000000c
 8002b48:	20000674 	.word	0x20000674

08002b4c <HAL_GetTick>:
 8002b4c:	b480      	push	{r7}
 8002b4e:	af00      	add	r7, sp, #0
 8002b50:	4b02      	ldr	r3, [pc, #8]	; (8002b5c <HAL_GetTick+0x10>)
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	4618      	mov	r0, r3
 8002b56:	46bd      	mov	sp, r7
 8002b58:	bc80      	pop	{r7}
 8002b5a:	4770      	bx	lr
 8002b5c:	20000674 	.word	0x20000674

08002b60 <HAL_Delay>:
 8002b60:	b580      	push	{r7, lr}
 8002b62:	b084      	sub	sp, #16
 8002b64:	af00      	add	r7, sp, #0
 8002b66:	6078      	str	r0, [r7, #4]
 8002b68:	f7ff fff0 	bl	8002b4c <HAL_GetTick>
 8002b6c:	60b8      	str	r0, [r7, #8]
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	60fb      	str	r3, [r7, #12]
 8002b72:	68fb      	ldr	r3, [r7, #12]
 8002b74:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002b78:	d005      	beq.n	8002b86 <HAL_Delay+0x26>
 8002b7a:	4b0a      	ldr	r3, [pc, #40]	; (8002ba4 <HAL_Delay+0x44>)
 8002b7c:	781b      	ldrb	r3, [r3, #0]
 8002b7e:	461a      	mov	r2, r3
 8002b80:	68fb      	ldr	r3, [r7, #12]
 8002b82:	4413      	add	r3, r2
 8002b84:	60fb      	str	r3, [r7, #12]
 8002b86:	bf00      	nop
 8002b88:	f7ff ffe0 	bl	8002b4c <HAL_GetTick>
 8002b8c:	4602      	mov	r2, r0
 8002b8e:	68bb      	ldr	r3, [r7, #8]
 8002b90:	1ad3      	subs	r3, r2, r3
 8002b92:	68fa      	ldr	r2, [r7, #12]
 8002b94:	429a      	cmp	r2, r3
 8002b96:	d8f7      	bhi.n	8002b88 <HAL_Delay+0x28>
 8002b98:	bf00      	nop
 8002b9a:	bf00      	nop
 8002b9c:	3710      	adds	r7, #16
 8002b9e:	46bd      	mov	sp, r7
 8002ba0:	bd80      	pop	{r7, pc}
 8002ba2:	bf00      	nop
 8002ba4:	2000000c 	.word	0x2000000c

08002ba8 <__NVIC_SetPriorityGrouping>:
 8002ba8:	b480      	push	{r7}
 8002baa:	b085      	sub	sp, #20
 8002bac:	af00      	add	r7, sp, #0
 8002bae:	6078      	str	r0, [r7, #4]
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	f003 0307 	and.w	r3, r3, #7
 8002bb6:	60fb      	str	r3, [r7, #12]
 8002bb8:	4b0c      	ldr	r3, [pc, #48]	; (8002bec <__NVIC_SetPriorityGrouping+0x44>)
 8002bba:	68db      	ldr	r3, [r3, #12]
 8002bbc:	60bb      	str	r3, [r7, #8]
 8002bbe:	68ba      	ldr	r2, [r7, #8]
 8002bc0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002bc4:	4013      	ands	r3, r2
 8002bc6:	60bb      	str	r3, [r7, #8]
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	021a      	lsls	r2, r3, #8
 8002bcc:	68bb      	ldr	r3, [r7, #8]
 8002bce:	4313      	orrs	r3, r2
 8002bd0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002bd4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002bd8:	60bb      	str	r3, [r7, #8]
 8002bda:	4a04      	ldr	r2, [pc, #16]	; (8002bec <__NVIC_SetPriorityGrouping+0x44>)
 8002bdc:	68bb      	ldr	r3, [r7, #8]
 8002bde:	60d3      	str	r3, [r2, #12]
 8002be0:	bf00      	nop
 8002be2:	3714      	adds	r7, #20
 8002be4:	46bd      	mov	sp, r7
 8002be6:	bc80      	pop	{r7}
 8002be8:	4770      	bx	lr
 8002bea:	bf00      	nop
 8002bec:	e000ed00 	.word	0xe000ed00

08002bf0 <__NVIC_GetPriorityGrouping>:
 8002bf0:	b480      	push	{r7}
 8002bf2:	af00      	add	r7, sp, #0
 8002bf4:	4b04      	ldr	r3, [pc, #16]	; (8002c08 <__NVIC_GetPriorityGrouping+0x18>)
 8002bf6:	68db      	ldr	r3, [r3, #12]
 8002bf8:	0a1b      	lsrs	r3, r3, #8
 8002bfa:	f003 0307 	and.w	r3, r3, #7
 8002bfe:	4618      	mov	r0, r3
 8002c00:	46bd      	mov	sp, r7
 8002c02:	bc80      	pop	{r7}
 8002c04:	4770      	bx	lr
 8002c06:	bf00      	nop
 8002c08:	e000ed00 	.word	0xe000ed00

08002c0c <__NVIC_EnableIRQ>:
 8002c0c:	b480      	push	{r7}
 8002c0e:	b083      	sub	sp, #12
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	4603      	mov	r3, r0
 8002c14:	71fb      	strb	r3, [r7, #7]
 8002c16:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	db0b      	blt.n	8002c36 <__NVIC_EnableIRQ+0x2a>
 8002c1e:	79fb      	ldrb	r3, [r7, #7]
 8002c20:	f003 021f 	and.w	r2, r3, #31
 8002c24:	4906      	ldr	r1, [pc, #24]	; (8002c40 <__NVIC_EnableIRQ+0x34>)
 8002c26:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c2a:	095b      	lsrs	r3, r3, #5
 8002c2c:	2001      	movs	r0, #1
 8002c2e:	fa00 f202 	lsl.w	r2, r0, r2
 8002c32:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002c36:	bf00      	nop
 8002c38:	370c      	adds	r7, #12
 8002c3a:	46bd      	mov	sp, r7
 8002c3c:	bc80      	pop	{r7}
 8002c3e:	4770      	bx	lr
 8002c40:	e000e100 	.word	0xe000e100

08002c44 <__NVIC_SetPriority>:
 8002c44:	b480      	push	{r7}
 8002c46:	b083      	sub	sp, #12
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	4603      	mov	r3, r0
 8002c4c:	6039      	str	r1, [r7, #0]
 8002c4e:	71fb      	strb	r3, [r7, #7]
 8002c50:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	db0a      	blt.n	8002c6e <__NVIC_SetPriority+0x2a>
 8002c58:	683b      	ldr	r3, [r7, #0]
 8002c5a:	b2da      	uxtb	r2, r3
 8002c5c:	490c      	ldr	r1, [pc, #48]	; (8002c90 <__NVIC_SetPriority+0x4c>)
 8002c5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c62:	0112      	lsls	r2, r2, #4
 8002c64:	b2d2      	uxtb	r2, r2
 8002c66:	440b      	add	r3, r1
 8002c68:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002c6c:	e00a      	b.n	8002c84 <__NVIC_SetPriority+0x40>
 8002c6e:	683b      	ldr	r3, [r7, #0]
 8002c70:	b2da      	uxtb	r2, r3
 8002c72:	4908      	ldr	r1, [pc, #32]	; (8002c94 <__NVIC_SetPriority+0x50>)
 8002c74:	79fb      	ldrb	r3, [r7, #7]
 8002c76:	f003 030f 	and.w	r3, r3, #15
 8002c7a:	3b04      	subs	r3, #4
 8002c7c:	0112      	lsls	r2, r2, #4
 8002c7e:	b2d2      	uxtb	r2, r2
 8002c80:	440b      	add	r3, r1
 8002c82:	761a      	strb	r2, [r3, #24]
 8002c84:	bf00      	nop
 8002c86:	370c      	adds	r7, #12
 8002c88:	46bd      	mov	sp, r7
 8002c8a:	bc80      	pop	{r7}
 8002c8c:	4770      	bx	lr
 8002c8e:	bf00      	nop
 8002c90:	e000e100 	.word	0xe000e100
 8002c94:	e000ed00 	.word	0xe000ed00

08002c98 <NVIC_EncodePriority>:
 8002c98:	b480      	push	{r7}
 8002c9a:	b089      	sub	sp, #36	; 0x24
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	60f8      	str	r0, [r7, #12]
 8002ca0:	60b9      	str	r1, [r7, #8]
 8002ca2:	607a      	str	r2, [r7, #4]
 8002ca4:	68fb      	ldr	r3, [r7, #12]
 8002ca6:	f003 0307 	and.w	r3, r3, #7
 8002caa:	61fb      	str	r3, [r7, #28]
 8002cac:	69fb      	ldr	r3, [r7, #28]
 8002cae:	f1c3 0307 	rsb	r3, r3, #7
 8002cb2:	2b04      	cmp	r3, #4
 8002cb4:	bf28      	it	cs
 8002cb6:	2304      	movcs	r3, #4
 8002cb8:	61bb      	str	r3, [r7, #24]
 8002cba:	69fb      	ldr	r3, [r7, #28]
 8002cbc:	3304      	adds	r3, #4
 8002cbe:	2b06      	cmp	r3, #6
 8002cc0:	d902      	bls.n	8002cc8 <NVIC_EncodePriority+0x30>
 8002cc2:	69fb      	ldr	r3, [r7, #28]
 8002cc4:	3b03      	subs	r3, #3
 8002cc6:	e000      	b.n	8002cca <NVIC_EncodePriority+0x32>
 8002cc8:	2300      	movs	r3, #0
 8002cca:	617b      	str	r3, [r7, #20]
 8002ccc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002cd0:	69bb      	ldr	r3, [r7, #24]
 8002cd2:	fa02 f303 	lsl.w	r3, r2, r3
 8002cd6:	43da      	mvns	r2, r3
 8002cd8:	68bb      	ldr	r3, [r7, #8]
 8002cda:	401a      	ands	r2, r3
 8002cdc:	697b      	ldr	r3, [r7, #20]
 8002cde:	409a      	lsls	r2, r3
 8002ce0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ce4:	697b      	ldr	r3, [r7, #20]
 8002ce6:	fa01 f303 	lsl.w	r3, r1, r3
 8002cea:	43d9      	mvns	r1, r3
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	400b      	ands	r3, r1
 8002cf0:	4313      	orrs	r3, r2
 8002cf2:	4618      	mov	r0, r3
 8002cf4:	3724      	adds	r7, #36	; 0x24
 8002cf6:	46bd      	mov	sp, r7
 8002cf8:	bc80      	pop	{r7}
 8002cfa:	4770      	bx	lr

08002cfc <HAL_NVIC_SetPriorityGrouping>:
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	b082      	sub	sp, #8
 8002d00:	af00      	add	r7, sp, #0
 8002d02:	6078      	str	r0, [r7, #4]
 8002d04:	6878      	ldr	r0, [r7, #4]
 8002d06:	f7ff ff4f 	bl	8002ba8 <__NVIC_SetPriorityGrouping>
 8002d0a:	bf00      	nop
 8002d0c:	3708      	adds	r7, #8
 8002d0e:	46bd      	mov	sp, r7
 8002d10:	bd80      	pop	{r7, pc}

08002d12 <HAL_NVIC_SetPriority>:
 8002d12:	b580      	push	{r7, lr}
 8002d14:	b086      	sub	sp, #24
 8002d16:	af00      	add	r7, sp, #0
 8002d18:	4603      	mov	r3, r0
 8002d1a:	60b9      	str	r1, [r7, #8]
 8002d1c:	607a      	str	r2, [r7, #4]
 8002d1e:	73fb      	strb	r3, [r7, #15]
 8002d20:	2300      	movs	r3, #0
 8002d22:	617b      	str	r3, [r7, #20]
 8002d24:	f7ff ff64 	bl	8002bf0 <__NVIC_GetPriorityGrouping>
 8002d28:	6178      	str	r0, [r7, #20]
 8002d2a:	687a      	ldr	r2, [r7, #4]
 8002d2c:	68b9      	ldr	r1, [r7, #8]
 8002d2e:	6978      	ldr	r0, [r7, #20]
 8002d30:	f7ff ffb2 	bl	8002c98 <NVIC_EncodePriority>
 8002d34:	4602      	mov	r2, r0
 8002d36:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002d3a:	4611      	mov	r1, r2
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	f7ff ff81 	bl	8002c44 <__NVIC_SetPriority>
 8002d42:	bf00      	nop
 8002d44:	3718      	adds	r7, #24
 8002d46:	46bd      	mov	sp, r7
 8002d48:	bd80      	pop	{r7, pc}

08002d4a <HAL_NVIC_EnableIRQ>:
 8002d4a:	b580      	push	{r7, lr}
 8002d4c:	b082      	sub	sp, #8
 8002d4e:	af00      	add	r7, sp, #0
 8002d50:	4603      	mov	r3, r0
 8002d52:	71fb      	strb	r3, [r7, #7]
 8002d54:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d58:	4618      	mov	r0, r3
 8002d5a:	f7ff ff57 	bl	8002c0c <__NVIC_EnableIRQ>
 8002d5e:	bf00      	nop
 8002d60:	3708      	adds	r7, #8
 8002d62:	46bd      	mov	sp, r7
 8002d64:	bd80      	pop	{r7, pc}

08002d66 <HAL_DMA_Abort>:
 8002d66:	b480      	push	{r7}
 8002d68:	b085      	sub	sp, #20
 8002d6a:	af00      	add	r7, sp, #0
 8002d6c:	6078      	str	r0, [r7, #4]
 8002d6e:	2300      	movs	r3, #0
 8002d70:	73fb      	strb	r3, [r7, #15]
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002d78:	b2db      	uxtb	r3, r3
 8002d7a:	2b02      	cmp	r3, #2
 8002d7c:	d008      	beq.n	8002d90 <HAL_DMA_Abort+0x2a>
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	2204      	movs	r2, #4
 8002d82:	639a      	str	r2, [r3, #56]	; 0x38
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	2200      	movs	r2, #0
 8002d88:	f883 2020 	strb.w	r2, [r3, #32]
 8002d8c:	2301      	movs	r3, #1
 8002d8e:	e020      	b.n	8002dd2 <HAL_DMA_Abort+0x6c>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	681a      	ldr	r2, [r3, #0]
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	f022 020e 	bic.w	r2, r2, #14
 8002d9e:	601a      	str	r2, [r3, #0]
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	681a      	ldr	r2, [r3, #0]
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	f022 0201 	bic.w	r2, r2, #1
 8002dae:	601a      	str	r2, [r3, #0]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002db8:	2101      	movs	r1, #1
 8002dba:	fa01 f202 	lsl.w	r2, r1, r2
 8002dbe:	605a      	str	r2, [r3, #4]
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	2201      	movs	r2, #1
 8002dc4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	2200      	movs	r2, #0
 8002dcc:	f883 2020 	strb.w	r2, [r3, #32]
 8002dd0:	7bfb      	ldrb	r3, [r7, #15]
 8002dd2:	4618      	mov	r0, r3
 8002dd4:	3714      	adds	r7, #20
 8002dd6:	46bd      	mov	sp, r7
 8002dd8:	bc80      	pop	{r7}
 8002dda:	4770      	bx	lr

08002ddc <HAL_DMA_Abort_IT>:
 8002ddc:	b580      	push	{r7, lr}
 8002dde:	b084      	sub	sp, #16
 8002de0:	af00      	add	r7, sp, #0
 8002de2:	6078      	str	r0, [r7, #4]
 8002de4:	2300      	movs	r3, #0
 8002de6:	73fb      	strb	r3, [r7, #15]
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002dee:	b2db      	uxtb	r3, r3
 8002df0:	2b02      	cmp	r3, #2
 8002df2:	d005      	beq.n	8002e00 <HAL_DMA_Abort_IT+0x24>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	2204      	movs	r2, #4
 8002df8:	639a      	str	r2, [r3, #56]	; 0x38
 8002dfa:	2301      	movs	r3, #1
 8002dfc:	73fb      	strb	r3, [r7, #15]
 8002dfe:	e051      	b.n	8002ea4 <HAL_DMA_Abort_IT+0xc8>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	681a      	ldr	r2, [r3, #0]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	f022 020e 	bic.w	r2, r2, #14
 8002e0e:	601a      	str	r2, [r3, #0]
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	681a      	ldr	r2, [r3, #0]
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	f022 0201 	bic.w	r2, r2, #1
 8002e1e:	601a      	str	r2, [r3, #0]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4a22      	ldr	r2, [pc, #136]	; (8002eb0 <HAL_DMA_Abort_IT+0xd4>)
 8002e26:	4293      	cmp	r3, r2
 8002e28:	d029      	beq.n	8002e7e <HAL_DMA_Abort_IT+0xa2>
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	4a21      	ldr	r2, [pc, #132]	; (8002eb4 <HAL_DMA_Abort_IT+0xd8>)
 8002e30:	4293      	cmp	r3, r2
 8002e32:	d022      	beq.n	8002e7a <HAL_DMA_Abort_IT+0x9e>
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	4a1f      	ldr	r2, [pc, #124]	; (8002eb8 <HAL_DMA_Abort_IT+0xdc>)
 8002e3a:	4293      	cmp	r3, r2
 8002e3c:	d01a      	beq.n	8002e74 <HAL_DMA_Abort_IT+0x98>
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	4a1e      	ldr	r2, [pc, #120]	; (8002ebc <HAL_DMA_Abort_IT+0xe0>)
 8002e44:	4293      	cmp	r3, r2
 8002e46:	d012      	beq.n	8002e6e <HAL_DMA_Abort_IT+0x92>
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	4a1c      	ldr	r2, [pc, #112]	; (8002ec0 <HAL_DMA_Abort_IT+0xe4>)
 8002e4e:	4293      	cmp	r3, r2
 8002e50:	d00a      	beq.n	8002e68 <HAL_DMA_Abort_IT+0x8c>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	4a1b      	ldr	r2, [pc, #108]	; (8002ec4 <HAL_DMA_Abort_IT+0xe8>)
 8002e58:	4293      	cmp	r3, r2
 8002e5a:	d102      	bne.n	8002e62 <HAL_DMA_Abort_IT+0x86>
 8002e5c:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002e60:	e00e      	b.n	8002e80 <HAL_DMA_Abort_IT+0xa4>
 8002e62:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002e66:	e00b      	b.n	8002e80 <HAL_DMA_Abort_IT+0xa4>
 8002e68:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002e6c:	e008      	b.n	8002e80 <HAL_DMA_Abort_IT+0xa4>
 8002e6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002e72:	e005      	b.n	8002e80 <HAL_DMA_Abort_IT+0xa4>
 8002e74:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002e78:	e002      	b.n	8002e80 <HAL_DMA_Abort_IT+0xa4>
 8002e7a:	2310      	movs	r3, #16
 8002e7c:	e000      	b.n	8002e80 <HAL_DMA_Abort_IT+0xa4>
 8002e7e:	2301      	movs	r3, #1
 8002e80:	4a11      	ldr	r2, [pc, #68]	; (8002ec8 <HAL_DMA_Abort_IT+0xec>)
 8002e82:	6053      	str	r3, [r2, #4]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	2201      	movs	r2, #1
 8002e88:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2200      	movs	r2, #0
 8002e90:	f883 2020 	strb.w	r2, [r3, #32]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d003      	beq.n	8002ea4 <HAL_DMA_Abort_IT+0xc8>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002ea0:	6878      	ldr	r0, [r7, #4]
 8002ea2:	4798      	blx	r3
 8002ea4:	7bfb      	ldrb	r3, [r7, #15]
 8002ea6:	4618      	mov	r0, r3
 8002ea8:	3710      	adds	r7, #16
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	bd80      	pop	{r7, pc}
 8002eae:	bf00      	nop
 8002eb0:	40020008 	.word	0x40020008
 8002eb4:	4002001c 	.word	0x4002001c
 8002eb8:	40020030 	.word	0x40020030
 8002ebc:	40020044 	.word	0x40020044
 8002ec0:	40020058 	.word	0x40020058
 8002ec4:	4002006c 	.word	0x4002006c
 8002ec8:	40020000 	.word	0x40020000

08002ecc <HAL_GPIO_Init>:
 8002ecc:	b480      	push	{r7}
 8002ece:	b08b      	sub	sp, #44	; 0x2c
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
 8002ed4:	6039      	str	r1, [r7, #0]
 8002ed6:	2300      	movs	r3, #0
 8002ed8:	627b      	str	r3, [r7, #36]	; 0x24
 8002eda:	2300      	movs	r3, #0
 8002edc:	623b      	str	r3, [r7, #32]
 8002ede:	e169      	b.n	80031b4 <HAL_GPIO_Init+0x2e8>
 8002ee0:	2201      	movs	r2, #1
 8002ee2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ee4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ee8:	61fb      	str	r3, [r7, #28]
 8002eea:	683b      	ldr	r3, [r7, #0]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	69fa      	ldr	r2, [r7, #28]
 8002ef0:	4013      	ands	r3, r2
 8002ef2:	61bb      	str	r3, [r7, #24]
 8002ef4:	69ba      	ldr	r2, [r7, #24]
 8002ef6:	69fb      	ldr	r3, [r7, #28]
 8002ef8:	429a      	cmp	r2, r3
 8002efa:	f040 8158 	bne.w	80031ae <HAL_GPIO_Init+0x2e2>
 8002efe:	683b      	ldr	r3, [r7, #0]
 8002f00:	685b      	ldr	r3, [r3, #4]
 8002f02:	4a9a      	ldr	r2, [pc, #616]	; (800316c <HAL_GPIO_Init+0x2a0>)
 8002f04:	4293      	cmp	r3, r2
 8002f06:	d05e      	beq.n	8002fc6 <HAL_GPIO_Init+0xfa>
 8002f08:	4a98      	ldr	r2, [pc, #608]	; (800316c <HAL_GPIO_Init+0x2a0>)
 8002f0a:	4293      	cmp	r3, r2
 8002f0c:	d875      	bhi.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002f0e:	4a98      	ldr	r2, [pc, #608]	; (8003170 <HAL_GPIO_Init+0x2a4>)
 8002f10:	4293      	cmp	r3, r2
 8002f12:	d058      	beq.n	8002fc6 <HAL_GPIO_Init+0xfa>
 8002f14:	4a96      	ldr	r2, [pc, #600]	; (8003170 <HAL_GPIO_Init+0x2a4>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d86f      	bhi.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002f1a:	4a96      	ldr	r2, [pc, #600]	; (8003174 <HAL_GPIO_Init+0x2a8>)
 8002f1c:	4293      	cmp	r3, r2
 8002f1e:	d052      	beq.n	8002fc6 <HAL_GPIO_Init+0xfa>
 8002f20:	4a94      	ldr	r2, [pc, #592]	; (8003174 <HAL_GPIO_Init+0x2a8>)
 8002f22:	4293      	cmp	r3, r2
 8002f24:	d869      	bhi.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002f26:	4a94      	ldr	r2, [pc, #592]	; (8003178 <HAL_GPIO_Init+0x2ac>)
 8002f28:	4293      	cmp	r3, r2
 8002f2a:	d04c      	beq.n	8002fc6 <HAL_GPIO_Init+0xfa>
 8002f2c:	4a92      	ldr	r2, [pc, #584]	; (8003178 <HAL_GPIO_Init+0x2ac>)
 8002f2e:	4293      	cmp	r3, r2
 8002f30:	d863      	bhi.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002f32:	4a92      	ldr	r2, [pc, #584]	; (800317c <HAL_GPIO_Init+0x2b0>)
 8002f34:	4293      	cmp	r3, r2
 8002f36:	d046      	beq.n	8002fc6 <HAL_GPIO_Init+0xfa>
 8002f38:	4a90      	ldr	r2, [pc, #576]	; (800317c <HAL_GPIO_Init+0x2b0>)
 8002f3a:	4293      	cmp	r3, r2
 8002f3c:	d85d      	bhi.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002f3e:	2b12      	cmp	r3, #18
 8002f40:	d82a      	bhi.n	8002f98 <HAL_GPIO_Init+0xcc>
 8002f42:	2b12      	cmp	r3, #18
 8002f44:	d859      	bhi.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002f46:	a201      	add	r2, pc, #4	; (adr r2, 8002f4c <HAL_GPIO_Init+0x80>)
 8002f48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f4c:	08002fc7 	.word	0x08002fc7
 8002f50:	08002fa1 	.word	0x08002fa1
 8002f54:	08002fb3 	.word	0x08002fb3
 8002f58:	08002ff5 	.word	0x08002ff5
 8002f5c:	08002ffb 	.word	0x08002ffb
 8002f60:	08002ffb 	.word	0x08002ffb
 8002f64:	08002ffb 	.word	0x08002ffb
 8002f68:	08002ffb 	.word	0x08002ffb
 8002f6c:	08002ffb 	.word	0x08002ffb
 8002f70:	08002ffb 	.word	0x08002ffb
 8002f74:	08002ffb 	.word	0x08002ffb
 8002f78:	08002ffb 	.word	0x08002ffb
 8002f7c:	08002ffb 	.word	0x08002ffb
 8002f80:	08002ffb 	.word	0x08002ffb
 8002f84:	08002ffb 	.word	0x08002ffb
 8002f88:	08002ffb 	.word	0x08002ffb
 8002f8c:	08002ffb 	.word	0x08002ffb
 8002f90:	08002fa9 	.word	0x08002fa9
 8002f94:	08002fbd 	.word	0x08002fbd
 8002f98:	4a79      	ldr	r2, [pc, #484]	; (8003180 <HAL_GPIO_Init+0x2b4>)
 8002f9a:	4293      	cmp	r3, r2
 8002f9c:	d013      	beq.n	8002fc6 <HAL_GPIO_Init+0xfa>
 8002f9e:	e02c      	b.n	8002ffa <HAL_GPIO_Init+0x12e>
 8002fa0:	683b      	ldr	r3, [r7, #0]
 8002fa2:	68db      	ldr	r3, [r3, #12]
 8002fa4:	623b      	str	r3, [r7, #32]
 8002fa6:	e029      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002fa8:	683b      	ldr	r3, [r7, #0]
 8002faa:	68db      	ldr	r3, [r3, #12]
 8002fac:	3304      	adds	r3, #4
 8002fae:	623b      	str	r3, [r7, #32]
 8002fb0:	e024      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002fb2:	683b      	ldr	r3, [r7, #0]
 8002fb4:	68db      	ldr	r3, [r3, #12]
 8002fb6:	3308      	adds	r3, #8
 8002fb8:	623b      	str	r3, [r7, #32]
 8002fba:	e01f      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002fbc:	683b      	ldr	r3, [r7, #0]
 8002fbe:	68db      	ldr	r3, [r3, #12]
 8002fc0:	330c      	adds	r3, #12
 8002fc2:	623b      	str	r3, [r7, #32]
 8002fc4:	e01a      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002fc6:	683b      	ldr	r3, [r7, #0]
 8002fc8:	689b      	ldr	r3, [r3, #8]
 8002fca:	2b00      	cmp	r3, #0
 8002fcc:	d102      	bne.n	8002fd4 <HAL_GPIO_Init+0x108>
 8002fce:	2304      	movs	r3, #4
 8002fd0:	623b      	str	r3, [r7, #32]
 8002fd2:	e013      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002fd4:	683b      	ldr	r3, [r7, #0]
 8002fd6:	689b      	ldr	r3, [r3, #8]
 8002fd8:	2b01      	cmp	r3, #1
 8002fda:	d105      	bne.n	8002fe8 <HAL_GPIO_Init+0x11c>
 8002fdc:	2308      	movs	r3, #8
 8002fde:	623b      	str	r3, [r7, #32]
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	69fa      	ldr	r2, [r7, #28]
 8002fe4:	611a      	str	r2, [r3, #16]
 8002fe6:	e009      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002fe8:	2308      	movs	r3, #8
 8002fea:	623b      	str	r3, [r7, #32]
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	69fa      	ldr	r2, [r7, #28]
 8002ff0:	615a      	str	r2, [r3, #20]
 8002ff2:	e003      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	623b      	str	r3, [r7, #32]
 8002ff8:	e000      	b.n	8002ffc <HAL_GPIO_Init+0x130>
 8002ffa:	bf00      	nop
 8002ffc:	69bb      	ldr	r3, [r7, #24]
 8002ffe:	2bff      	cmp	r3, #255	; 0xff
 8003000:	d801      	bhi.n	8003006 <HAL_GPIO_Init+0x13a>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	e001      	b.n	800300a <HAL_GPIO_Init+0x13e>
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	3304      	adds	r3, #4
 800300a:	617b      	str	r3, [r7, #20]
 800300c:	69bb      	ldr	r3, [r7, #24]
 800300e:	2bff      	cmp	r3, #255	; 0xff
 8003010:	d802      	bhi.n	8003018 <HAL_GPIO_Init+0x14c>
 8003012:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003014:	009b      	lsls	r3, r3, #2
 8003016:	e002      	b.n	800301e <HAL_GPIO_Init+0x152>
 8003018:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800301a:	3b08      	subs	r3, #8
 800301c:	009b      	lsls	r3, r3, #2
 800301e:	613b      	str	r3, [r7, #16]
 8003020:	697b      	ldr	r3, [r7, #20]
 8003022:	681a      	ldr	r2, [r3, #0]
 8003024:	210f      	movs	r1, #15
 8003026:	693b      	ldr	r3, [r7, #16]
 8003028:	fa01 f303 	lsl.w	r3, r1, r3
 800302c:	43db      	mvns	r3, r3
 800302e:	401a      	ands	r2, r3
 8003030:	6a39      	ldr	r1, [r7, #32]
 8003032:	693b      	ldr	r3, [r7, #16]
 8003034:	fa01 f303 	lsl.w	r3, r1, r3
 8003038:	431a      	orrs	r2, r3
 800303a:	697b      	ldr	r3, [r7, #20]
 800303c:	601a      	str	r2, [r3, #0]
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	685b      	ldr	r3, [r3, #4]
 8003042:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003046:	2b00      	cmp	r3, #0
 8003048:	f000 80b1 	beq.w	80031ae <HAL_GPIO_Init+0x2e2>
 800304c:	4b4d      	ldr	r3, [pc, #308]	; (8003184 <HAL_GPIO_Init+0x2b8>)
 800304e:	699b      	ldr	r3, [r3, #24]
 8003050:	4a4c      	ldr	r2, [pc, #304]	; (8003184 <HAL_GPIO_Init+0x2b8>)
 8003052:	f043 0301 	orr.w	r3, r3, #1
 8003056:	6193      	str	r3, [r2, #24]
 8003058:	4b4a      	ldr	r3, [pc, #296]	; (8003184 <HAL_GPIO_Init+0x2b8>)
 800305a:	699b      	ldr	r3, [r3, #24]
 800305c:	f003 0301 	and.w	r3, r3, #1
 8003060:	60bb      	str	r3, [r7, #8]
 8003062:	68bb      	ldr	r3, [r7, #8]
 8003064:	4a48      	ldr	r2, [pc, #288]	; (8003188 <HAL_GPIO_Init+0x2bc>)
 8003066:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003068:	089b      	lsrs	r3, r3, #2
 800306a:	3302      	adds	r3, #2
 800306c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003070:	60fb      	str	r3, [r7, #12]
 8003072:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003074:	f003 0303 	and.w	r3, r3, #3
 8003078:	009b      	lsls	r3, r3, #2
 800307a:	220f      	movs	r2, #15
 800307c:	fa02 f303 	lsl.w	r3, r2, r3
 8003080:	43db      	mvns	r3, r3
 8003082:	68fa      	ldr	r2, [r7, #12]
 8003084:	4013      	ands	r3, r2
 8003086:	60fb      	str	r3, [r7, #12]
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	4a40      	ldr	r2, [pc, #256]	; (800318c <HAL_GPIO_Init+0x2c0>)
 800308c:	4293      	cmp	r3, r2
 800308e:	d013      	beq.n	80030b8 <HAL_GPIO_Init+0x1ec>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	4a3f      	ldr	r2, [pc, #252]	; (8003190 <HAL_GPIO_Init+0x2c4>)
 8003094:	4293      	cmp	r3, r2
 8003096:	d00d      	beq.n	80030b4 <HAL_GPIO_Init+0x1e8>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	4a3e      	ldr	r2, [pc, #248]	; (8003194 <HAL_GPIO_Init+0x2c8>)
 800309c:	4293      	cmp	r3, r2
 800309e:	d007      	beq.n	80030b0 <HAL_GPIO_Init+0x1e4>
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	4a3d      	ldr	r2, [pc, #244]	; (8003198 <HAL_GPIO_Init+0x2cc>)
 80030a4:	4293      	cmp	r3, r2
 80030a6:	d101      	bne.n	80030ac <HAL_GPIO_Init+0x1e0>
 80030a8:	2303      	movs	r3, #3
 80030aa:	e006      	b.n	80030ba <HAL_GPIO_Init+0x1ee>
 80030ac:	2304      	movs	r3, #4
 80030ae:	e004      	b.n	80030ba <HAL_GPIO_Init+0x1ee>
 80030b0:	2302      	movs	r3, #2
 80030b2:	e002      	b.n	80030ba <HAL_GPIO_Init+0x1ee>
 80030b4:	2301      	movs	r3, #1
 80030b6:	e000      	b.n	80030ba <HAL_GPIO_Init+0x1ee>
 80030b8:	2300      	movs	r3, #0
 80030ba:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80030bc:	f002 0203 	and.w	r2, r2, #3
 80030c0:	0092      	lsls	r2, r2, #2
 80030c2:	4093      	lsls	r3, r2
 80030c4:	68fa      	ldr	r2, [r7, #12]
 80030c6:	4313      	orrs	r3, r2
 80030c8:	60fb      	str	r3, [r7, #12]
 80030ca:	492f      	ldr	r1, [pc, #188]	; (8003188 <HAL_GPIO_Init+0x2bc>)
 80030cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030ce:	089b      	lsrs	r3, r3, #2
 80030d0:	3302      	adds	r3, #2
 80030d2:	68fa      	ldr	r2, [r7, #12]
 80030d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80030d8:	683b      	ldr	r3, [r7, #0]
 80030da:	685b      	ldr	r3, [r3, #4]
 80030dc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d006      	beq.n	80030f2 <HAL_GPIO_Init+0x226>
 80030e4:	4b2d      	ldr	r3, [pc, #180]	; (800319c <HAL_GPIO_Init+0x2d0>)
 80030e6:	689a      	ldr	r2, [r3, #8]
 80030e8:	492c      	ldr	r1, [pc, #176]	; (800319c <HAL_GPIO_Init+0x2d0>)
 80030ea:	69bb      	ldr	r3, [r7, #24]
 80030ec:	4313      	orrs	r3, r2
 80030ee:	608b      	str	r3, [r1, #8]
 80030f0:	e006      	b.n	8003100 <HAL_GPIO_Init+0x234>
 80030f2:	4b2a      	ldr	r3, [pc, #168]	; (800319c <HAL_GPIO_Init+0x2d0>)
 80030f4:	689a      	ldr	r2, [r3, #8]
 80030f6:	69bb      	ldr	r3, [r7, #24]
 80030f8:	43db      	mvns	r3, r3
 80030fa:	4928      	ldr	r1, [pc, #160]	; (800319c <HAL_GPIO_Init+0x2d0>)
 80030fc:	4013      	ands	r3, r2
 80030fe:	608b      	str	r3, [r1, #8]
 8003100:	683b      	ldr	r3, [r7, #0]
 8003102:	685b      	ldr	r3, [r3, #4]
 8003104:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003108:	2b00      	cmp	r3, #0
 800310a:	d006      	beq.n	800311a <HAL_GPIO_Init+0x24e>
 800310c:	4b23      	ldr	r3, [pc, #140]	; (800319c <HAL_GPIO_Init+0x2d0>)
 800310e:	68da      	ldr	r2, [r3, #12]
 8003110:	4922      	ldr	r1, [pc, #136]	; (800319c <HAL_GPIO_Init+0x2d0>)
 8003112:	69bb      	ldr	r3, [r7, #24]
 8003114:	4313      	orrs	r3, r2
 8003116:	60cb      	str	r3, [r1, #12]
 8003118:	e006      	b.n	8003128 <HAL_GPIO_Init+0x25c>
 800311a:	4b20      	ldr	r3, [pc, #128]	; (800319c <HAL_GPIO_Init+0x2d0>)
 800311c:	68da      	ldr	r2, [r3, #12]
 800311e:	69bb      	ldr	r3, [r7, #24]
 8003120:	43db      	mvns	r3, r3
 8003122:	491e      	ldr	r1, [pc, #120]	; (800319c <HAL_GPIO_Init+0x2d0>)
 8003124:	4013      	ands	r3, r2
 8003126:	60cb      	str	r3, [r1, #12]
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	685b      	ldr	r3, [r3, #4]
 800312c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003130:	2b00      	cmp	r3, #0
 8003132:	d006      	beq.n	8003142 <HAL_GPIO_Init+0x276>
 8003134:	4b19      	ldr	r3, [pc, #100]	; (800319c <HAL_GPIO_Init+0x2d0>)
 8003136:	685a      	ldr	r2, [r3, #4]
 8003138:	4918      	ldr	r1, [pc, #96]	; (800319c <HAL_GPIO_Init+0x2d0>)
 800313a:	69bb      	ldr	r3, [r7, #24]
 800313c:	4313      	orrs	r3, r2
 800313e:	604b      	str	r3, [r1, #4]
 8003140:	e006      	b.n	8003150 <HAL_GPIO_Init+0x284>
 8003142:	4b16      	ldr	r3, [pc, #88]	; (800319c <HAL_GPIO_Init+0x2d0>)
 8003144:	685a      	ldr	r2, [r3, #4]
 8003146:	69bb      	ldr	r3, [r7, #24]
 8003148:	43db      	mvns	r3, r3
 800314a:	4914      	ldr	r1, [pc, #80]	; (800319c <HAL_GPIO_Init+0x2d0>)
 800314c:	4013      	ands	r3, r2
 800314e:	604b      	str	r3, [r1, #4]
 8003150:	683b      	ldr	r3, [r7, #0]
 8003152:	685b      	ldr	r3, [r3, #4]
 8003154:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003158:	2b00      	cmp	r3, #0
 800315a:	d021      	beq.n	80031a0 <HAL_GPIO_Init+0x2d4>
 800315c:	4b0f      	ldr	r3, [pc, #60]	; (800319c <HAL_GPIO_Init+0x2d0>)
 800315e:	681a      	ldr	r2, [r3, #0]
 8003160:	490e      	ldr	r1, [pc, #56]	; (800319c <HAL_GPIO_Init+0x2d0>)
 8003162:	69bb      	ldr	r3, [r7, #24]
 8003164:	4313      	orrs	r3, r2
 8003166:	600b      	str	r3, [r1, #0]
 8003168:	e021      	b.n	80031ae <HAL_GPIO_Init+0x2e2>
 800316a:	bf00      	nop
 800316c:	10320000 	.word	0x10320000
 8003170:	10310000 	.word	0x10310000
 8003174:	10220000 	.word	0x10220000
 8003178:	10210000 	.word	0x10210000
 800317c:	10120000 	.word	0x10120000
 8003180:	10110000 	.word	0x10110000
 8003184:	40021000 	.word	0x40021000
 8003188:	40010000 	.word	0x40010000
 800318c:	40010800 	.word	0x40010800
 8003190:	40010c00 	.word	0x40010c00
 8003194:	40011000 	.word	0x40011000
 8003198:	40011400 	.word	0x40011400
 800319c:	40010400 	.word	0x40010400
 80031a0:	4b0b      	ldr	r3, [pc, #44]	; (80031d0 <HAL_GPIO_Init+0x304>)
 80031a2:	681a      	ldr	r2, [r3, #0]
 80031a4:	69bb      	ldr	r3, [r7, #24]
 80031a6:	43db      	mvns	r3, r3
 80031a8:	4909      	ldr	r1, [pc, #36]	; (80031d0 <HAL_GPIO_Init+0x304>)
 80031aa:	4013      	ands	r3, r2
 80031ac:	600b      	str	r3, [r1, #0]
 80031ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031b0:	3301      	adds	r3, #1
 80031b2:	627b      	str	r3, [r7, #36]	; 0x24
 80031b4:	683b      	ldr	r3, [r7, #0]
 80031b6:	681a      	ldr	r2, [r3, #0]
 80031b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031ba:	fa22 f303 	lsr.w	r3, r2, r3
 80031be:	2b00      	cmp	r3, #0
 80031c0:	f47f ae8e 	bne.w	8002ee0 <HAL_GPIO_Init+0x14>
 80031c4:	bf00      	nop
 80031c6:	bf00      	nop
 80031c8:	372c      	adds	r7, #44	; 0x2c
 80031ca:	46bd      	mov	sp, r7
 80031cc:	bc80      	pop	{r7}
 80031ce:	4770      	bx	lr
 80031d0:	40010400 	.word	0x40010400

080031d4 <HAL_GPIO_WritePin>:
 80031d4:	b480      	push	{r7}
 80031d6:	b083      	sub	sp, #12
 80031d8:	af00      	add	r7, sp, #0
 80031da:	6078      	str	r0, [r7, #4]
 80031dc:	460b      	mov	r3, r1
 80031de:	807b      	strh	r3, [r7, #2]
 80031e0:	4613      	mov	r3, r2
 80031e2:	707b      	strb	r3, [r7, #1]
 80031e4:	787b      	ldrb	r3, [r7, #1]
 80031e6:	2b00      	cmp	r3, #0
 80031e8:	d003      	beq.n	80031f2 <HAL_GPIO_WritePin+0x1e>
 80031ea:	887a      	ldrh	r2, [r7, #2]
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	611a      	str	r2, [r3, #16]
 80031f0:	e003      	b.n	80031fa <HAL_GPIO_WritePin+0x26>
 80031f2:	887b      	ldrh	r3, [r7, #2]
 80031f4:	041a      	lsls	r2, r3, #16
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	611a      	str	r2, [r3, #16]
 80031fa:	bf00      	nop
 80031fc:	370c      	adds	r7, #12
 80031fe:	46bd      	mov	sp, r7
 8003200:	bc80      	pop	{r7}
 8003202:	4770      	bx	lr

08003204 <HAL_GPIO_TogglePin>:
 8003204:	b480      	push	{r7}
 8003206:	b085      	sub	sp, #20
 8003208:	af00      	add	r7, sp, #0
 800320a:	6078      	str	r0, [r7, #4]
 800320c:	460b      	mov	r3, r1
 800320e:	807b      	strh	r3, [r7, #2]
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	68db      	ldr	r3, [r3, #12]
 8003214:	60fb      	str	r3, [r7, #12]
 8003216:	887a      	ldrh	r2, [r7, #2]
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	4013      	ands	r3, r2
 800321c:	041a      	lsls	r2, r3, #16
 800321e:	68fb      	ldr	r3, [r7, #12]
 8003220:	43d9      	mvns	r1, r3
 8003222:	887b      	ldrh	r3, [r7, #2]
 8003224:	400b      	ands	r3, r1
 8003226:	431a      	orrs	r2, r3
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	611a      	str	r2, [r3, #16]
 800322c:	bf00      	nop
 800322e:	3714      	adds	r7, #20
 8003230:	46bd      	mov	sp, r7
 8003232:	bc80      	pop	{r7}
 8003234:	4770      	bx	lr
	...

08003238 <HAL_RCC_OscConfig>:
 8003238:	b580      	push	{r7, lr}
 800323a:	b086      	sub	sp, #24
 800323c:	af00      	add	r7, sp, #0
 800323e:	6078      	str	r0, [r7, #4]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	2b00      	cmp	r3, #0
 8003244:	d101      	bne.n	800324a <HAL_RCC_OscConfig+0x12>
 8003246:	2301      	movs	r3, #1
 8003248:	e272      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	f003 0301 	and.w	r3, r3, #1
 8003252:	2b00      	cmp	r3, #0
 8003254:	f000 8087 	beq.w	8003366 <HAL_RCC_OscConfig+0x12e>
 8003258:	4b92      	ldr	r3, [pc, #584]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 800325a:	685b      	ldr	r3, [r3, #4]
 800325c:	f003 030c 	and.w	r3, r3, #12
 8003260:	2b04      	cmp	r3, #4
 8003262:	d00c      	beq.n	800327e <HAL_RCC_OscConfig+0x46>
 8003264:	4b8f      	ldr	r3, [pc, #572]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003266:	685b      	ldr	r3, [r3, #4]
 8003268:	f003 030c 	and.w	r3, r3, #12
 800326c:	2b08      	cmp	r3, #8
 800326e:	d112      	bne.n	8003296 <HAL_RCC_OscConfig+0x5e>
 8003270:	4b8c      	ldr	r3, [pc, #560]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003272:	685b      	ldr	r3, [r3, #4]
 8003274:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003278:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800327c:	d10b      	bne.n	8003296 <HAL_RCC_OscConfig+0x5e>
 800327e:	4b89      	ldr	r3, [pc, #548]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003286:	2b00      	cmp	r3, #0
 8003288:	d06c      	beq.n	8003364 <HAL_RCC_OscConfig+0x12c>
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	685b      	ldr	r3, [r3, #4]
 800328e:	2b00      	cmp	r3, #0
 8003290:	d168      	bne.n	8003364 <HAL_RCC_OscConfig+0x12c>
 8003292:	2301      	movs	r3, #1
 8003294:	e24c      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	685b      	ldr	r3, [r3, #4]
 800329a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800329e:	d106      	bne.n	80032ae <HAL_RCC_OscConfig+0x76>
 80032a0:	4b80      	ldr	r3, [pc, #512]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	4a7f      	ldr	r2, [pc, #508]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80032aa:	6013      	str	r3, [r2, #0]
 80032ac:	e02e      	b.n	800330c <HAL_RCC_OscConfig+0xd4>
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	685b      	ldr	r3, [r3, #4]
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d10c      	bne.n	80032d0 <HAL_RCC_OscConfig+0x98>
 80032b6:	4b7b      	ldr	r3, [pc, #492]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	4a7a      	ldr	r2, [pc, #488]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032bc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80032c0:	6013      	str	r3, [r2, #0]
 80032c2:	4b78      	ldr	r3, [pc, #480]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	4a77      	ldr	r2, [pc, #476]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032c8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80032cc:	6013      	str	r3, [r2, #0]
 80032ce:	e01d      	b.n	800330c <HAL_RCC_OscConfig+0xd4>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	685b      	ldr	r3, [r3, #4]
 80032d4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80032d8:	d10c      	bne.n	80032f4 <HAL_RCC_OscConfig+0xbc>
 80032da:	4b72      	ldr	r3, [pc, #456]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	4a71      	ldr	r2, [pc, #452]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032e0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80032e4:	6013      	str	r3, [r2, #0]
 80032e6:	4b6f      	ldr	r3, [pc, #444]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	4a6e      	ldr	r2, [pc, #440]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032ec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80032f0:	6013      	str	r3, [r2, #0]
 80032f2:	e00b      	b.n	800330c <HAL_RCC_OscConfig+0xd4>
 80032f4:	4b6b      	ldr	r3, [pc, #428]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	4a6a      	ldr	r2, [pc, #424]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80032fa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80032fe:	6013      	str	r3, [r2, #0]
 8003300:	4b68      	ldr	r3, [pc, #416]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	4a67      	ldr	r2, [pc, #412]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003306:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800330a:	6013      	str	r3, [r2, #0]
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	685b      	ldr	r3, [r3, #4]
 8003310:	2b00      	cmp	r3, #0
 8003312:	d013      	beq.n	800333c <HAL_RCC_OscConfig+0x104>
 8003314:	f7ff fc1a 	bl	8002b4c <HAL_GetTick>
 8003318:	6138      	str	r0, [r7, #16]
 800331a:	e008      	b.n	800332e <HAL_RCC_OscConfig+0xf6>
 800331c:	f7ff fc16 	bl	8002b4c <HAL_GetTick>
 8003320:	4602      	mov	r2, r0
 8003322:	693b      	ldr	r3, [r7, #16]
 8003324:	1ad3      	subs	r3, r2, r3
 8003326:	2b64      	cmp	r3, #100	; 0x64
 8003328:	d901      	bls.n	800332e <HAL_RCC_OscConfig+0xf6>
 800332a:	2303      	movs	r3, #3
 800332c:	e200      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 800332e:	4b5d      	ldr	r3, [pc, #372]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003336:	2b00      	cmp	r3, #0
 8003338:	d0f0      	beq.n	800331c <HAL_RCC_OscConfig+0xe4>
 800333a:	e014      	b.n	8003366 <HAL_RCC_OscConfig+0x12e>
 800333c:	f7ff fc06 	bl	8002b4c <HAL_GetTick>
 8003340:	6138      	str	r0, [r7, #16]
 8003342:	e008      	b.n	8003356 <HAL_RCC_OscConfig+0x11e>
 8003344:	f7ff fc02 	bl	8002b4c <HAL_GetTick>
 8003348:	4602      	mov	r2, r0
 800334a:	693b      	ldr	r3, [r7, #16]
 800334c:	1ad3      	subs	r3, r2, r3
 800334e:	2b64      	cmp	r3, #100	; 0x64
 8003350:	d901      	bls.n	8003356 <HAL_RCC_OscConfig+0x11e>
 8003352:	2303      	movs	r3, #3
 8003354:	e1ec      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 8003356:	4b53      	ldr	r3, [pc, #332]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800335e:	2b00      	cmp	r3, #0
 8003360:	d1f0      	bne.n	8003344 <HAL_RCC_OscConfig+0x10c>
 8003362:	e000      	b.n	8003366 <HAL_RCC_OscConfig+0x12e>
 8003364:	bf00      	nop
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	f003 0302 	and.w	r3, r3, #2
 800336e:	2b00      	cmp	r3, #0
 8003370:	d063      	beq.n	800343a <HAL_RCC_OscConfig+0x202>
 8003372:	4b4c      	ldr	r3, [pc, #304]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003374:	685b      	ldr	r3, [r3, #4]
 8003376:	f003 030c 	and.w	r3, r3, #12
 800337a:	2b00      	cmp	r3, #0
 800337c:	d00b      	beq.n	8003396 <HAL_RCC_OscConfig+0x15e>
 800337e:	4b49      	ldr	r3, [pc, #292]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003380:	685b      	ldr	r3, [r3, #4]
 8003382:	f003 030c 	and.w	r3, r3, #12
 8003386:	2b08      	cmp	r3, #8
 8003388:	d11c      	bne.n	80033c4 <HAL_RCC_OscConfig+0x18c>
 800338a:	4b46      	ldr	r3, [pc, #280]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 800338c:	685b      	ldr	r3, [r3, #4]
 800338e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003392:	2b00      	cmp	r3, #0
 8003394:	d116      	bne.n	80033c4 <HAL_RCC_OscConfig+0x18c>
 8003396:	4b43      	ldr	r3, [pc, #268]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	f003 0302 	and.w	r3, r3, #2
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d005      	beq.n	80033ae <HAL_RCC_OscConfig+0x176>
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	691b      	ldr	r3, [r3, #16]
 80033a6:	2b01      	cmp	r3, #1
 80033a8:	d001      	beq.n	80033ae <HAL_RCC_OscConfig+0x176>
 80033aa:	2301      	movs	r3, #1
 80033ac:	e1c0      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80033ae:	4b3d      	ldr	r3, [pc, #244]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	695b      	ldr	r3, [r3, #20]
 80033ba:	00db      	lsls	r3, r3, #3
 80033bc:	4939      	ldr	r1, [pc, #228]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80033be:	4313      	orrs	r3, r2
 80033c0:	600b      	str	r3, [r1, #0]
 80033c2:	e03a      	b.n	800343a <HAL_RCC_OscConfig+0x202>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	691b      	ldr	r3, [r3, #16]
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d020      	beq.n	800340e <HAL_RCC_OscConfig+0x1d6>
 80033cc:	4b36      	ldr	r3, [pc, #216]	; (80034a8 <HAL_RCC_OscConfig+0x270>)
 80033ce:	2201      	movs	r2, #1
 80033d0:	601a      	str	r2, [r3, #0]
 80033d2:	f7ff fbbb 	bl	8002b4c <HAL_GetTick>
 80033d6:	6138      	str	r0, [r7, #16]
 80033d8:	e008      	b.n	80033ec <HAL_RCC_OscConfig+0x1b4>
 80033da:	f7ff fbb7 	bl	8002b4c <HAL_GetTick>
 80033de:	4602      	mov	r2, r0
 80033e0:	693b      	ldr	r3, [r7, #16]
 80033e2:	1ad3      	subs	r3, r2, r3
 80033e4:	2b02      	cmp	r3, #2
 80033e6:	d901      	bls.n	80033ec <HAL_RCC_OscConfig+0x1b4>
 80033e8:	2303      	movs	r3, #3
 80033ea:	e1a1      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80033ec:	4b2d      	ldr	r3, [pc, #180]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	f003 0302 	and.w	r3, r3, #2
 80033f4:	2b00      	cmp	r3, #0
 80033f6:	d0f0      	beq.n	80033da <HAL_RCC_OscConfig+0x1a2>
 80033f8:	4b2a      	ldr	r3, [pc, #168]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	695b      	ldr	r3, [r3, #20]
 8003404:	00db      	lsls	r3, r3, #3
 8003406:	4927      	ldr	r1, [pc, #156]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003408:	4313      	orrs	r3, r2
 800340a:	600b      	str	r3, [r1, #0]
 800340c:	e015      	b.n	800343a <HAL_RCC_OscConfig+0x202>
 800340e:	4b26      	ldr	r3, [pc, #152]	; (80034a8 <HAL_RCC_OscConfig+0x270>)
 8003410:	2200      	movs	r2, #0
 8003412:	601a      	str	r2, [r3, #0]
 8003414:	f7ff fb9a 	bl	8002b4c <HAL_GetTick>
 8003418:	6138      	str	r0, [r7, #16]
 800341a:	e008      	b.n	800342e <HAL_RCC_OscConfig+0x1f6>
 800341c:	f7ff fb96 	bl	8002b4c <HAL_GetTick>
 8003420:	4602      	mov	r2, r0
 8003422:	693b      	ldr	r3, [r7, #16]
 8003424:	1ad3      	subs	r3, r2, r3
 8003426:	2b02      	cmp	r3, #2
 8003428:	d901      	bls.n	800342e <HAL_RCC_OscConfig+0x1f6>
 800342a:	2303      	movs	r3, #3
 800342c:	e180      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 800342e:	4b1d      	ldr	r3, [pc, #116]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	f003 0302 	and.w	r3, r3, #2
 8003436:	2b00      	cmp	r3, #0
 8003438:	d1f0      	bne.n	800341c <HAL_RCC_OscConfig+0x1e4>
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	f003 0308 	and.w	r3, r3, #8
 8003442:	2b00      	cmp	r3, #0
 8003444:	d03a      	beq.n	80034bc <HAL_RCC_OscConfig+0x284>
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	699b      	ldr	r3, [r3, #24]
 800344a:	2b00      	cmp	r3, #0
 800344c:	d019      	beq.n	8003482 <HAL_RCC_OscConfig+0x24a>
 800344e:	4b17      	ldr	r3, [pc, #92]	; (80034ac <HAL_RCC_OscConfig+0x274>)
 8003450:	2201      	movs	r2, #1
 8003452:	601a      	str	r2, [r3, #0]
 8003454:	f7ff fb7a 	bl	8002b4c <HAL_GetTick>
 8003458:	6138      	str	r0, [r7, #16]
 800345a:	e008      	b.n	800346e <HAL_RCC_OscConfig+0x236>
 800345c:	f7ff fb76 	bl	8002b4c <HAL_GetTick>
 8003460:	4602      	mov	r2, r0
 8003462:	693b      	ldr	r3, [r7, #16]
 8003464:	1ad3      	subs	r3, r2, r3
 8003466:	2b02      	cmp	r3, #2
 8003468:	d901      	bls.n	800346e <HAL_RCC_OscConfig+0x236>
 800346a:	2303      	movs	r3, #3
 800346c:	e160      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 800346e:	4b0d      	ldr	r3, [pc, #52]	; (80034a4 <HAL_RCC_OscConfig+0x26c>)
 8003470:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003472:	f003 0302 	and.w	r3, r3, #2
 8003476:	2b00      	cmp	r3, #0
 8003478:	d0f0      	beq.n	800345c <HAL_RCC_OscConfig+0x224>
 800347a:	2001      	movs	r0, #1
 800347c:	f000 fb1e 	bl	8003abc <RCC_Delay>
 8003480:	e01c      	b.n	80034bc <HAL_RCC_OscConfig+0x284>
 8003482:	4b0a      	ldr	r3, [pc, #40]	; (80034ac <HAL_RCC_OscConfig+0x274>)
 8003484:	2200      	movs	r2, #0
 8003486:	601a      	str	r2, [r3, #0]
 8003488:	f7ff fb60 	bl	8002b4c <HAL_GetTick>
 800348c:	6138      	str	r0, [r7, #16]
 800348e:	e00f      	b.n	80034b0 <HAL_RCC_OscConfig+0x278>
 8003490:	f7ff fb5c 	bl	8002b4c <HAL_GetTick>
 8003494:	4602      	mov	r2, r0
 8003496:	693b      	ldr	r3, [r7, #16]
 8003498:	1ad3      	subs	r3, r2, r3
 800349a:	2b02      	cmp	r3, #2
 800349c:	d908      	bls.n	80034b0 <HAL_RCC_OscConfig+0x278>
 800349e:	2303      	movs	r3, #3
 80034a0:	e146      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80034a2:	bf00      	nop
 80034a4:	40021000 	.word	0x40021000
 80034a8:	42420000 	.word	0x42420000
 80034ac:	42420480 	.word	0x42420480
 80034b0:	4b92      	ldr	r3, [pc, #584]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80034b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034b4:	f003 0302 	and.w	r3, r3, #2
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d1e9      	bne.n	8003490 <HAL_RCC_OscConfig+0x258>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	f003 0304 	and.w	r3, r3, #4
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	f000 80a6 	beq.w	8003616 <HAL_RCC_OscConfig+0x3de>
 80034ca:	2300      	movs	r3, #0
 80034cc:	75fb      	strb	r3, [r7, #23]
 80034ce:	4b8b      	ldr	r3, [pc, #556]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80034d0:	69db      	ldr	r3, [r3, #28]
 80034d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80034d6:	2b00      	cmp	r3, #0
 80034d8:	d10d      	bne.n	80034f6 <HAL_RCC_OscConfig+0x2be>
 80034da:	4b88      	ldr	r3, [pc, #544]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80034dc:	69db      	ldr	r3, [r3, #28]
 80034de:	4a87      	ldr	r2, [pc, #540]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80034e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80034e4:	61d3      	str	r3, [r2, #28]
 80034e6:	4b85      	ldr	r3, [pc, #532]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80034e8:	69db      	ldr	r3, [r3, #28]
 80034ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80034ee:	60bb      	str	r3, [r7, #8]
 80034f0:	68bb      	ldr	r3, [r7, #8]
 80034f2:	2301      	movs	r3, #1
 80034f4:	75fb      	strb	r3, [r7, #23]
 80034f6:	4b82      	ldr	r3, [pc, #520]	; (8003700 <HAL_RCC_OscConfig+0x4c8>)
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80034fe:	2b00      	cmp	r3, #0
 8003500:	d118      	bne.n	8003534 <HAL_RCC_OscConfig+0x2fc>
 8003502:	4b7f      	ldr	r3, [pc, #508]	; (8003700 <HAL_RCC_OscConfig+0x4c8>)
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	4a7e      	ldr	r2, [pc, #504]	; (8003700 <HAL_RCC_OscConfig+0x4c8>)
 8003508:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800350c:	6013      	str	r3, [r2, #0]
 800350e:	f7ff fb1d 	bl	8002b4c <HAL_GetTick>
 8003512:	6138      	str	r0, [r7, #16]
 8003514:	e008      	b.n	8003528 <HAL_RCC_OscConfig+0x2f0>
 8003516:	f7ff fb19 	bl	8002b4c <HAL_GetTick>
 800351a:	4602      	mov	r2, r0
 800351c:	693b      	ldr	r3, [r7, #16]
 800351e:	1ad3      	subs	r3, r2, r3
 8003520:	2b64      	cmp	r3, #100	; 0x64
 8003522:	d901      	bls.n	8003528 <HAL_RCC_OscConfig+0x2f0>
 8003524:	2303      	movs	r3, #3
 8003526:	e103      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 8003528:	4b75      	ldr	r3, [pc, #468]	; (8003700 <HAL_RCC_OscConfig+0x4c8>)
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003530:	2b00      	cmp	r3, #0
 8003532:	d0f0      	beq.n	8003516 <HAL_RCC_OscConfig+0x2de>
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	68db      	ldr	r3, [r3, #12]
 8003538:	2b01      	cmp	r3, #1
 800353a:	d106      	bne.n	800354a <HAL_RCC_OscConfig+0x312>
 800353c:	4b6f      	ldr	r3, [pc, #444]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 800353e:	6a1b      	ldr	r3, [r3, #32]
 8003540:	4a6e      	ldr	r2, [pc, #440]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003542:	f043 0301 	orr.w	r3, r3, #1
 8003546:	6213      	str	r3, [r2, #32]
 8003548:	e02d      	b.n	80035a6 <HAL_RCC_OscConfig+0x36e>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	68db      	ldr	r3, [r3, #12]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d10c      	bne.n	800356c <HAL_RCC_OscConfig+0x334>
 8003552:	4b6a      	ldr	r3, [pc, #424]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003554:	6a1b      	ldr	r3, [r3, #32]
 8003556:	4a69      	ldr	r2, [pc, #420]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003558:	f023 0301 	bic.w	r3, r3, #1
 800355c:	6213      	str	r3, [r2, #32]
 800355e:	4b67      	ldr	r3, [pc, #412]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003560:	6a1b      	ldr	r3, [r3, #32]
 8003562:	4a66      	ldr	r2, [pc, #408]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003564:	f023 0304 	bic.w	r3, r3, #4
 8003568:	6213      	str	r3, [r2, #32]
 800356a:	e01c      	b.n	80035a6 <HAL_RCC_OscConfig+0x36e>
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	68db      	ldr	r3, [r3, #12]
 8003570:	2b05      	cmp	r3, #5
 8003572:	d10c      	bne.n	800358e <HAL_RCC_OscConfig+0x356>
 8003574:	4b61      	ldr	r3, [pc, #388]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003576:	6a1b      	ldr	r3, [r3, #32]
 8003578:	4a60      	ldr	r2, [pc, #384]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 800357a:	f043 0304 	orr.w	r3, r3, #4
 800357e:	6213      	str	r3, [r2, #32]
 8003580:	4b5e      	ldr	r3, [pc, #376]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003582:	6a1b      	ldr	r3, [r3, #32]
 8003584:	4a5d      	ldr	r2, [pc, #372]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003586:	f043 0301 	orr.w	r3, r3, #1
 800358a:	6213      	str	r3, [r2, #32]
 800358c:	e00b      	b.n	80035a6 <HAL_RCC_OscConfig+0x36e>
 800358e:	4b5b      	ldr	r3, [pc, #364]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003590:	6a1b      	ldr	r3, [r3, #32]
 8003592:	4a5a      	ldr	r2, [pc, #360]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003594:	f023 0301 	bic.w	r3, r3, #1
 8003598:	6213      	str	r3, [r2, #32]
 800359a:	4b58      	ldr	r3, [pc, #352]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 800359c:	6a1b      	ldr	r3, [r3, #32]
 800359e:	4a57      	ldr	r2, [pc, #348]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80035a0:	f023 0304 	bic.w	r3, r3, #4
 80035a4:	6213      	str	r3, [r2, #32]
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	68db      	ldr	r3, [r3, #12]
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d015      	beq.n	80035da <HAL_RCC_OscConfig+0x3a2>
 80035ae:	f7ff facd 	bl	8002b4c <HAL_GetTick>
 80035b2:	6138      	str	r0, [r7, #16]
 80035b4:	e00a      	b.n	80035cc <HAL_RCC_OscConfig+0x394>
 80035b6:	f7ff fac9 	bl	8002b4c <HAL_GetTick>
 80035ba:	4602      	mov	r2, r0
 80035bc:	693b      	ldr	r3, [r7, #16]
 80035be:	1ad3      	subs	r3, r2, r3
 80035c0:	f241 3288 	movw	r2, #5000	; 0x1388
 80035c4:	4293      	cmp	r3, r2
 80035c6:	d901      	bls.n	80035cc <HAL_RCC_OscConfig+0x394>
 80035c8:	2303      	movs	r3, #3
 80035ca:	e0b1      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80035cc:	4b4b      	ldr	r3, [pc, #300]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80035ce:	6a1b      	ldr	r3, [r3, #32]
 80035d0:	f003 0302 	and.w	r3, r3, #2
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d0ee      	beq.n	80035b6 <HAL_RCC_OscConfig+0x37e>
 80035d8:	e014      	b.n	8003604 <HAL_RCC_OscConfig+0x3cc>
 80035da:	f7ff fab7 	bl	8002b4c <HAL_GetTick>
 80035de:	6138      	str	r0, [r7, #16]
 80035e0:	e00a      	b.n	80035f8 <HAL_RCC_OscConfig+0x3c0>
 80035e2:	f7ff fab3 	bl	8002b4c <HAL_GetTick>
 80035e6:	4602      	mov	r2, r0
 80035e8:	693b      	ldr	r3, [r7, #16]
 80035ea:	1ad3      	subs	r3, r2, r3
 80035ec:	f241 3288 	movw	r2, #5000	; 0x1388
 80035f0:	4293      	cmp	r3, r2
 80035f2:	d901      	bls.n	80035f8 <HAL_RCC_OscConfig+0x3c0>
 80035f4:	2303      	movs	r3, #3
 80035f6:	e09b      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80035f8:	4b40      	ldr	r3, [pc, #256]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80035fa:	6a1b      	ldr	r3, [r3, #32]
 80035fc:	f003 0302 	and.w	r3, r3, #2
 8003600:	2b00      	cmp	r3, #0
 8003602:	d1ee      	bne.n	80035e2 <HAL_RCC_OscConfig+0x3aa>
 8003604:	7dfb      	ldrb	r3, [r7, #23]
 8003606:	2b01      	cmp	r3, #1
 8003608:	d105      	bne.n	8003616 <HAL_RCC_OscConfig+0x3de>
 800360a:	4b3c      	ldr	r3, [pc, #240]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 800360c:	69db      	ldr	r3, [r3, #28]
 800360e:	4a3b      	ldr	r2, [pc, #236]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003610:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003614:	61d3      	str	r3, [r2, #28]
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	69db      	ldr	r3, [r3, #28]
 800361a:	2b00      	cmp	r3, #0
 800361c:	f000 8087 	beq.w	800372e <HAL_RCC_OscConfig+0x4f6>
 8003620:	4b36      	ldr	r3, [pc, #216]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003622:	685b      	ldr	r3, [r3, #4]
 8003624:	f003 030c 	and.w	r3, r3, #12
 8003628:	2b08      	cmp	r3, #8
 800362a:	d061      	beq.n	80036f0 <HAL_RCC_OscConfig+0x4b8>
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	69db      	ldr	r3, [r3, #28]
 8003630:	2b02      	cmp	r3, #2
 8003632:	d146      	bne.n	80036c2 <HAL_RCC_OscConfig+0x48a>
 8003634:	4b33      	ldr	r3, [pc, #204]	; (8003704 <HAL_RCC_OscConfig+0x4cc>)
 8003636:	2200      	movs	r2, #0
 8003638:	601a      	str	r2, [r3, #0]
 800363a:	f7ff fa87 	bl	8002b4c <HAL_GetTick>
 800363e:	6138      	str	r0, [r7, #16]
 8003640:	e008      	b.n	8003654 <HAL_RCC_OscConfig+0x41c>
 8003642:	f7ff fa83 	bl	8002b4c <HAL_GetTick>
 8003646:	4602      	mov	r2, r0
 8003648:	693b      	ldr	r3, [r7, #16]
 800364a:	1ad3      	subs	r3, r2, r3
 800364c:	2b02      	cmp	r3, #2
 800364e:	d901      	bls.n	8003654 <HAL_RCC_OscConfig+0x41c>
 8003650:	2303      	movs	r3, #3
 8003652:	e06d      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 8003654:	4b29      	ldr	r3, [pc, #164]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800365c:	2b00      	cmp	r3, #0
 800365e:	d1f0      	bne.n	8003642 <HAL_RCC_OscConfig+0x40a>
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	6a1b      	ldr	r3, [r3, #32]
 8003664:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003668:	d108      	bne.n	800367c <HAL_RCC_OscConfig+0x444>
 800366a:	4b24      	ldr	r3, [pc, #144]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 800366c:	685b      	ldr	r3, [r3, #4]
 800366e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	689b      	ldr	r3, [r3, #8]
 8003676:	4921      	ldr	r1, [pc, #132]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003678:	4313      	orrs	r3, r2
 800367a:	604b      	str	r3, [r1, #4]
 800367c:	4b1f      	ldr	r3, [pc, #124]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 800367e:	685b      	ldr	r3, [r3, #4]
 8003680:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	6a19      	ldr	r1, [r3, #32]
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800368c:	430b      	orrs	r3, r1
 800368e:	491b      	ldr	r1, [pc, #108]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 8003690:	4313      	orrs	r3, r2
 8003692:	604b      	str	r3, [r1, #4]
 8003694:	4b1b      	ldr	r3, [pc, #108]	; (8003704 <HAL_RCC_OscConfig+0x4cc>)
 8003696:	2201      	movs	r2, #1
 8003698:	601a      	str	r2, [r3, #0]
 800369a:	f7ff fa57 	bl	8002b4c <HAL_GetTick>
 800369e:	6138      	str	r0, [r7, #16]
 80036a0:	e008      	b.n	80036b4 <HAL_RCC_OscConfig+0x47c>
 80036a2:	f7ff fa53 	bl	8002b4c <HAL_GetTick>
 80036a6:	4602      	mov	r2, r0
 80036a8:	693b      	ldr	r3, [r7, #16]
 80036aa:	1ad3      	subs	r3, r2, r3
 80036ac:	2b02      	cmp	r3, #2
 80036ae:	d901      	bls.n	80036b4 <HAL_RCC_OscConfig+0x47c>
 80036b0:	2303      	movs	r3, #3
 80036b2:	e03d      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80036b4:	4b11      	ldr	r3, [pc, #68]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80036bc:	2b00      	cmp	r3, #0
 80036be:	d0f0      	beq.n	80036a2 <HAL_RCC_OscConfig+0x46a>
 80036c0:	e035      	b.n	800372e <HAL_RCC_OscConfig+0x4f6>
 80036c2:	4b10      	ldr	r3, [pc, #64]	; (8003704 <HAL_RCC_OscConfig+0x4cc>)
 80036c4:	2200      	movs	r2, #0
 80036c6:	601a      	str	r2, [r3, #0]
 80036c8:	f7ff fa40 	bl	8002b4c <HAL_GetTick>
 80036cc:	6138      	str	r0, [r7, #16]
 80036ce:	e008      	b.n	80036e2 <HAL_RCC_OscConfig+0x4aa>
 80036d0:	f7ff fa3c 	bl	8002b4c <HAL_GetTick>
 80036d4:	4602      	mov	r2, r0
 80036d6:	693b      	ldr	r3, [r7, #16]
 80036d8:	1ad3      	subs	r3, r2, r3
 80036da:	2b02      	cmp	r3, #2
 80036dc:	d901      	bls.n	80036e2 <HAL_RCC_OscConfig+0x4aa>
 80036de:	2303      	movs	r3, #3
 80036e0:	e026      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80036e2:	4b06      	ldr	r3, [pc, #24]	; (80036fc <HAL_RCC_OscConfig+0x4c4>)
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d1f0      	bne.n	80036d0 <HAL_RCC_OscConfig+0x498>
 80036ee:	e01e      	b.n	800372e <HAL_RCC_OscConfig+0x4f6>
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	69db      	ldr	r3, [r3, #28]
 80036f4:	2b01      	cmp	r3, #1
 80036f6:	d107      	bne.n	8003708 <HAL_RCC_OscConfig+0x4d0>
 80036f8:	2301      	movs	r3, #1
 80036fa:	e019      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 80036fc:	40021000 	.word	0x40021000
 8003700:	40007000 	.word	0x40007000
 8003704:	42420060 	.word	0x42420060
 8003708:	4b0b      	ldr	r3, [pc, #44]	; (8003738 <HAL_RCC_OscConfig+0x500>)
 800370a:	685b      	ldr	r3, [r3, #4]
 800370c:	60fb      	str	r3, [r7, #12]
 800370e:	68fb      	ldr	r3, [r7, #12]
 8003710:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	6a1b      	ldr	r3, [r3, #32]
 8003718:	429a      	cmp	r2, r3
 800371a:	d106      	bne.n	800372a <HAL_RCC_OscConfig+0x4f2>
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003726:	429a      	cmp	r2, r3
 8003728:	d001      	beq.n	800372e <HAL_RCC_OscConfig+0x4f6>
 800372a:	2301      	movs	r3, #1
 800372c:	e000      	b.n	8003730 <HAL_RCC_OscConfig+0x4f8>
 800372e:	2300      	movs	r3, #0
 8003730:	4618      	mov	r0, r3
 8003732:	3718      	adds	r7, #24
 8003734:	46bd      	mov	sp, r7
 8003736:	bd80      	pop	{r7, pc}
 8003738:	40021000 	.word	0x40021000

0800373c <HAL_RCC_ClockConfig>:
 800373c:	b580      	push	{r7, lr}
 800373e:	b084      	sub	sp, #16
 8003740:	af00      	add	r7, sp, #0
 8003742:	6078      	str	r0, [r7, #4]
 8003744:	6039      	str	r1, [r7, #0]
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	2b00      	cmp	r3, #0
 800374a:	d101      	bne.n	8003750 <HAL_RCC_ClockConfig+0x14>
 800374c:	2301      	movs	r3, #1
 800374e:	e0d0      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 8003750:	4b6a      	ldr	r3, [pc, #424]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f003 0307 	and.w	r3, r3, #7
 8003758:	683a      	ldr	r2, [r7, #0]
 800375a:	429a      	cmp	r2, r3
 800375c:	d910      	bls.n	8003780 <HAL_RCC_ClockConfig+0x44>
 800375e:	4b67      	ldr	r3, [pc, #412]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	f023 0207 	bic.w	r2, r3, #7
 8003766:	4965      	ldr	r1, [pc, #404]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 8003768:	683b      	ldr	r3, [r7, #0]
 800376a:	4313      	orrs	r3, r2
 800376c:	600b      	str	r3, [r1, #0]
 800376e:	4b63      	ldr	r3, [pc, #396]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	f003 0307 	and.w	r3, r3, #7
 8003776:	683a      	ldr	r2, [r7, #0]
 8003778:	429a      	cmp	r2, r3
 800377a:	d001      	beq.n	8003780 <HAL_RCC_ClockConfig+0x44>
 800377c:	2301      	movs	r3, #1
 800377e:	e0b8      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	f003 0302 	and.w	r3, r3, #2
 8003788:	2b00      	cmp	r3, #0
 800378a:	d020      	beq.n	80037ce <HAL_RCC_ClockConfig+0x92>
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	681b      	ldr	r3, [r3, #0]
 8003790:	f003 0304 	and.w	r3, r3, #4
 8003794:	2b00      	cmp	r3, #0
 8003796:	d005      	beq.n	80037a4 <HAL_RCC_ClockConfig+0x68>
 8003798:	4b59      	ldr	r3, [pc, #356]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 800379a:	685b      	ldr	r3, [r3, #4]
 800379c:	4a58      	ldr	r2, [pc, #352]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 800379e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80037a2:	6053      	str	r3, [r2, #4]
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	f003 0308 	and.w	r3, r3, #8
 80037ac:	2b00      	cmp	r3, #0
 80037ae:	d005      	beq.n	80037bc <HAL_RCC_ClockConfig+0x80>
 80037b0:	4b53      	ldr	r3, [pc, #332]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80037b2:	685b      	ldr	r3, [r3, #4]
 80037b4:	4a52      	ldr	r2, [pc, #328]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80037b6:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80037ba:	6053      	str	r3, [r2, #4]
 80037bc:	4b50      	ldr	r3, [pc, #320]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80037be:	685b      	ldr	r3, [r3, #4]
 80037c0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	689b      	ldr	r3, [r3, #8]
 80037c8:	494d      	ldr	r1, [pc, #308]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80037ca:	4313      	orrs	r3, r2
 80037cc:	604b      	str	r3, [r1, #4]
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	f003 0301 	and.w	r3, r3, #1
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	d040      	beq.n	800385c <HAL_RCC_ClockConfig+0x120>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	685b      	ldr	r3, [r3, #4]
 80037de:	2b01      	cmp	r3, #1
 80037e0:	d107      	bne.n	80037f2 <HAL_RCC_ClockConfig+0xb6>
 80037e2:	4b47      	ldr	r3, [pc, #284]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80037ea:	2b00      	cmp	r3, #0
 80037ec:	d115      	bne.n	800381a <HAL_RCC_ClockConfig+0xde>
 80037ee:	2301      	movs	r3, #1
 80037f0:	e07f      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	685b      	ldr	r3, [r3, #4]
 80037f6:	2b02      	cmp	r3, #2
 80037f8:	d107      	bne.n	800380a <HAL_RCC_ClockConfig+0xce>
 80037fa:	4b41      	ldr	r3, [pc, #260]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003802:	2b00      	cmp	r3, #0
 8003804:	d109      	bne.n	800381a <HAL_RCC_ClockConfig+0xde>
 8003806:	2301      	movs	r3, #1
 8003808:	e073      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 800380a:	4b3d      	ldr	r3, [pc, #244]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	f003 0302 	and.w	r3, r3, #2
 8003812:	2b00      	cmp	r3, #0
 8003814:	d101      	bne.n	800381a <HAL_RCC_ClockConfig+0xde>
 8003816:	2301      	movs	r3, #1
 8003818:	e06b      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 800381a:	4b39      	ldr	r3, [pc, #228]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 800381c:	685b      	ldr	r3, [r3, #4]
 800381e:	f023 0203 	bic.w	r2, r3, #3
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	685b      	ldr	r3, [r3, #4]
 8003826:	4936      	ldr	r1, [pc, #216]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 8003828:	4313      	orrs	r3, r2
 800382a:	604b      	str	r3, [r1, #4]
 800382c:	f7ff f98e 	bl	8002b4c <HAL_GetTick>
 8003830:	60f8      	str	r0, [r7, #12]
 8003832:	e00a      	b.n	800384a <HAL_RCC_ClockConfig+0x10e>
 8003834:	f7ff f98a 	bl	8002b4c <HAL_GetTick>
 8003838:	4602      	mov	r2, r0
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	1ad3      	subs	r3, r2, r3
 800383e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003842:	4293      	cmp	r3, r2
 8003844:	d901      	bls.n	800384a <HAL_RCC_ClockConfig+0x10e>
 8003846:	2303      	movs	r3, #3
 8003848:	e053      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 800384a:	4b2d      	ldr	r3, [pc, #180]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 800384c:	685b      	ldr	r3, [r3, #4]
 800384e:	f003 020c 	and.w	r2, r3, #12
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	685b      	ldr	r3, [r3, #4]
 8003856:	009b      	lsls	r3, r3, #2
 8003858:	429a      	cmp	r2, r3
 800385a:	d1eb      	bne.n	8003834 <HAL_RCC_ClockConfig+0xf8>
 800385c:	4b27      	ldr	r3, [pc, #156]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	f003 0307 	and.w	r3, r3, #7
 8003864:	683a      	ldr	r2, [r7, #0]
 8003866:	429a      	cmp	r2, r3
 8003868:	d210      	bcs.n	800388c <HAL_RCC_ClockConfig+0x150>
 800386a:	4b24      	ldr	r3, [pc, #144]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	f023 0207 	bic.w	r2, r3, #7
 8003872:	4922      	ldr	r1, [pc, #136]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 8003874:	683b      	ldr	r3, [r7, #0]
 8003876:	4313      	orrs	r3, r2
 8003878:	600b      	str	r3, [r1, #0]
 800387a:	4b20      	ldr	r3, [pc, #128]	; (80038fc <HAL_RCC_ClockConfig+0x1c0>)
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	f003 0307 	and.w	r3, r3, #7
 8003882:	683a      	ldr	r2, [r7, #0]
 8003884:	429a      	cmp	r2, r3
 8003886:	d001      	beq.n	800388c <HAL_RCC_ClockConfig+0x150>
 8003888:	2301      	movs	r3, #1
 800388a:	e032      	b.n	80038f2 <HAL_RCC_ClockConfig+0x1b6>
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	f003 0304 	and.w	r3, r3, #4
 8003894:	2b00      	cmp	r3, #0
 8003896:	d008      	beq.n	80038aa <HAL_RCC_ClockConfig+0x16e>
 8003898:	4b19      	ldr	r3, [pc, #100]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 800389a:	685b      	ldr	r3, [r3, #4]
 800389c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	68db      	ldr	r3, [r3, #12]
 80038a4:	4916      	ldr	r1, [pc, #88]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80038a6:	4313      	orrs	r3, r2
 80038a8:	604b      	str	r3, [r1, #4]
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	681b      	ldr	r3, [r3, #0]
 80038ae:	f003 0308 	and.w	r3, r3, #8
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	d009      	beq.n	80038ca <HAL_RCC_ClockConfig+0x18e>
 80038b6:	4b12      	ldr	r3, [pc, #72]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80038b8:	685b      	ldr	r3, [r3, #4]
 80038ba:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	691b      	ldr	r3, [r3, #16]
 80038c2:	00db      	lsls	r3, r3, #3
 80038c4:	490e      	ldr	r1, [pc, #56]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80038c6:	4313      	orrs	r3, r2
 80038c8:	604b      	str	r3, [r1, #4]
 80038ca:	f000 f82d 	bl	8003928 <HAL_RCC_GetSysClockFreq>
 80038ce:	4602      	mov	r2, r0
 80038d0:	4b0b      	ldr	r3, [pc, #44]	; (8003900 <HAL_RCC_ClockConfig+0x1c4>)
 80038d2:	685b      	ldr	r3, [r3, #4]
 80038d4:	091b      	lsrs	r3, r3, #4
 80038d6:	f003 030f 	and.w	r3, r3, #15
 80038da:	490a      	ldr	r1, [pc, #40]	; (8003904 <HAL_RCC_ClockConfig+0x1c8>)
 80038dc:	5ccb      	ldrb	r3, [r1, r3]
 80038de:	fa22 f303 	lsr.w	r3, r2, r3
 80038e2:	4a09      	ldr	r2, [pc, #36]	; (8003908 <HAL_RCC_ClockConfig+0x1cc>)
 80038e4:	6013      	str	r3, [r2, #0]
 80038e6:	4b09      	ldr	r3, [pc, #36]	; (800390c <HAL_RCC_ClockConfig+0x1d0>)
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	4618      	mov	r0, r3
 80038ec:	f7fe ff4c 	bl	8002788 <HAL_InitTick>
 80038f0:	2300      	movs	r3, #0
 80038f2:	4618      	mov	r0, r3
 80038f4:	3710      	adds	r7, #16
 80038f6:	46bd      	mov	sp, r7
 80038f8:	bd80      	pop	{r7, pc}
 80038fa:	bf00      	nop
 80038fc:	40022000 	.word	0x40022000
 8003900:	40021000 	.word	0x40021000
 8003904:	08009bf0 	.word	0x08009bf0
 8003908:	20000004 	.word	0x20000004
 800390c:	20000008 	.word	0x20000008

08003910 <HAL_RCC_EnableCSS>:
 8003910:	b480      	push	{r7}
 8003912:	af00      	add	r7, sp, #0
 8003914:	4b03      	ldr	r3, [pc, #12]	; (8003924 <HAL_RCC_EnableCSS+0x14>)
 8003916:	2201      	movs	r2, #1
 8003918:	601a      	str	r2, [r3, #0]
 800391a:	bf00      	nop
 800391c:	46bd      	mov	sp, r7
 800391e:	bc80      	pop	{r7}
 8003920:	4770      	bx	lr
 8003922:	bf00      	nop
 8003924:	4242004c 	.word	0x4242004c

08003928 <HAL_RCC_GetSysClockFreq>:
 8003928:	b480      	push	{r7}
 800392a:	b087      	sub	sp, #28
 800392c:	af00      	add	r7, sp, #0
 800392e:	2300      	movs	r3, #0
 8003930:	60fb      	str	r3, [r7, #12]
 8003932:	2300      	movs	r3, #0
 8003934:	60bb      	str	r3, [r7, #8]
 8003936:	2300      	movs	r3, #0
 8003938:	617b      	str	r3, [r7, #20]
 800393a:	2300      	movs	r3, #0
 800393c:	607b      	str	r3, [r7, #4]
 800393e:	2300      	movs	r3, #0
 8003940:	613b      	str	r3, [r7, #16]
 8003942:	4b1e      	ldr	r3, [pc, #120]	; (80039bc <HAL_RCC_GetSysClockFreq+0x94>)
 8003944:	685b      	ldr	r3, [r3, #4]
 8003946:	60fb      	str	r3, [r7, #12]
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	f003 030c 	and.w	r3, r3, #12
 800394e:	2b04      	cmp	r3, #4
 8003950:	d002      	beq.n	8003958 <HAL_RCC_GetSysClockFreq+0x30>
 8003952:	2b08      	cmp	r3, #8
 8003954:	d003      	beq.n	800395e <HAL_RCC_GetSysClockFreq+0x36>
 8003956:	e027      	b.n	80039a8 <HAL_RCC_GetSysClockFreq+0x80>
 8003958:	4b19      	ldr	r3, [pc, #100]	; (80039c0 <HAL_RCC_GetSysClockFreq+0x98>)
 800395a:	613b      	str	r3, [r7, #16]
 800395c:	e027      	b.n	80039ae <HAL_RCC_GetSysClockFreq+0x86>
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	0c9b      	lsrs	r3, r3, #18
 8003962:	f003 030f 	and.w	r3, r3, #15
 8003966:	4a17      	ldr	r2, [pc, #92]	; (80039c4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003968:	5cd3      	ldrb	r3, [r2, r3]
 800396a:	607b      	str	r3, [r7, #4]
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003972:	2b00      	cmp	r3, #0
 8003974:	d010      	beq.n	8003998 <HAL_RCC_GetSysClockFreq+0x70>
 8003976:	4b11      	ldr	r3, [pc, #68]	; (80039bc <HAL_RCC_GetSysClockFreq+0x94>)
 8003978:	685b      	ldr	r3, [r3, #4]
 800397a:	0c5b      	lsrs	r3, r3, #17
 800397c:	f003 0301 	and.w	r3, r3, #1
 8003980:	4a11      	ldr	r2, [pc, #68]	; (80039c8 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003982:	5cd3      	ldrb	r3, [r2, r3]
 8003984:	60bb      	str	r3, [r7, #8]
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	4a0d      	ldr	r2, [pc, #52]	; (80039c0 <HAL_RCC_GetSysClockFreq+0x98>)
 800398a:	fb03 f202 	mul.w	r2, r3, r2
 800398e:	68bb      	ldr	r3, [r7, #8]
 8003990:	fbb2 f3f3 	udiv	r3, r2, r3
 8003994:	617b      	str	r3, [r7, #20]
 8003996:	e004      	b.n	80039a2 <HAL_RCC_GetSysClockFreq+0x7a>
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	4a0c      	ldr	r2, [pc, #48]	; (80039cc <HAL_RCC_GetSysClockFreq+0xa4>)
 800399c:	fb02 f303 	mul.w	r3, r2, r3
 80039a0:	617b      	str	r3, [r7, #20]
 80039a2:	697b      	ldr	r3, [r7, #20]
 80039a4:	613b      	str	r3, [r7, #16]
 80039a6:	e002      	b.n	80039ae <HAL_RCC_GetSysClockFreq+0x86>
 80039a8:	4b05      	ldr	r3, [pc, #20]	; (80039c0 <HAL_RCC_GetSysClockFreq+0x98>)
 80039aa:	613b      	str	r3, [r7, #16]
 80039ac:	bf00      	nop
 80039ae:	693b      	ldr	r3, [r7, #16]
 80039b0:	4618      	mov	r0, r3
 80039b2:	371c      	adds	r7, #28
 80039b4:	46bd      	mov	sp, r7
 80039b6:	bc80      	pop	{r7}
 80039b8:	4770      	bx	lr
 80039ba:	bf00      	nop
 80039bc:	40021000 	.word	0x40021000
 80039c0:	007a1200 	.word	0x007a1200
 80039c4:	08009c08 	.word	0x08009c08
 80039c8:	08009c18 	.word	0x08009c18
 80039cc:	003d0900 	.word	0x003d0900

080039d0 <HAL_RCC_GetHCLKFreq>:
 80039d0:	b480      	push	{r7}
 80039d2:	af00      	add	r7, sp, #0
 80039d4:	4b02      	ldr	r3, [pc, #8]	; (80039e0 <HAL_RCC_GetHCLKFreq+0x10>)
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	4618      	mov	r0, r3
 80039da:	46bd      	mov	sp, r7
 80039dc:	bc80      	pop	{r7}
 80039de:	4770      	bx	lr
 80039e0:	20000004 	.word	0x20000004

080039e4 <HAL_RCC_GetPCLK1Freq>:
 80039e4:	b580      	push	{r7, lr}
 80039e6:	af00      	add	r7, sp, #0
 80039e8:	f7ff fff2 	bl	80039d0 <HAL_RCC_GetHCLKFreq>
 80039ec:	4602      	mov	r2, r0
 80039ee:	4b05      	ldr	r3, [pc, #20]	; (8003a04 <HAL_RCC_GetPCLK1Freq+0x20>)
 80039f0:	685b      	ldr	r3, [r3, #4]
 80039f2:	0a1b      	lsrs	r3, r3, #8
 80039f4:	f003 0307 	and.w	r3, r3, #7
 80039f8:	4903      	ldr	r1, [pc, #12]	; (8003a08 <HAL_RCC_GetPCLK1Freq+0x24>)
 80039fa:	5ccb      	ldrb	r3, [r1, r3]
 80039fc:	fa22 f303 	lsr.w	r3, r2, r3
 8003a00:	4618      	mov	r0, r3
 8003a02:	bd80      	pop	{r7, pc}
 8003a04:	40021000 	.word	0x40021000
 8003a08:	08009c00 	.word	0x08009c00

08003a0c <HAL_RCC_GetPCLK2Freq>:
 8003a0c:	b580      	push	{r7, lr}
 8003a0e:	af00      	add	r7, sp, #0
 8003a10:	f7ff ffde 	bl	80039d0 <HAL_RCC_GetHCLKFreq>
 8003a14:	4602      	mov	r2, r0
 8003a16:	4b05      	ldr	r3, [pc, #20]	; (8003a2c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003a18:	685b      	ldr	r3, [r3, #4]
 8003a1a:	0adb      	lsrs	r3, r3, #11
 8003a1c:	f003 0307 	and.w	r3, r3, #7
 8003a20:	4903      	ldr	r1, [pc, #12]	; (8003a30 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003a22:	5ccb      	ldrb	r3, [r1, r3]
 8003a24:	fa22 f303 	lsr.w	r3, r2, r3
 8003a28:	4618      	mov	r0, r3
 8003a2a:	bd80      	pop	{r7, pc}
 8003a2c:	40021000 	.word	0x40021000
 8003a30:	08009c00 	.word	0x08009c00

08003a34 <HAL_RCC_GetClockConfig>:
 8003a34:	b480      	push	{r7}
 8003a36:	b083      	sub	sp, #12
 8003a38:	af00      	add	r7, sp, #0
 8003a3a:	6078      	str	r0, [r7, #4]
 8003a3c:	6039      	str	r1, [r7, #0]
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	220f      	movs	r2, #15
 8003a42:	601a      	str	r2, [r3, #0]
 8003a44:	4b11      	ldr	r3, [pc, #68]	; (8003a8c <HAL_RCC_GetClockConfig+0x58>)
 8003a46:	685b      	ldr	r3, [r3, #4]
 8003a48:	f003 0203 	and.w	r2, r3, #3
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	605a      	str	r2, [r3, #4]
 8003a50:	4b0e      	ldr	r3, [pc, #56]	; (8003a8c <HAL_RCC_GetClockConfig+0x58>)
 8003a52:	685b      	ldr	r3, [r3, #4]
 8003a54:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	609a      	str	r2, [r3, #8]
 8003a5c:	4b0b      	ldr	r3, [pc, #44]	; (8003a8c <HAL_RCC_GetClockConfig+0x58>)
 8003a5e:	685b      	ldr	r3, [r3, #4]
 8003a60:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	60da      	str	r2, [r3, #12]
 8003a68:	4b08      	ldr	r3, [pc, #32]	; (8003a8c <HAL_RCC_GetClockConfig+0x58>)
 8003a6a:	685b      	ldr	r3, [r3, #4]
 8003a6c:	08db      	lsrs	r3, r3, #3
 8003a6e:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	611a      	str	r2, [r3, #16]
 8003a76:	4b06      	ldr	r3, [pc, #24]	; (8003a90 <HAL_RCC_GetClockConfig+0x5c>)
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f003 0207 	and.w	r2, r3, #7
 8003a7e:	683b      	ldr	r3, [r7, #0]
 8003a80:	601a      	str	r2, [r3, #0]
 8003a82:	bf00      	nop
 8003a84:	370c      	adds	r7, #12
 8003a86:	46bd      	mov	sp, r7
 8003a88:	bc80      	pop	{r7}
 8003a8a:	4770      	bx	lr
 8003a8c:	40021000 	.word	0x40021000
 8003a90:	40022000 	.word	0x40022000

08003a94 <HAL_RCC_NMI_IRQHandler>:
 8003a94:	b580      	push	{r7, lr}
 8003a96:	af00      	add	r7, sp, #0
 8003a98:	4b06      	ldr	r3, [pc, #24]	; (8003ab4 <HAL_RCC_NMI_IRQHandler+0x20>)
 8003a9a:	689b      	ldr	r3, [r3, #8]
 8003a9c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003aa0:	2b80      	cmp	r3, #128	; 0x80
 8003aa2:	d104      	bne.n	8003aae <HAL_RCC_NMI_IRQHandler+0x1a>
 8003aa4:	f000 f828 	bl	8003af8 <HAL_RCC_CSSCallback>
 8003aa8:	4b03      	ldr	r3, [pc, #12]	; (8003ab8 <HAL_RCC_NMI_IRQHandler+0x24>)
 8003aaa:	2280      	movs	r2, #128	; 0x80
 8003aac:	701a      	strb	r2, [r3, #0]
 8003aae:	bf00      	nop
 8003ab0:	bd80      	pop	{r7, pc}
 8003ab2:	bf00      	nop
 8003ab4:	40021000 	.word	0x40021000
 8003ab8:	4002100a 	.word	0x4002100a

08003abc <RCC_Delay>:
 8003abc:	b480      	push	{r7}
 8003abe:	b085      	sub	sp, #20
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	6078      	str	r0, [r7, #4]
 8003ac4:	4b0a      	ldr	r3, [pc, #40]	; (8003af0 <RCC_Delay+0x34>)
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	4a0a      	ldr	r2, [pc, #40]	; (8003af4 <RCC_Delay+0x38>)
 8003aca:	fba2 2303 	umull	r2, r3, r2, r3
 8003ace:	0a5b      	lsrs	r3, r3, #9
 8003ad0:	687a      	ldr	r2, [r7, #4]
 8003ad2:	fb02 f303 	mul.w	r3, r2, r3
 8003ad6:	60fb      	str	r3, [r7, #12]
 8003ad8:	bf00      	nop
 8003ada:	68fb      	ldr	r3, [r7, #12]
 8003adc:	1e5a      	subs	r2, r3, #1
 8003ade:	60fa      	str	r2, [r7, #12]
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d1f9      	bne.n	8003ad8 <RCC_Delay+0x1c>
 8003ae4:	bf00      	nop
 8003ae6:	bf00      	nop
 8003ae8:	3714      	adds	r7, #20
 8003aea:	46bd      	mov	sp, r7
 8003aec:	bc80      	pop	{r7}
 8003aee:	4770      	bx	lr
 8003af0:	20000004 	.word	0x20000004
 8003af4:	10624dd3 	.word	0x10624dd3

08003af8 <HAL_RCC_CSSCallback>:
 8003af8:	b480      	push	{r7}
 8003afa:	af00      	add	r7, sp, #0
 8003afc:	bf00      	nop
 8003afe:	46bd      	mov	sp, r7
 8003b00:	bc80      	pop	{r7}
 8003b02:	4770      	bx	lr

08003b04 <HAL_SPI_Init>:
 8003b04:	b580      	push	{r7, lr}
 8003b06:	b082      	sub	sp, #8
 8003b08:	af00      	add	r7, sp, #0
 8003b0a:	6078      	str	r0, [r7, #4]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d101      	bne.n	8003b16 <HAL_SPI_Init+0x12>
 8003b12:	2301      	movs	r3, #1
 8003b14:	e076      	b.n	8003c04 <HAL_SPI_Init+0x100>
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d108      	bne.n	8003b30 <HAL_SPI_Init+0x2c>
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	685b      	ldr	r3, [r3, #4]
 8003b22:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003b26:	d009      	beq.n	8003b3c <HAL_SPI_Init+0x38>
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	2200      	movs	r2, #0
 8003b2c:	61da      	str	r2, [r3, #28]
 8003b2e:	e005      	b.n	8003b3c <HAL_SPI_Init+0x38>
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	2200      	movs	r2, #0
 8003b34:	611a      	str	r2, [r3, #16]
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	2200      	movs	r2, #0
 8003b3a:	615a      	str	r2, [r3, #20]
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	2200      	movs	r2, #0
 8003b40:	629a      	str	r2, [r3, #40]	; 0x28
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003b48:	b2db      	uxtb	r3, r3
 8003b4a:	2b00      	cmp	r3, #0
 8003b4c:	d106      	bne.n	8003b5c <HAL_SPI_Init+0x58>
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	2200      	movs	r2, #0
 8003b52:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003b56:	6878      	ldr	r0, [r7, #4]
 8003b58:	f7fe fcc0 	bl	80024dc <HAL_SPI_MspInit>
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	2202      	movs	r2, #2
 8003b60:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	681a      	ldr	r2, [r3, #0]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003b72:	601a      	str	r2, [r3, #0]
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	685b      	ldr	r3, [r3, #4]
 8003b78:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	689b      	ldr	r3, [r3, #8]
 8003b80:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8003b84:	431a      	orrs	r2, r3
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	68db      	ldr	r3, [r3, #12]
 8003b8a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003b8e:	431a      	orrs	r2, r3
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	691b      	ldr	r3, [r3, #16]
 8003b94:	f003 0302 	and.w	r3, r3, #2
 8003b98:	431a      	orrs	r2, r3
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	695b      	ldr	r3, [r3, #20]
 8003b9e:	f003 0301 	and.w	r3, r3, #1
 8003ba2:	431a      	orrs	r2, r3
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	699b      	ldr	r3, [r3, #24]
 8003ba8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003bac:	431a      	orrs	r2, r3
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	69db      	ldr	r3, [r3, #28]
 8003bb2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8003bb6:	431a      	orrs	r2, r3
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	6a1b      	ldr	r3, [r3, #32]
 8003bbc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003bc0:	ea42 0103 	orr.w	r1, r2, r3
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bc8:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	430a      	orrs	r2, r1
 8003bd2:	601a      	str	r2, [r3, #0]
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	699b      	ldr	r3, [r3, #24]
 8003bd8:	0c1a      	lsrs	r2, r3, #16
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	f002 0204 	and.w	r2, r2, #4
 8003be2:	605a      	str	r2, [r3, #4]
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	69da      	ldr	r2, [r3, #28]
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003bf2:	61da      	str	r2, [r3, #28]
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	2200      	movs	r2, #0
 8003bf8:	655a      	str	r2, [r3, #84]	; 0x54
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003c02:	2300      	movs	r3, #0
 8003c04:	4618      	mov	r0, r3
 8003c06:	3708      	adds	r7, #8
 8003c08:	46bd      	mov	sp, r7
 8003c0a:	bd80      	pop	{r7, pc}

08003c0c <HAL_SPI_TransmitReceive>:
 8003c0c:	b580      	push	{r7, lr}
 8003c0e:	b08c      	sub	sp, #48	; 0x30
 8003c10:	af00      	add	r7, sp, #0
 8003c12:	60f8      	str	r0, [r7, #12]
 8003c14:	60b9      	str	r1, [r7, #8]
 8003c16:	607a      	str	r2, [r7, #4]
 8003c18:	807b      	strh	r3, [r7, #2]
 8003c1a:	2301      	movs	r3, #1
 8003c1c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003c1e:	2300      	movs	r3, #0
 8003c20:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8003c2a:	2b01      	cmp	r3, #1
 8003c2c:	d101      	bne.n	8003c32 <HAL_SPI_TransmitReceive+0x26>
 8003c2e:	2302      	movs	r3, #2
 8003c30:	e198      	b.n	8003f64 <HAL_SPI_TransmitReceive+0x358>
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	2201      	movs	r2, #1
 8003c36:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003c3a:	f7fe ff87 	bl	8002b4c <HAL_GetTick>
 8003c3e:	6278      	str	r0, [r7, #36]	; 0x24
 8003c40:	68fb      	ldr	r3, [r7, #12]
 8003c42:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003c46:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	685b      	ldr	r3, [r3, #4]
 8003c4e:	61fb      	str	r3, [r7, #28]
 8003c50:	887b      	ldrh	r3, [r7, #2]
 8003c52:	837b      	strh	r3, [r7, #26]
 8003c54:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003c58:	2b01      	cmp	r3, #1
 8003c5a:	d00f      	beq.n	8003c7c <HAL_SPI_TransmitReceive+0x70>
 8003c5c:	69fb      	ldr	r3, [r7, #28]
 8003c5e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003c62:	d107      	bne.n	8003c74 <HAL_SPI_TransmitReceive+0x68>
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	689b      	ldr	r3, [r3, #8]
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d103      	bne.n	8003c74 <HAL_SPI_TransmitReceive+0x68>
 8003c6c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003c70:	2b04      	cmp	r3, #4
 8003c72:	d003      	beq.n	8003c7c <HAL_SPI_TransmitReceive+0x70>
 8003c74:	2302      	movs	r3, #2
 8003c76:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003c7a:	e16d      	b.n	8003f58 <HAL_SPI_TransmitReceive+0x34c>
 8003c7c:	68bb      	ldr	r3, [r7, #8]
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d005      	beq.n	8003c8e <HAL_SPI_TransmitReceive+0x82>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	2b00      	cmp	r3, #0
 8003c86:	d002      	beq.n	8003c8e <HAL_SPI_TransmitReceive+0x82>
 8003c88:	887b      	ldrh	r3, [r7, #2]
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d103      	bne.n	8003c96 <HAL_SPI_TransmitReceive+0x8a>
 8003c8e:	2301      	movs	r3, #1
 8003c90:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003c94:	e160      	b.n	8003f58 <HAL_SPI_TransmitReceive+0x34c>
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003c9c:	b2db      	uxtb	r3, r3
 8003c9e:	2b04      	cmp	r3, #4
 8003ca0:	d003      	beq.n	8003caa <HAL_SPI_TransmitReceive+0x9e>
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	2205      	movs	r2, #5
 8003ca6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003caa:	68fb      	ldr	r3, [r7, #12]
 8003cac:	2200      	movs	r2, #0
 8003cae:	655a      	str	r2, [r3, #84]	; 0x54
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	687a      	ldr	r2, [r7, #4]
 8003cb4:	639a      	str	r2, [r3, #56]	; 0x38
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	887a      	ldrh	r2, [r7, #2]
 8003cba:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	887a      	ldrh	r2, [r7, #2]
 8003cc0:	879a      	strh	r2, [r3, #60]	; 0x3c
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	68ba      	ldr	r2, [r7, #8]
 8003cc6:	631a      	str	r2, [r3, #48]	; 0x30
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	887a      	ldrh	r2, [r7, #2]
 8003ccc:	86da      	strh	r2, [r3, #54]	; 0x36
 8003cce:	68fb      	ldr	r3, [r7, #12]
 8003cd0:	887a      	ldrh	r2, [r7, #2]
 8003cd2:	869a      	strh	r2, [r3, #52]	; 0x34
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	641a      	str	r2, [r3, #64]	; 0x40
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	2200      	movs	r2, #0
 8003cde:	645a      	str	r2, [r3, #68]	; 0x44
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003cea:	2b40      	cmp	r3, #64	; 0x40
 8003cec:	d007      	beq.n	8003cfe <HAL_SPI_TransmitReceive+0xf2>
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	681a      	ldr	r2, [r3, #0]
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003cfc:	601a      	str	r2, [r3, #0]
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	68db      	ldr	r3, [r3, #12]
 8003d02:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003d06:	d17c      	bne.n	8003e02 <HAL_SPI_TransmitReceive+0x1f6>
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	685b      	ldr	r3, [r3, #4]
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d002      	beq.n	8003d16 <HAL_SPI_TransmitReceive+0x10a>
 8003d10:	8b7b      	ldrh	r3, [r7, #26]
 8003d12:	2b01      	cmp	r3, #1
 8003d14:	d16a      	bne.n	8003dec <HAL_SPI_TransmitReceive+0x1e0>
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d1a:	881a      	ldrh	r2, [r3, #0]
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	60da      	str	r2, [r3, #12]
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d26:	1c9a      	adds	r2, r3, #2
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	631a      	str	r2, [r3, #48]	; 0x30
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003d30:	b29b      	uxth	r3, r3
 8003d32:	3b01      	subs	r3, #1
 8003d34:	b29a      	uxth	r2, r3
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	86da      	strh	r2, [r3, #54]	; 0x36
 8003d3a:	e057      	b.n	8003dec <HAL_SPI_TransmitReceive+0x1e0>
 8003d3c:	68fb      	ldr	r3, [r7, #12]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	689b      	ldr	r3, [r3, #8]
 8003d42:	f003 0302 	and.w	r3, r3, #2
 8003d46:	2b02      	cmp	r3, #2
 8003d48:	d11b      	bne.n	8003d82 <HAL_SPI_TransmitReceive+0x176>
 8003d4a:	68fb      	ldr	r3, [r7, #12]
 8003d4c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003d4e:	b29b      	uxth	r3, r3
 8003d50:	2b00      	cmp	r3, #0
 8003d52:	d016      	beq.n	8003d82 <HAL_SPI_TransmitReceive+0x176>
 8003d54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003d56:	2b01      	cmp	r3, #1
 8003d58:	d113      	bne.n	8003d82 <HAL_SPI_TransmitReceive+0x176>
 8003d5a:	68fb      	ldr	r3, [r7, #12]
 8003d5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d5e:	881a      	ldrh	r2, [r3, #0]
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	60da      	str	r2, [r3, #12]
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d6a:	1c9a      	adds	r2, r3, #2
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	631a      	str	r2, [r3, #48]	; 0x30
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003d74:	b29b      	uxth	r3, r3
 8003d76:	3b01      	subs	r3, #1
 8003d78:	b29a      	uxth	r2, r3
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	86da      	strh	r2, [r3, #54]	; 0x36
 8003d7e:	2300      	movs	r3, #0
 8003d80:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	689b      	ldr	r3, [r3, #8]
 8003d88:	f003 0301 	and.w	r3, r3, #1
 8003d8c:	2b01      	cmp	r3, #1
 8003d8e:	d119      	bne.n	8003dc4 <HAL_SPI_TransmitReceive+0x1b8>
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003d94:	b29b      	uxth	r3, r3
 8003d96:	2b00      	cmp	r3, #0
 8003d98:	d014      	beq.n	8003dc4 <HAL_SPI_TransmitReceive+0x1b8>
 8003d9a:	68fb      	ldr	r3, [r7, #12]
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	68da      	ldr	r2, [r3, #12]
 8003da0:	68fb      	ldr	r3, [r7, #12]
 8003da2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003da4:	b292      	uxth	r2, r2
 8003da6:	801a      	strh	r2, [r3, #0]
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003dac:	1c9a      	adds	r2, r3, #2
 8003dae:	68fb      	ldr	r3, [r7, #12]
 8003db0:	639a      	str	r2, [r3, #56]	; 0x38
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003db6:	b29b      	uxth	r3, r3
 8003db8:	3b01      	subs	r3, #1
 8003dba:	b29a      	uxth	r2, r3
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003dc0:	2301      	movs	r3, #1
 8003dc2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003dc4:	f7fe fec2 	bl	8002b4c <HAL_GetTick>
 8003dc8:	4602      	mov	r2, r0
 8003dca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dcc:	1ad3      	subs	r3, r2, r3
 8003dce:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003dd0:	429a      	cmp	r2, r3
 8003dd2:	d80b      	bhi.n	8003dec <HAL_SPI_TransmitReceive+0x1e0>
 8003dd4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003dd6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003dda:	d007      	beq.n	8003dec <HAL_SPI_TransmitReceive+0x1e0>
 8003ddc:	2303      	movs	r3, #3
 8003dde:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	2201      	movs	r2, #1
 8003de6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003dea:	e0b5      	b.n	8003f58 <HAL_SPI_TransmitReceive+0x34c>
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003df0:	b29b      	uxth	r3, r3
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d1a2      	bne.n	8003d3c <HAL_SPI_TransmitReceive+0x130>
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003dfa:	b29b      	uxth	r3, r3
 8003dfc:	2b00      	cmp	r3, #0
 8003dfe:	d19d      	bne.n	8003d3c <HAL_SPI_TransmitReceive+0x130>
 8003e00:	e080      	b.n	8003f04 <HAL_SPI_TransmitReceive+0x2f8>
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	685b      	ldr	r3, [r3, #4]
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d002      	beq.n	8003e10 <HAL_SPI_TransmitReceive+0x204>
 8003e0a:	8b7b      	ldrh	r3, [r7, #26]
 8003e0c:	2b01      	cmp	r3, #1
 8003e0e:	d16f      	bne.n	8003ef0 <HAL_SPI_TransmitReceive+0x2e4>
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	330c      	adds	r3, #12
 8003e1a:	7812      	ldrb	r2, [r2, #0]
 8003e1c:	701a      	strb	r2, [r3, #0]
 8003e1e:	68fb      	ldr	r3, [r7, #12]
 8003e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e22:	1c5a      	adds	r2, r3, #1
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	631a      	str	r2, [r3, #48]	; 0x30
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003e2c:	b29b      	uxth	r3, r3
 8003e2e:	3b01      	subs	r3, #1
 8003e30:	b29a      	uxth	r2, r3
 8003e32:	68fb      	ldr	r3, [r7, #12]
 8003e34:	86da      	strh	r2, [r3, #54]	; 0x36
 8003e36:	e05b      	b.n	8003ef0 <HAL_SPI_TransmitReceive+0x2e4>
 8003e38:	68fb      	ldr	r3, [r7, #12]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	689b      	ldr	r3, [r3, #8]
 8003e3e:	f003 0302 	and.w	r3, r3, #2
 8003e42:	2b02      	cmp	r3, #2
 8003e44:	d11c      	bne.n	8003e80 <HAL_SPI_TransmitReceive+0x274>
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003e4a:	b29b      	uxth	r3, r3
 8003e4c:	2b00      	cmp	r3, #0
 8003e4e:	d017      	beq.n	8003e80 <HAL_SPI_TransmitReceive+0x274>
 8003e50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e52:	2b01      	cmp	r3, #1
 8003e54:	d114      	bne.n	8003e80 <HAL_SPI_TransmitReceive+0x274>
 8003e56:	68fb      	ldr	r3, [r7, #12]
 8003e58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003e5a:	68fb      	ldr	r3, [r7, #12]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	330c      	adds	r3, #12
 8003e60:	7812      	ldrb	r2, [r2, #0]
 8003e62:	701a      	strb	r2, [r3, #0]
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e68:	1c5a      	adds	r2, r3, #1
 8003e6a:	68fb      	ldr	r3, [r7, #12]
 8003e6c:	631a      	str	r2, [r3, #48]	; 0x30
 8003e6e:	68fb      	ldr	r3, [r7, #12]
 8003e70:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003e72:	b29b      	uxth	r3, r3
 8003e74:	3b01      	subs	r3, #1
 8003e76:	b29a      	uxth	r2, r3
 8003e78:	68fb      	ldr	r3, [r7, #12]
 8003e7a:	86da      	strh	r2, [r3, #54]	; 0x36
 8003e7c:	2300      	movs	r3, #0
 8003e7e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003e80:	68fb      	ldr	r3, [r7, #12]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	689b      	ldr	r3, [r3, #8]
 8003e86:	f003 0301 	and.w	r3, r3, #1
 8003e8a:	2b01      	cmp	r3, #1
 8003e8c:	d119      	bne.n	8003ec2 <HAL_SPI_TransmitReceive+0x2b6>
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003e92:	b29b      	uxth	r3, r3
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d014      	beq.n	8003ec2 <HAL_SPI_TransmitReceive+0x2b6>
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	68da      	ldr	r2, [r3, #12]
 8003e9e:	68fb      	ldr	r3, [r7, #12]
 8003ea0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003ea2:	b2d2      	uxtb	r2, r2
 8003ea4:	701a      	strb	r2, [r3, #0]
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003eaa:	1c5a      	adds	r2, r3, #1
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	639a      	str	r2, [r3, #56]	; 0x38
 8003eb0:	68fb      	ldr	r3, [r7, #12]
 8003eb2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003eb4:	b29b      	uxth	r3, r3
 8003eb6:	3b01      	subs	r3, #1
 8003eb8:	b29a      	uxth	r2, r3
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003ebe:	2301      	movs	r3, #1
 8003ec0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003ec2:	f7fe fe43 	bl	8002b4c <HAL_GetTick>
 8003ec6:	4602      	mov	r2, r0
 8003ec8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003eca:	1ad3      	subs	r3, r2, r3
 8003ecc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003ece:	429a      	cmp	r2, r3
 8003ed0:	d803      	bhi.n	8003eda <HAL_SPI_TransmitReceive+0x2ce>
 8003ed2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ed4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003ed8:	d102      	bne.n	8003ee0 <HAL_SPI_TransmitReceive+0x2d4>
 8003eda:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d107      	bne.n	8003ef0 <HAL_SPI_TransmitReceive+0x2e4>
 8003ee0:	2303      	movs	r3, #3
 8003ee2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003ee6:	68fb      	ldr	r3, [r7, #12]
 8003ee8:	2201      	movs	r2, #1
 8003eea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003eee:	e033      	b.n	8003f58 <HAL_SPI_TransmitReceive+0x34c>
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003ef4:	b29b      	uxth	r3, r3
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d19e      	bne.n	8003e38 <HAL_SPI_TransmitReceive+0x22c>
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003efe:	b29b      	uxth	r3, r3
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d199      	bne.n	8003e38 <HAL_SPI_TransmitReceive+0x22c>
 8003f04:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003f06:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003f08:	68f8      	ldr	r0, [r7, #12]
 8003f0a:	f000 f9b3 	bl	8004274 <SPI_EndRxTxTransaction>
 8003f0e:	4603      	mov	r3, r0
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	d006      	beq.n	8003f22 <HAL_SPI_TransmitReceive+0x316>
 8003f14:	2301      	movs	r3, #1
 8003f16:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003f1a:	68fb      	ldr	r3, [r7, #12]
 8003f1c:	2220      	movs	r2, #32
 8003f1e:	655a      	str	r2, [r3, #84]	; 0x54
 8003f20:	e01a      	b.n	8003f58 <HAL_SPI_TransmitReceive+0x34c>
 8003f22:	68fb      	ldr	r3, [r7, #12]
 8003f24:	689b      	ldr	r3, [r3, #8]
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d10a      	bne.n	8003f40 <HAL_SPI_TransmitReceive+0x334>
 8003f2a:	2300      	movs	r3, #0
 8003f2c:	617b      	str	r3, [r7, #20]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	68db      	ldr	r3, [r3, #12]
 8003f34:	617b      	str	r3, [r7, #20]
 8003f36:	68fb      	ldr	r3, [r7, #12]
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	689b      	ldr	r3, [r3, #8]
 8003f3c:	617b      	str	r3, [r7, #20]
 8003f3e:	697b      	ldr	r3, [r7, #20]
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	d003      	beq.n	8003f50 <HAL_SPI_TransmitReceive+0x344>
 8003f48:	2301      	movs	r3, #1
 8003f4a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003f4e:	e003      	b.n	8003f58 <HAL_SPI_TransmitReceive+0x34c>
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	2201      	movs	r2, #1
 8003f54:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	2200      	movs	r2, #0
 8003f5c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003f60:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8003f64:	4618      	mov	r0, r3
 8003f66:	3730      	adds	r7, #48	; 0x30
 8003f68:	46bd      	mov	sp, r7
 8003f6a:	bd80      	pop	{r7, pc}

08003f6c <HAL_SPI_IRQHandler>:
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b088      	sub	sp, #32
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	6078      	str	r0, [r7, #4]
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	685b      	ldr	r3, [r3, #4]
 8003f7a:	61fb      	str	r3, [r7, #28]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	689b      	ldr	r3, [r3, #8]
 8003f82:	61bb      	str	r3, [r7, #24]
 8003f84:	69bb      	ldr	r3, [r7, #24]
 8003f86:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003f8a:	2b00      	cmp	r3, #0
 8003f8c:	d10e      	bne.n	8003fac <HAL_SPI_IRQHandler+0x40>
 8003f8e:	69bb      	ldr	r3, [r7, #24]
 8003f90:	f003 0301 	and.w	r3, r3, #1
 8003f94:	2b00      	cmp	r3, #0
 8003f96:	d009      	beq.n	8003fac <HAL_SPI_IRQHandler+0x40>
 8003f98:	69fb      	ldr	r3, [r7, #28]
 8003f9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	d004      	beq.n	8003fac <HAL_SPI_IRQHandler+0x40>
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fa6:	6878      	ldr	r0, [r7, #4]
 8003fa8:	4798      	blx	r3
 8003faa:	e0b7      	b.n	800411c <HAL_SPI_IRQHandler+0x1b0>
 8003fac:	69bb      	ldr	r3, [r7, #24]
 8003fae:	f003 0302 	and.w	r3, r3, #2
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d009      	beq.n	8003fca <HAL_SPI_IRQHandler+0x5e>
 8003fb6:	69fb      	ldr	r3, [r7, #28]
 8003fb8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d004      	beq.n	8003fca <HAL_SPI_IRQHandler+0x5e>
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fc4:	6878      	ldr	r0, [r7, #4]
 8003fc6:	4798      	blx	r3
 8003fc8:	e0a8      	b.n	800411c <HAL_SPI_IRQHandler+0x1b0>
 8003fca:	69bb      	ldr	r3, [r7, #24]
 8003fcc:	f003 0320 	and.w	r3, r3, #32
 8003fd0:	2b00      	cmp	r3, #0
 8003fd2:	d105      	bne.n	8003fe0 <HAL_SPI_IRQHandler+0x74>
 8003fd4:	69bb      	ldr	r3, [r7, #24]
 8003fd6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	f000 809e 	beq.w	800411c <HAL_SPI_IRQHandler+0x1b0>
 8003fe0:	69fb      	ldr	r3, [r7, #28]
 8003fe2:	f003 0320 	and.w	r3, r3, #32
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	f000 8098 	beq.w	800411c <HAL_SPI_IRQHandler+0x1b0>
 8003fec:	69bb      	ldr	r3, [r7, #24]
 8003fee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d023      	beq.n	800403e <HAL_SPI_IRQHandler+0xd2>
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003ffc:	b2db      	uxtb	r3, r3
 8003ffe:	2b03      	cmp	r3, #3
 8004000:	d011      	beq.n	8004026 <HAL_SPI_IRQHandler+0xba>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004006:	f043 0204 	orr.w	r2, r3, #4
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	655a      	str	r2, [r3, #84]	; 0x54
 800400e:	2300      	movs	r3, #0
 8004010:	617b      	str	r3, [r7, #20]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	68db      	ldr	r3, [r3, #12]
 8004018:	617b      	str	r3, [r7, #20]
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	689b      	ldr	r3, [r3, #8]
 8004020:	617b      	str	r3, [r7, #20]
 8004022:	697b      	ldr	r3, [r7, #20]
 8004024:	e00b      	b.n	800403e <HAL_SPI_IRQHandler+0xd2>
 8004026:	2300      	movs	r3, #0
 8004028:	613b      	str	r3, [r7, #16]
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	68db      	ldr	r3, [r3, #12]
 8004030:	613b      	str	r3, [r7, #16]
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	689b      	ldr	r3, [r3, #8]
 8004038:	613b      	str	r3, [r7, #16]
 800403a:	693b      	ldr	r3, [r7, #16]
 800403c:	e06e      	b.n	800411c <HAL_SPI_IRQHandler+0x1b0>
 800403e:	69bb      	ldr	r3, [r7, #24]
 8004040:	f003 0320 	and.w	r3, r3, #32
 8004044:	2b00      	cmp	r3, #0
 8004046:	d014      	beq.n	8004072 <HAL_SPI_IRQHandler+0x106>
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800404c:	f043 0201 	orr.w	r2, r3, #1
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	655a      	str	r2, [r3, #84]	; 0x54
 8004054:	2300      	movs	r3, #0
 8004056:	60fb      	str	r3, [r7, #12]
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	689b      	ldr	r3, [r3, #8]
 800405e:	60fb      	str	r3, [r7, #12]
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	681a      	ldr	r2, [r3, #0]
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800406e:	601a      	str	r2, [r3, #0]
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004076:	2b00      	cmp	r3, #0
 8004078:	d04f      	beq.n	800411a <HAL_SPI_IRQHandler+0x1ae>
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	685a      	ldr	r2, [r3, #4]
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004088:	605a      	str	r2, [r3, #4]
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	2201      	movs	r2, #1
 800408e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004092:	69fb      	ldr	r3, [r7, #28]
 8004094:	f003 0302 	and.w	r3, r3, #2
 8004098:	2b00      	cmp	r3, #0
 800409a:	d104      	bne.n	80040a6 <HAL_SPI_IRQHandler+0x13a>
 800409c:	69fb      	ldr	r3, [r7, #28]
 800409e:	f003 0301 	and.w	r3, r3, #1
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d034      	beq.n	8004110 <HAL_SPI_IRQHandler+0x1a4>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	685a      	ldr	r2, [r3, #4]
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	f022 0203 	bic.w	r2, r2, #3
 80040b4:	605a      	str	r2, [r3, #4]
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d011      	beq.n	80040e2 <HAL_SPI_IRQHandler+0x176>
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80040c2:	4a18      	ldr	r2, [pc, #96]	; (8004124 <HAL_SPI_IRQHandler+0x1b8>)
 80040c4:	635a      	str	r2, [r3, #52]	; 0x34
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80040ca:	4618      	mov	r0, r3
 80040cc:	f7fe fe86 	bl	8002ddc <HAL_DMA_Abort_IT>
 80040d0:	4603      	mov	r3, r0
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d005      	beq.n	80040e2 <HAL_SPI_IRQHandler+0x176>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040da:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	655a      	str	r2, [r3, #84]	; 0x54
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80040e6:	2b00      	cmp	r3, #0
 80040e8:	d016      	beq.n	8004118 <HAL_SPI_IRQHandler+0x1ac>
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80040ee:	4a0d      	ldr	r2, [pc, #52]	; (8004124 <HAL_SPI_IRQHandler+0x1b8>)
 80040f0:	635a      	str	r2, [r3, #52]	; 0x34
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80040f6:	4618      	mov	r0, r3
 80040f8:	f7fe fe70 	bl	8002ddc <HAL_DMA_Abort_IT>
 80040fc:	4603      	mov	r3, r0
 80040fe:	2b00      	cmp	r3, #0
 8004100:	d00a      	beq.n	8004118 <HAL_SPI_IRQHandler+0x1ac>
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004106:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	655a      	str	r2, [r3, #84]	; 0x54
 800410e:	e003      	b.n	8004118 <HAL_SPI_IRQHandler+0x1ac>
 8004110:	6878      	ldr	r0, [r7, #4]
 8004112:	f000 f809 	bl	8004128 <HAL_SPI_ErrorCallback>
 8004116:	e000      	b.n	800411a <HAL_SPI_IRQHandler+0x1ae>
 8004118:	bf00      	nop
 800411a:	bf00      	nop
 800411c:	3720      	adds	r7, #32
 800411e:	46bd      	mov	sp, r7
 8004120:	bd80      	pop	{r7, pc}
 8004122:	bf00      	nop
 8004124:	0800413b 	.word	0x0800413b

08004128 <HAL_SPI_ErrorCallback>:
 8004128:	b480      	push	{r7}
 800412a:	b083      	sub	sp, #12
 800412c:	af00      	add	r7, sp, #0
 800412e:	6078      	str	r0, [r7, #4]
 8004130:	bf00      	nop
 8004132:	370c      	adds	r7, #12
 8004134:	46bd      	mov	sp, r7
 8004136:	bc80      	pop	{r7}
 8004138:	4770      	bx	lr

0800413a <SPI_DMAAbortOnError>:
 800413a:	b580      	push	{r7, lr}
 800413c:	b084      	sub	sp, #16
 800413e:	af00      	add	r7, sp, #0
 8004140:	6078      	str	r0, [r7, #4]
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004146:	60fb      	str	r3, [r7, #12]
 8004148:	68fb      	ldr	r3, [r7, #12]
 800414a:	2200      	movs	r2, #0
 800414c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800414e:	68fb      	ldr	r3, [r7, #12]
 8004150:	2200      	movs	r2, #0
 8004152:	86da      	strh	r2, [r3, #54]	; 0x36
 8004154:	68f8      	ldr	r0, [r7, #12]
 8004156:	f7ff ffe7 	bl	8004128 <HAL_SPI_ErrorCallback>
 800415a:	bf00      	nop
 800415c:	3710      	adds	r7, #16
 800415e:	46bd      	mov	sp, r7
 8004160:	bd80      	pop	{r7, pc}
	...

08004164 <SPI_WaitFlagStateUntilTimeout>:
 8004164:	b580      	push	{r7, lr}
 8004166:	b088      	sub	sp, #32
 8004168:	af00      	add	r7, sp, #0
 800416a:	60f8      	str	r0, [r7, #12]
 800416c:	60b9      	str	r1, [r7, #8]
 800416e:	603b      	str	r3, [r7, #0]
 8004170:	4613      	mov	r3, r2
 8004172:	71fb      	strb	r3, [r7, #7]
 8004174:	f7fe fcea 	bl	8002b4c <HAL_GetTick>
 8004178:	4602      	mov	r2, r0
 800417a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800417c:	1a9b      	subs	r3, r3, r2
 800417e:	683a      	ldr	r2, [r7, #0]
 8004180:	4413      	add	r3, r2
 8004182:	61fb      	str	r3, [r7, #28]
 8004184:	f7fe fce2 	bl	8002b4c <HAL_GetTick>
 8004188:	61b8      	str	r0, [r7, #24]
 800418a:	4b39      	ldr	r3, [pc, #228]	; (8004270 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	015b      	lsls	r3, r3, #5
 8004190:	0d1b      	lsrs	r3, r3, #20
 8004192:	69fa      	ldr	r2, [r7, #28]
 8004194:	fb02 f303 	mul.w	r3, r2, r3
 8004198:	617b      	str	r3, [r7, #20]
 800419a:	e054      	b.n	8004246 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800419c:	683b      	ldr	r3, [r7, #0]
 800419e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80041a2:	d050      	beq.n	8004246 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80041a4:	f7fe fcd2 	bl	8002b4c <HAL_GetTick>
 80041a8:	4602      	mov	r2, r0
 80041aa:	69bb      	ldr	r3, [r7, #24]
 80041ac:	1ad3      	subs	r3, r2, r3
 80041ae:	69fa      	ldr	r2, [r7, #28]
 80041b0:	429a      	cmp	r2, r3
 80041b2:	d902      	bls.n	80041ba <SPI_WaitFlagStateUntilTimeout+0x56>
 80041b4:	69fb      	ldr	r3, [r7, #28]
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d13d      	bne.n	8004236 <SPI_WaitFlagStateUntilTimeout+0xd2>
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	685a      	ldr	r2, [r3, #4]
 80041c0:	68fb      	ldr	r3, [r7, #12]
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80041c8:	605a      	str	r2, [r3, #4]
 80041ca:	68fb      	ldr	r3, [r7, #12]
 80041cc:	685b      	ldr	r3, [r3, #4]
 80041ce:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80041d2:	d111      	bne.n	80041f8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	689b      	ldr	r3, [r3, #8]
 80041d8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80041dc:	d004      	beq.n	80041e8 <SPI_WaitFlagStateUntilTimeout+0x84>
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	689b      	ldr	r3, [r3, #8]
 80041e2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80041e6:	d107      	bne.n	80041f8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	681a      	ldr	r2, [r3, #0]
 80041ee:	68fb      	ldr	r3, [r7, #12]
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80041f6:	601a      	str	r2, [r3, #0]
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80041fc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004200:	d10f      	bne.n	8004222 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004202:	68fb      	ldr	r3, [r7, #12]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	681a      	ldr	r2, [r3, #0]
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004210:	601a      	str	r2, [r3, #0]
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	681a      	ldr	r2, [r3, #0]
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004220:	601a      	str	r2, [r3, #0]
 8004222:	68fb      	ldr	r3, [r7, #12]
 8004224:	2201      	movs	r2, #1
 8004226:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	2200      	movs	r2, #0
 800422e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004232:	2303      	movs	r3, #3
 8004234:	e017      	b.n	8004266 <SPI_WaitFlagStateUntilTimeout+0x102>
 8004236:	697b      	ldr	r3, [r7, #20]
 8004238:	2b00      	cmp	r3, #0
 800423a:	d101      	bne.n	8004240 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800423c:	2300      	movs	r3, #0
 800423e:	61fb      	str	r3, [r7, #28]
 8004240:	697b      	ldr	r3, [r7, #20]
 8004242:	3b01      	subs	r3, #1
 8004244:	617b      	str	r3, [r7, #20]
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	689a      	ldr	r2, [r3, #8]
 800424c:	68bb      	ldr	r3, [r7, #8]
 800424e:	4013      	ands	r3, r2
 8004250:	68ba      	ldr	r2, [r7, #8]
 8004252:	429a      	cmp	r2, r3
 8004254:	bf0c      	ite	eq
 8004256:	2301      	moveq	r3, #1
 8004258:	2300      	movne	r3, #0
 800425a:	b2db      	uxtb	r3, r3
 800425c:	461a      	mov	r2, r3
 800425e:	79fb      	ldrb	r3, [r7, #7]
 8004260:	429a      	cmp	r2, r3
 8004262:	d19b      	bne.n	800419c <SPI_WaitFlagStateUntilTimeout+0x38>
 8004264:	2300      	movs	r3, #0
 8004266:	4618      	mov	r0, r3
 8004268:	3720      	adds	r7, #32
 800426a:	46bd      	mov	sp, r7
 800426c:	bd80      	pop	{r7, pc}
 800426e:	bf00      	nop
 8004270:	20000004 	.word	0x20000004

08004274 <SPI_EndRxTxTransaction>:
 8004274:	b580      	push	{r7, lr}
 8004276:	b086      	sub	sp, #24
 8004278:	af02      	add	r7, sp, #8
 800427a:	60f8      	str	r0, [r7, #12]
 800427c:	60b9      	str	r1, [r7, #8]
 800427e:	607a      	str	r2, [r7, #4]
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	9300      	str	r3, [sp, #0]
 8004284:	68bb      	ldr	r3, [r7, #8]
 8004286:	2200      	movs	r2, #0
 8004288:	2180      	movs	r1, #128	; 0x80
 800428a:	68f8      	ldr	r0, [r7, #12]
 800428c:	f7ff ff6a 	bl	8004164 <SPI_WaitFlagStateUntilTimeout>
 8004290:	4603      	mov	r3, r0
 8004292:	2b00      	cmp	r3, #0
 8004294:	d007      	beq.n	80042a6 <SPI_EndRxTxTransaction+0x32>
 8004296:	68fb      	ldr	r3, [r7, #12]
 8004298:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800429a:	f043 0220 	orr.w	r2, r3, #32
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	655a      	str	r2, [r3, #84]	; 0x54
 80042a2:	2303      	movs	r3, #3
 80042a4:	e000      	b.n	80042a8 <SPI_EndRxTxTransaction+0x34>
 80042a6:	2300      	movs	r3, #0
 80042a8:	4618      	mov	r0, r3
 80042aa:	3710      	adds	r7, #16
 80042ac:	46bd      	mov	sp, r7
 80042ae:	bd80      	pop	{r7, pc}

080042b0 <HAL_TIM_Base_Init>:
 80042b0:	b580      	push	{r7, lr}
 80042b2:	b082      	sub	sp, #8
 80042b4:	af00      	add	r7, sp, #0
 80042b6:	6078      	str	r0, [r7, #4]
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d101      	bne.n	80042c2 <HAL_TIM_Base_Init+0x12>
 80042be:	2301      	movs	r3, #1
 80042c0:	e041      	b.n	8004346 <HAL_TIM_Base_Init+0x96>
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80042c8:	b2db      	uxtb	r3, r3
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	d106      	bne.n	80042dc <HAL_TIM_Base_Init+0x2c>
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	2200      	movs	r2, #0
 80042d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80042d6:	6878      	ldr	r0, [r7, #4]
 80042d8:	f000 f839 	bl	800434e <HAL_TIM_Base_MspInit>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	2202      	movs	r2, #2
 80042e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	681a      	ldr	r2, [r3, #0]
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	3304      	adds	r3, #4
 80042ec:	4619      	mov	r1, r3
 80042ee:	4610      	mov	r0, r2
 80042f0:	f000 fbfa 	bl	8004ae8 <TIM_Base_SetConfig>
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	2201      	movs	r2, #1
 80042f8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	2201      	movs	r2, #1
 8004300:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	2201      	movs	r2, #1
 8004308:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	2201      	movs	r2, #1
 8004310:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	2201      	movs	r2, #1
 8004318:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	2201      	movs	r2, #1
 8004320:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	2201      	movs	r2, #1
 8004328:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	2201      	movs	r2, #1
 8004330:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	2201      	movs	r2, #1
 8004338:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	2201      	movs	r2, #1
 8004340:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004344:	2300      	movs	r3, #0
 8004346:	4618      	mov	r0, r3
 8004348:	3708      	adds	r7, #8
 800434a:	46bd      	mov	sp, r7
 800434c:	bd80      	pop	{r7, pc}

0800434e <HAL_TIM_Base_MspInit>:
 800434e:	b480      	push	{r7}
 8004350:	b083      	sub	sp, #12
 8004352:	af00      	add	r7, sp, #0
 8004354:	6078      	str	r0, [r7, #4]
 8004356:	bf00      	nop
 8004358:	370c      	adds	r7, #12
 800435a:	46bd      	mov	sp, r7
 800435c:	bc80      	pop	{r7}
 800435e:	4770      	bx	lr

08004360 <HAL_TIM_Base_Start_IT>:
 8004360:	b480      	push	{r7}
 8004362:	b085      	sub	sp, #20
 8004364:	af00      	add	r7, sp, #0
 8004366:	6078      	str	r0, [r7, #4]
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800436e:	b2db      	uxtb	r3, r3
 8004370:	2b01      	cmp	r3, #1
 8004372:	d001      	beq.n	8004378 <HAL_TIM_Base_Start_IT+0x18>
 8004374:	2301      	movs	r3, #1
 8004376:	e03a      	b.n	80043ee <HAL_TIM_Base_Start_IT+0x8e>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	2202      	movs	r2, #2
 800437c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	68da      	ldr	r2, [r3, #12]
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	f042 0201 	orr.w	r2, r2, #1
 800438e:	60da      	str	r2, [r3, #12]
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	4a18      	ldr	r2, [pc, #96]	; (80043f8 <HAL_TIM_Base_Start_IT+0x98>)
 8004396:	4293      	cmp	r3, r2
 8004398:	d00e      	beq.n	80043b8 <HAL_TIM_Base_Start_IT+0x58>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80043a2:	d009      	beq.n	80043b8 <HAL_TIM_Base_Start_IT+0x58>
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	4a14      	ldr	r2, [pc, #80]	; (80043fc <HAL_TIM_Base_Start_IT+0x9c>)
 80043aa:	4293      	cmp	r3, r2
 80043ac:	d004      	beq.n	80043b8 <HAL_TIM_Base_Start_IT+0x58>
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	4a13      	ldr	r2, [pc, #76]	; (8004400 <HAL_TIM_Base_Start_IT+0xa0>)
 80043b4:	4293      	cmp	r3, r2
 80043b6:	d111      	bne.n	80043dc <HAL_TIM_Base_Start_IT+0x7c>
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	689b      	ldr	r3, [r3, #8]
 80043be:	f003 0307 	and.w	r3, r3, #7
 80043c2:	60fb      	str	r3, [r7, #12]
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	2b06      	cmp	r3, #6
 80043c8:	d010      	beq.n	80043ec <HAL_TIM_Base_Start_IT+0x8c>
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	681a      	ldr	r2, [r3, #0]
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	f042 0201 	orr.w	r2, r2, #1
 80043d8:	601a      	str	r2, [r3, #0]
 80043da:	e007      	b.n	80043ec <HAL_TIM_Base_Start_IT+0x8c>
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	681a      	ldr	r2, [r3, #0]
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	f042 0201 	orr.w	r2, r2, #1
 80043ea:	601a      	str	r2, [r3, #0]
 80043ec:	2300      	movs	r3, #0
 80043ee:	4618      	mov	r0, r3
 80043f0:	3714      	adds	r7, #20
 80043f2:	46bd      	mov	sp, r7
 80043f4:	bc80      	pop	{r7}
 80043f6:	4770      	bx	lr
 80043f8:	40012c00 	.word	0x40012c00
 80043fc:	40000400 	.word	0x40000400
 8004400:	40000800 	.word	0x40000800

08004404 <HAL_TIM_Base_Stop_IT>:
 8004404:	b480      	push	{r7}
 8004406:	b083      	sub	sp, #12
 8004408:	af00      	add	r7, sp, #0
 800440a:	6078      	str	r0, [r7, #4]
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	68da      	ldr	r2, [r3, #12]
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	f022 0201 	bic.w	r2, r2, #1
 800441a:	60da      	str	r2, [r3, #12]
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	6a1a      	ldr	r2, [r3, #32]
 8004422:	f241 1311 	movw	r3, #4369	; 0x1111
 8004426:	4013      	ands	r3, r2
 8004428:	2b00      	cmp	r3, #0
 800442a:	d10f      	bne.n	800444c <HAL_TIM_Base_Stop_IT+0x48>
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	6a1a      	ldr	r2, [r3, #32]
 8004432:	f240 4344 	movw	r3, #1092	; 0x444
 8004436:	4013      	ands	r3, r2
 8004438:	2b00      	cmp	r3, #0
 800443a:	d107      	bne.n	800444c <HAL_TIM_Base_Stop_IT+0x48>
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	681a      	ldr	r2, [r3, #0]
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	f022 0201 	bic.w	r2, r2, #1
 800444a:	601a      	str	r2, [r3, #0]
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	2201      	movs	r2, #1
 8004450:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004454:	2300      	movs	r3, #0
 8004456:	4618      	mov	r0, r3
 8004458:	370c      	adds	r7, #12
 800445a:	46bd      	mov	sp, r7
 800445c:	bc80      	pop	{r7}
 800445e:	4770      	bx	lr

08004460 <HAL_TIM_PWM_Init>:
 8004460:	b580      	push	{r7, lr}
 8004462:	b082      	sub	sp, #8
 8004464:	af00      	add	r7, sp, #0
 8004466:	6078      	str	r0, [r7, #4]
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	2b00      	cmp	r3, #0
 800446c:	d101      	bne.n	8004472 <HAL_TIM_PWM_Init+0x12>
 800446e:	2301      	movs	r3, #1
 8004470:	e041      	b.n	80044f6 <HAL_TIM_PWM_Init+0x96>
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004478:	b2db      	uxtb	r3, r3
 800447a:	2b00      	cmp	r3, #0
 800447c:	d106      	bne.n	800448c <HAL_TIM_PWM_Init+0x2c>
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	2200      	movs	r2, #0
 8004482:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004486:	6878      	ldr	r0, [r7, #4]
 8004488:	f7fe f88a 	bl	80025a0 <HAL_TIM_PWM_MspInit>
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	2202      	movs	r2, #2
 8004490:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681a      	ldr	r2, [r3, #0]
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	3304      	adds	r3, #4
 800449c:	4619      	mov	r1, r3
 800449e:	4610      	mov	r0, r2
 80044a0:	f000 fb22 	bl	8004ae8 <TIM_Base_SetConfig>
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	2201      	movs	r2, #1
 80044a8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	2201      	movs	r2, #1
 80044b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	2201      	movs	r2, #1
 80044b8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	2201      	movs	r2, #1
 80044c0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	2201      	movs	r2, #1
 80044c8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	2201      	movs	r2, #1
 80044d0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	2201      	movs	r2, #1
 80044d8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	2201      	movs	r2, #1
 80044e0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	2201      	movs	r2, #1
 80044e8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	2201      	movs	r2, #1
 80044f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044f4:	2300      	movs	r3, #0
 80044f6:	4618      	mov	r0, r3
 80044f8:	3708      	adds	r7, #8
 80044fa:	46bd      	mov	sp, r7
 80044fc:	bd80      	pop	{r7, pc}
	...

08004500 <HAL_TIM_PWM_Start>:
 8004500:	b580      	push	{r7, lr}
 8004502:	b084      	sub	sp, #16
 8004504:	af00      	add	r7, sp, #0
 8004506:	6078      	str	r0, [r7, #4]
 8004508:	6039      	str	r1, [r7, #0]
 800450a:	683b      	ldr	r3, [r7, #0]
 800450c:	2b00      	cmp	r3, #0
 800450e:	d109      	bne.n	8004524 <HAL_TIM_PWM_Start+0x24>
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004516:	b2db      	uxtb	r3, r3
 8004518:	2b01      	cmp	r3, #1
 800451a:	bf14      	ite	ne
 800451c:	2301      	movne	r3, #1
 800451e:	2300      	moveq	r3, #0
 8004520:	b2db      	uxtb	r3, r3
 8004522:	e022      	b.n	800456a <HAL_TIM_PWM_Start+0x6a>
 8004524:	683b      	ldr	r3, [r7, #0]
 8004526:	2b04      	cmp	r3, #4
 8004528:	d109      	bne.n	800453e <HAL_TIM_PWM_Start+0x3e>
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8004530:	b2db      	uxtb	r3, r3
 8004532:	2b01      	cmp	r3, #1
 8004534:	bf14      	ite	ne
 8004536:	2301      	movne	r3, #1
 8004538:	2300      	moveq	r3, #0
 800453a:	b2db      	uxtb	r3, r3
 800453c:	e015      	b.n	800456a <HAL_TIM_PWM_Start+0x6a>
 800453e:	683b      	ldr	r3, [r7, #0]
 8004540:	2b08      	cmp	r3, #8
 8004542:	d109      	bne.n	8004558 <HAL_TIM_PWM_Start+0x58>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800454a:	b2db      	uxtb	r3, r3
 800454c:	2b01      	cmp	r3, #1
 800454e:	bf14      	ite	ne
 8004550:	2301      	movne	r3, #1
 8004552:	2300      	moveq	r3, #0
 8004554:	b2db      	uxtb	r3, r3
 8004556:	e008      	b.n	800456a <HAL_TIM_PWM_Start+0x6a>
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800455e:	b2db      	uxtb	r3, r3
 8004560:	2b01      	cmp	r3, #1
 8004562:	bf14      	ite	ne
 8004564:	2301      	movne	r3, #1
 8004566:	2300      	moveq	r3, #0
 8004568:	b2db      	uxtb	r3, r3
 800456a:	2b00      	cmp	r3, #0
 800456c:	d001      	beq.n	8004572 <HAL_TIM_PWM_Start+0x72>
 800456e:	2301      	movs	r3, #1
 8004570:	e05e      	b.n	8004630 <HAL_TIM_PWM_Start+0x130>
 8004572:	683b      	ldr	r3, [r7, #0]
 8004574:	2b00      	cmp	r3, #0
 8004576:	d104      	bne.n	8004582 <HAL_TIM_PWM_Start+0x82>
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	2202      	movs	r2, #2
 800457c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004580:	e013      	b.n	80045aa <HAL_TIM_PWM_Start+0xaa>
 8004582:	683b      	ldr	r3, [r7, #0]
 8004584:	2b04      	cmp	r3, #4
 8004586:	d104      	bne.n	8004592 <HAL_TIM_PWM_Start+0x92>
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	2202      	movs	r2, #2
 800458c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004590:	e00b      	b.n	80045aa <HAL_TIM_PWM_Start+0xaa>
 8004592:	683b      	ldr	r3, [r7, #0]
 8004594:	2b08      	cmp	r3, #8
 8004596:	d104      	bne.n	80045a2 <HAL_TIM_PWM_Start+0xa2>
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	2202      	movs	r2, #2
 800459c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80045a0:	e003      	b.n	80045aa <HAL_TIM_PWM_Start+0xaa>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	2202      	movs	r2, #2
 80045a6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	2201      	movs	r2, #1
 80045b0:	6839      	ldr	r1, [r7, #0]
 80045b2:	4618      	mov	r0, r3
 80045b4:	f000 fc82 	bl	8004ebc <TIM_CCxChannelCmd>
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	4a1e      	ldr	r2, [pc, #120]	; (8004638 <HAL_TIM_PWM_Start+0x138>)
 80045be:	4293      	cmp	r3, r2
 80045c0:	d107      	bne.n	80045d2 <HAL_TIM_PWM_Start+0xd2>
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80045d0:	645a      	str	r2, [r3, #68]	; 0x44
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	4a18      	ldr	r2, [pc, #96]	; (8004638 <HAL_TIM_PWM_Start+0x138>)
 80045d8:	4293      	cmp	r3, r2
 80045da:	d00e      	beq.n	80045fa <HAL_TIM_PWM_Start+0xfa>
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	681b      	ldr	r3, [r3, #0]
 80045e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80045e4:	d009      	beq.n	80045fa <HAL_TIM_PWM_Start+0xfa>
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	4a14      	ldr	r2, [pc, #80]	; (800463c <HAL_TIM_PWM_Start+0x13c>)
 80045ec:	4293      	cmp	r3, r2
 80045ee:	d004      	beq.n	80045fa <HAL_TIM_PWM_Start+0xfa>
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	681b      	ldr	r3, [r3, #0]
 80045f4:	4a12      	ldr	r2, [pc, #72]	; (8004640 <HAL_TIM_PWM_Start+0x140>)
 80045f6:	4293      	cmp	r3, r2
 80045f8:	d111      	bne.n	800461e <HAL_TIM_PWM_Start+0x11e>
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	689b      	ldr	r3, [r3, #8]
 8004600:	f003 0307 	and.w	r3, r3, #7
 8004604:	60fb      	str	r3, [r7, #12]
 8004606:	68fb      	ldr	r3, [r7, #12]
 8004608:	2b06      	cmp	r3, #6
 800460a:	d010      	beq.n	800462e <HAL_TIM_PWM_Start+0x12e>
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	681a      	ldr	r2, [r3, #0]
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	f042 0201 	orr.w	r2, r2, #1
 800461a:	601a      	str	r2, [r3, #0]
 800461c:	e007      	b.n	800462e <HAL_TIM_PWM_Start+0x12e>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	681a      	ldr	r2, [r3, #0]
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	f042 0201 	orr.w	r2, r2, #1
 800462c:	601a      	str	r2, [r3, #0]
 800462e:	2300      	movs	r3, #0
 8004630:	4618      	mov	r0, r3
 8004632:	3710      	adds	r7, #16
 8004634:	46bd      	mov	sp, r7
 8004636:	bd80      	pop	{r7, pc}
 8004638:	40012c00 	.word	0x40012c00
 800463c:	40000400 	.word	0x40000400
 8004640:	40000800 	.word	0x40000800

08004644 <HAL_TIM_PWM_Stop>:
 8004644:	b580      	push	{r7, lr}
 8004646:	b082      	sub	sp, #8
 8004648:	af00      	add	r7, sp, #0
 800464a:	6078      	str	r0, [r7, #4]
 800464c:	6039      	str	r1, [r7, #0]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	2200      	movs	r2, #0
 8004654:	6839      	ldr	r1, [r7, #0]
 8004656:	4618      	mov	r0, r3
 8004658:	f000 fc30 	bl	8004ebc <TIM_CCxChannelCmd>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	4a29      	ldr	r2, [pc, #164]	; (8004708 <HAL_TIM_PWM_Stop+0xc4>)
 8004662:	4293      	cmp	r3, r2
 8004664:	d117      	bne.n	8004696 <HAL_TIM_PWM_Stop+0x52>
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	6a1a      	ldr	r2, [r3, #32]
 800466c:	f241 1311 	movw	r3, #4369	; 0x1111
 8004670:	4013      	ands	r3, r2
 8004672:	2b00      	cmp	r3, #0
 8004674:	d10f      	bne.n	8004696 <HAL_TIM_PWM_Stop+0x52>
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	6a1a      	ldr	r2, [r3, #32]
 800467c:	f240 4344 	movw	r3, #1092	; 0x444
 8004680:	4013      	ands	r3, r2
 8004682:	2b00      	cmp	r3, #0
 8004684:	d107      	bne.n	8004696 <HAL_TIM_PWM_Stop+0x52>
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004694:	645a      	str	r2, [r3, #68]	; 0x44
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	6a1a      	ldr	r2, [r3, #32]
 800469c:	f241 1311 	movw	r3, #4369	; 0x1111
 80046a0:	4013      	ands	r3, r2
 80046a2:	2b00      	cmp	r3, #0
 80046a4:	d10f      	bne.n	80046c6 <HAL_TIM_PWM_Stop+0x82>
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	6a1a      	ldr	r2, [r3, #32]
 80046ac:	f240 4344 	movw	r3, #1092	; 0x444
 80046b0:	4013      	ands	r3, r2
 80046b2:	2b00      	cmp	r3, #0
 80046b4:	d107      	bne.n	80046c6 <HAL_TIM_PWM_Stop+0x82>
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	681a      	ldr	r2, [r3, #0]
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	f022 0201 	bic.w	r2, r2, #1
 80046c4:	601a      	str	r2, [r3, #0]
 80046c6:	683b      	ldr	r3, [r7, #0]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d104      	bne.n	80046d6 <HAL_TIM_PWM_Stop+0x92>
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	2201      	movs	r2, #1
 80046d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80046d4:	e013      	b.n	80046fe <HAL_TIM_PWM_Stop+0xba>
 80046d6:	683b      	ldr	r3, [r7, #0]
 80046d8:	2b04      	cmp	r3, #4
 80046da:	d104      	bne.n	80046e6 <HAL_TIM_PWM_Stop+0xa2>
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	2201      	movs	r2, #1
 80046e0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80046e4:	e00b      	b.n	80046fe <HAL_TIM_PWM_Stop+0xba>
 80046e6:	683b      	ldr	r3, [r7, #0]
 80046e8:	2b08      	cmp	r3, #8
 80046ea:	d104      	bne.n	80046f6 <HAL_TIM_PWM_Stop+0xb2>
 80046ec:	687b      	ldr	r3, [r7, #4]
 80046ee:	2201      	movs	r2, #1
 80046f0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80046f4:	e003      	b.n	80046fe <HAL_TIM_PWM_Stop+0xba>
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	2201      	movs	r2, #1
 80046fa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80046fe:	2300      	movs	r3, #0
 8004700:	4618      	mov	r0, r3
 8004702:	3708      	adds	r7, #8
 8004704:	46bd      	mov	sp, r7
 8004706:	bd80      	pop	{r7, pc}
 8004708:	40012c00 	.word	0x40012c00

0800470c <HAL_TIM_IRQHandler>:
 800470c:	b580      	push	{r7, lr}
 800470e:	b082      	sub	sp, #8
 8004710:	af00      	add	r7, sp, #0
 8004712:	6078      	str	r0, [r7, #4]
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	691b      	ldr	r3, [r3, #16]
 800471a:	f003 0302 	and.w	r3, r3, #2
 800471e:	2b02      	cmp	r3, #2
 8004720:	d122      	bne.n	8004768 <HAL_TIM_IRQHandler+0x5c>
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	68db      	ldr	r3, [r3, #12]
 8004728:	f003 0302 	and.w	r3, r3, #2
 800472c:	2b02      	cmp	r3, #2
 800472e:	d11b      	bne.n	8004768 <HAL_TIM_IRQHandler+0x5c>
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	f06f 0202 	mvn.w	r2, #2
 8004738:	611a      	str	r2, [r3, #16]
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	2201      	movs	r2, #1
 800473e:	771a      	strb	r2, [r3, #28]
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	699b      	ldr	r3, [r3, #24]
 8004746:	f003 0303 	and.w	r3, r3, #3
 800474a:	2b00      	cmp	r3, #0
 800474c:	d003      	beq.n	8004756 <HAL_TIM_IRQHandler+0x4a>
 800474e:	6878      	ldr	r0, [r7, #4]
 8004750:	f000 f9af 	bl	8004ab2 <HAL_TIM_IC_CaptureCallback>
 8004754:	e005      	b.n	8004762 <HAL_TIM_IRQHandler+0x56>
 8004756:	6878      	ldr	r0, [r7, #4]
 8004758:	f000 f9a2 	bl	8004aa0 <HAL_TIM_OC_DelayElapsedCallback>
 800475c:	6878      	ldr	r0, [r7, #4]
 800475e:	f000 f9b1 	bl	8004ac4 <HAL_TIM_PWM_PulseFinishedCallback>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	2200      	movs	r2, #0
 8004766:	771a      	strb	r2, [r3, #28]
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	691b      	ldr	r3, [r3, #16]
 800476e:	f003 0304 	and.w	r3, r3, #4
 8004772:	2b04      	cmp	r3, #4
 8004774:	d122      	bne.n	80047bc <HAL_TIM_IRQHandler+0xb0>
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	68db      	ldr	r3, [r3, #12]
 800477c:	f003 0304 	and.w	r3, r3, #4
 8004780:	2b04      	cmp	r3, #4
 8004782:	d11b      	bne.n	80047bc <HAL_TIM_IRQHandler+0xb0>
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	f06f 0204 	mvn.w	r2, #4
 800478c:	611a      	str	r2, [r3, #16]
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	2202      	movs	r2, #2
 8004792:	771a      	strb	r2, [r3, #28]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	699b      	ldr	r3, [r3, #24]
 800479a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800479e:	2b00      	cmp	r3, #0
 80047a0:	d003      	beq.n	80047aa <HAL_TIM_IRQHandler+0x9e>
 80047a2:	6878      	ldr	r0, [r7, #4]
 80047a4:	f000 f985 	bl	8004ab2 <HAL_TIM_IC_CaptureCallback>
 80047a8:	e005      	b.n	80047b6 <HAL_TIM_IRQHandler+0xaa>
 80047aa:	6878      	ldr	r0, [r7, #4]
 80047ac:	f000 f978 	bl	8004aa0 <HAL_TIM_OC_DelayElapsedCallback>
 80047b0:	6878      	ldr	r0, [r7, #4]
 80047b2:	f000 f987 	bl	8004ac4 <HAL_TIM_PWM_PulseFinishedCallback>
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	2200      	movs	r2, #0
 80047ba:	771a      	strb	r2, [r3, #28]
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	691b      	ldr	r3, [r3, #16]
 80047c2:	f003 0308 	and.w	r3, r3, #8
 80047c6:	2b08      	cmp	r3, #8
 80047c8:	d122      	bne.n	8004810 <HAL_TIM_IRQHandler+0x104>
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	68db      	ldr	r3, [r3, #12]
 80047d0:	f003 0308 	and.w	r3, r3, #8
 80047d4:	2b08      	cmp	r3, #8
 80047d6:	d11b      	bne.n	8004810 <HAL_TIM_IRQHandler+0x104>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	f06f 0208 	mvn.w	r2, #8
 80047e0:	611a      	str	r2, [r3, #16]
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	2204      	movs	r2, #4
 80047e6:	771a      	strb	r2, [r3, #28]
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	69db      	ldr	r3, [r3, #28]
 80047ee:	f003 0303 	and.w	r3, r3, #3
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d003      	beq.n	80047fe <HAL_TIM_IRQHandler+0xf2>
 80047f6:	6878      	ldr	r0, [r7, #4]
 80047f8:	f000 f95b 	bl	8004ab2 <HAL_TIM_IC_CaptureCallback>
 80047fc:	e005      	b.n	800480a <HAL_TIM_IRQHandler+0xfe>
 80047fe:	6878      	ldr	r0, [r7, #4]
 8004800:	f000 f94e 	bl	8004aa0 <HAL_TIM_OC_DelayElapsedCallback>
 8004804:	6878      	ldr	r0, [r7, #4]
 8004806:	f000 f95d 	bl	8004ac4 <HAL_TIM_PWM_PulseFinishedCallback>
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	2200      	movs	r2, #0
 800480e:	771a      	strb	r2, [r3, #28]
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	691b      	ldr	r3, [r3, #16]
 8004816:	f003 0310 	and.w	r3, r3, #16
 800481a:	2b10      	cmp	r3, #16
 800481c:	d122      	bne.n	8004864 <HAL_TIM_IRQHandler+0x158>
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	68db      	ldr	r3, [r3, #12]
 8004824:	f003 0310 	and.w	r3, r3, #16
 8004828:	2b10      	cmp	r3, #16
 800482a:	d11b      	bne.n	8004864 <HAL_TIM_IRQHandler+0x158>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	f06f 0210 	mvn.w	r2, #16
 8004834:	611a      	str	r2, [r3, #16]
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	2208      	movs	r2, #8
 800483a:	771a      	strb	r2, [r3, #28]
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	69db      	ldr	r3, [r3, #28]
 8004842:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004846:	2b00      	cmp	r3, #0
 8004848:	d003      	beq.n	8004852 <HAL_TIM_IRQHandler+0x146>
 800484a:	6878      	ldr	r0, [r7, #4]
 800484c:	f000 f931 	bl	8004ab2 <HAL_TIM_IC_CaptureCallback>
 8004850:	e005      	b.n	800485e <HAL_TIM_IRQHandler+0x152>
 8004852:	6878      	ldr	r0, [r7, #4]
 8004854:	f000 f924 	bl	8004aa0 <HAL_TIM_OC_DelayElapsedCallback>
 8004858:	6878      	ldr	r0, [r7, #4]
 800485a:	f000 f933 	bl	8004ac4 <HAL_TIM_PWM_PulseFinishedCallback>
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	2200      	movs	r2, #0
 8004862:	771a      	strb	r2, [r3, #28]
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	691b      	ldr	r3, [r3, #16]
 800486a:	f003 0301 	and.w	r3, r3, #1
 800486e:	2b01      	cmp	r3, #1
 8004870:	d10e      	bne.n	8004890 <HAL_TIM_IRQHandler+0x184>
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	68db      	ldr	r3, [r3, #12]
 8004878:	f003 0301 	and.w	r3, r3, #1
 800487c:	2b01      	cmp	r3, #1
 800487e:	d107      	bne.n	8004890 <HAL_TIM_IRQHandler+0x184>
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	f06f 0201 	mvn.w	r2, #1
 8004888:	611a      	str	r2, [r3, #16]
 800488a:	6878      	ldr	r0, [r7, #4]
 800488c:	f7fd fd20 	bl	80022d0 <HAL_TIM_PeriodElapsedCallback>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	691b      	ldr	r3, [r3, #16]
 8004896:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800489a:	2b80      	cmp	r3, #128	; 0x80
 800489c:	d10e      	bne.n	80048bc <HAL_TIM_IRQHandler+0x1b0>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	68db      	ldr	r3, [r3, #12]
 80048a4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80048a8:	2b80      	cmp	r3, #128	; 0x80
 80048aa:	d107      	bne.n	80048bc <HAL_TIM_IRQHandler+0x1b0>
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80048b4:	611a      	str	r2, [r3, #16]
 80048b6:	6878      	ldr	r0, [r7, #4]
 80048b8:	f000 fbdc 	bl	8005074 <HAL_TIMEx_BreakCallback>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	691b      	ldr	r3, [r3, #16]
 80048c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80048c6:	2b40      	cmp	r3, #64	; 0x40
 80048c8:	d10e      	bne.n	80048e8 <HAL_TIM_IRQHandler+0x1dc>
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	68db      	ldr	r3, [r3, #12]
 80048d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80048d4:	2b40      	cmp	r3, #64	; 0x40
 80048d6:	d107      	bne.n	80048e8 <HAL_TIM_IRQHandler+0x1dc>
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80048e0:	611a      	str	r2, [r3, #16]
 80048e2:	6878      	ldr	r0, [r7, #4]
 80048e4:	f000 f8f7 	bl	8004ad6 <HAL_TIM_TriggerCallback>
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	691b      	ldr	r3, [r3, #16]
 80048ee:	f003 0320 	and.w	r3, r3, #32
 80048f2:	2b20      	cmp	r3, #32
 80048f4:	d10e      	bne.n	8004914 <HAL_TIM_IRQHandler+0x208>
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	68db      	ldr	r3, [r3, #12]
 80048fc:	f003 0320 	and.w	r3, r3, #32
 8004900:	2b20      	cmp	r3, #32
 8004902:	d107      	bne.n	8004914 <HAL_TIM_IRQHandler+0x208>
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	f06f 0220 	mvn.w	r2, #32
 800490c:	611a      	str	r2, [r3, #16]
 800490e:	6878      	ldr	r0, [r7, #4]
 8004910:	f000 fba7 	bl	8005062 <HAL_TIMEx_CommutCallback>
 8004914:	bf00      	nop
 8004916:	3708      	adds	r7, #8
 8004918:	46bd      	mov	sp, r7
 800491a:	bd80      	pop	{r7, pc}

0800491c <HAL_TIM_PWM_ConfigChannel>:
 800491c:	b580      	push	{r7, lr}
 800491e:	b086      	sub	sp, #24
 8004920:	af00      	add	r7, sp, #0
 8004922:	60f8      	str	r0, [r7, #12]
 8004924:	60b9      	str	r1, [r7, #8]
 8004926:	607a      	str	r2, [r7, #4]
 8004928:	2300      	movs	r3, #0
 800492a:	75fb      	strb	r3, [r7, #23]
 800492c:	68fb      	ldr	r3, [r7, #12]
 800492e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004932:	2b01      	cmp	r3, #1
 8004934:	d101      	bne.n	800493a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004936:	2302      	movs	r3, #2
 8004938:	e0ae      	b.n	8004a98 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	2201      	movs	r2, #1
 800493e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	2b0c      	cmp	r3, #12
 8004946:	f200 809f 	bhi.w	8004a88 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800494a:	a201      	add	r2, pc, #4	; (adr r2, 8004950 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800494c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004950:	08004985 	.word	0x08004985
 8004954:	08004a89 	.word	0x08004a89
 8004958:	08004a89 	.word	0x08004a89
 800495c:	08004a89 	.word	0x08004a89
 8004960:	080049c5 	.word	0x080049c5
 8004964:	08004a89 	.word	0x08004a89
 8004968:	08004a89 	.word	0x08004a89
 800496c:	08004a89 	.word	0x08004a89
 8004970:	08004a07 	.word	0x08004a07
 8004974:	08004a89 	.word	0x08004a89
 8004978:	08004a89 	.word	0x08004a89
 800497c:	08004a89 	.word	0x08004a89
 8004980:	08004a47 	.word	0x08004a47
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	68b9      	ldr	r1, [r7, #8]
 800498a:	4618      	mov	r0, r3
 800498c:	f000 f90e 	bl	8004bac <TIM_OC1_SetConfig>
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	699a      	ldr	r2, [r3, #24]
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	f042 0208 	orr.w	r2, r2, #8
 800499e:	619a      	str	r2, [r3, #24]
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	699a      	ldr	r2, [r3, #24]
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	f022 0204 	bic.w	r2, r2, #4
 80049ae:	619a      	str	r2, [r3, #24]
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	6999      	ldr	r1, [r3, #24]
 80049b6:	68bb      	ldr	r3, [r7, #8]
 80049b8:	691a      	ldr	r2, [r3, #16]
 80049ba:	68fb      	ldr	r3, [r7, #12]
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	430a      	orrs	r2, r1
 80049c0:	619a      	str	r2, [r3, #24]
 80049c2:	e064      	b.n	8004a8e <HAL_TIM_PWM_ConfigChannel+0x172>
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	68b9      	ldr	r1, [r7, #8]
 80049ca:	4618      	mov	r0, r3
 80049cc:	f000 f954 	bl	8004c78 <TIM_OC2_SetConfig>
 80049d0:	68fb      	ldr	r3, [r7, #12]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	699a      	ldr	r2, [r3, #24]
 80049d6:	68fb      	ldr	r3, [r7, #12]
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80049de:	619a      	str	r2, [r3, #24]
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	699a      	ldr	r2, [r3, #24]
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80049ee:	619a      	str	r2, [r3, #24]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	6999      	ldr	r1, [r3, #24]
 80049f6:	68bb      	ldr	r3, [r7, #8]
 80049f8:	691b      	ldr	r3, [r3, #16]
 80049fa:	021a      	lsls	r2, r3, #8
 80049fc:	68fb      	ldr	r3, [r7, #12]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	430a      	orrs	r2, r1
 8004a02:	619a      	str	r2, [r3, #24]
 8004a04:	e043      	b.n	8004a8e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004a06:	68fb      	ldr	r3, [r7, #12]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	68b9      	ldr	r1, [r7, #8]
 8004a0c:	4618      	mov	r0, r3
 8004a0e:	f000 f99d 	bl	8004d4c <TIM_OC3_SetConfig>
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	69da      	ldr	r2, [r3, #28]
 8004a18:	68fb      	ldr	r3, [r7, #12]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	f042 0208 	orr.w	r2, r2, #8
 8004a20:	61da      	str	r2, [r3, #28]
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	681b      	ldr	r3, [r3, #0]
 8004a26:	69da      	ldr	r2, [r3, #28]
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	f022 0204 	bic.w	r2, r2, #4
 8004a30:	61da      	str	r2, [r3, #28]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	69d9      	ldr	r1, [r3, #28]
 8004a38:	68bb      	ldr	r3, [r7, #8]
 8004a3a:	691a      	ldr	r2, [r3, #16]
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	430a      	orrs	r2, r1
 8004a42:	61da      	str	r2, [r3, #28]
 8004a44:	e023      	b.n	8004a8e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004a46:	68fb      	ldr	r3, [r7, #12]
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	68b9      	ldr	r1, [r7, #8]
 8004a4c:	4618      	mov	r0, r3
 8004a4e:	f000 f9e7 	bl	8004e20 <TIM_OC4_SetConfig>
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	69da      	ldr	r2, [r3, #28]
 8004a58:	68fb      	ldr	r3, [r7, #12]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004a60:	61da      	str	r2, [r3, #28]
 8004a62:	68fb      	ldr	r3, [r7, #12]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	69da      	ldr	r2, [r3, #28]
 8004a68:	68fb      	ldr	r3, [r7, #12]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004a70:	61da      	str	r2, [r3, #28]
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	681b      	ldr	r3, [r3, #0]
 8004a76:	69d9      	ldr	r1, [r3, #28]
 8004a78:	68bb      	ldr	r3, [r7, #8]
 8004a7a:	691b      	ldr	r3, [r3, #16]
 8004a7c:	021a      	lsls	r2, r3, #8
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	430a      	orrs	r2, r1
 8004a84:	61da      	str	r2, [r3, #28]
 8004a86:	e002      	b.n	8004a8e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004a88:	2301      	movs	r3, #1
 8004a8a:	75fb      	strb	r3, [r7, #23]
 8004a8c:	bf00      	nop
 8004a8e:	68fb      	ldr	r3, [r7, #12]
 8004a90:	2200      	movs	r2, #0
 8004a92:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a96:	7dfb      	ldrb	r3, [r7, #23]
 8004a98:	4618      	mov	r0, r3
 8004a9a:	3718      	adds	r7, #24
 8004a9c:	46bd      	mov	sp, r7
 8004a9e:	bd80      	pop	{r7, pc}

08004aa0 <HAL_TIM_OC_DelayElapsedCallback>:
 8004aa0:	b480      	push	{r7}
 8004aa2:	b083      	sub	sp, #12
 8004aa4:	af00      	add	r7, sp, #0
 8004aa6:	6078      	str	r0, [r7, #4]
 8004aa8:	bf00      	nop
 8004aaa:	370c      	adds	r7, #12
 8004aac:	46bd      	mov	sp, r7
 8004aae:	bc80      	pop	{r7}
 8004ab0:	4770      	bx	lr

08004ab2 <HAL_TIM_IC_CaptureCallback>:
 8004ab2:	b480      	push	{r7}
 8004ab4:	b083      	sub	sp, #12
 8004ab6:	af00      	add	r7, sp, #0
 8004ab8:	6078      	str	r0, [r7, #4]
 8004aba:	bf00      	nop
 8004abc:	370c      	adds	r7, #12
 8004abe:	46bd      	mov	sp, r7
 8004ac0:	bc80      	pop	{r7}
 8004ac2:	4770      	bx	lr

08004ac4 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004ac4:	b480      	push	{r7}
 8004ac6:	b083      	sub	sp, #12
 8004ac8:	af00      	add	r7, sp, #0
 8004aca:	6078      	str	r0, [r7, #4]
 8004acc:	bf00      	nop
 8004ace:	370c      	adds	r7, #12
 8004ad0:	46bd      	mov	sp, r7
 8004ad2:	bc80      	pop	{r7}
 8004ad4:	4770      	bx	lr

08004ad6 <HAL_TIM_TriggerCallback>:
 8004ad6:	b480      	push	{r7}
 8004ad8:	b083      	sub	sp, #12
 8004ada:	af00      	add	r7, sp, #0
 8004adc:	6078      	str	r0, [r7, #4]
 8004ade:	bf00      	nop
 8004ae0:	370c      	adds	r7, #12
 8004ae2:	46bd      	mov	sp, r7
 8004ae4:	bc80      	pop	{r7}
 8004ae6:	4770      	bx	lr

08004ae8 <TIM_Base_SetConfig>:
 8004ae8:	b480      	push	{r7}
 8004aea:	b085      	sub	sp, #20
 8004aec:	af00      	add	r7, sp, #0
 8004aee:	6078      	str	r0, [r7, #4]
 8004af0:	6039      	str	r1, [r7, #0]
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	60fb      	str	r3, [r7, #12]
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	4a29      	ldr	r2, [pc, #164]	; (8004ba0 <TIM_Base_SetConfig+0xb8>)
 8004afc:	4293      	cmp	r3, r2
 8004afe:	d00b      	beq.n	8004b18 <TIM_Base_SetConfig+0x30>
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004b06:	d007      	beq.n	8004b18 <TIM_Base_SetConfig+0x30>
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	4a26      	ldr	r2, [pc, #152]	; (8004ba4 <TIM_Base_SetConfig+0xbc>)
 8004b0c:	4293      	cmp	r3, r2
 8004b0e:	d003      	beq.n	8004b18 <TIM_Base_SetConfig+0x30>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	4a25      	ldr	r2, [pc, #148]	; (8004ba8 <TIM_Base_SetConfig+0xc0>)
 8004b14:	4293      	cmp	r3, r2
 8004b16:	d108      	bne.n	8004b2a <TIM_Base_SetConfig+0x42>
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004b1e:	60fb      	str	r3, [r7, #12]
 8004b20:	683b      	ldr	r3, [r7, #0]
 8004b22:	685b      	ldr	r3, [r3, #4]
 8004b24:	68fa      	ldr	r2, [r7, #12]
 8004b26:	4313      	orrs	r3, r2
 8004b28:	60fb      	str	r3, [r7, #12]
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	4a1c      	ldr	r2, [pc, #112]	; (8004ba0 <TIM_Base_SetConfig+0xb8>)
 8004b2e:	4293      	cmp	r3, r2
 8004b30:	d00b      	beq.n	8004b4a <TIM_Base_SetConfig+0x62>
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004b38:	d007      	beq.n	8004b4a <TIM_Base_SetConfig+0x62>
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	4a19      	ldr	r2, [pc, #100]	; (8004ba4 <TIM_Base_SetConfig+0xbc>)
 8004b3e:	4293      	cmp	r3, r2
 8004b40:	d003      	beq.n	8004b4a <TIM_Base_SetConfig+0x62>
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	4a18      	ldr	r2, [pc, #96]	; (8004ba8 <TIM_Base_SetConfig+0xc0>)
 8004b46:	4293      	cmp	r3, r2
 8004b48:	d108      	bne.n	8004b5c <TIM_Base_SetConfig+0x74>
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004b50:	60fb      	str	r3, [r7, #12]
 8004b52:	683b      	ldr	r3, [r7, #0]
 8004b54:	68db      	ldr	r3, [r3, #12]
 8004b56:	68fa      	ldr	r2, [r7, #12]
 8004b58:	4313      	orrs	r3, r2
 8004b5a:	60fb      	str	r3, [r7, #12]
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004b62:	683b      	ldr	r3, [r7, #0]
 8004b64:	695b      	ldr	r3, [r3, #20]
 8004b66:	4313      	orrs	r3, r2
 8004b68:	60fb      	str	r3, [r7, #12]
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	68fa      	ldr	r2, [r7, #12]
 8004b6e:	601a      	str	r2, [r3, #0]
 8004b70:	683b      	ldr	r3, [r7, #0]
 8004b72:	689a      	ldr	r2, [r3, #8]
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	62da      	str	r2, [r3, #44]	; 0x2c
 8004b78:	683b      	ldr	r3, [r7, #0]
 8004b7a:	681a      	ldr	r2, [r3, #0]
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	629a      	str	r2, [r3, #40]	; 0x28
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	4a07      	ldr	r2, [pc, #28]	; (8004ba0 <TIM_Base_SetConfig+0xb8>)
 8004b84:	4293      	cmp	r3, r2
 8004b86:	d103      	bne.n	8004b90 <TIM_Base_SetConfig+0xa8>
 8004b88:	683b      	ldr	r3, [r7, #0]
 8004b8a:	691a      	ldr	r2, [r3, #16]
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	631a      	str	r2, [r3, #48]	; 0x30
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	2201      	movs	r2, #1
 8004b94:	615a      	str	r2, [r3, #20]
 8004b96:	bf00      	nop
 8004b98:	3714      	adds	r7, #20
 8004b9a:	46bd      	mov	sp, r7
 8004b9c:	bc80      	pop	{r7}
 8004b9e:	4770      	bx	lr
 8004ba0:	40012c00 	.word	0x40012c00
 8004ba4:	40000400 	.word	0x40000400
 8004ba8:	40000800 	.word	0x40000800

08004bac <TIM_OC1_SetConfig>:
 8004bac:	b480      	push	{r7}
 8004bae:	b087      	sub	sp, #28
 8004bb0:	af00      	add	r7, sp, #0
 8004bb2:	6078      	str	r0, [r7, #4]
 8004bb4:	6039      	str	r1, [r7, #0]
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	6a1b      	ldr	r3, [r3, #32]
 8004bba:	617b      	str	r3, [r7, #20]
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	6a1b      	ldr	r3, [r3, #32]
 8004bc0:	f023 0201 	bic.w	r2, r3, #1
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	621a      	str	r2, [r3, #32]
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	685b      	ldr	r3, [r3, #4]
 8004bcc:	613b      	str	r3, [r7, #16]
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	699b      	ldr	r3, [r3, #24]
 8004bd2:	60fb      	str	r3, [r7, #12]
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004bda:	60fb      	str	r3, [r7, #12]
 8004bdc:	68fb      	ldr	r3, [r7, #12]
 8004bde:	f023 0303 	bic.w	r3, r3, #3
 8004be2:	60fb      	str	r3, [r7, #12]
 8004be4:	683b      	ldr	r3, [r7, #0]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	68fa      	ldr	r2, [r7, #12]
 8004bea:	4313      	orrs	r3, r2
 8004bec:	60fb      	str	r3, [r7, #12]
 8004bee:	697b      	ldr	r3, [r7, #20]
 8004bf0:	f023 0302 	bic.w	r3, r3, #2
 8004bf4:	617b      	str	r3, [r7, #20]
 8004bf6:	683b      	ldr	r3, [r7, #0]
 8004bf8:	689b      	ldr	r3, [r3, #8]
 8004bfa:	697a      	ldr	r2, [r7, #20]
 8004bfc:	4313      	orrs	r3, r2
 8004bfe:	617b      	str	r3, [r7, #20]
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	4a1c      	ldr	r2, [pc, #112]	; (8004c74 <TIM_OC1_SetConfig+0xc8>)
 8004c04:	4293      	cmp	r3, r2
 8004c06:	d10c      	bne.n	8004c22 <TIM_OC1_SetConfig+0x76>
 8004c08:	697b      	ldr	r3, [r7, #20]
 8004c0a:	f023 0308 	bic.w	r3, r3, #8
 8004c0e:	617b      	str	r3, [r7, #20]
 8004c10:	683b      	ldr	r3, [r7, #0]
 8004c12:	68db      	ldr	r3, [r3, #12]
 8004c14:	697a      	ldr	r2, [r7, #20]
 8004c16:	4313      	orrs	r3, r2
 8004c18:	617b      	str	r3, [r7, #20]
 8004c1a:	697b      	ldr	r3, [r7, #20]
 8004c1c:	f023 0304 	bic.w	r3, r3, #4
 8004c20:	617b      	str	r3, [r7, #20]
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	4a13      	ldr	r2, [pc, #76]	; (8004c74 <TIM_OC1_SetConfig+0xc8>)
 8004c26:	4293      	cmp	r3, r2
 8004c28:	d111      	bne.n	8004c4e <TIM_OC1_SetConfig+0xa2>
 8004c2a:	693b      	ldr	r3, [r7, #16]
 8004c2c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004c30:	613b      	str	r3, [r7, #16]
 8004c32:	693b      	ldr	r3, [r7, #16]
 8004c34:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004c38:	613b      	str	r3, [r7, #16]
 8004c3a:	683b      	ldr	r3, [r7, #0]
 8004c3c:	695b      	ldr	r3, [r3, #20]
 8004c3e:	693a      	ldr	r2, [r7, #16]
 8004c40:	4313      	orrs	r3, r2
 8004c42:	613b      	str	r3, [r7, #16]
 8004c44:	683b      	ldr	r3, [r7, #0]
 8004c46:	699b      	ldr	r3, [r3, #24]
 8004c48:	693a      	ldr	r2, [r7, #16]
 8004c4a:	4313      	orrs	r3, r2
 8004c4c:	613b      	str	r3, [r7, #16]
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	693a      	ldr	r2, [r7, #16]
 8004c52:	605a      	str	r2, [r3, #4]
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	68fa      	ldr	r2, [r7, #12]
 8004c58:	619a      	str	r2, [r3, #24]
 8004c5a:	683b      	ldr	r3, [r7, #0]
 8004c5c:	685a      	ldr	r2, [r3, #4]
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	635a      	str	r2, [r3, #52]	; 0x34
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	697a      	ldr	r2, [r7, #20]
 8004c66:	621a      	str	r2, [r3, #32]
 8004c68:	bf00      	nop
 8004c6a:	371c      	adds	r7, #28
 8004c6c:	46bd      	mov	sp, r7
 8004c6e:	bc80      	pop	{r7}
 8004c70:	4770      	bx	lr
 8004c72:	bf00      	nop
 8004c74:	40012c00 	.word	0x40012c00

08004c78 <TIM_OC2_SetConfig>:
 8004c78:	b480      	push	{r7}
 8004c7a:	b087      	sub	sp, #28
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	6078      	str	r0, [r7, #4]
 8004c80:	6039      	str	r1, [r7, #0]
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	6a1b      	ldr	r3, [r3, #32]
 8004c86:	617b      	str	r3, [r7, #20]
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	6a1b      	ldr	r3, [r3, #32]
 8004c8c:	f023 0210 	bic.w	r2, r3, #16
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	621a      	str	r2, [r3, #32]
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	685b      	ldr	r3, [r3, #4]
 8004c98:	613b      	str	r3, [r7, #16]
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	699b      	ldr	r3, [r3, #24]
 8004c9e:	60fb      	str	r3, [r7, #12]
 8004ca0:	68fb      	ldr	r3, [r7, #12]
 8004ca2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004ca6:	60fb      	str	r3, [r7, #12]
 8004ca8:	68fb      	ldr	r3, [r7, #12]
 8004caa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004cae:	60fb      	str	r3, [r7, #12]
 8004cb0:	683b      	ldr	r3, [r7, #0]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	021b      	lsls	r3, r3, #8
 8004cb6:	68fa      	ldr	r2, [r7, #12]
 8004cb8:	4313      	orrs	r3, r2
 8004cba:	60fb      	str	r3, [r7, #12]
 8004cbc:	697b      	ldr	r3, [r7, #20]
 8004cbe:	f023 0320 	bic.w	r3, r3, #32
 8004cc2:	617b      	str	r3, [r7, #20]
 8004cc4:	683b      	ldr	r3, [r7, #0]
 8004cc6:	689b      	ldr	r3, [r3, #8]
 8004cc8:	011b      	lsls	r3, r3, #4
 8004cca:	697a      	ldr	r2, [r7, #20]
 8004ccc:	4313      	orrs	r3, r2
 8004cce:	617b      	str	r3, [r7, #20]
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	4a1d      	ldr	r2, [pc, #116]	; (8004d48 <TIM_OC2_SetConfig+0xd0>)
 8004cd4:	4293      	cmp	r3, r2
 8004cd6:	d10d      	bne.n	8004cf4 <TIM_OC2_SetConfig+0x7c>
 8004cd8:	697b      	ldr	r3, [r7, #20]
 8004cda:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004cde:	617b      	str	r3, [r7, #20]
 8004ce0:	683b      	ldr	r3, [r7, #0]
 8004ce2:	68db      	ldr	r3, [r3, #12]
 8004ce4:	011b      	lsls	r3, r3, #4
 8004ce6:	697a      	ldr	r2, [r7, #20]
 8004ce8:	4313      	orrs	r3, r2
 8004cea:	617b      	str	r3, [r7, #20]
 8004cec:	697b      	ldr	r3, [r7, #20]
 8004cee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004cf2:	617b      	str	r3, [r7, #20]
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	4a14      	ldr	r2, [pc, #80]	; (8004d48 <TIM_OC2_SetConfig+0xd0>)
 8004cf8:	4293      	cmp	r3, r2
 8004cfa:	d113      	bne.n	8004d24 <TIM_OC2_SetConfig+0xac>
 8004cfc:	693b      	ldr	r3, [r7, #16]
 8004cfe:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004d02:	613b      	str	r3, [r7, #16]
 8004d04:	693b      	ldr	r3, [r7, #16]
 8004d06:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004d0a:	613b      	str	r3, [r7, #16]
 8004d0c:	683b      	ldr	r3, [r7, #0]
 8004d0e:	695b      	ldr	r3, [r3, #20]
 8004d10:	009b      	lsls	r3, r3, #2
 8004d12:	693a      	ldr	r2, [r7, #16]
 8004d14:	4313      	orrs	r3, r2
 8004d16:	613b      	str	r3, [r7, #16]
 8004d18:	683b      	ldr	r3, [r7, #0]
 8004d1a:	699b      	ldr	r3, [r3, #24]
 8004d1c:	009b      	lsls	r3, r3, #2
 8004d1e:	693a      	ldr	r2, [r7, #16]
 8004d20:	4313      	orrs	r3, r2
 8004d22:	613b      	str	r3, [r7, #16]
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	693a      	ldr	r2, [r7, #16]
 8004d28:	605a      	str	r2, [r3, #4]
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	68fa      	ldr	r2, [r7, #12]
 8004d2e:	619a      	str	r2, [r3, #24]
 8004d30:	683b      	ldr	r3, [r7, #0]
 8004d32:	685a      	ldr	r2, [r3, #4]
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	639a      	str	r2, [r3, #56]	; 0x38
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	697a      	ldr	r2, [r7, #20]
 8004d3c:	621a      	str	r2, [r3, #32]
 8004d3e:	bf00      	nop
 8004d40:	371c      	adds	r7, #28
 8004d42:	46bd      	mov	sp, r7
 8004d44:	bc80      	pop	{r7}
 8004d46:	4770      	bx	lr
 8004d48:	40012c00 	.word	0x40012c00

08004d4c <TIM_OC3_SetConfig>:
 8004d4c:	b480      	push	{r7}
 8004d4e:	b087      	sub	sp, #28
 8004d50:	af00      	add	r7, sp, #0
 8004d52:	6078      	str	r0, [r7, #4]
 8004d54:	6039      	str	r1, [r7, #0]
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	6a1b      	ldr	r3, [r3, #32]
 8004d5a:	617b      	str	r3, [r7, #20]
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	6a1b      	ldr	r3, [r3, #32]
 8004d60:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	621a      	str	r2, [r3, #32]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	685b      	ldr	r3, [r3, #4]
 8004d6c:	613b      	str	r3, [r7, #16]
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	69db      	ldr	r3, [r3, #28]
 8004d72:	60fb      	str	r3, [r7, #12]
 8004d74:	68fb      	ldr	r3, [r7, #12]
 8004d76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004d7a:	60fb      	str	r3, [r7, #12]
 8004d7c:	68fb      	ldr	r3, [r7, #12]
 8004d7e:	f023 0303 	bic.w	r3, r3, #3
 8004d82:	60fb      	str	r3, [r7, #12]
 8004d84:	683b      	ldr	r3, [r7, #0]
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	68fa      	ldr	r2, [r7, #12]
 8004d8a:	4313      	orrs	r3, r2
 8004d8c:	60fb      	str	r3, [r7, #12]
 8004d8e:	697b      	ldr	r3, [r7, #20]
 8004d90:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004d94:	617b      	str	r3, [r7, #20]
 8004d96:	683b      	ldr	r3, [r7, #0]
 8004d98:	689b      	ldr	r3, [r3, #8]
 8004d9a:	021b      	lsls	r3, r3, #8
 8004d9c:	697a      	ldr	r2, [r7, #20]
 8004d9e:	4313      	orrs	r3, r2
 8004da0:	617b      	str	r3, [r7, #20]
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	4a1d      	ldr	r2, [pc, #116]	; (8004e1c <TIM_OC3_SetConfig+0xd0>)
 8004da6:	4293      	cmp	r3, r2
 8004da8:	d10d      	bne.n	8004dc6 <TIM_OC3_SetConfig+0x7a>
 8004daa:	697b      	ldr	r3, [r7, #20]
 8004dac:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004db0:	617b      	str	r3, [r7, #20]
 8004db2:	683b      	ldr	r3, [r7, #0]
 8004db4:	68db      	ldr	r3, [r3, #12]
 8004db6:	021b      	lsls	r3, r3, #8
 8004db8:	697a      	ldr	r2, [r7, #20]
 8004dba:	4313      	orrs	r3, r2
 8004dbc:	617b      	str	r3, [r7, #20]
 8004dbe:	697b      	ldr	r3, [r7, #20]
 8004dc0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004dc4:	617b      	str	r3, [r7, #20]
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	4a14      	ldr	r2, [pc, #80]	; (8004e1c <TIM_OC3_SetConfig+0xd0>)
 8004dca:	4293      	cmp	r3, r2
 8004dcc:	d113      	bne.n	8004df6 <TIM_OC3_SetConfig+0xaa>
 8004dce:	693b      	ldr	r3, [r7, #16]
 8004dd0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004dd4:	613b      	str	r3, [r7, #16]
 8004dd6:	693b      	ldr	r3, [r7, #16]
 8004dd8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004ddc:	613b      	str	r3, [r7, #16]
 8004dde:	683b      	ldr	r3, [r7, #0]
 8004de0:	695b      	ldr	r3, [r3, #20]
 8004de2:	011b      	lsls	r3, r3, #4
 8004de4:	693a      	ldr	r2, [r7, #16]
 8004de6:	4313      	orrs	r3, r2
 8004de8:	613b      	str	r3, [r7, #16]
 8004dea:	683b      	ldr	r3, [r7, #0]
 8004dec:	699b      	ldr	r3, [r3, #24]
 8004dee:	011b      	lsls	r3, r3, #4
 8004df0:	693a      	ldr	r2, [r7, #16]
 8004df2:	4313      	orrs	r3, r2
 8004df4:	613b      	str	r3, [r7, #16]
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	693a      	ldr	r2, [r7, #16]
 8004dfa:	605a      	str	r2, [r3, #4]
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	68fa      	ldr	r2, [r7, #12]
 8004e00:	61da      	str	r2, [r3, #28]
 8004e02:	683b      	ldr	r3, [r7, #0]
 8004e04:	685a      	ldr	r2, [r3, #4]
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	63da      	str	r2, [r3, #60]	; 0x3c
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	697a      	ldr	r2, [r7, #20]
 8004e0e:	621a      	str	r2, [r3, #32]
 8004e10:	bf00      	nop
 8004e12:	371c      	adds	r7, #28
 8004e14:	46bd      	mov	sp, r7
 8004e16:	bc80      	pop	{r7}
 8004e18:	4770      	bx	lr
 8004e1a:	bf00      	nop
 8004e1c:	40012c00 	.word	0x40012c00

08004e20 <TIM_OC4_SetConfig>:
 8004e20:	b480      	push	{r7}
 8004e22:	b087      	sub	sp, #28
 8004e24:	af00      	add	r7, sp, #0
 8004e26:	6078      	str	r0, [r7, #4]
 8004e28:	6039      	str	r1, [r7, #0]
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	6a1b      	ldr	r3, [r3, #32]
 8004e2e:	613b      	str	r3, [r7, #16]
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	6a1b      	ldr	r3, [r3, #32]
 8004e34:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	621a      	str	r2, [r3, #32]
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	685b      	ldr	r3, [r3, #4]
 8004e40:	617b      	str	r3, [r7, #20]
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	69db      	ldr	r3, [r3, #28]
 8004e46:	60fb      	str	r3, [r7, #12]
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004e4e:	60fb      	str	r3, [r7, #12]
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004e56:	60fb      	str	r3, [r7, #12]
 8004e58:	683b      	ldr	r3, [r7, #0]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	021b      	lsls	r3, r3, #8
 8004e5e:	68fa      	ldr	r2, [r7, #12]
 8004e60:	4313      	orrs	r3, r2
 8004e62:	60fb      	str	r3, [r7, #12]
 8004e64:	693b      	ldr	r3, [r7, #16]
 8004e66:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004e6a:	613b      	str	r3, [r7, #16]
 8004e6c:	683b      	ldr	r3, [r7, #0]
 8004e6e:	689b      	ldr	r3, [r3, #8]
 8004e70:	031b      	lsls	r3, r3, #12
 8004e72:	693a      	ldr	r2, [r7, #16]
 8004e74:	4313      	orrs	r3, r2
 8004e76:	613b      	str	r3, [r7, #16]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	4a0f      	ldr	r2, [pc, #60]	; (8004eb8 <TIM_OC4_SetConfig+0x98>)
 8004e7c:	4293      	cmp	r3, r2
 8004e7e:	d109      	bne.n	8004e94 <TIM_OC4_SetConfig+0x74>
 8004e80:	697b      	ldr	r3, [r7, #20]
 8004e82:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004e86:	617b      	str	r3, [r7, #20]
 8004e88:	683b      	ldr	r3, [r7, #0]
 8004e8a:	695b      	ldr	r3, [r3, #20]
 8004e8c:	019b      	lsls	r3, r3, #6
 8004e8e:	697a      	ldr	r2, [r7, #20]
 8004e90:	4313      	orrs	r3, r2
 8004e92:	617b      	str	r3, [r7, #20]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	697a      	ldr	r2, [r7, #20]
 8004e98:	605a      	str	r2, [r3, #4]
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	68fa      	ldr	r2, [r7, #12]
 8004e9e:	61da      	str	r2, [r3, #28]
 8004ea0:	683b      	ldr	r3, [r7, #0]
 8004ea2:	685a      	ldr	r2, [r3, #4]
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	641a      	str	r2, [r3, #64]	; 0x40
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	693a      	ldr	r2, [r7, #16]
 8004eac:	621a      	str	r2, [r3, #32]
 8004eae:	bf00      	nop
 8004eb0:	371c      	adds	r7, #28
 8004eb2:	46bd      	mov	sp, r7
 8004eb4:	bc80      	pop	{r7}
 8004eb6:	4770      	bx	lr
 8004eb8:	40012c00 	.word	0x40012c00

08004ebc <TIM_CCxChannelCmd>:
 8004ebc:	b480      	push	{r7}
 8004ebe:	b087      	sub	sp, #28
 8004ec0:	af00      	add	r7, sp, #0
 8004ec2:	60f8      	str	r0, [r7, #12]
 8004ec4:	60b9      	str	r1, [r7, #8]
 8004ec6:	607a      	str	r2, [r7, #4]
 8004ec8:	68bb      	ldr	r3, [r7, #8]
 8004eca:	f003 031f 	and.w	r3, r3, #31
 8004ece:	2201      	movs	r2, #1
 8004ed0:	fa02 f303 	lsl.w	r3, r2, r3
 8004ed4:	617b      	str	r3, [r7, #20]
 8004ed6:	68fb      	ldr	r3, [r7, #12]
 8004ed8:	6a1a      	ldr	r2, [r3, #32]
 8004eda:	697b      	ldr	r3, [r7, #20]
 8004edc:	43db      	mvns	r3, r3
 8004ede:	401a      	ands	r2, r3
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	621a      	str	r2, [r3, #32]
 8004ee4:	68fb      	ldr	r3, [r7, #12]
 8004ee6:	6a1a      	ldr	r2, [r3, #32]
 8004ee8:	68bb      	ldr	r3, [r7, #8]
 8004eea:	f003 031f 	and.w	r3, r3, #31
 8004eee:	6879      	ldr	r1, [r7, #4]
 8004ef0:	fa01 f303 	lsl.w	r3, r1, r3
 8004ef4:	431a      	orrs	r2, r3
 8004ef6:	68fb      	ldr	r3, [r7, #12]
 8004ef8:	621a      	str	r2, [r3, #32]
 8004efa:	bf00      	nop
 8004efc:	371c      	adds	r7, #28
 8004efe:	46bd      	mov	sp, r7
 8004f00:	bc80      	pop	{r7}
 8004f02:	4770      	bx	lr

08004f04 <HAL_TIMEx_MasterConfigSynchronization>:
 8004f04:	b480      	push	{r7}
 8004f06:	b085      	sub	sp, #20
 8004f08:	af00      	add	r7, sp, #0
 8004f0a:	6078      	str	r0, [r7, #4]
 8004f0c:	6039      	str	r1, [r7, #0]
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004f14:	2b01      	cmp	r3, #1
 8004f16:	d101      	bne.n	8004f1c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004f18:	2302      	movs	r3, #2
 8004f1a:	e046      	b.n	8004faa <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	2201      	movs	r2, #1
 8004f20:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	2202      	movs	r2, #2
 8004f28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	685b      	ldr	r3, [r3, #4]
 8004f32:	60fb      	str	r3, [r7, #12]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	689b      	ldr	r3, [r3, #8]
 8004f3a:	60bb      	str	r3, [r7, #8]
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004f42:	60fb      	str	r3, [r7, #12]
 8004f44:	683b      	ldr	r3, [r7, #0]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	68fa      	ldr	r2, [r7, #12]
 8004f4a:	4313      	orrs	r3, r2
 8004f4c:	60fb      	str	r3, [r7, #12]
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	681b      	ldr	r3, [r3, #0]
 8004f52:	68fa      	ldr	r2, [r7, #12]
 8004f54:	605a      	str	r2, [r3, #4]
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	4a16      	ldr	r2, [pc, #88]	; (8004fb4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004f5c:	4293      	cmp	r3, r2
 8004f5e:	d00e      	beq.n	8004f7e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004f68:	d009      	beq.n	8004f7e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	4a12      	ldr	r2, [pc, #72]	; (8004fb8 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004f70:	4293      	cmp	r3, r2
 8004f72:	d004      	beq.n	8004f7e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	4a10      	ldr	r2, [pc, #64]	; (8004fbc <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004f7a:	4293      	cmp	r3, r2
 8004f7c:	d10c      	bne.n	8004f98 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004f7e:	68bb      	ldr	r3, [r7, #8]
 8004f80:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004f84:	60bb      	str	r3, [r7, #8]
 8004f86:	683b      	ldr	r3, [r7, #0]
 8004f88:	685b      	ldr	r3, [r3, #4]
 8004f8a:	68ba      	ldr	r2, [r7, #8]
 8004f8c:	4313      	orrs	r3, r2
 8004f8e:	60bb      	str	r3, [r7, #8]
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	681b      	ldr	r3, [r3, #0]
 8004f94:	68ba      	ldr	r2, [r7, #8]
 8004f96:	609a      	str	r2, [r3, #8]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2201      	movs	r2, #1
 8004f9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	2200      	movs	r2, #0
 8004fa4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fa8:	2300      	movs	r3, #0
 8004faa:	4618      	mov	r0, r3
 8004fac:	3714      	adds	r7, #20
 8004fae:	46bd      	mov	sp, r7
 8004fb0:	bc80      	pop	{r7}
 8004fb2:	4770      	bx	lr
 8004fb4:	40012c00 	.word	0x40012c00
 8004fb8:	40000400 	.word	0x40000400
 8004fbc:	40000800 	.word	0x40000800

08004fc0 <HAL_TIMEx_ConfigBreakDeadTime>:
 8004fc0:	b480      	push	{r7}
 8004fc2:	b085      	sub	sp, #20
 8004fc4:	af00      	add	r7, sp, #0
 8004fc6:	6078      	str	r0, [r7, #4]
 8004fc8:	6039      	str	r1, [r7, #0]
 8004fca:	2300      	movs	r3, #0
 8004fcc:	60fb      	str	r3, [r7, #12]
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004fd4:	2b01      	cmp	r3, #1
 8004fd6:	d101      	bne.n	8004fdc <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8004fd8:	2302      	movs	r3, #2
 8004fda:	e03d      	b.n	8005058 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	2201      	movs	r2, #1
 8004fe0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8004fea:	683b      	ldr	r3, [r7, #0]
 8004fec:	68db      	ldr	r3, [r3, #12]
 8004fee:	4313      	orrs	r3, r2
 8004ff0:	60fb      	str	r3, [r7, #12]
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004ff8:	683b      	ldr	r3, [r7, #0]
 8004ffa:	689b      	ldr	r3, [r3, #8]
 8004ffc:	4313      	orrs	r3, r2
 8004ffe:	60fb      	str	r3, [r7, #12]
 8005000:	68fb      	ldr	r3, [r7, #12]
 8005002:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8005006:	683b      	ldr	r3, [r7, #0]
 8005008:	685b      	ldr	r3, [r3, #4]
 800500a:	4313      	orrs	r3, r2
 800500c:	60fb      	str	r3, [r7, #12]
 800500e:	68fb      	ldr	r3, [r7, #12]
 8005010:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8005014:	683b      	ldr	r3, [r7, #0]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	4313      	orrs	r3, r2
 800501a:	60fb      	str	r3, [r7, #12]
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005022:	683b      	ldr	r3, [r7, #0]
 8005024:	691b      	ldr	r3, [r3, #16]
 8005026:	4313      	orrs	r3, r2
 8005028:	60fb      	str	r3, [r7, #12]
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8005030:	683b      	ldr	r3, [r7, #0]
 8005032:	695b      	ldr	r3, [r3, #20]
 8005034:	4313      	orrs	r3, r2
 8005036:	60fb      	str	r3, [r7, #12]
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800503e:	683b      	ldr	r3, [r7, #0]
 8005040:	69db      	ldr	r3, [r3, #28]
 8005042:	4313      	orrs	r3, r2
 8005044:	60fb      	str	r3, [r7, #12]
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	68fa      	ldr	r2, [r7, #12]
 800504c:	645a      	str	r2, [r3, #68]	; 0x44
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	2200      	movs	r2, #0
 8005052:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005056:	2300      	movs	r3, #0
 8005058:	4618      	mov	r0, r3
 800505a:	3714      	adds	r7, #20
 800505c:	46bd      	mov	sp, r7
 800505e:	bc80      	pop	{r7}
 8005060:	4770      	bx	lr

08005062 <HAL_TIMEx_CommutCallback>:
 8005062:	b480      	push	{r7}
 8005064:	b083      	sub	sp, #12
 8005066:	af00      	add	r7, sp, #0
 8005068:	6078      	str	r0, [r7, #4]
 800506a:	bf00      	nop
 800506c:	370c      	adds	r7, #12
 800506e:	46bd      	mov	sp, r7
 8005070:	bc80      	pop	{r7}
 8005072:	4770      	bx	lr

08005074 <HAL_TIMEx_BreakCallback>:
 8005074:	b480      	push	{r7}
 8005076:	b083      	sub	sp, #12
 8005078:	af00      	add	r7, sp, #0
 800507a:	6078      	str	r0, [r7, #4]
 800507c:	bf00      	nop
 800507e:	370c      	adds	r7, #12
 8005080:	46bd      	mov	sp, r7
 8005082:	bc80      	pop	{r7}
 8005084:	4770      	bx	lr

08005086 <HAL_UART_Init>:
 8005086:	b580      	push	{r7, lr}
 8005088:	b082      	sub	sp, #8
 800508a:	af00      	add	r7, sp, #0
 800508c:	6078      	str	r0, [r7, #4]
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	2b00      	cmp	r3, #0
 8005092:	d101      	bne.n	8005098 <HAL_UART_Init+0x12>
 8005094:	2301      	movs	r3, #1
 8005096:	e042      	b.n	800511e <HAL_UART_Init+0x98>
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800509e:	b2db      	uxtb	r3, r3
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d106      	bne.n	80050b2 <HAL_UART_Init+0x2c>
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	2200      	movs	r2, #0
 80050a8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80050ac:	6878      	ldr	r0, [r7, #4]
 80050ae:	f7fd fb09 	bl	80026c4 <HAL_UART_MspInit>
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	2224      	movs	r2, #36	; 0x24
 80050b6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	68da      	ldr	r2, [r3, #12]
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80050c8:	60da      	str	r2, [r3, #12]
 80050ca:	6878      	ldr	r0, [r7, #4]
 80050cc:	f000 fdfa 	bl	8005cc4 <UART_SetConfig>
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	691a      	ldr	r2, [r3, #16]
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80050de:	611a      	str	r2, [r3, #16]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	695a      	ldr	r2, [r3, #20]
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	681b      	ldr	r3, [r3, #0]
 80050ea:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80050ee:	615a      	str	r2, [r3, #20]
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	68da      	ldr	r2, [r3, #12]
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	681b      	ldr	r3, [r3, #0]
 80050fa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80050fe:	60da      	str	r2, [r3, #12]
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	2200      	movs	r2, #0
 8005104:	645a      	str	r2, [r3, #68]	; 0x44
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	2220      	movs	r2, #32
 800510a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	2220      	movs	r2, #32
 8005112:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	2200      	movs	r2, #0
 800511a:	635a      	str	r2, [r3, #52]	; 0x34
 800511c:	2300      	movs	r3, #0
 800511e:	4618      	mov	r0, r3
 8005120:	3708      	adds	r7, #8
 8005122:	46bd      	mov	sp, r7
 8005124:	bd80      	pop	{r7, pc}

08005126 <HAL_UART_Transmit>:
 8005126:	b580      	push	{r7, lr}
 8005128:	b08a      	sub	sp, #40	; 0x28
 800512a:	af02      	add	r7, sp, #8
 800512c:	60f8      	str	r0, [r7, #12]
 800512e:	60b9      	str	r1, [r7, #8]
 8005130:	603b      	str	r3, [r7, #0]
 8005132:	4613      	mov	r3, r2
 8005134:	80fb      	strh	r3, [r7, #6]
 8005136:	2300      	movs	r3, #0
 8005138:	617b      	str	r3, [r7, #20]
 800513a:	68fb      	ldr	r3, [r7, #12]
 800513c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005140:	b2db      	uxtb	r3, r3
 8005142:	2b20      	cmp	r3, #32
 8005144:	d16d      	bne.n	8005222 <HAL_UART_Transmit+0xfc>
 8005146:	68bb      	ldr	r3, [r7, #8]
 8005148:	2b00      	cmp	r3, #0
 800514a:	d002      	beq.n	8005152 <HAL_UART_Transmit+0x2c>
 800514c:	88fb      	ldrh	r3, [r7, #6]
 800514e:	2b00      	cmp	r3, #0
 8005150:	d101      	bne.n	8005156 <HAL_UART_Transmit+0x30>
 8005152:	2301      	movs	r3, #1
 8005154:	e066      	b.n	8005224 <HAL_UART_Transmit+0xfe>
 8005156:	68fb      	ldr	r3, [r7, #12]
 8005158:	2200      	movs	r2, #0
 800515a:	645a      	str	r2, [r3, #68]	; 0x44
 800515c:	68fb      	ldr	r3, [r7, #12]
 800515e:	2221      	movs	r2, #33	; 0x21
 8005160:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005164:	f7fd fcf2 	bl	8002b4c <HAL_GetTick>
 8005168:	6178      	str	r0, [r7, #20]
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	88fa      	ldrh	r2, [r7, #6]
 800516e:	849a      	strh	r2, [r3, #36]	; 0x24
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	88fa      	ldrh	r2, [r7, #6]
 8005174:	84da      	strh	r2, [r3, #38]	; 0x26
 8005176:	68fb      	ldr	r3, [r7, #12]
 8005178:	689b      	ldr	r3, [r3, #8]
 800517a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800517e:	d108      	bne.n	8005192 <HAL_UART_Transmit+0x6c>
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	691b      	ldr	r3, [r3, #16]
 8005184:	2b00      	cmp	r3, #0
 8005186:	d104      	bne.n	8005192 <HAL_UART_Transmit+0x6c>
 8005188:	2300      	movs	r3, #0
 800518a:	61fb      	str	r3, [r7, #28]
 800518c:	68bb      	ldr	r3, [r7, #8]
 800518e:	61bb      	str	r3, [r7, #24]
 8005190:	e003      	b.n	800519a <HAL_UART_Transmit+0x74>
 8005192:	68bb      	ldr	r3, [r7, #8]
 8005194:	61fb      	str	r3, [r7, #28]
 8005196:	2300      	movs	r3, #0
 8005198:	61bb      	str	r3, [r7, #24]
 800519a:	e02a      	b.n	80051f2 <HAL_UART_Transmit+0xcc>
 800519c:	683b      	ldr	r3, [r7, #0]
 800519e:	9300      	str	r3, [sp, #0]
 80051a0:	697b      	ldr	r3, [r7, #20]
 80051a2:	2200      	movs	r2, #0
 80051a4:	2180      	movs	r1, #128	; 0x80
 80051a6:	68f8      	ldr	r0, [r7, #12]
 80051a8:	f000 fb49 	bl	800583e <UART_WaitOnFlagUntilTimeout>
 80051ac:	4603      	mov	r3, r0
 80051ae:	2b00      	cmp	r3, #0
 80051b0:	d001      	beq.n	80051b6 <HAL_UART_Transmit+0x90>
 80051b2:	2303      	movs	r3, #3
 80051b4:	e036      	b.n	8005224 <HAL_UART_Transmit+0xfe>
 80051b6:	69fb      	ldr	r3, [r7, #28]
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d10b      	bne.n	80051d4 <HAL_UART_Transmit+0xae>
 80051bc:	69bb      	ldr	r3, [r7, #24]
 80051be:	881b      	ldrh	r3, [r3, #0]
 80051c0:	461a      	mov	r2, r3
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80051ca:	605a      	str	r2, [r3, #4]
 80051cc:	69bb      	ldr	r3, [r7, #24]
 80051ce:	3302      	adds	r3, #2
 80051d0:	61bb      	str	r3, [r7, #24]
 80051d2:	e007      	b.n	80051e4 <HAL_UART_Transmit+0xbe>
 80051d4:	69fb      	ldr	r3, [r7, #28]
 80051d6:	781a      	ldrb	r2, [r3, #0]
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	605a      	str	r2, [r3, #4]
 80051de:	69fb      	ldr	r3, [r7, #28]
 80051e0:	3301      	adds	r3, #1
 80051e2:	61fb      	str	r3, [r7, #28]
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80051e8:	b29b      	uxth	r3, r3
 80051ea:	3b01      	subs	r3, #1
 80051ec:	b29a      	uxth	r2, r3
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	84da      	strh	r2, [r3, #38]	; 0x26
 80051f2:	68fb      	ldr	r3, [r7, #12]
 80051f4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80051f6:	b29b      	uxth	r3, r3
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d1cf      	bne.n	800519c <HAL_UART_Transmit+0x76>
 80051fc:	683b      	ldr	r3, [r7, #0]
 80051fe:	9300      	str	r3, [sp, #0]
 8005200:	697b      	ldr	r3, [r7, #20]
 8005202:	2200      	movs	r2, #0
 8005204:	2140      	movs	r1, #64	; 0x40
 8005206:	68f8      	ldr	r0, [r7, #12]
 8005208:	f000 fb19 	bl	800583e <UART_WaitOnFlagUntilTimeout>
 800520c:	4603      	mov	r3, r0
 800520e:	2b00      	cmp	r3, #0
 8005210:	d001      	beq.n	8005216 <HAL_UART_Transmit+0xf0>
 8005212:	2303      	movs	r3, #3
 8005214:	e006      	b.n	8005224 <HAL_UART_Transmit+0xfe>
 8005216:	68fb      	ldr	r3, [r7, #12]
 8005218:	2220      	movs	r2, #32
 800521a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800521e:	2300      	movs	r3, #0
 8005220:	e000      	b.n	8005224 <HAL_UART_Transmit+0xfe>
 8005222:	2302      	movs	r3, #2
 8005224:	4618      	mov	r0, r3
 8005226:	3720      	adds	r7, #32
 8005228:	46bd      	mov	sp, r7
 800522a:	bd80      	pop	{r7, pc}

0800522c <HAL_UART_Transmit_IT>:
 800522c:	b480      	push	{r7}
 800522e:	b085      	sub	sp, #20
 8005230:	af00      	add	r7, sp, #0
 8005232:	60f8      	str	r0, [r7, #12]
 8005234:	60b9      	str	r1, [r7, #8]
 8005236:	4613      	mov	r3, r2
 8005238:	80fb      	strh	r3, [r7, #6]
 800523a:	68fb      	ldr	r3, [r7, #12]
 800523c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005240:	b2db      	uxtb	r3, r3
 8005242:	2b20      	cmp	r3, #32
 8005244:	d121      	bne.n	800528a <HAL_UART_Transmit_IT+0x5e>
 8005246:	68bb      	ldr	r3, [r7, #8]
 8005248:	2b00      	cmp	r3, #0
 800524a:	d002      	beq.n	8005252 <HAL_UART_Transmit_IT+0x26>
 800524c:	88fb      	ldrh	r3, [r7, #6]
 800524e:	2b00      	cmp	r3, #0
 8005250:	d101      	bne.n	8005256 <HAL_UART_Transmit_IT+0x2a>
 8005252:	2301      	movs	r3, #1
 8005254:	e01a      	b.n	800528c <HAL_UART_Transmit_IT+0x60>
 8005256:	68fb      	ldr	r3, [r7, #12]
 8005258:	68ba      	ldr	r2, [r7, #8]
 800525a:	621a      	str	r2, [r3, #32]
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	88fa      	ldrh	r2, [r7, #6]
 8005260:	849a      	strh	r2, [r3, #36]	; 0x24
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	88fa      	ldrh	r2, [r7, #6]
 8005266:	84da      	strh	r2, [r3, #38]	; 0x26
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	2200      	movs	r2, #0
 800526c:	645a      	str	r2, [r3, #68]	; 0x44
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	2221      	movs	r2, #33	; 0x21
 8005272:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	68da      	ldr	r2, [r3, #12]
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005284:	60da      	str	r2, [r3, #12]
 8005286:	2300      	movs	r3, #0
 8005288:	e000      	b.n	800528c <HAL_UART_Transmit_IT+0x60>
 800528a:	2302      	movs	r3, #2
 800528c:	4618      	mov	r0, r3
 800528e:	3714      	adds	r7, #20
 8005290:	46bd      	mov	sp, r7
 8005292:	bc80      	pop	{r7}
 8005294:	4770      	bx	lr

08005296 <HAL_UART_Receive_IT>:
 8005296:	b580      	push	{r7, lr}
 8005298:	b084      	sub	sp, #16
 800529a:	af00      	add	r7, sp, #0
 800529c:	60f8      	str	r0, [r7, #12]
 800529e:	60b9      	str	r1, [r7, #8]
 80052a0:	4613      	mov	r3, r2
 80052a2:	80fb      	strh	r3, [r7, #6]
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80052aa:	b2db      	uxtb	r3, r3
 80052ac:	2b20      	cmp	r3, #32
 80052ae:	d112      	bne.n	80052d6 <HAL_UART_Receive_IT+0x40>
 80052b0:	68bb      	ldr	r3, [r7, #8]
 80052b2:	2b00      	cmp	r3, #0
 80052b4:	d002      	beq.n	80052bc <HAL_UART_Receive_IT+0x26>
 80052b6:	88fb      	ldrh	r3, [r7, #6]
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	d101      	bne.n	80052c0 <HAL_UART_Receive_IT+0x2a>
 80052bc:	2301      	movs	r3, #1
 80052be:	e00b      	b.n	80052d8 <HAL_UART_Receive_IT+0x42>
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	2200      	movs	r2, #0
 80052c4:	631a      	str	r2, [r3, #48]	; 0x30
 80052c6:	88fb      	ldrh	r3, [r7, #6]
 80052c8:	461a      	mov	r2, r3
 80052ca:	68b9      	ldr	r1, [r7, #8]
 80052cc:	68f8      	ldr	r0, [r7, #12]
 80052ce:	f000 fb24 	bl	800591a <UART_Start_Receive_IT>
 80052d2:	4603      	mov	r3, r0
 80052d4:	e000      	b.n	80052d8 <HAL_UART_Receive_IT+0x42>
 80052d6:	2302      	movs	r3, #2
 80052d8:	4618      	mov	r0, r3
 80052da:	3710      	adds	r7, #16
 80052dc:	46bd      	mov	sp, r7
 80052de:	bd80      	pop	{r7, pc}

080052e0 <HAL_UART_IRQHandler>:
 80052e0:	b580      	push	{r7, lr}
 80052e2:	b0ba      	sub	sp, #232	; 0xe8
 80052e4:	af00      	add	r7, sp, #0
 80052e6:	6078      	str	r0, [r7, #4]
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	68db      	ldr	r3, [r3, #12]
 80052f8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	695b      	ldr	r3, [r3, #20]
 8005302:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8005306:	2300      	movs	r3, #0
 8005308:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800530c:	2300      	movs	r3, #0
 800530e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8005312:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005316:	f003 030f 	and.w	r3, r3, #15
 800531a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800531e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8005322:	2b00      	cmp	r3, #0
 8005324:	d10f      	bne.n	8005346 <HAL_UART_IRQHandler+0x66>
 8005326:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800532a:	f003 0320 	and.w	r3, r3, #32
 800532e:	2b00      	cmp	r3, #0
 8005330:	d009      	beq.n	8005346 <HAL_UART_IRQHandler+0x66>
 8005332:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005336:	f003 0320 	and.w	r3, r3, #32
 800533a:	2b00      	cmp	r3, #0
 800533c:	d003      	beq.n	8005346 <HAL_UART_IRQHandler+0x66>
 800533e:	6878      	ldr	r0, [r7, #4]
 8005340:	f000 fc01 	bl	8005b46 <UART_Receive_IT>
 8005344:	e25b      	b.n	80057fe <HAL_UART_IRQHandler+0x51e>
 8005346:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800534a:	2b00      	cmp	r3, #0
 800534c:	f000 80de 	beq.w	800550c <HAL_UART_IRQHandler+0x22c>
 8005350:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005354:	f003 0301 	and.w	r3, r3, #1
 8005358:	2b00      	cmp	r3, #0
 800535a:	d106      	bne.n	800536a <HAL_UART_IRQHandler+0x8a>
 800535c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005360:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8005364:	2b00      	cmp	r3, #0
 8005366:	f000 80d1 	beq.w	800550c <HAL_UART_IRQHandler+0x22c>
 800536a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800536e:	f003 0301 	and.w	r3, r3, #1
 8005372:	2b00      	cmp	r3, #0
 8005374:	d00b      	beq.n	800538e <HAL_UART_IRQHandler+0xae>
 8005376:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800537a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800537e:	2b00      	cmp	r3, #0
 8005380:	d005      	beq.n	800538e <HAL_UART_IRQHandler+0xae>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005386:	f043 0201 	orr.w	r2, r3, #1
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	645a      	str	r2, [r3, #68]	; 0x44
 800538e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005392:	f003 0304 	and.w	r3, r3, #4
 8005396:	2b00      	cmp	r3, #0
 8005398:	d00b      	beq.n	80053b2 <HAL_UART_IRQHandler+0xd2>
 800539a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800539e:	f003 0301 	and.w	r3, r3, #1
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	d005      	beq.n	80053b2 <HAL_UART_IRQHandler+0xd2>
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053aa:	f043 0202 	orr.w	r2, r3, #2
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	645a      	str	r2, [r3, #68]	; 0x44
 80053b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80053b6:	f003 0302 	and.w	r3, r3, #2
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	d00b      	beq.n	80053d6 <HAL_UART_IRQHandler+0xf6>
 80053be:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80053c2:	f003 0301 	and.w	r3, r3, #1
 80053c6:	2b00      	cmp	r3, #0
 80053c8:	d005      	beq.n	80053d6 <HAL_UART_IRQHandler+0xf6>
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053ce:	f043 0204 	orr.w	r2, r3, #4
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	645a      	str	r2, [r3, #68]	; 0x44
 80053d6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80053da:	f003 0308 	and.w	r3, r3, #8
 80053de:	2b00      	cmp	r3, #0
 80053e0:	d011      	beq.n	8005406 <HAL_UART_IRQHandler+0x126>
 80053e2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80053e6:	f003 0320 	and.w	r3, r3, #32
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d105      	bne.n	80053fa <HAL_UART_IRQHandler+0x11a>
 80053ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80053f2:	f003 0301 	and.w	r3, r3, #1
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d005      	beq.n	8005406 <HAL_UART_IRQHandler+0x126>
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053fe:	f043 0208 	orr.w	r2, r3, #8
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	645a      	str	r2, [r3, #68]	; 0x44
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800540a:	2b00      	cmp	r3, #0
 800540c:	f000 81f2 	beq.w	80057f4 <HAL_UART_IRQHandler+0x514>
 8005410:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005414:	f003 0320 	and.w	r3, r3, #32
 8005418:	2b00      	cmp	r3, #0
 800541a:	d008      	beq.n	800542e <HAL_UART_IRQHandler+0x14e>
 800541c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005420:	f003 0320 	and.w	r3, r3, #32
 8005424:	2b00      	cmp	r3, #0
 8005426:	d002      	beq.n	800542e <HAL_UART_IRQHandler+0x14e>
 8005428:	6878      	ldr	r0, [r7, #4]
 800542a:	f000 fb8c 	bl	8005b46 <UART_Receive_IT>
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	695b      	ldr	r3, [r3, #20]
 8005434:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005438:	2b00      	cmp	r3, #0
 800543a:	bf14      	ite	ne
 800543c:	2301      	movne	r3, #1
 800543e:	2300      	moveq	r3, #0
 8005440:	b2db      	uxtb	r3, r3
 8005442:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800544a:	f003 0308 	and.w	r3, r3, #8
 800544e:	2b00      	cmp	r3, #0
 8005450:	d103      	bne.n	800545a <HAL_UART_IRQHandler+0x17a>
 8005452:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8005456:	2b00      	cmp	r3, #0
 8005458:	d04f      	beq.n	80054fa <HAL_UART_IRQHandler+0x21a>
 800545a:	6878      	ldr	r0, [r7, #4]
 800545c:	f000 fa96 	bl	800598c <UART_EndRxTransfer>
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	695b      	ldr	r3, [r3, #20]
 8005466:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800546a:	2b00      	cmp	r3, #0
 800546c:	d041      	beq.n	80054f2 <HAL_UART_IRQHandler+0x212>
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	3314      	adds	r3, #20
 8005474:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8005478:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800547c:	e853 3f00 	ldrex	r3, [r3]
 8005480:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8005484:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8005488:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800548c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	3314      	adds	r3, #20
 8005496:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800549a:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800549e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80054a2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80054a6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80054aa:	e841 2300 	strex	r3, r2, [r1]
 80054ae:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80054b2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d1d9      	bne.n	800546e <HAL_UART_IRQHandler+0x18e>
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80054be:	2b00      	cmp	r3, #0
 80054c0:	d013      	beq.n	80054ea <HAL_UART_IRQHandler+0x20a>
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80054c6:	4a7e      	ldr	r2, [pc, #504]	; (80056c0 <HAL_UART_IRQHandler+0x3e0>)
 80054c8:	635a      	str	r2, [r3, #52]	; 0x34
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80054ce:	4618      	mov	r0, r3
 80054d0:	f7fd fc84 	bl	8002ddc <HAL_DMA_Abort_IT>
 80054d4:	4603      	mov	r3, r0
 80054d6:	2b00      	cmp	r3, #0
 80054d8:	d016      	beq.n	8005508 <HAL_UART_IRQHandler+0x228>
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80054de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054e0:	687a      	ldr	r2, [r7, #4]
 80054e2:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80054e4:	4610      	mov	r0, r2
 80054e6:	4798      	blx	r3
 80054e8:	e00e      	b.n	8005508 <HAL_UART_IRQHandler+0x228>
 80054ea:	6878      	ldr	r0, [r7, #4]
 80054ec:	f000 f993 	bl	8005816 <HAL_UART_ErrorCallback>
 80054f0:	e00a      	b.n	8005508 <HAL_UART_IRQHandler+0x228>
 80054f2:	6878      	ldr	r0, [r7, #4]
 80054f4:	f000 f98f 	bl	8005816 <HAL_UART_ErrorCallback>
 80054f8:	e006      	b.n	8005508 <HAL_UART_IRQHandler+0x228>
 80054fa:	6878      	ldr	r0, [r7, #4]
 80054fc:	f000 f98b 	bl	8005816 <HAL_UART_ErrorCallback>
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	2200      	movs	r2, #0
 8005504:	645a      	str	r2, [r3, #68]	; 0x44
 8005506:	e175      	b.n	80057f4 <HAL_UART_IRQHandler+0x514>
 8005508:	bf00      	nop
 800550a:	e173      	b.n	80057f4 <HAL_UART_IRQHandler+0x514>
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005510:	2b01      	cmp	r3, #1
 8005512:	f040 814f 	bne.w	80057b4 <HAL_UART_IRQHandler+0x4d4>
 8005516:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800551a:	f003 0310 	and.w	r3, r3, #16
 800551e:	2b00      	cmp	r3, #0
 8005520:	f000 8148 	beq.w	80057b4 <HAL_UART_IRQHandler+0x4d4>
 8005524:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005528:	f003 0310 	and.w	r3, r3, #16
 800552c:	2b00      	cmp	r3, #0
 800552e:	f000 8141 	beq.w	80057b4 <HAL_UART_IRQHandler+0x4d4>
 8005532:	2300      	movs	r3, #0
 8005534:	60bb      	str	r3, [r7, #8]
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	681b      	ldr	r3, [r3, #0]
 800553c:	60bb      	str	r3, [r7, #8]
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	681b      	ldr	r3, [r3, #0]
 8005542:	685b      	ldr	r3, [r3, #4]
 8005544:	60bb      	str	r3, [r7, #8]
 8005546:	68bb      	ldr	r3, [r7, #8]
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	695b      	ldr	r3, [r3, #20]
 800554e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005552:	2b00      	cmp	r3, #0
 8005554:	f000 80b6 	beq.w	80056c4 <HAL_UART_IRQHandler+0x3e4>
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	685b      	ldr	r3, [r3, #4]
 8005560:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8005564:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8005568:	2b00      	cmp	r3, #0
 800556a:	f000 8145 	beq.w	80057f8 <HAL_UART_IRQHandler+0x518>
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005572:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8005576:	429a      	cmp	r2, r3
 8005578:	f080 813e 	bcs.w	80057f8 <HAL_UART_IRQHandler+0x518>
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8005582:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005588:	699b      	ldr	r3, [r3, #24]
 800558a:	2b20      	cmp	r3, #32
 800558c:	f000 8088 	beq.w	80056a0 <HAL_UART_IRQHandler+0x3c0>
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	330c      	adds	r3, #12
 8005596:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800559a:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800559e:	e853 3f00 	ldrex	r3, [r3]
 80055a2:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80055a6:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80055aa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80055ae:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	330c      	adds	r3, #12
 80055b8:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 80055bc:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80055c0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80055c4:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80055c8:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80055cc:	e841 2300 	strex	r3, r2, [r1]
 80055d0:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80055d4:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80055d8:	2b00      	cmp	r3, #0
 80055da:	d1d9      	bne.n	8005590 <HAL_UART_IRQHandler+0x2b0>
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	3314      	adds	r3, #20
 80055e2:	677b      	str	r3, [r7, #116]	; 0x74
 80055e4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80055e6:	e853 3f00 	ldrex	r3, [r3]
 80055ea:	673b      	str	r3, [r7, #112]	; 0x70
 80055ec:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80055ee:	f023 0301 	bic.w	r3, r3, #1
 80055f2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	3314      	adds	r3, #20
 80055fc:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8005600:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8005604:	67fb      	str	r3, [r7, #124]	; 0x7c
 8005606:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8005608:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800560c:	e841 2300 	strex	r3, r2, [r1]
 8005610:	67bb      	str	r3, [r7, #120]	; 0x78
 8005612:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005614:	2b00      	cmp	r3, #0
 8005616:	d1e1      	bne.n	80055dc <HAL_UART_IRQHandler+0x2fc>
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	3314      	adds	r3, #20
 800561e:	663b      	str	r3, [r7, #96]	; 0x60
 8005620:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8005622:	e853 3f00 	ldrex	r3, [r3]
 8005626:	65fb      	str	r3, [r7, #92]	; 0x5c
 8005628:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800562a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800562e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	3314      	adds	r3, #20
 8005638:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800563c:	66fa      	str	r2, [r7, #108]	; 0x6c
 800563e:	66bb      	str	r3, [r7, #104]	; 0x68
 8005640:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8005642:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8005644:	e841 2300 	strex	r3, r2, [r1]
 8005648:	667b      	str	r3, [r7, #100]	; 0x64
 800564a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800564c:	2b00      	cmp	r3, #0
 800564e:	d1e3      	bne.n	8005618 <HAL_UART_IRQHandler+0x338>
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	2220      	movs	r2, #32
 8005654:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	2200      	movs	r2, #0
 800565c:	631a      	str	r2, [r3, #48]	; 0x30
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	330c      	adds	r3, #12
 8005664:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005666:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005668:	e853 3f00 	ldrex	r3, [r3]
 800566c:	64bb      	str	r3, [r7, #72]	; 0x48
 800566e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005670:	f023 0310 	bic.w	r3, r3, #16
 8005674:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	330c      	adds	r3, #12
 800567e:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8005682:	65ba      	str	r2, [r7, #88]	; 0x58
 8005684:	657b      	str	r3, [r7, #84]	; 0x54
 8005686:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8005688:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800568a:	e841 2300 	strex	r3, r2, [r1]
 800568e:	653b      	str	r3, [r7, #80]	; 0x50
 8005690:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8005692:	2b00      	cmp	r3, #0
 8005694:	d1e3      	bne.n	800565e <HAL_UART_IRQHandler+0x37e>
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800569a:	4618      	mov	r0, r3
 800569c:	f7fd fb63 	bl	8002d66 <HAL_DMA_Abort>
 80056a0:	687b      	ldr	r3, [r7, #4]
 80056a2:	2202      	movs	r2, #2
 80056a4:	635a      	str	r2, [r3, #52]	; 0x34
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80056ae:	b29b      	uxth	r3, r3
 80056b0:	1ad3      	subs	r3, r2, r3
 80056b2:	b29b      	uxth	r3, r3
 80056b4:	4619      	mov	r1, r3
 80056b6:	6878      	ldr	r0, [r7, #4]
 80056b8:	f000 f8b6 	bl	8005828 <HAL_UARTEx_RxEventCallback>
 80056bc:	e09c      	b.n	80057f8 <HAL_UART_IRQHandler+0x518>
 80056be:	bf00      	nop
 80056c0:	08005a51 	.word	0x08005a51
 80056c4:	687b      	ldr	r3, [r7, #4]
 80056c6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80056cc:	b29b      	uxth	r3, r3
 80056ce:	1ad3      	subs	r3, r2, r3
 80056d0:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80056d8:	b29b      	uxth	r3, r3
 80056da:	2b00      	cmp	r3, #0
 80056dc:	f000 808e 	beq.w	80057fc <HAL_UART_IRQHandler+0x51c>
 80056e0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80056e4:	2b00      	cmp	r3, #0
 80056e6:	f000 8089 	beq.w	80057fc <HAL_UART_IRQHandler+0x51c>
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	681b      	ldr	r3, [r3, #0]
 80056ee:	330c      	adds	r3, #12
 80056f0:	63bb      	str	r3, [r7, #56]	; 0x38
 80056f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80056f4:	e853 3f00 	ldrex	r3, [r3]
 80056f8:	637b      	str	r3, [r7, #52]	; 0x34
 80056fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80056fc:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8005700:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	330c      	adds	r3, #12
 800570a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800570e:	647a      	str	r2, [r7, #68]	; 0x44
 8005710:	643b      	str	r3, [r7, #64]	; 0x40
 8005712:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8005714:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8005716:	e841 2300 	strex	r3, r2, [r1]
 800571a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800571c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800571e:	2b00      	cmp	r3, #0
 8005720:	d1e3      	bne.n	80056ea <HAL_UART_IRQHandler+0x40a>
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	3314      	adds	r3, #20
 8005728:	627b      	str	r3, [r7, #36]	; 0x24
 800572a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800572c:	e853 3f00 	ldrex	r3, [r3]
 8005730:	623b      	str	r3, [r7, #32]
 8005732:	6a3b      	ldr	r3, [r7, #32]
 8005734:	f023 0301 	bic.w	r3, r3, #1
 8005738:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	681b      	ldr	r3, [r3, #0]
 8005740:	3314      	adds	r3, #20
 8005742:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8005746:	633a      	str	r2, [r7, #48]	; 0x30
 8005748:	62fb      	str	r3, [r7, #44]	; 0x2c
 800574a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800574c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800574e:	e841 2300 	strex	r3, r2, [r1]
 8005752:	62bb      	str	r3, [r7, #40]	; 0x28
 8005754:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005756:	2b00      	cmp	r3, #0
 8005758:	d1e3      	bne.n	8005722 <HAL_UART_IRQHandler+0x442>
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	2220      	movs	r2, #32
 800575e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	2200      	movs	r2, #0
 8005766:	631a      	str	r2, [r3, #48]	; 0x30
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	330c      	adds	r3, #12
 800576e:	613b      	str	r3, [r7, #16]
 8005770:	693b      	ldr	r3, [r7, #16]
 8005772:	e853 3f00 	ldrex	r3, [r3]
 8005776:	60fb      	str	r3, [r7, #12]
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	f023 0310 	bic.w	r3, r3, #16
 800577e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	330c      	adds	r3, #12
 8005788:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800578c:	61fa      	str	r2, [r7, #28]
 800578e:	61bb      	str	r3, [r7, #24]
 8005790:	69b9      	ldr	r1, [r7, #24]
 8005792:	69fa      	ldr	r2, [r7, #28]
 8005794:	e841 2300 	strex	r3, r2, [r1]
 8005798:	617b      	str	r3, [r7, #20]
 800579a:	697b      	ldr	r3, [r7, #20]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d1e3      	bne.n	8005768 <HAL_UART_IRQHandler+0x488>
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	2202      	movs	r2, #2
 80057a4:	635a      	str	r2, [r3, #52]	; 0x34
 80057a6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80057aa:	4619      	mov	r1, r3
 80057ac:	6878      	ldr	r0, [r7, #4]
 80057ae:	f000 f83b 	bl	8005828 <HAL_UARTEx_RxEventCallback>
 80057b2:	e023      	b.n	80057fc <HAL_UART_IRQHandler+0x51c>
 80057b4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80057b8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80057bc:	2b00      	cmp	r3, #0
 80057be:	d009      	beq.n	80057d4 <HAL_UART_IRQHandler+0x4f4>
 80057c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80057c4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d003      	beq.n	80057d4 <HAL_UART_IRQHandler+0x4f4>
 80057cc:	6878      	ldr	r0, [r7, #4]
 80057ce:	f000 f953 	bl	8005a78 <UART_Transmit_IT>
 80057d2:	e014      	b.n	80057fe <HAL_UART_IRQHandler+0x51e>
 80057d4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80057d8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057dc:	2b00      	cmp	r3, #0
 80057de:	d00e      	beq.n	80057fe <HAL_UART_IRQHandler+0x51e>
 80057e0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80057e4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d008      	beq.n	80057fe <HAL_UART_IRQHandler+0x51e>
 80057ec:	6878      	ldr	r0, [r7, #4]
 80057ee:	f000 f992 	bl	8005b16 <UART_EndTransmit_IT>
 80057f2:	e004      	b.n	80057fe <HAL_UART_IRQHandler+0x51e>
 80057f4:	bf00      	nop
 80057f6:	e002      	b.n	80057fe <HAL_UART_IRQHandler+0x51e>
 80057f8:	bf00      	nop
 80057fa:	e000      	b.n	80057fe <HAL_UART_IRQHandler+0x51e>
 80057fc:	bf00      	nop
 80057fe:	37e8      	adds	r7, #232	; 0xe8
 8005800:	46bd      	mov	sp, r7
 8005802:	bd80      	pop	{r7, pc}

08005804 <HAL_UART_TxCpltCallback>:
 8005804:	b480      	push	{r7}
 8005806:	b083      	sub	sp, #12
 8005808:	af00      	add	r7, sp, #0
 800580a:	6078      	str	r0, [r7, #4]
 800580c:	bf00      	nop
 800580e:	370c      	adds	r7, #12
 8005810:	46bd      	mov	sp, r7
 8005812:	bc80      	pop	{r7}
 8005814:	4770      	bx	lr

08005816 <HAL_UART_ErrorCallback>:
 8005816:	b480      	push	{r7}
 8005818:	b083      	sub	sp, #12
 800581a:	af00      	add	r7, sp, #0
 800581c:	6078      	str	r0, [r7, #4]
 800581e:	bf00      	nop
 8005820:	370c      	adds	r7, #12
 8005822:	46bd      	mov	sp, r7
 8005824:	bc80      	pop	{r7}
 8005826:	4770      	bx	lr

08005828 <HAL_UARTEx_RxEventCallback>:
 8005828:	b480      	push	{r7}
 800582a:	b083      	sub	sp, #12
 800582c:	af00      	add	r7, sp, #0
 800582e:	6078      	str	r0, [r7, #4]
 8005830:	460b      	mov	r3, r1
 8005832:	807b      	strh	r3, [r7, #2]
 8005834:	bf00      	nop
 8005836:	370c      	adds	r7, #12
 8005838:	46bd      	mov	sp, r7
 800583a:	bc80      	pop	{r7}
 800583c:	4770      	bx	lr

0800583e <UART_WaitOnFlagUntilTimeout>:
 800583e:	b580      	push	{r7, lr}
 8005840:	b090      	sub	sp, #64	; 0x40
 8005842:	af00      	add	r7, sp, #0
 8005844:	60f8      	str	r0, [r7, #12]
 8005846:	60b9      	str	r1, [r7, #8]
 8005848:	603b      	str	r3, [r7, #0]
 800584a:	4613      	mov	r3, r2
 800584c:	71fb      	strb	r3, [r7, #7]
 800584e:	e050      	b.n	80058f2 <UART_WaitOnFlagUntilTimeout+0xb4>
 8005850:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005852:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8005856:	d04c      	beq.n	80058f2 <UART_WaitOnFlagUntilTimeout+0xb4>
 8005858:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800585a:	2b00      	cmp	r3, #0
 800585c:	d007      	beq.n	800586e <UART_WaitOnFlagUntilTimeout+0x30>
 800585e:	f7fd f975 	bl	8002b4c <HAL_GetTick>
 8005862:	4602      	mov	r2, r0
 8005864:	683b      	ldr	r3, [r7, #0]
 8005866:	1ad3      	subs	r3, r2, r3
 8005868:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800586a:	429a      	cmp	r2, r3
 800586c:	d241      	bcs.n	80058f2 <UART_WaitOnFlagUntilTimeout+0xb4>
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	330c      	adds	r3, #12
 8005874:	62bb      	str	r3, [r7, #40]	; 0x28
 8005876:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005878:	e853 3f00 	ldrex	r3, [r3]
 800587c:	627b      	str	r3, [r7, #36]	; 0x24
 800587e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005880:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8005884:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005886:	68fb      	ldr	r3, [r7, #12]
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	330c      	adds	r3, #12
 800588c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800588e:	637a      	str	r2, [r7, #52]	; 0x34
 8005890:	633b      	str	r3, [r7, #48]	; 0x30
 8005892:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005894:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005896:	e841 2300 	strex	r3, r2, [r1]
 800589a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800589c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800589e:	2b00      	cmp	r3, #0
 80058a0:	d1e5      	bne.n	800586e <UART_WaitOnFlagUntilTimeout+0x30>
 80058a2:	68fb      	ldr	r3, [r7, #12]
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	3314      	adds	r3, #20
 80058a8:	617b      	str	r3, [r7, #20]
 80058aa:	697b      	ldr	r3, [r7, #20]
 80058ac:	e853 3f00 	ldrex	r3, [r3]
 80058b0:	613b      	str	r3, [r7, #16]
 80058b2:	693b      	ldr	r3, [r7, #16]
 80058b4:	f023 0301 	bic.w	r3, r3, #1
 80058b8:	63bb      	str	r3, [r7, #56]	; 0x38
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	3314      	adds	r3, #20
 80058c0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80058c2:	623a      	str	r2, [r7, #32]
 80058c4:	61fb      	str	r3, [r7, #28]
 80058c6:	69f9      	ldr	r1, [r7, #28]
 80058c8:	6a3a      	ldr	r2, [r7, #32]
 80058ca:	e841 2300 	strex	r3, r2, [r1]
 80058ce:	61bb      	str	r3, [r7, #24]
 80058d0:	69bb      	ldr	r3, [r7, #24]
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d1e5      	bne.n	80058a2 <UART_WaitOnFlagUntilTimeout+0x64>
 80058d6:	68fb      	ldr	r3, [r7, #12]
 80058d8:	2220      	movs	r2, #32
 80058da:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80058de:	68fb      	ldr	r3, [r7, #12]
 80058e0:	2220      	movs	r2, #32
 80058e2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	2200      	movs	r2, #0
 80058ea:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80058ee:	2303      	movs	r3, #3
 80058f0:	e00f      	b.n	8005912 <UART_WaitOnFlagUntilTimeout+0xd4>
 80058f2:	68fb      	ldr	r3, [r7, #12]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	681a      	ldr	r2, [r3, #0]
 80058f8:	68bb      	ldr	r3, [r7, #8]
 80058fa:	4013      	ands	r3, r2
 80058fc:	68ba      	ldr	r2, [r7, #8]
 80058fe:	429a      	cmp	r2, r3
 8005900:	bf0c      	ite	eq
 8005902:	2301      	moveq	r3, #1
 8005904:	2300      	movne	r3, #0
 8005906:	b2db      	uxtb	r3, r3
 8005908:	461a      	mov	r2, r3
 800590a:	79fb      	ldrb	r3, [r7, #7]
 800590c:	429a      	cmp	r2, r3
 800590e:	d09f      	beq.n	8005850 <UART_WaitOnFlagUntilTimeout+0x12>
 8005910:	2300      	movs	r3, #0
 8005912:	4618      	mov	r0, r3
 8005914:	3740      	adds	r7, #64	; 0x40
 8005916:	46bd      	mov	sp, r7
 8005918:	bd80      	pop	{r7, pc}

0800591a <UART_Start_Receive_IT>:
 800591a:	b480      	push	{r7}
 800591c:	b085      	sub	sp, #20
 800591e:	af00      	add	r7, sp, #0
 8005920:	60f8      	str	r0, [r7, #12]
 8005922:	60b9      	str	r1, [r7, #8]
 8005924:	4613      	mov	r3, r2
 8005926:	80fb      	strh	r3, [r7, #6]
 8005928:	68fb      	ldr	r3, [r7, #12]
 800592a:	68ba      	ldr	r2, [r7, #8]
 800592c:	629a      	str	r2, [r3, #40]	; 0x28
 800592e:	68fb      	ldr	r3, [r7, #12]
 8005930:	88fa      	ldrh	r2, [r7, #6]
 8005932:	859a      	strh	r2, [r3, #44]	; 0x2c
 8005934:	68fb      	ldr	r3, [r7, #12]
 8005936:	88fa      	ldrh	r2, [r7, #6]
 8005938:	85da      	strh	r2, [r3, #46]	; 0x2e
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	2200      	movs	r2, #0
 800593e:	645a      	str	r2, [r3, #68]	; 0x44
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	2222      	movs	r2, #34	; 0x22
 8005944:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	691b      	ldr	r3, [r3, #16]
 800594c:	2b00      	cmp	r3, #0
 800594e:	d007      	beq.n	8005960 <UART_Start_Receive_IT+0x46>
 8005950:	68fb      	ldr	r3, [r7, #12]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	68da      	ldr	r2, [r3, #12]
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800595e:	60da      	str	r2, [r3, #12]
 8005960:	68fb      	ldr	r3, [r7, #12]
 8005962:	681b      	ldr	r3, [r3, #0]
 8005964:	695a      	ldr	r2, [r3, #20]
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	f042 0201 	orr.w	r2, r2, #1
 800596e:	615a      	str	r2, [r3, #20]
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	68da      	ldr	r2, [r3, #12]
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	f042 0220 	orr.w	r2, r2, #32
 800597e:	60da      	str	r2, [r3, #12]
 8005980:	2300      	movs	r3, #0
 8005982:	4618      	mov	r0, r3
 8005984:	3714      	adds	r7, #20
 8005986:	46bd      	mov	sp, r7
 8005988:	bc80      	pop	{r7}
 800598a:	4770      	bx	lr

0800598c <UART_EndRxTransfer>:
 800598c:	b480      	push	{r7}
 800598e:	b095      	sub	sp, #84	; 0x54
 8005990:	af00      	add	r7, sp, #0
 8005992:	6078      	str	r0, [r7, #4]
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	681b      	ldr	r3, [r3, #0]
 8005998:	330c      	adds	r3, #12
 800599a:	637b      	str	r3, [r7, #52]	; 0x34
 800599c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800599e:	e853 3f00 	ldrex	r3, [r3]
 80059a2:	633b      	str	r3, [r7, #48]	; 0x30
 80059a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80059a6:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80059aa:	64fb      	str	r3, [r7, #76]	; 0x4c
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	330c      	adds	r3, #12
 80059b2:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80059b4:	643a      	str	r2, [r7, #64]	; 0x40
 80059b6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80059b8:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80059ba:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80059bc:	e841 2300 	strex	r3, r2, [r1]
 80059c0:	63bb      	str	r3, [r7, #56]	; 0x38
 80059c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80059c4:	2b00      	cmp	r3, #0
 80059c6:	d1e5      	bne.n	8005994 <UART_EndRxTransfer+0x8>
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	3314      	adds	r3, #20
 80059ce:	623b      	str	r3, [r7, #32]
 80059d0:	6a3b      	ldr	r3, [r7, #32]
 80059d2:	e853 3f00 	ldrex	r3, [r3]
 80059d6:	61fb      	str	r3, [r7, #28]
 80059d8:	69fb      	ldr	r3, [r7, #28]
 80059da:	f023 0301 	bic.w	r3, r3, #1
 80059de:	64bb      	str	r3, [r7, #72]	; 0x48
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	3314      	adds	r3, #20
 80059e6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80059e8:	62fa      	str	r2, [r7, #44]	; 0x2c
 80059ea:	62bb      	str	r3, [r7, #40]	; 0x28
 80059ec:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80059ee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80059f0:	e841 2300 	strex	r3, r2, [r1]
 80059f4:	627b      	str	r3, [r7, #36]	; 0x24
 80059f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80059f8:	2b00      	cmp	r3, #0
 80059fa:	d1e5      	bne.n	80059c8 <UART_EndRxTransfer+0x3c>
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a00:	2b01      	cmp	r3, #1
 8005a02:	d119      	bne.n	8005a38 <UART_EndRxTransfer+0xac>
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	330c      	adds	r3, #12
 8005a0a:	60fb      	str	r3, [r7, #12]
 8005a0c:	68fb      	ldr	r3, [r7, #12]
 8005a0e:	e853 3f00 	ldrex	r3, [r3]
 8005a12:	60bb      	str	r3, [r7, #8]
 8005a14:	68bb      	ldr	r3, [r7, #8]
 8005a16:	f023 0310 	bic.w	r3, r3, #16
 8005a1a:	647b      	str	r3, [r7, #68]	; 0x44
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	330c      	adds	r3, #12
 8005a22:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8005a24:	61ba      	str	r2, [r7, #24]
 8005a26:	617b      	str	r3, [r7, #20]
 8005a28:	6979      	ldr	r1, [r7, #20]
 8005a2a:	69ba      	ldr	r2, [r7, #24]
 8005a2c:	e841 2300 	strex	r3, r2, [r1]
 8005a30:	613b      	str	r3, [r7, #16]
 8005a32:	693b      	ldr	r3, [r7, #16]
 8005a34:	2b00      	cmp	r3, #0
 8005a36:	d1e5      	bne.n	8005a04 <UART_EndRxTransfer+0x78>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	2220      	movs	r2, #32
 8005a3c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	2200      	movs	r2, #0
 8005a44:	631a      	str	r2, [r3, #48]	; 0x30
 8005a46:	bf00      	nop
 8005a48:	3754      	adds	r7, #84	; 0x54
 8005a4a:	46bd      	mov	sp, r7
 8005a4c:	bc80      	pop	{r7}
 8005a4e:	4770      	bx	lr

08005a50 <UART_DMAAbortOnError>:
 8005a50:	b580      	push	{r7, lr}
 8005a52:	b084      	sub	sp, #16
 8005a54:	af00      	add	r7, sp, #0
 8005a56:	6078      	str	r0, [r7, #4]
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a5c:	60fb      	str	r3, [r7, #12]
 8005a5e:	68fb      	ldr	r3, [r7, #12]
 8005a60:	2200      	movs	r2, #0
 8005a62:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	2200      	movs	r2, #0
 8005a68:	84da      	strh	r2, [r3, #38]	; 0x26
 8005a6a:	68f8      	ldr	r0, [r7, #12]
 8005a6c:	f7ff fed3 	bl	8005816 <HAL_UART_ErrorCallback>
 8005a70:	bf00      	nop
 8005a72:	3710      	adds	r7, #16
 8005a74:	46bd      	mov	sp, r7
 8005a76:	bd80      	pop	{r7, pc}

08005a78 <UART_Transmit_IT>:
 8005a78:	b480      	push	{r7}
 8005a7a:	b085      	sub	sp, #20
 8005a7c:	af00      	add	r7, sp, #0
 8005a7e:	6078      	str	r0, [r7, #4]
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005a86:	b2db      	uxtb	r3, r3
 8005a88:	2b21      	cmp	r3, #33	; 0x21
 8005a8a:	d13e      	bne.n	8005b0a <UART_Transmit_IT+0x92>
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	689b      	ldr	r3, [r3, #8]
 8005a90:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005a94:	d114      	bne.n	8005ac0 <UART_Transmit_IT+0x48>
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	691b      	ldr	r3, [r3, #16]
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	d110      	bne.n	8005ac0 <UART_Transmit_IT+0x48>
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	6a1b      	ldr	r3, [r3, #32]
 8005aa2:	60fb      	str	r3, [r7, #12]
 8005aa4:	68fb      	ldr	r3, [r7, #12]
 8005aa6:	881b      	ldrh	r3, [r3, #0]
 8005aa8:	461a      	mov	r2, r3
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005ab2:	605a      	str	r2, [r3, #4]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	6a1b      	ldr	r3, [r3, #32]
 8005ab8:	1c9a      	adds	r2, r3, #2
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	621a      	str	r2, [r3, #32]
 8005abe:	e008      	b.n	8005ad2 <UART_Transmit_IT+0x5a>
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	6a1b      	ldr	r3, [r3, #32]
 8005ac4:	1c59      	adds	r1, r3, #1
 8005ac6:	687a      	ldr	r2, [r7, #4]
 8005ac8:	6211      	str	r1, [r2, #32]
 8005aca:	781a      	ldrb	r2, [r3, #0]
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	605a      	str	r2, [r3, #4]
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005ad6:	b29b      	uxth	r3, r3
 8005ad8:	3b01      	subs	r3, #1
 8005ada:	b29b      	uxth	r3, r3
 8005adc:	687a      	ldr	r2, [r7, #4]
 8005ade:	4619      	mov	r1, r3
 8005ae0:	84d1      	strh	r1, [r2, #38]	; 0x26
 8005ae2:	2b00      	cmp	r3, #0
 8005ae4:	d10f      	bne.n	8005b06 <UART_Transmit_IT+0x8e>
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	681b      	ldr	r3, [r3, #0]
 8005aea:	68da      	ldr	r2, [r3, #12]
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	681b      	ldr	r3, [r3, #0]
 8005af0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005af4:	60da      	str	r2, [r3, #12]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	68da      	ldr	r2, [r3, #12]
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005b04:	60da      	str	r2, [r3, #12]
 8005b06:	2300      	movs	r3, #0
 8005b08:	e000      	b.n	8005b0c <UART_Transmit_IT+0x94>
 8005b0a:	2302      	movs	r3, #2
 8005b0c:	4618      	mov	r0, r3
 8005b0e:	3714      	adds	r7, #20
 8005b10:	46bd      	mov	sp, r7
 8005b12:	bc80      	pop	{r7}
 8005b14:	4770      	bx	lr

08005b16 <UART_EndTransmit_IT>:
 8005b16:	b580      	push	{r7, lr}
 8005b18:	b082      	sub	sp, #8
 8005b1a:	af00      	add	r7, sp, #0
 8005b1c:	6078      	str	r0, [r7, #4]
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	68da      	ldr	r2, [r3, #12]
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005b2c:	60da      	str	r2, [r3, #12]
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	2220      	movs	r2, #32
 8005b32:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005b36:	6878      	ldr	r0, [r7, #4]
 8005b38:	f7ff fe64 	bl	8005804 <HAL_UART_TxCpltCallback>
 8005b3c:	2300      	movs	r3, #0
 8005b3e:	4618      	mov	r0, r3
 8005b40:	3708      	adds	r7, #8
 8005b42:	46bd      	mov	sp, r7
 8005b44:	bd80      	pop	{r7, pc}

08005b46 <UART_Receive_IT>:
 8005b46:	b580      	push	{r7, lr}
 8005b48:	b08c      	sub	sp, #48	; 0x30
 8005b4a:	af00      	add	r7, sp, #0
 8005b4c:	6078      	str	r0, [r7, #4]
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8005b54:	b2db      	uxtb	r3, r3
 8005b56:	2b22      	cmp	r3, #34	; 0x22
 8005b58:	f040 80ae 	bne.w	8005cb8 <UART_Receive_IT+0x172>
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	689b      	ldr	r3, [r3, #8]
 8005b60:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005b64:	d117      	bne.n	8005b96 <UART_Receive_IT+0x50>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	691b      	ldr	r3, [r3, #16]
 8005b6a:	2b00      	cmp	r3, #0
 8005b6c:	d113      	bne.n	8005b96 <UART_Receive_IT+0x50>
 8005b6e:	2300      	movs	r3, #0
 8005b70:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b76:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	685b      	ldr	r3, [r3, #4]
 8005b7e:	b29b      	uxth	r3, r3
 8005b80:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005b84:	b29a      	uxth	r2, r3
 8005b86:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005b88:	801a      	strh	r2, [r3, #0]
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b8e:	1c9a      	adds	r2, r3, #2
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	629a      	str	r2, [r3, #40]	; 0x28
 8005b94:	e026      	b.n	8005be4 <UART_Receive_IT+0x9e>
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b9a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b9c:	2300      	movs	r3, #0
 8005b9e:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	689b      	ldr	r3, [r3, #8]
 8005ba4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005ba8:	d007      	beq.n	8005bba <UART_Receive_IT+0x74>
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	689b      	ldr	r3, [r3, #8]
 8005bae:	2b00      	cmp	r3, #0
 8005bb0:	d10a      	bne.n	8005bc8 <UART_Receive_IT+0x82>
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	691b      	ldr	r3, [r3, #16]
 8005bb6:	2b00      	cmp	r3, #0
 8005bb8:	d106      	bne.n	8005bc8 <UART_Receive_IT+0x82>
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	681b      	ldr	r3, [r3, #0]
 8005bbe:	685b      	ldr	r3, [r3, #4]
 8005bc0:	b2da      	uxtb	r2, r3
 8005bc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005bc4:	701a      	strb	r2, [r3, #0]
 8005bc6:	e008      	b.n	8005bda <UART_Receive_IT+0x94>
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	685b      	ldr	r3, [r3, #4]
 8005bce:	b2db      	uxtb	r3, r3
 8005bd0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8005bd4:	b2da      	uxtb	r2, r3
 8005bd6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005bd8:	701a      	strb	r2, [r3, #0]
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bde:	1c5a      	adds	r2, r3, #1
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	629a      	str	r2, [r3, #40]	; 0x28
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005be8:	b29b      	uxth	r3, r3
 8005bea:	3b01      	subs	r3, #1
 8005bec:	b29b      	uxth	r3, r3
 8005bee:	687a      	ldr	r2, [r7, #4]
 8005bf0:	4619      	mov	r1, r3
 8005bf2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	d15d      	bne.n	8005cb4 <UART_Receive_IT+0x16e>
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	68da      	ldr	r2, [r3, #12]
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	f022 0220 	bic.w	r2, r2, #32
 8005c06:	60da      	str	r2, [r3, #12]
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	68da      	ldr	r2, [r3, #12]
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	681b      	ldr	r3, [r3, #0]
 8005c12:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005c16:	60da      	str	r2, [r3, #12]
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	695a      	ldr	r2, [r3, #20]
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	f022 0201 	bic.w	r2, r2, #1
 8005c26:	615a      	str	r2, [r3, #20]
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	2220      	movs	r2, #32
 8005c2c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	2200      	movs	r2, #0
 8005c34:	635a      	str	r2, [r3, #52]	; 0x34
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c3a:	2b01      	cmp	r3, #1
 8005c3c:	d135      	bne.n	8005caa <UART_Receive_IT+0x164>
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	2200      	movs	r2, #0
 8005c42:	631a      	str	r2, [r3, #48]	; 0x30
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	330c      	adds	r3, #12
 8005c4a:	617b      	str	r3, [r7, #20]
 8005c4c:	697b      	ldr	r3, [r7, #20]
 8005c4e:	e853 3f00 	ldrex	r3, [r3]
 8005c52:	613b      	str	r3, [r7, #16]
 8005c54:	693b      	ldr	r3, [r7, #16]
 8005c56:	f023 0310 	bic.w	r3, r3, #16
 8005c5a:	627b      	str	r3, [r7, #36]	; 0x24
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	681b      	ldr	r3, [r3, #0]
 8005c60:	330c      	adds	r3, #12
 8005c62:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005c64:	623a      	str	r2, [r7, #32]
 8005c66:	61fb      	str	r3, [r7, #28]
 8005c68:	69f9      	ldr	r1, [r7, #28]
 8005c6a:	6a3a      	ldr	r2, [r7, #32]
 8005c6c:	e841 2300 	strex	r3, r2, [r1]
 8005c70:	61bb      	str	r3, [r7, #24]
 8005c72:	69bb      	ldr	r3, [r7, #24]
 8005c74:	2b00      	cmp	r3, #0
 8005c76:	d1e5      	bne.n	8005c44 <UART_Receive_IT+0xfe>
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	681b      	ldr	r3, [r3, #0]
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	f003 0310 	and.w	r3, r3, #16
 8005c82:	2b10      	cmp	r3, #16
 8005c84:	d10a      	bne.n	8005c9c <UART_Receive_IT+0x156>
 8005c86:	2300      	movs	r3, #0
 8005c88:	60fb      	str	r3, [r7, #12]
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	681b      	ldr	r3, [r3, #0]
 8005c90:	60fb      	str	r3, [r7, #12]
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	685b      	ldr	r3, [r3, #4]
 8005c98:	60fb      	str	r3, [r7, #12]
 8005c9a:	68fb      	ldr	r3, [r7, #12]
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005ca0:	4619      	mov	r1, r3
 8005ca2:	6878      	ldr	r0, [r7, #4]
 8005ca4:	f7ff fdc0 	bl	8005828 <HAL_UARTEx_RxEventCallback>
 8005ca8:	e002      	b.n	8005cb0 <UART_Receive_IT+0x16a>
 8005caa:	6878      	ldr	r0, [r7, #4]
 8005cac:	f7fc f9fe 	bl	80020ac <HAL_UART_RxCpltCallback>
 8005cb0:	2300      	movs	r3, #0
 8005cb2:	e002      	b.n	8005cba <UART_Receive_IT+0x174>
 8005cb4:	2300      	movs	r3, #0
 8005cb6:	e000      	b.n	8005cba <UART_Receive_IT+0x174>
 8005cb8:	2302      	movs	r3, #2
 8005cba:	4618      	mov	r0, r3
 8005cbc:	3730      	adds	r7, #48	; 0x30
 8005cbe:	46bd      	mov	sp, r7
 8005cc0:	bd80      	pop	{r7, pc}
	...

08005cc4 <UART_SetConfig>:
 8005cc4:	b580      	push	{r7, lr}
 8005cc6:	b084      	sub	sp, #16
 8005cc8:	af00      	add	r7, sp, #0
 8005cca:	6078      	str	r0, [r7, #4]
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	691b      	ldr	r3, [r3, #16]
 8005cd2:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	68da      	ldr	r2, [r3, #12]
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	430a      	orrs	r2, r1
 8005ce0:	611a      	str	r2, [r3, #16]
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	689a      	ldr	r2, [r3, #8]
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	691b      	ldr	r3, [r3, #16]
 8005cea:	431a      	orrs	r2, r3
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	695b      	ldr	r3, [r3, #20]
 8005cf0:	4313      	orrs	r3, r2
 8005cf2:	60bb      	str	r3, [r7, #8]
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	681b      	ldr	r3, [r3, #0]
 8005cf8:	68db      	ldr	r3, [r3, #12]
 8005cfa:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8005cfe:	f023 030c 	bic.w	r3, r3, #12
 8005d02:	687a      	ldr	r2, [r7, #4]
 8005d04:	6812      	ldr	r2, [r2, #0]
 8005d06:	68b9      	ldr	r1, [r7, #8]
 8005d08:	430b      	orrs	r3, r1
 8005d0a:	60d3      	str	r3, [r2, #12]
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	695b      	ldr	r3, [r3, #20]
 8005d12:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	699a      	ldr	r2, [r3, #24]
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	430a      	orrs	r2, r1
 8005d20:	615a      	str	r2, [r3, #20]
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	681b      	ldr	r3, [r3, #0]
 8005d26:	4a2c      	ldr	r2, [pc, #176]	; (8005dd8 <UART_SetConfig+0x114>)
 8005d28:	4293      	cmp	r3, r2
 8005d2a:	d103      	bne.n	8005d34 <UART_SetConfig+0x70>
 8005d2c:	f7fd fe6e 	bl	8003a0c <HAL_RCC_GetPCLK2Freq>
 8005d30:	60f8      	str	r0, [r7, #12]
 8005d32:	e002      	b.n	8005d3a <UART_SetConfig+0x76>
 8005d34:	f7fd fe56 	bl	80039e4 <HAL_RCC_GetPCLK1Freq>
 8005d38:	60f8      	str	r0, [r7, #12]
 8005d3a:	68fa      	ldr	r2, [r7, #12]
 8005d3c:	4613      	mov	r3, r2
 8005d3e:	009b      	lsls	r3, r3, #2
 8005d40:	4413      	add	r3, r2
 8005d42:	009a      	lsls	r2, r3, #2
 8005d44:	441a      	add	r2, r3
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	685b      	ldr	r3, [r3, #4]
 8005d4a:	009b      	lsls	r3, r3, #2
 8005d4c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005d50:	4a22      	ldr	r2, [pc, #136]	; (8005ddc <UART_SetConfig+0x118>)
 8005d52:	fba2 2303 	umull	r2, r3, r2, r3
 8005d56:	095b      	lsrs	r3, r3, #5
 8005d58:	0119      	lsls	r1, r3, #4
 8005d5a:	68fa      	ldr	r2, [r7, #12]
 8005d5c:	4613      	mov	r3, r2
 8005d5e:	009b      	lsls	r3, r3, #2
 8005d60:	4413      	add	r3, r2
 8005d62:	009a      	lsls	r2, r3, #2
 8005d64:	441a      	add	r2, r3
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	685b      	ldr	r3, [r3, #4]
 8005d6a:	009b      	lsls	r3, r3, #2
 8005d6c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005d70:	4b1a      	ldr	r3, [pc, #104]	; (8005ddc <UART_SetConfig+0x118>)
 8005d72:	fba3 0302 	umull	r0, r3, r3, r2
 8005d76:	095b      	lsrs	r3, r3, #5
 8005d78:	2064      	movs	r0, #100	; 0x64
 8005d7a:	fb00 f303 	mul.w	r3, r0, r3
 8005d7e:	1ad3      	subs	r3, r2, r3
 8005d80:	011b      	lsls	r3, r3, #4
 8005d82:	3332      	adds	r3, #50	; 0x32
 8005d84:	4a15      	ldr	r2, [pc, #84]	; (8005ddc <UART_SetConfig+0x118>)
 8005d86:	fba2 2303 	umull	r2, r3, r2, r3
 8005d8a:	095b      	lsrs	r3, r3, #5
 8005d8c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005d90:	4419      	add	r1, r3
 8005d92:	68fa      	ldr	r2, [r7, #12]
 8005d94:	4613      	mov	r3, r2
 8005d96:	009b      	lsls	r3, r3, #2
 8005d98:	4413      	add	r3, r2
 8005d9a:	009a      	lsls	r2, r3, #2
 8005d9c:	441a      	add	r2, r3
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	685b      	ldr	r3, [r3, #4]
 8005da2:	009b      	lsls	r3, r3, #2
 8005da4:	fbb2 f2f3 	udiv	r2, r2, r3
 8005da8:	4b0c      	ldr	r3, [pc, #48]	; (8005ddc <UART_SetConfig+0x118>)
 8005daa:	fba3 0302 	umull	r0, r3, r3, r2
 8005dae:	095b      	lsrs	r3, r3, #5
 8005db0:	2064      	movs	r0, #100	; 0x64
 8005db2:	fb00 f303 	mul.w	r3, r0, r3
 8005db6:	1ad3      	subs	r3, r2, r3
 8005db8:	011b      	lsls	r3, r3, #4
 8005dba:	3332      	adds	r3, #50	; 0x32
 8005dbc:	4a07      	ldr	r2, [pc, #28]	; (8005ddc <UART_SetConfig+0x118>)
 8005dbe:	fba2 2303 	umull	r2, r3, r2, r3
 8005dc2:	095b      	lsrs	r3, r3, #5
 8005dc4:	f003 020f 	and.w	r2, r3, #15
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	440a      	add	r2, r1
 8005dce:	609a      	str	r2, [r3, #8]
 8005dd0:	bf00      	nop
 8005dd2:	3710      	adds	r7, #16
 8005dd4:	46bd      	mov	sp, r7
 8005dd6:	bd80      	pop	{r7, pc}
 8005dd8:	40013800 	.word	0x40013800
 8005ddc:	51eb851f 	.word	0x51eb851f

08005de0 <makeFreeRtosPriority>:
 8005de0:	b480      	push	{r7}
 8005de2:	b085      	sub	sp, #20
 8005de4:	af00      	add	r7, sp, #0
 8005de6:	4603      	mov	r3, r0
 8005de8:	80fb      	strh	r3, [r7, #6]
 8005dea:	2300      	movs	r3, #0
 8005dec:	60fb      	str	r3, [r7, #12]
 8005dee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005df2:	2b84      	cmp	r3, #132	; 0x84
 8005df4:	d005      	beq.n	8005e02 <makeFreeRtosPriority+0x22>
 8005df6:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	4413      	add	r3, r2
 8005dfe:	3303      	adds	r3, #3
 8005e00:	60fb      	str	r3, [r7, #12]
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	4618      	mov	r0, r3
 8005e06:	3714      	adds	r7, #20
 8005e08:	46bd      	mov	sp, r7
 8005e0a:	bc80      	pop	{r7}
 8005e0c:	4770      	bx	lr

08005e0e <osKernelStart>:
 8005e0e:	b580      	push	{r7, lr}
 8005e10:	af00      	add	r7, sp, #0
 8005e12:	f000 fad1 	bl	80063b8 <vTaskStartScheduler>
 8005e16:	2300      	movs	r3, #0
 8005e18:	4618      	mov	r0, r3
 8005e1a:	bd80      	pop	{r7, pc}

08005e1c <osThreadCreate>:
 8005e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e1e:	b089      	sub	sp, #36	; 0x24
 8005e20:	af04      	add	r7, sp, #16
 8005e22:	6078      	str	r0, [r7, #4]
 8005e24:	6039      	str	r1, [r7, #0]
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	695b      	ldr	r3, [r3, #20]
 8005e2a:	2b00      	cmp	r3, #0
 8005e2c:	d020      	beq.n	8005e70 <osThreadCreate+0x54>
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	699b      	ldr	r3, [r3, #24]
 8005e32:	2b00      	cmp	r3, #0
 8005e34:	d01c      	beq.n	8005e70 <osThreadCreate+0x54>
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	685c      	ldr	r4, [r3, #4]
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	681d      	ldr	r5, [r3, #0]
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	691e      	ldr	r6, [r3, #16]
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8005e48:	4618      	mov	r0, r3
 8005e4a:	f7ff ffc9 	bl	8005de0 <makeFreeRtosPriority>
 8005e4e:	4601      	mov	r1, r0
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	695b      	ldr	r3, [r3, #20]
 8005e54:	687a      	ldr	r2, [r7, #4]
 8005e56:	6992      	ldr	r2, [r2, #24]
 8005e58:	9202      	str	r2, [sp, #8]
 8005e5a:	9301      	str	r3, [sp, #4]
 8005e5c:	9100      	str	r1, [sp, #0]
 8005e5e:	683b      	ldr	r3, [r7, #0]
 8005e60:	4632      	mov	r2, r6
 8005e62:	4629      	mov	r1, r5
 8005e64:	4620      	mov	r0, r4
 8005e66:	f000 f8e8 	bl	800603a <xTaskCreateStatic>
 8005e6a:	4603      	mov	r3, r0
 8005e6c:	60fb      	str	r3, [r7, #12]
 8005e6e:	e01c      	b.n	8005eaa <osThreadCreate+0x8e>
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	685c      	ldr	r4, [r3, #4]
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	681d      	ldr	r5, [r3, #0]
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	691b      	ldr	r3, [r3, #16]
 8005e7c:	b29e      	uxth	r6, r3
 8005e7e:	687b      	ldr	r3, [r7, #4]
 8005e80:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8005e84:	4618      	mov	r0, r3
 8005e86:	f7ff ffab 	bl	8005de0 <makeFreeRtosPriority>
 8005e8a:	4602      	mov	r2, r0
 8005e8c:	f107 030c 	add.w	r3, r7, #12
 8005e90:	9301      	str	r3, [sp, #4]
 8005e92:	9200      	str	r2, [sp, #0]
 8005e94:	683b      	ldr	r3, [r7, #0]
 8005e96:	4632      	mov	r2, r6
 8005e98:	4629      	mov	r1, r5
 8005e9a:	4620      	mov	r0, r4
 8005e9c:	f000 f929 	bl	80060f2 <xTaskCreate>
 8005ea0:	4603      	mov	r3, r0
 8005ea2:	2b01      	cmp	r3, #1
 8005ea4:	d001      	beq.n	8005eaa <osThreadCreate+0x8e>
 8005ea6:	2300      	movs	r3, #0
 8005ea8:	e000      	b.n	8005eac <osThreadCreate+0x90>
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	4618      	mov	r0, r3
 8005eae:	3714      	adds	r7, #20
 8005eb0:	46bd      	mov	sp, r7
 8005eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005eb4 <osDelay>:
 8005eb4:	b580      	push	{r7, lr}
 8005eb6:	b084      	sub	sp, #16
 8005eb8:	af00      	add	r7, sp, #0
 8005eba:	6078      	str	r0, [r7, #4]
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	60fb      	str	r3, [r7, #12]
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	2b00      	cmp	r3, #0
 8005ec4:	d001      	beq.n	8005eca <osDelay+0x16>
 8005ec6:	68fb      	ldr	r3, [r7, #12]
 8005ec8:	e000      	b.n	8005ecc <osDelay+0x18>
 8005eca:	2301      	movs	r3, #1
 8005ecc:	4618      	mov	r0, r3
 8005ece:	f000 fa3f 	bl	8006350 <vTaskDelay>
 8005ed2:	2300      	movs	r3, #0
 8005ed4:	4618      	mov	r0, r3
 8005ed6:	3710      	adds	r7, #16
 8005ed8:	46bd      	mov	sp, r7
 8005eda:	bd80      	pop	{r7, pc}

08005edc <vListInitialise>:
 8005edc:	b480      	push	{r7}
 8005ede:	b083      	sub	sp, #12
 8005ee0:	af00      	add	r7, sp, #0
 8005ee2:	6078      	str	r0, [r7, #4]
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	f103 0208 	add.w	r2, r3, #8
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	605a      	str	r2, [r3, #4]
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005ef4:	609a      	str	r2, [r3, #8]
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	f103 0208 	add.w	r2, r3, #8
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	60da      	str	r2, [r3, #12]
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	f103 0208 	add.w	r2, r3, #8
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	611a      	str	r2, [r3, #16]
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	2200      	movs	r2, #0
 8005f0e:	601a      	str	r2, [r3, #0]
 8005f10:	bf00      	nop
 8005f12:	370c      	adds	r7, #12
 8005f14:	46bd      	mov	sp, r7
 8005f16:	bc80      	pop	{r7}
 8005f18:	4770      	bx	lr

08005f1a <vListInitialiseItem>:
 8005f1a:	b480      	push	{r7}
 8005f1c:	b083      	sub	sp, #12
 8005f1e:	af00      	add	r7, sp, #0
 8005f20:	6078      	str	r0, [r7, #4]
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	2200      	movs	r2, #0
 8005f26:	611a      	str	r2, [r3, #16]
 8005f28:	bf00      	nop
 8005f2a:	370c      	adds	r7, #12
 8005f2c:	46bd      	mov	sp, r7
 8005f2e:	bc80      	pop	{r7}
 8005f30:	4770      	bx	lr

08005f32 <vListInsertEnd>:
 8005f32:	b480      	push	{r7}
 8005f34:	b085      	sub	sp, #20
 8005f36:	af00      	add	r7, sp, #0
 8005f38:	6078      	str	r0, [r7, #4]
 8005f3a:	6039      	str	r1, [r7, #0]
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	685b      	ldr	r3, [r3, #4]
 8005f40:	60fb      	str	r3, [r7, #12]
 8005f42:	683b      	ldr	r3, [r7, #0]
 8005f44:	68fa      	ldr	r2, [r7, #12]
 8005f46:	605a      	str	r2, [r3, #4]
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	689a      	ldr	r2, [r3, #8]
 8005f4c:	683b      	ldr	r3, [r7, #0]
 8005f4e:	609a      	str	r2, [r3, #8]
 8005f50:	68fb      	ldr	r3, [r7, #12]
 8005f52:	689b      	ldr	r3, [r3, #8]
 8005f54:	683a      	ldr	r2, [r7, #0]
 8005f56:	605a      	str	r2, [r3, #4]
 8005f58:	68fb      	ldr	r3, [r7, #12]
 8005f5a:	683a      	ldr	r2, [r7, #0]
 8005f5c:	609a      	str	r2, [r3, #8]
 8005f5e:	683b      	ldr	r3, [r7, #0]
 8005f60:	687a      	ldr	r2, [r7, #4]
 8005f62:	611a      	str	r2, [r3, #16]
 8005f64:	687b      	ldr	r3, [r7, #4]
 8005f66:	681b      	ldr	r3, [r3, #0]
 8005f68:	1c5a      	adds	r2, r3, #1
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	601a      	str	r2, [r3, #0]
 8005f6e:	bf00      	nop
 8005f70:	3714      	adds	r7, #20
 8005f72:	46bd      	mov	sp, r7
 8005f74:	bc80      	pop	{r7}
 8005f76:	4770      	bx	lr

08005f78 <vListInsert>:
 8005f78:	b480      	push	{r7}
 8005f7a:	b085      	sub	sp, #20
 8005f7c:	af00      	add	r7, sp, #0
 8005f7e:	6078      	str	r0, [r7, #4]
 8005f80:	6039      	str	r1, [r7, #0]
 8005f82:	683b      	ldr	r3, [r7, #0]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	60bb      	str	r3, [r7, #8]
 8005f88:	68bb      	ldr	r3, [r7, #8]
 8005f8a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8005f8e:	d103      	bne.n	8005f98 <vListInsert+0x20>
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	691b      	ldr	r3, [r3, #16]
 8005f94:	60fb      	str	r3, [r7, #12]
 8005f96:	e00c      	b.n	8005fb2 <vListInsert+0x3a>
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	3308      	adds	r3, #8
 8005f9c:	60fb      	str	r3, [r7, #12]
 8005f9e:	e002      	b.n	8005fa6 <vListInsert+0x2e>
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	685b      	ldr	r3, [r3, #4]
 8005fa4:	60fb      	str	r3, [r7, #12]
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	685b      	ldr	r3, [r3, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	68ba      	ldr	r2, [r7, #8]
 8005fae:	429a      	cmp	r2, r3
 8005fb0:	d2f6      	bcs.n	8005fa0 <vListInsert+0x28>
 8005fb2:	68fb      	ldr	r3, [r7, #12]
 8005fb4:	685a      	ldr	r2, [r3, #4]
 8005fb6:	683b      	ldr	r3, [r7, #0]
 8005fb8:	605a      	str	r2, [r3, #4]
 8005fba:	683b      	ldr	r3, [r7, #0]
 8005fbc:	685b      	ldr	r3, [r3, #4]
 8005fbe:	683a      	ldr	r2, [r7, #0]
 8005fc0:	609a      	str	r2, [r3, #8]
 8005fc2:	683b      	ldr	r3, [r7, #0]
 8005fc4:	68fa      	ldr	r2, [r7, #12]
 8005fc6:	609a      	str	r2, [r3, #8]
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	683a      	ldr	r2, [r7, #0]
 8005fcc:	605a      	str	r2, [r3, #4]
 8005fce:	683b      	ldr	r3, [r7, #0]
 8005fd0:	687a      	ldr	r2, [r7, #4]
 8005fd2:	611a      	str	r2, [r3, #16]
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	1c5a      	adds	r2, r3, #1
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	601a      	str	r2, [r3, #0]
 8005fde:	bf00      	nop
 8005fe0:	3714      	adds	r7, #20
 8005fe2:	46bd      	mov	sp, r7
 8005fe4:	bc80      	pop	{r7}
 8005fe6:	4770      	bx	lr

08005fe8 <uxListRemove>:
 8005fe8:	b480      	push	{r7}
 8005fea:	b085      	sub	sp, #20
 8005fec:	af00      	add	r7, sp, #0
 8005fee:	6078      	str	r0, [r7, #4]
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	691b      	ldr	r3, [r3, #16]
 8005ff4:	60fb      	str	r3, [r7, #12]
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	685b      	ldr	r3, [r3, #4]
 8005ffa:	687a      	ldr	r2, [r7, #4]
 8005ffc:	6892      	ldr	r2, [r2, #8]
 8005ffe:	609a      	str	r2, [r3, #8]
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	689b      	ldr	r3, [r3, #8]
 8006004:	687a      	ldr	r2, [r7, #4]
 8006006:	6852      	ldr	r2, [r2, #4]
 8006008:	605a      	str	r2, [r3, #4]
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	685b      	ldr	r3, [r3, #4]
 800600e:	687a      	ldr	r2, [r7, #4]
 8006010:	429a      	cmp	r2, r3
 8006012:	d103      	bne.n	800601c <uxListRemove+0x34>
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	689a      	ldr	r2, [r3, #8]
 8006018:	68fb      	ldr	r3, [r7, #12]
 800601a:	605a      	str	r2, [r3, #4]
 800601c:	687b      	ldr	r3, [r7, #4]
 800601e:	2200      	movs	r2, #0
 8006020:	611a      	str	r2, [r3, #16]
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	1e5a      	subs	r2, r3, #1
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	601a      	str	r2, [r3, #0]
 800602c:	68fb      	ldr	r3, [r7, #12]
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	4618      	mov	r0, r3
 8006032:	3714      	adds	r7, #20
 8006034:	46bd      	mov	sp, r7
 8006036:	bc80      	pop	{r7}
 8006038:	4770      	bx	lr

0800603a <xTaskCreateStatic>:
 800603a:	b580      	push	{r7, lr}
 800603c:	b08e      	sub	sp, #56	; 0x38
 800603e:	af04      	add	r7, sp, #16
 8006040:	60f8      	str	r0, [r7, #12]
 8006042:	60b9      	str	r1, [r7, #8]
 8006044:	607a      	str	r2, [r7, #4]
 8006046:	603b      	str	r3, [r7, #0]
 8006048:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800604a:	2b00      	cmp	r3, #0
 800604c:	d10a      	bne.n	8006064 <xTaskCreateStatic+0x2a>
 800604e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006052:	f383 8811 	msr	BASEPRI, r3
 8006056:	f3bf 8f6f 	isb	sy
 800605a:	f3bf 8f4f 	dsb	sy
 800605e:	623b      	str	r3, [r7, #32]
 8006060:	bf00      	nop
 8006062:	e7fe      	b.n	8006062 <xTaskCreateStatic+0x28>
 8006064:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006066:	2b00      	cmp	r3, #0
 8006068:	d10a      	bne.n	8006080 <xTaskCreateStatic+0x46>
 800606a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800606e:	f383 8811 	msr	BASEPRI, r3
 8006072:	f3bf 8f6f 	isb	sy
 8006076:	f3bf 8f4f 	dsb	sy
 800607a:	61fb      	str	r3, [r7, #28]
 800607c:	bf00      	nop
 800607e:	e7fe      	b.n	800607e <xTaskCreateStatic+0x44>
 8006080:	2354      	movs	r3, #84	; 0x54
 8006082:	613b      	str	r3, [r7, #16]
 8006084:	693b      	ldr	r3, [r7, #16]
 8006086:	2b54      	cmp	r3, #84	; 0x54
 8006088:	d00a      	beq.n	80060a0 <xTaskCreateStatic+0x66>
 800608a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800608e:	f383 8811 	msr	BASEPRI, r3
 8006092:	f3bf 8f6f 	isb	sy
 8006096:	f3bf 8f4f 	dsb	sy
 800609a:	61bb      	str	r3, [r7, #24]
 800609c:	bf00      	nop
 800609e:	e7fe      	b.n	800609e <xTaskCreateStatic+0x64>
 80060a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d01e      	beq.n	80060e4 <xTaskCreateStatic+0xaa>
 80060a6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d01b      	beq.n	80060e4 <xTaskCreateStatic+0xaa>
 80060ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80060ae:	627b      	str	r3, [r7, #36]	; 0x24
 80060b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060b2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80060b4:	631a      	str	r2, [r3, #48]	; 0x30
 80060b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060b8:	2202      	movs	r2, #2
 80060ba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80060be:	2300      	movs	r3, #0
 80060c0:	9303      	str	r3, [sp, #12]
 80060c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060c4:	9302      	str	r3, [sp, #8]
 80060c6:	f107 0314 	add.w	r3, r7, #20
 80060ca:	9301      	str	r3, [sp, #4]
 80060cc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80060ce:	9300      	str	r3, [sp, #0]
 80060d0:	683b      	ldr	r3, [r7, #0]
 80060d2:	687a      	ldr	r2, [r7, #4]
 80060d4:	68b9      	ldr	r1, [r7, #8]
 80060d6:	68f8      	ldr	r0, [r7, #12]
 80060d8:	f000 f850 	bl	800617c <prvInitialiseNewTask>
 80060dc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80060de:	f000 f8cd 	bl	800627c <prvAddNewTaskToReadyList>
 80060e2:	e001      	b.n	80060e8 <xTaskCreateStatic+0xae>
 80060e4:	2300      	movs	r3, #0
 80060e6:	617b      	str	r3, [r7, #20]
 80060e8:	697b      	ldr	r3, [r7, #20]
 80060ea:	4618      	mov	r0, r3
 80060ec:	3728      	adds	r7, #40	; 0x28
 80060ee:	46bd      	mov	sp, r7
 80060f0:	bd80      	pop	{r7, pc}

080060f2 <xTaskCreate>:
 80060f2:	b580      	push	{r7, lr}
 80060f4:	b08c      	sub	sp, #48	; 0x30
 80060f6:	af04      	add	r7, sp, #16
 80060f8:	60f8      	str	r0, [r7, #12]
 80060fa:	60b9      	str	r1, [r7, #8]
 80060fc:	603b      	str	r3, [r7, #0]
 80060fe:	4613      	mov	r3, r2
 8006100:	80fb      	strh	r3, [r7, #6]
 8006102:	88fb      	ldrh	r3, [r7, #6]
 8006104:	009b      	lsls	r3, r3, #2
 8006106:	4618      	mov	r0, r3
 8006108:	f000 fe6a 	bl	8006de0 <pvPortMalloc>
 800610c:	6178      	str	r0, [r7, #20]
 800610e:	697b      	ldr	r3, [r7, #20]
 8006110:	2b00      	cmp	r3, #0
 8006112:	d00e      	beq.n	8006132 <xTaskCreate+0x40>
 8006114:	2054      	movs	r0, #84	; 0x54
 8006116:	f000 fe63 	bl	8006de0 <pvPortMalloc>
 800611a:	61f8      	str	r0, [r7, #28]
 800611c:	69fb      	ldr	r3, [r7, #28]
 800611e:	2b00      	cmp	r3, #0
 8006120:	d003      	beq.n	800612a <xTaskCreate+0x38>
 8006122:	69fb      	ldr	r3, [r7, #28]
 8006124:	697a      	ldr	r2, [r7, #20]
 8006126:	631a      	str	r2, [r3, #48]	; 0x30
 8006128:	e005      	b.n	8006136 <xTaskCreate+0x44>
 800612a:	6978      	ldr	r0, [r7, #20]
 800612c:	f000 ff1c 	bl	8006f68 <vPortFree>
 8006130:	e001      	b.n	8006136 <xTaskCreate+0x44>
 8006132:	2300      	movs	r3, #0
 8006134:	61fb      	str	r3, [r7, #28]
 8006136:	69fb      	ldr	r3, [r7, #28]
 8006138:	2b00      	cmp	r3, #0
 800613a:	d017      	beq.n	800616c <xTaskCreate+0x7a>
 800613c:	69fb      	ldr	r3, [r7, #28]
 800613e:	2200      	movs	r2, #0
 8006140:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006144:	88fa      	ldrh	r2, [r7, #6]
 8006146:	2300      	movs	r3, #0
 8006148:	9303      	str	r3, [sp, #12]
 800614a:	69fb      	ldr	r3, [r7, #28]
 800614c:	9302      	str	r3, [sp, #8]
 800614e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006150:	9301      	str	r3, [sp, #4]
 8006152:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006154:	9300      	str	r3, [sp, #0]
 8006156:	683b      	ldr	r3, [r7, #0]
 8006158:	68b9      	ldr	r1, [r7, #8]
 800615a:	68f8      	ldr	r0, [r7, #12]
 800615c:	f000 f80e 	bl	800617c <prvInitialiseNewTask>
 8006160:	69f8      	ldr	r0, [r7, #28]
 8006162:	f000 f88b 	bl	800627c <prvAddNewTaskToReadyList>
 8006166:	2301      	movs	r3, #1
 8006168:	61bb      	str	r3, [r7, #24]
 800616a:	e002      	b.n	8006172 <xTaskCreate+0x80>
 800616c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8006170:	61bb      	str	r3, [r7, #24]
 8006172:	69bb      	ldr	r3, [r7, #24]
 8006174:	4618      	mov	r0, r3
 8006176:	3720      	adds	r7, #32
 8006178:	46bd      	mov	sp, r7
 800617a:	bd80      	pop	{r7, pc}

0800617c <prvInitialiseNewTask>:
 800617c:	b580      	push	{r7, lr}
 800617e:	b088      	sub	sp, #32
 8006180:	af00      	add	r7, sp, #0
 8006182:	60f8      	str	r0, [r7, #12]
 8006184:	60b9      	str	r1, [r7, #8]
 8006186:	607a      	str	r2, [r7, #4]
 8006188:	603b      	str	r3, [r7, #0]
 800618a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800618c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8006194:	3b01      	subs	r3, #1
 8006196:	009b      	lsls	r3, r3, #2
 8006198:	4413      	add	r3, r2
 800619a:	61bb      	str	r3, [r7, #24]
 800619c:	69bb      	ldr	r3, [r7, #24]
 800619e:	f023 0307 	bic.w	r3, r3, #7
 80061a2:	61bb      	str	r3, [r7, #24]
 80061a4:	69bb      	ldr	r3, [r7, #24]
 80061a6:	f003 0307 	and.w	r3, r3, #7
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d00a      	beq.n	80061c4 <prvInitialiseNewTask+0x48>
 80061ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061b2:	f383 8811 	msr	BASEPRI, r3
 80061b6:	f3bf 8f6f 	isb	sy
 80061ba:	f3bf 8f4f 	dsb	sy
 80061be:	617b      	str	r3, [r7, #20]
 80061c0:	bf00      	nop
 80061c2:	e7fe      	b.n	80061c2 <prvInitialiseNewTask+0x46>
 80061c4:	2300      	movs	r3, #0
 80061c6:	61fb      	str	r3, [r7, #28]
 80061c8:	e012      	b.n	80061f0 <prvInitialiseNewTask+0x74>
 80061ca:	68ba      	ldr	r2, [r7, #8]
 80061cc:	69fb      	ldr	r3, [r7, #28]
 80061ce:	4413      	add	r3, r2
 80061d0:	7819      	ldrb	r1, [r3, #0]
 80061d2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80061d4:	69fb      	ldr	r3, [r7, #28]
 80061d6:	4413      	add	r3, r2
 80061d8:	3334      	adds	r3, #52	; 0x34
 80061da:	460a      	mov	r2, r1
 80061dc:	701a      	strb	r2, [r3, #0]
 80061de:	68ba      	ldr	r2, [r7, #8]
 80061e0:	69fb      	ldr	r3, [r7, #28]
 80061e2:	4413      	add	r3, r2
 80061e4:	781b      	ldrb	r3, [r3, #0]
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d006      	beq.n	80061f8 <prvInitialiseNewTask+0x7c>
 80061ea:	69fb      	ldr	r3, [r7, #28]
 80061ec:	3301      	adds	r3, #1
 80061ee:	61fb      	str	r3, [r7, #28]
 80061f0:	69fb      	ldr	r3, [r7, #28]
 80061f2:	2b0f      	cmp	r3, #15
 80061f4:	d9e9      	bls.n	80061ca <prvInitialiseNewTask+0x4e>
 80061f6:	e000      	b.n	80061fa <prvInitialiseNewTask+0x7e>
 80061f8:	bf00      	nop
 80061fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80061fc:	2200      	movs	r2, #0
 80061fe:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006202:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006204:	2b06      	cmp	r3, #6
 8006206:	d901      	bls.n	800620c <prvInitialiseNewTask+0x90>
 8006208:	2306      	movs	r3, #6
 800620a:	62bb      	str	r3, [r7, #40]	; 0x28
 800620c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800620e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006210:	62da      	str	r2, [r3, #44]	; 0x2c
 8006212:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006214:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006216:	645a      	str	r2, [r3, #68]	; 0x44
 8006218:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800621a:	2200      	movs	r2, #0
 800621c:	649a      	str	r2, [r3, #72]	; 0x48
 800621e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006220:	3304      	adds	r3, #4
 8006222:	4618      	mov	r0, r3
 8006224:	f7ff fe79 	bl	8005f1a <vListInitialiseItem>
 8006228:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800622a:	3318      	adds	r3, #24
 800622c:	4618      	mov	r0, r3
 800622e:	f7ff fe74 	bl	8005f1a <vListInitialiseItem>
 8006232:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006234:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006236:	611a      	str	r2, [r3, #16]
 8006238:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800623a:	f1c3 0207 	rsb	r2, r3, #7
 800623e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006240:	619a      	str	r2, [r3, #24]
 8006242:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006244:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006246:	625a      	str	r2, [r3, #36]	; 0x24
 8006248:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800624a:	2200      	movs	r2, #0
 800624c:	64da      	str	r2, [r3, #76]	; 0x4c
 800624e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006250:	2200      	movs	r2, #0
 8006252:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006256:	683a      	ldr	r2, [r7, #0]
 8006258:	68f9      	ldr	r1, [r7, #12]
 800625a:	69b8      	ldr	r0, [r7, #24]
 800625c:	f000 fc0e 	bl	8006a7c <pxPortInitialiseStack>
 8006260:	4602      	mov	r2, r0
 8006262:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006264:	601a      	str	r2, [r3, #0]
 8006266:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006268:	2b00      	cmp	r3, #0
 800626a:	d002      	beq.n	8006272 <prvInitialiseNewTask+0xf6>
 800626c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800626e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006270:	601a      	str	r2, [r3, #0]
 8006272:	bf00      	nop
 8006274:	3720      	adds	r7, #32
 8006276:	46bd      	mov	sp, r7
 8006278:	bd80      	pop	{r7, pc}
	...

0800627c <prvAddNewTaskToReadyList>:
 800627c:	b580      	push	{r7, lr}
 800627e:	b082      	sub	sp, #8
 8006280:	af00      	add	r7, sp, #0
 8006282:	6078      	str	r0, [r7, #4]
 8006284:	f000 fcea 	bl	8006c5c <vPortEnterCritical>
 8006288:	4b2a      	ldr	r3, [pc, #168]	; (8006334 <prvAddNewTaskToReadyList+0xb8>)
 800628a:	681b      	ldr	r3, [r3, #0]
 800628c:	3301      	adds	r3, #1
 800628e:	4a29      	ldr	r2, [pc, #164]	; (8006334 <prvAddNewTaskToReadyList+0xb8>)
 8006290:	6013      	str	r3, [r2, #0]
 8006292:	4b29      	ldr	r3, [pc, #164]	; (8006338 <prvAddNewTaskToReadyList+0xbc>)
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	2b00      	cmp	r3, #0
 8006298:	d109      	bne.n	80062ae <prvAddNewTaskToReadyList+0x32>
 800629a:	4a27      	ldr	r2, [pc, #156]	; (8006338 <prvAddNewTaskToReadyList+0xbc>)
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	6013      	str	r3, [r2, #0]
 80062a0:	4b24      	ldr	r3, [pc, #144]	; (8006334 <prvAddNewTaskToReadyList+0xb8>)
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	2b01      	cmp	r3, #1
 80062a6:	d110      	bne.n	80062ca <prvAddNewTaskToReadyList+0x4e>
 80062a8:	f000 fac0 	bl	800682c <prvInitialiseTaskLists>
 80062ac:	e00d      	b.n	80062ca <prvAddNewTaskToReadyList+0x4e>
 80062ae:	4b23      	ldr	r3, [pc, #140]	; (800633c <prvAddNewTaskToReadyList+0xc0>)
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d109      	bne.n	80062ca <prvAddNewTaskToReadyList+0x4e>
 80062b6:	4b20      	ldr	r3, [pc, #128]	; (8006338 <prvAddNewTaskToReadyList+0xbc>)
 80062b8:	681b      	ldr	r3, [r3, #0]
 80062ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062c0:	429a      	cmp	r2, r3
 80062c2:	d802      	bhi.n	80062ca <prvAddNewTaskToReadyList+0x4e>
 80062c4:	4a1c      	ldr	r2, [pc, #112]	; (8006338 <prvAddNewTaskToReadyList+0xbc>)
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	6013      	str	r3, [r2, #0]
 80062ca:	4b1d      	ldr	r3, [pc, #116]	; (8006340 <prvAddNewTaskToReadyList+0xc4>)
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	3301      	adds	r3, #1
 80062d0:	4a1b      	ldr	r2, [pc, #108]	; (8006340 <prvAddNewTaskToReadyList+0xc4>)
 80062d2:	6013      	str	r3, [r2, #0]
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062d8:	2201      	movs	r2, #1
 80062da:	409a      	lsls	r2, r3
 80062dc:	4b19      	ldr	r3, [pc, #100]	; (8006344 <prvAddNewTaskToReadyList+0xc8>)
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	4313      	orrs	r3, r2
 80062e2:	4a18      	ldr	r2, [pc, #96]	; (8006344 <prvAddNewTaskToReadyList+0xc8>)
 80062e4:	6013      	str	r3, [r2, #0]
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062ea:	4613      	mov	r3, r2
 80062ec:	009b      	lsls	r3, r3, #2
 80062ee:	4413      	add	r3, r2
 80062f0:	009b      	lsls	r3, r3, #2
 80062f2:	4a15      	ldr	r2, [pc, #84]	; (8006348 <prvAddNewTaskToReadyList+0xcc>)
 80062f4:	441a      	add	r2, r3
 80062f6:	687b      	ldr	r3, [r7, #4]
 80062f8:	3304      	adds	r3, #4
 80062fa:	4619      	mov	r1, r3
 80062fc:	4610      	mov	r0, r2
 80062fe:	f7ff fe18 	bl	8005f32 <vListInsertEnd>
 8006302:	f000 fcdb 	bl	8006cbc <vPortExitCritical>
 8006306:	4b0d      	ldr	r3, [pc, #52]	; (800633c <prvAddNewTaskToReadyList+0xc0>)
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	2b00      	cmp	r3, #0
 800630c:	d00e      	beq.n	800632c <prvAddNewTaskToReadyList+0xb0>
 800630e:	4b0a      	ldr	r3, [pc, #40]	; (8006338 <prvAddNewTaskToReadyList+0xbc>)
 8006310:	681b      	ldr	r3, [r3, #0]
 8006312:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006318:	429a      	cmp	r2, r3
 800631a:	d207      	bcs.n	800632c <prvAddNewTaskToReadyList+0xb0>
 800631c:	4b0b      	ldr	r3, [pc, #44]	; (800634c <prvAddNewTaskToReadyList+0xd0>)
 800631e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006322:	601a      	str	r2, [r3, #0]
 8006324:	f3bf 8f4f 	dsb	sy
 8006328:	f3bf 8f6f 	isb	sy
 800632c:	bf00      	nop
 800632e:	3708      	adds	r7, #8
 8006330:	46bd      	mov	sp, r7
 8006332:	bd80      	pop	{r7, pc}
 8006334:	20000778 	.word	0x20000778
 8006338:	20000678 	.word	0x20000678
 800633c:	20000784 	.word	0x20000784
 8006340:	20000794 	.word	0x20000794
 8006344:	20000780 	.word	0x20000780
 8006348:	2000067c 	.word	0x2000067c
 800634c:	e000ed04 	.word	0xe000ed04

08006350 <vTaskDelay>:
 8006350:	b580      	push	{r7, lr}
 8006352:	b084      	sub	sp, #16
 8006354:	af00      	add	r7, sp, #0
 8006356:	6078      	str	r0, [r7, #4]
 8006358:	2300      	movs	r3, #0
 800635a:	60fb      	str	r3, [r7, #12]
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	2b00      	cmp	r3, #0
 8006360:	d017      	beq.n	8006392 <vTaskDelay+0x42>
 8006362:	4b13      	ldr	r3, [pc, #76]	; (80063b0 <vTaskDelay+0x60>)
 8006364:	681b      	ldr	r3, [r3, #0]
 8006366:	2b00      	cmp	r3, #0
 8006368:	d00a      	beq.n	8006380 <vTaskDelay+0x30>
 800636a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800636e:	f383 8811 	msr	BASEPRI, r3
 8006372:	f3bf 8f6f 	isb	sy
 8006376:	f3bf 8f4f 	dsb	sy
 800637a:	60bb      	str	r3, [r7, #8]
 800637c:	bf00      	nop
 800637e:	e7fe      	b.n	800637e <vTaskDelay+0x2e>
 8006380:	f000 f87a 	bl	8006478 <vTaskSuspendAll>
 8006384:	2100      	movs	r1, #0
 8006386:	6878      	ldr	r0, [r7, #4]
 8006388:	f000 fb12 	bl	80069b0 <prvAddCurrentTaskToDelayedList>
 800638c:	f000 f882 	bl	8006494 <xTaskResumeAll>
 8006390:	60f8      	str	r0, [r7, #12]
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	2b00      	cmp	r3, #0
 8006396:	d107      	bne.n	80063a8 <vTaskDelay+0x58>
 8006398:	4b06      	ldr	r3, [pc, #24]	; (80063b4 <vTaskDelay+0x64>)
 800639a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800639e:	601a      	str	r2, [r3, #0]
 80063a0:	f3bf 8f4f 	dsb	sy
 80063a4:	f3bf 8f6f 	isb	sy
 80063a8:	bf00      	nop
 80063aa:	3710      	adds	r7, #16
 80063ac:	46bd      	mov	sp, r7
 80063ae:	bd80      	pop	{r7, pc}
 80063b0:	200007a0 	.word	0x200007a0
 80063b4:	e000ed04 	.word	0xe000ed04

080063b8 <vTaskStartScheduler>:
 80063b8:	b580      	push	{r7, lr}
 80063ba:	b08a      	sub	sp, #40	; 0x28
 80063bc:	af04      	add	r7, sp, #16
 80063be:	2300      	movs	r3, #0
 80063c0:	60bb      	str	r3, [r7, #8]
 80063c2:	2300      	movs	r3, #0
 80063c4:	607b      	str	r3, [r7, #4]
 80063c6:	463a      	mov	r2, r7
 80063c8:	1d39      	adds	r1, r7, #4
 80063ca:	f107 0308 	add.w	r3, r7, #8
 80063ce:	4618      	mov	r0, r3
 80063d0:	f7fb fb84 	bl	8001adc <vApplicationGetIdleTaskMemory>
 80063d4:	6839      	ldr	r1, [r7, #0]
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	68ba      	ldr	r2, [r7, #8]
 80063da:	9202      	str	r2, [sp, #8]
 80063dc:	9301      	str	r3, [sp, #4]
 80063de:	2300      	movs	r3, #0
 80063e0:	9300      	str	r3, [sp, #0]
 80063e2:	2300      	movs	r3, #0
 80063e4:	460a      	mov	r2, r1
 80063e6:	491e      	ldr	r1, [pc, #120]	; (8006460 <vTaskStartScheduler+0xa8>)
 80063e8:	481e      	ldr	r0, [pc, #120]	; (8006464 <vTaskStartScheduler+0xac>)
 80063ea:	f7ff fe26 	bl	800603a <xTaskCreateStatic>
 80063ee:	4603      	mov	r3, r0
 80063f0:	4a1d      	ldr	r2, [pc, #116]	; (8006468 <vTaskStartScheduler+0xb0>)
 80063f2:	6013      	str	r3, [r2, #0]
 80063f4:	4b1c      	ldr	r3, [pc, #112]	; (8006468 <vTaskStartScheduler+0xb0>)
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	2b00      	cmp	r3, #0
 80063fa:	d002      	beq.n	8006402 <vTaskStartScheduler+0x4a>
 80063fc:	2301      	movs	r3, #1
 80063fe:	617b      	str	r3, [r7, #20]
 8006400:	e001      	b.n	8006406 <vTaskStartScheduler+0x4e>
 8006402:	2300      	movs	r3, #0
 8006404:	617b      	str	r3, [r7, #20]
 8006406:	697b      	ldr	r3, [r7, #20]
 8006408:	2b01      	cmp	r3, #1
 800640a:	d116      	bne.n	800643a <vTaskStartScheduler+0x82>
 800640c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006410:	f383 8811 	msr	BASEPRI, r3
 8006414:	f3bf 8f6f 	isb	sy
 8006418:	f3bf 8f4f 	dsb	sy
 800641c:	613b      	str	r3, [r7, #16]
 800641e:	bf00      	nop
 8006420:	4b12      	ldr	r3, [pc, #72]	; (800646c <vTaskStartScheduler+0xb4>)
 8006422:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006426:	601a      	str	r2, [r3, #0]
 8006428:	4b11      	ldr	r3, [pc, #68]	; (8006470 <vTaskStartScheduler+0xb8>)
 800642a:	2201      	movs	r2, #1
 800642c:	601a      	str	r2, [r3, #0]
 800642e:	4b11      	ldr	r3, [pc, #68]	; (8006474 <vTaskStartScheduler+0xbc>)
 8006430:	2200      	movs	r2, #0
 8006432:	601a      	str	r2, [r3, #0]
 8006434:	f000 fba0 	bl	8006b78 <xPortStartScheduler>
 8006438:	e00e      	b.n	8006458 <vTaskStartScheduler+0xa0>
 800643a:	697b      	ldr	r3, [r7, #20]
 800643c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006440:	d10a      	bne.n	8006458 <vTaskStartScheduler+0xa0>
 8006442:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006446:	f383 8811 	msr	BASEPRI, r3
 800644a:	f3bf 8f6f 	isb	sy
 800644e:	f3bf 8f4f 	dsb	sy
 8006452:	60fb      	str	r3, [r7, #12]
 8006454:	bf00      	nop
 8006456:	e7fe      	b.n	8006456 <vTaskStartScheduler+0x9e>
 8006458:	bf00      	nop
 800645a:	3718      	adds	r7, #24
 800645c:	46bd      	mov	sp, r7
 800645e:	bd80      	pop	{r7, pc}
 8006460:	08009be8 	.word	0x08009be8
 8006464:	080067fd 	.word	0x080067fd
 8006468:	2000079c 	.word	0x2000079c
 800646c:	20000798 	.word	0x20000798
 8006470:	20000784 	.word	0x20000784
 8006474:	2000077c 	.word	0x2000077c

08006478 <vTaskSuspendAll>:
 8006478:	b480      	push	{r7}
 800647a:	af00      	add	r7, sp, #0
 800647c:	4b04      	ldr	r3, [pc, #16]	; (8006490 <vTaskSuspendAll+0x18>)
 800647e:	681b      	ldr	r3, [r3, #0]
 8006480:	3301      	adds	r3, #1
 8006482:	4a03      	ldr	r2, [pc, #12]	; (8006490 <vTaskSuspendAll+0x18>)
 8006484:	6013      	str	r3, [r2, #0]
 8006486:	bf00      	nop
 8006488:	46bd      	mov	sp, r7
 800648a:	bc80      	pop	{r7}
 800648c:	4770      	bx	lr
 800648e:	bf00      	nop
 8006490:	200007a0 	.word	0x200007a0

08006494 <xTaskResumeAll>:
 8006494:	b580      	push	{r7, lr}
 8006496:	b084      	sub	sp, #16
 8006498:	af00      	add	r7, sp, #0
 800649a:	2300      	movs	r3, #0
 800649c:	60fb      	str	r3, [r7, #12]
 800649e:	2300      	movs	r3, #0
 80064a0:	60bb      	str	r3, [r7, #8]
 80064a2:	4b41      	ldr	r3, [pc, #260]	; (80065a8 <xTaskResumeAll+0x114>)
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d10a      	bne.n	80064c0 <xTaskResumeAll+0x2c>
 80064aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064ae:	f383 8811 	msr	BASEPRI, r3
 80064b2:	f3bf 8f6f 	isb	sy
 80064b6:	f3bf 8f4f 	dsb	sy
 80064ba:	603b      	str	r3, [r7, #0]
 80064bc:	bf00      	nop
 80064be:	e7fe      	b.n	80064be <xTaskResumeAll+0x2a>
 80064c0:	f000 fbcc 	bl	8006c5c <vPortEnterCritical>
 80064c4:	4b38      	ldr	r3, [pc, #224]	; (80065a8 <xTaskResumeAll+0x114>)
 80064c6:	681b      	ldr	r3, [r3, #0]
 80064c8:	3b01      	subs	r3, #1
 80064ca:	4a37      	ldr	r2, [pc, #220]	; (80065a8 <xTaskResumeAll+0x114>)
 80064cc:	6013      	str	r3, [r2, #0]
 80064ce:	4b36      	ldr	r3, [pc, #216]	; (80065a8 <xTaskResumeAll+0x114>)
 80064d0:	681b      	ldr	r3, [r3, #0]
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	d161      	bne.n	800659a <xTaskResumeAll+0x106>
 80064d6:	4b35      	ldr	r3, [pc, #212]	; (80065ac <xTaskResumeAll+0x118>)
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	2b00      	cmp	r3, #0
 80064dc:	d05d      	beq.n	800659a <xTaskResumeAll+0x106>
 80064de:	e02e      	b.n	800653e <xTaskResumeAll+0xaa>
 80064e0:	4b33      	ldr	r3, [pc, #204]	; (80065b0 <xTaskResumeAll+0x11c>)
 80064e2:	68db      	ldr	r3, [r3, #12]
 80064e4:	68db      	ldr	r3, [r3, #12]
 80064e6:	60fb      	str	r3, [r7, #12]
 80064e8:	68fb      	ldr	r3, [r7, #12]
 80064ea:	3318      	adds	r3, #24
 80064ec:	4618      	mov	r0, r3
 80064ee:	f7ff fd7b 	bl	8005fe8 <uxListRemove>
 80064f2:	68fb      	ldr	r3, [r7, #12]
 80064f4:	3304      	adds	r3, #4
 80064f6:	4618      	mov	r0, r3
 80064f8:	f7ff fd76 	bl	8005fe8 <uxListRemove>
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006500:	2201      	movs	r2, #1
 8006502:	409a      	lsls	r2, r3
 8006504:	4b2b      	ldr	r3, [pc, #172]	; (80065b4 <xTaskResumeAll+0x120>)
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	4313      	orrs	r3, r2
 800650a:	4a2a      	ldr	r2, [pc, #168]	; (80065b4 <xTaskResumeAll+0x120>)
 800650c:	6013      	str	r3, [r2, #0]
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006512:	4613      	mov	r3, r2
 8006514:	009b      	lsls	r3, r3, #2
 8006516:	4413      	add	r3, r2
 8006518:	009b      	lsls	r3, r3, #2
 800651a:	4a27      	ldr	r2, [pc, #156]	; (80065b8 <xTaskResumeAll+0x124>)
 800651c:	441a      	add	r2, r3
 800651e:	68fb      	ldr	r3, [r7, #12]
 8006520:	3304      	adds	r3, #4
 8006522:	4619      	mov	r1, r3
 8006524:	4610      	mov	r0, r2
 8006526:	f7ff fd04 	bl	8005f32 <vListInsertEnd>
 800652a:	68fb      	ldr	r3, [r7, #12]
 800652c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800652e:	4b23      	ldr	r3, [pc, #140]	; (80065bc <xTaskResumeAll+0x128>)
 8006530:	681b      	ldr	r3, [r3, #0]
 8006532:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006534:	429a      	cmp	r2, r3
 8006536:	d302      	bcc.n	800653e <xTaskResumeAll+0xaa>
 8006538:	4b21      	ldr	r3, [pc, #132]	; (80065c0 <xTaskResumeAll+0x12c>)
 800653a:	2201      	movs	r2, #1
 800653c:	601a      	str	r2, [r3, #0]
 800653e:	4b1c      	ldr	r3, [pc, #112]	; (80065b0 <xTaskResumeAll+0x11c>)
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	2b00      	cmp	r3, #0
 8006544:	d1cc      	bne.n	80064e0 <xTaskResumeAll+0x4c>
 8006546:	68fb      	ldr	r3, [r7, #12]
 8006548:	2b00      	cmp	r3, #0
 800654a:	d001      	beq.n	8006550 <xTaskResumeAll+0xbc>
 800654c:	f000 fa0c 	bl	8006968 <prvResetNextTaskUnblockTime>
 8006550:	4b1c      	ldr	r3, [pc, #112]	; (80065c4 <xTaskResumeAll+0x130>)
 8006552:	681b      	ldr	r3, [r3, #0]
 8006554:	607b      	str	r3, [r7, #4]
 8006556:	687b      	ldr	r3, [r7, #4]
 8006558:	2b00      	cmp	r3, #0
 800655a:	d010      	beq.n	800657e <xTaskResumeAll+0xea>
 800655c:	f000 f836 	bl	80065cc <xTaskIncrementTick>
 8006560:	4603      	mov	r3, r0
 8006562:	2b00      	cmp	r3, #0
 8006564:	d002      	beq.n	800656c <xTaskResumeAll+0xd8>
 8006566:	4b16      	ldr	r3, [pc, #88]	; (80065c0 <xTaskResumeAll+0x12c>)
 8006568:	2201      	movs	r2, #1
 800656a:	601a      	str	r2, [r3, #0]
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	3b01      	subs	r3, #1
 8006570:	607b      	str	r3, [r7, #4]
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	2b00      	cmp	r3, #0
 8006576:	d1f1      	bne.n	800655c <xTaskResumeAll+0xc8>
 8006578:	4b12      	ldr	r3, [pc, #72]	; (80065c4 <xTaskResumeAll+0x130>)
 800657a:	2200      	movs	r2, #0
 800657c:	601a      	str	r2, [r3, #0]
 800657e:	4b10      	ldr	r3, [pc, #64]	; (80065c0 <xTaskResumeAll+0x12c>)
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	2b00      	cmp	r3, #0
 8006584:	d009      	beq.n	800659a <xTaskResumeAll+0x106>
 8006586:	2301      	movs	r3, #1
 8006588:	60bb      	str	r3, [r7, #8]
 800658a:	4b0f      	ldr	r3, [pc, #60]	; (80065c8 <xTaskResumeAll+0x134>)
 800658c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006590:	601a      	str	r2, [r3, #0]
 8006592:	f3bf 8f4f 	dsb	sy
 8006596:	f3bf 8f6f 	isb	sy
 800659a:	f000 fb8f 	bl	8006cbc <vPortExitCritical>
 800659e:	68bb      	ldr	r3, [r7, #8]
 80065a0:	4618      	mov	r0, r3
 80065a2:	3710      	adds	r7, #16
 80065a4:	46bd      	mov	sp, r7
 80065a6:	bd80      	pop	{r7, pc}
 80065a8:	200007a0 	.word	0x200007a0
 80065ac:	20000778 	.word	0x20000778
 80065b0:	20000738 	.word	0x20000738
 80065b4:	20000780 	.word	0x20000780
 80065b8:	2000067c 	.word	0x2000067c
 80065bc:	20000678 	.word	0x20000678
 80065c0:	2000078c 	.word	0x2000078c
 80065c4:	20000788 	.word	0x20000788
 80065c8:	e000ed04 	.word	0xe000ed04

080065cc <xTaskIncrementTick>:
 80065cc:	b580      	push	{r7, lr}
 80065ce:	b086      	sub	sp, #24
 80065d0:	af00      	add	r7, sp, #0
 80065d2:	2300      	movs	r3, #0
 80065d4:	617b      	str	r3, [r7, #20]
 80065d6:	4b51      	ldr	r3, [pc, #324]	; (800671c <xTaskIncrementTick+0x150>)
 80065d8:	681b      	ldr	r3, [r3, #0]
 80065da:	2b00      	cmp	r3, #0
 80065dc:	f040 808d 	bne.w	80066fa <xTaskIncrementTick+0x12e>
 80065e0:	4b4f      	ldr	r3, [pc, #316]	; (8006720 <xTaskIncrementTick+0x154>)
 80065e2:	681b      	ldr	r3, [r3, #0]
 80065e4:	3301      	adds	r3, #1
 80065e6:	613b      	str	r3, [r7, #16]
 80065e8:	4a4d      	ldr	r2, [pc, #308]	; (8006720 <xTaskIncrementTick+0x154>)
 80065ea:	693b      	ldr	r3, [r7, #16]
 80065ec:	6013      	str	r3, [r2, #0]
 80065ee:	693b      	ldr	r3, [r7, #16]
 80065f0:	2b00      	cmp	r3, #0
 80065f2:	d120      	bne.n	8006636 <xTaskIncrementTick+0x6a>
 80065f4:	4b4b      	ldr	r3, [pc, #300]	; (8006724 <xTaskIncrementTick+0x158>)
 80065f6:	681b      	ldr	r3, [r3, #0]
 80065f8:	681b      	ldr	r3, [r3, #0]
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d00a      	beq.n	8006614 <xTaskIncrementTick+0x48>
 80065fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006602:	f383 8811 	msr	BASEPRI, r3
 8006606:	f3bf 8f6f 	isb	sy
 800660a:	f3bf 8f4f 	dsb	sy
 800660e:	603b      	str	r3, [r7, #0]
 8006610:	bf00      	nop
 8006612:	e7fe      	b.n	8006612 <xTaskIncrementTick+0x46>
 8006614:	4b43      	ldr	r3, [pc, #268]	; (8006724 <xTaskIncrementTick+0x158>)
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	60fb      	str	r3, [r7, #12]
 800661a:	4b43      	ldr	r3, [pc, #268]	; (8006728 <xTaskIncrementTick+0x15c>)
 800661c:	681b      	ldr	r3, [r3, #0]
 800661e:	4a41      	ldr	r2, [pc, #260]	; (8006724 <xTaskIncrementTick+0x158>)
 8006620:	6013      	str	r3, [r2, #0]
 8006622:	4a41      	ldr	r2, [pc, #260]	; (8006728 <xTaskIncrementTick+0x15c>)
 8006624:	68fb      	ldr	r3, [r7, #12]
 8006626:	6013      	str	r3, [r2, #0]
 8006628:	4b40      	ldr	r3, [pc, #256]	; (800672c <xTaskIncrementTick+0x160>)
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	3301      	adds	r3, #1
 800662e:	4a3f      	ldr	r2, [pc, #252]	; (800672c <xTaskIncrementTick+0x160>)
 8006630:	6013      	str	r3, [r2, #0]
 8006632:	f000 f999 	bl	8006968 <prvResetNextTaskUnblockTime>
 8006636:	4b3e      	ldr	r3, [pc, #248]	; (8006730 <xTaskIncrementTick+0x164>)
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	693a      	ldr	r2, [r7, #16]
 800663c:	429a      	cmp	r2, r3
 800663e:	d34d      	bcc.n	80066dc <xTaskIncrementTick+0x110>
 8006640:	4b38      	ldr	r3, [pc, #224]	; (8006724 <xTaskIncrementTick+0x158>)
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	2b00      	cmp	r3, #0
 8006648:	d101      	bne.n	800664e <xTaskIncrementTick+0x82>
 800664a:	2301      	movs	r3, #1
 800664c:	e000      	b.n	8006650 <xTaskIncrementTick+0x84>
 800664e:	2300      	movs	r3, #0
 8006650:	2b00      	cmp	r3, #0
 8006652:	d004      	beq.n	800665e <xTaskIncrementTick+0x92>
 8006654:	4b36      	ldr	r3, [pc, #216]	; (8006730 <xTaskIncrementTick+0x164>)
 8006656:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800665a:	601a      	str	r2, [r3, #0]
 800665c:	e03e      	b.n	80066dc <xTaskIncrementTick+0x110>
 800665e:	4b31      	ldr	r3, [pc, #196]	; (8006724 <xTaskIncrementTick+0x158>)
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	68db      	ldr	r3, [r3, #12]
 8006664:	68db      	ldr	r3, [r3, #12]
 8006666:	60bb      	str	r3, [r7, #8]
 8006668:	68bb      	ldr	r3, [r7, #8]
 800666a:	685b      	ldr	r3, [r3, #4]
 800666c:	607b      	str	r3, [r7, #4]
 800666e:	693a      	ldr	r2, [r7, #16]
 8006670:	687b      	ldr	r3, [r7, #4]
 8006672:	429a      	cmp	r2, r3
 8006674:	d203      	bcs.n	800667e <xTaskIncrementTick+0xb2>
 8006676:	4a2e      	ldr	r2, [pc, #184]	; (8006730 <xTaskIncrementTick+0x164>)
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	6013      	str	r3, [r2, #0]
 800667c:	e02e      	b.n	80066dc <xTaskIncrementTick+0x110>
 800667e:	68bb      	ldr	r3, [r7, #8]
 8006680:	3304      	adds	r3, #4
 8006682:	4618      	mov	r0, r3
 8006684:	f7ff fcb0 	bl	8005fe8 <uxListRemove>
 8006688:	68bb      	ldr	r3, [r7, #8]
 800668a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800668c:	2b00      	cmp	r3, #0
 800668e:	d004      	beq.n	800669a <xTaskIncrementTick+0xce>
 8006690:	68bb      	ldr	r3, [r7, #8]
 8006692:	3318      	adds	r3, #24
 8006694:	4618      	mov	r0, r3
 8006696:	f7ff fca7 	bl	8005fe8 <uxListRemove>
 800669a:	68bb      	ldr	r3, [r7, #8]
 800669c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800669e:	2201      	movs	r2, #1
 80066a0:	409a      	lsls	r2, r3
 80066a2:	4b24      	ldr	r3, [pc, #144]	; (8006734 <xTaskIncrementTick+0x168>)
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	4313      	orrs	r3, r2
 80066a8:	4a22      	ldr	r2, [pc, #136]	; (8006734 <xTaskIncrementTick+0x168>)
 80066aa:	6013      	str	r3, [r2, #0]
 80066ac:	68bb      	ldr	r3, [r7, #8]
 80066ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066b0:	4613      	mov	r3, r2
 80066b2:	009b      	lsls	r3, r3, #2
 80066b4:	4413      	add	r3, r2
 80066b6:	009b      	lsls	r3, r3, #2
 80066b8:	4a1f      	ldr	r2, [pc, #124]	; (8006738 <xTaskIncrementTick+0x16c>)
 80066ba:	441a      	add	r2, r3
 80066bc:	68bb      	ldr	r3, [r7, #8]
 80066be:	3304      	adds	r3, #4
 80066c0:	4619      	mov	r1, r3
 80066c2:	4610      	mov	r0, r2
 80066c4:	f7ff fc35 	bl	8005f32 <vListInsertEnd>
 80066c8:	68bb      	ldr	r3, [r7, #8]
 80066ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066cc:	4b1b      	ldr	r3, [pc, #108]	; (800673c <xTaskIncrementTick+0x170>)
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066d2:	429a      	cmp	r2, r3
 80066d4:	d3b4      	bcc.n	8006640 <xTaskIncrementTick+0x74>
 80066d6:	2301      	movs	r3, #1
 80066d8:	617b      	str	r3, [r7, #20]
 80066da:	e7b1      	b.n	8006640 <xTaskIncrementTick+0x74>
 80066dc:	4b17      	ldr	r3, [pc, #92]	; (800673c <xTaskIncrementTick+0x170>)
 80066de:	681b      	ldr	r3, [r3, #0]
 80066e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066e2:	4915      	ldr	r1, [pc, #84]	; (8006738 <xTaskIncrementTick+0x16c>)
 80066e4:	4613      	mov	r3, r2
 80066e6:	009b      	lsls	r3, r3, #2
 80066e8:	4413      	add	r3, r2
 80066ea:	009b      	lsls	r3, r3, #2
 80066ec:	440b      	add	r3, r1
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	2b01      	cmp	r3, #1
 80066f2:	d907      	bls.n	8006704 <xTaskIncrementTick+0x138>
 80066f4:	2301      	movs	r3, #1
 80066f6:	617b      	str	r3, [r7, #20]
 80066f8:	e004      	b.n	8006704 <xTaskIncrementTick+0x138>
 80066fa:	4b11      	ldr	r3, [pc, #68]	; (8006740 <xTaskIncrementTick+0x174>)
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	3301      	adds	r3, #1
 8006700:	4a0f      	ldr	r2, [pc, #60]	; (8006740 <xTaskIncrementTick+0x174>)
 8006702:	6013      	str	r3, [r2, #0]
 8006704:	4b0f      	ldr	r3, [pc, #60]	; (8006744 <xTaskIncrementTick+0x178>)
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	2b00      	cmp	r3, #0
 800670a:	d001      	beq.n	8006710 <xTaskIncrementTick+0x144>
 800670c:	2301      	movs	r3, #1
 800670e:	617b      	str	r3, [r7, #20]
 8006710:	697b      	ldr	r3, [r7, #20]
 8006712:	4618      	mov	r0, r3
 8006714:	3718      	adds	r7, #24
 8006716:	46bd      	mov	sp, r7
 8006718:	bd80      	pop	{r7, pc}
 800671a:	bf00      	nop
 800671c:	200007a0 	.word	0x200007a0
 8006720:	2000077c 	.word	0x2000077c
 8006724:	20000730 	.word	0x20000730
 8006728:	20000734 	.word	0x20000734
 800672c:	20000790 	.word	0x20000790
 8006730:	20000798 	.word	0x20000798
 8006734:	20000780 	.word	0x20000780
 8006738:	2000067c 	.word	0x2000067c
 800673c:	20000678 	.word	0x20000678
 8006740:	20000788 	.word	0x20000788
 8006744:	2000078c 	.word	0x2000078c

08006748 <vTaskSwitchContext>:
 8006748:	b480      	push	{r7}
 800674a:	b087      	sub	sp, #28
 800674c:	af00      	add	r7, sp, #0
 800674e:	4b26      	ldr	r3, [pc, #152]	; (80067e8 <vTaskSwitchContext+0xa0>)
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	2b00      	cmp	r3, #0
 8006754:	d003      	beq.n	800675e <vTaskSwitchContext+0x16>
 8006756:	4b25      	ldr	r3, [pc, #148]	; (80067ec <vTaskSwitchContext+0xa4>)
 8006758:	2201      	movs	r2, #1
 800675a:	601a      	str	r2, [r3, #0]
 800675c:	e03f      	b.n	80067de <vTaskSwitchContext+0x96>
 800675e:	4b23      	ldr	r3, [pc, #140]	; (80067ec <vTaskSwitchContext+0xa4>)
 8006760:	2200      	movs	r2, #0
 8006762:	601a      	str	r2, [r3, #0]
 8006764:	4b22      	ldr	r3, [pc, #136]	; (80067f0 <vTaskSwitchContext+0xa8>)
 8006766:	681b      	ldr	r3, [r3, #0]
 8006768:	60fb      	str	r3, [r7, #12]
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	fab3 f383 	clz	r3, r3
 8006770:	72fb      	strb	r3, [r7, #11]
 8006772:	7afb      	ldrb	r3, [r7, #11]
 8006774:	f1c3 031f 	rsb	r3, r3, #31
 8006778:	617b      	str	r3, [r7, #20]
 800677a:	491e      	ldr	r1, [pc, #120]	; (80067f4 <vTaskSwitchContext+0xac>)
 800677c:	697a      	ldr	r2, [r7, #20]
 800677e:	4613      	mov	r3, r2
 8006780:	009b      	lsls	r3, r3, #2
 8006782:	4413      	add	r3, r2
 8006784:	009b      	lsls	r3, r3, #2
 8006786:	440b      	add	r3, r1
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	2b00      	cmp	r3, #0
 800678c:	d10a      	bne.n	80067a4 <vTaskSwitchContext+0x5c>
 800678e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006792:	f383 8811 	msr	BASEPRI, r3
 8006796:	f3bf 8f6f 	isb	sy
 800679a:	f3bf 8f4f 	dsb	sy
 800679e:	607b      	str	r3, [r7, #4]
 80067a0:	bf00      	nop
 80067a2:	e7fe      	b.n	80067a2 <vTaskSwitchContext+0x5a>
 80067a4:	697a      	ldr	r2, [r7, #20]
 80067a6:	4613      	mov	r3, r2
 80067a8:	009b      	lsls	r3, r3, #2
 80067aa:	4413      	add	r3, r2
 80067ac:	009b      	lsls	r3, r3, #2
 80067ae:	4a11      	ldr	r2, [pc, #68]	; (80067f4 <vTaskSwitchContext+0xac>)
 80067b0:	4413      	add	r3, r2
 80067b2:	613b      	str	r3, [r7, #16]
 80067b4:	693b      	ldr	r3, [r7, #16]
 80067b6:	685b      	ldr	r3, [r3, #4]
 80067b8:	685a      	ldr	r2, [r3, #4]
 80067ba:	693b      	ldr	r3, [r7, #16]
 80067bc:	605a      	str	r2, [r3, #4]
 80067be:	693b      	ldr	r3, [r7, #16]
 80067c0:	685a      	ldr	r2, [r3, #4]
 80067c2:	693b      	ldr	r3, [r7, #16]
 80067c4:	3308      	adds	r3, #8
 80067c6:	429a      	cmp	r2, r3
 80067c8:	d104      	bne.n	80067d4 <vTaskSwitchContext+0x8c>
 80067ca:	693b      	ldr	r3, [r7, #16]
 80067cc:	685b      	ldr	r3, [r3, #4]
 80067ce:	685a      	ldr	r2, [r3, #4]
 80067d0:	693b      	ldr	r3, [r7, #16]
 80067d2:	605a      	str	r2, [r3, #4]
 80067d4:	693b      	ldr	r3, [r7, #16]
 80067d6:	685b      	ldr	r3, [r3, #4]
 80067d8:	68db      	ldr	r3, [r3, #12]
 80067da:	4a07      	ldr	r2, [pc, #28]	; (80067f8 <vTaskSwitchContext+0xb0>)
 80067dc:	6013      	str	r3, [r2, #0]
 80067de:	bf00      	nop
 80067e0:	371c      	adds	r7, #28
 80067e2:	46bd      	mov	sp, r7
 80067e4:	bc80      	pop	{r7}
 80067e6:	4770      	bx	lr
 80067e8:	200007a0 	.word	0x200007a0
 80067ec:	2000078c 	.word	0x2000078c
 80067f0:	20000780 	.word	0x20000780
 80067f4:	2000067c 	.word	0x2000067c
 80067f8:	20000678 	.word	0x20000678

080067fc <prvIdleTask>:
 80067fc:	b580      	push	{r7, lr}
 80067fe:	b082      	sub	sp, #8
 8006800:	af00      	add	r7, sp, #0
 8006802:	6078      	str	r0, [r7, #4]
 8006804:	f000 f852 	bl	80068ac <prvCheckTasksWaitingTermination>
 8006808:	4b06      	ldr	r3, [pc, #24]	; (8006824 <prvIdleTask+0x28>)
 800680a:	681b      	ldr	r3, [r3, #0]
 800680c:	2b01      	cmp	r3, #1
 800680e:	d9f9      	bls.n	8006804 <prvIdleTask+0x8>
 8006810:	4b05      	ldr	r3, [pc, #20]	; (8006828 <prvIdleTask+0x2c>)
 8006812:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006816:	601a      	str	r2, [r3, #0]
 8006818:	f3bf 8f4f 	dsb	sy
 800681c:	f3bf 8f6f 	isb	sy
 8006820:	e7f0      	b.n	8006804 <prvIdleTask+0x8>
 8006822:	bf00      	nop
 8006824:	2000067c 	.word	0x2000067c
 8006828:	e000ed04 	.word	0xe000ed04

0800682c <prvInitialiseTaskLists>:
 800682c:	b580      	push	{r7, lr}
 800682e:	b082      	sub	sp, #8
 8006830:	af00      	add	r7, sp, #0
 8006832:	2300      	movs	r3, #0
 8006834:	607b      	str	r3, [r7, #4]
 8006836:	e00c      	b.n	8006852 <prvInitialiseTaskLists+0x26>
 8006838:	687a      	ldr	r2, [r7, #4]
 800683a:	4613      	mov	r3, r2
 800683c:	009b      	lsls	r3, r3, #2
 800683e:	4413      	add	r3, r2
 8006840:	009b      	lsls	r3, r3, #2
 8006842:	4a12      	ldr	r2, [pc, #72]	; (800688c <prvInitialiseTaskLists+0x60>)
 8006844:	4413      	add	r3, r2
 8006846:	4618      	mov	r0, r3
 8006848:	f7ff fb48 	bl	8005edc <vListInitialise>
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	3301      	adds	r3, #1
 8006850:	607b      	str	r3, [r7, #4]
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	2b06      	cmp	r3, #6
 8006856:	d9ef      	bls.n	8006838 <prvInitialiseTaskLists+0xc>
 8006858:	480d      	ldr	r0, [pc, #52]	; (8006890 <prvInitialiseTaskLists+0x64>)
 800685a:	f7ff fb3f 	bl	8005edc <vListInitialise>
 800685e:	480d      	ldr	r0, [pc, #52]	; (8006894 <prvInitialiseTaskLists+0x68>)
 8006860:	f7ff fb3c 	bl	8005edc <vListInitialise>
 8006864:	480c      	ldr	r0, [pc, #48]	; (8006898 <prvInitialiseTaskLists+0x6c>)
 8006866:	f7ff fb39 	bl	8005edc <vListInitialise>
 800686a:	480c      	ldr	r0, [pc, #48]	; (800689c <prvInitialiseTaskLists+0x70>)
 800686c:	f7ff fb36 	bl	8005edc <vListInitialise>
 8006870:	480b      	ldr	r0, [pc, #44]	; (80068a0 <prvInitialiseTaskLists+0x74>)
 8006872:	f7ff fb33 	bl	8005edc <vListInitialise>
 8006876:	4b0b      	ldr	r3, [pc, #44]	; (80068a4 <prvInitialiseTaskLists+0x78>)
 8006878:	4a05      	ldr	r2, [pc, #20]	; (8006890 <prvInitialiseTaskLists+0x64>)
 800687a:	601a      	str	r2, [r3, #0]
 800687c:	4b0a      	ldr	r3, [pc, #40]	; (80068a8 <prvInitialiseTaskLists+0x7c>)
 800687e:	4a05      	ldr	r2, [pc, #20]	; (8006894 <prvInitialiseTaskLists+0x68>)
 8006880:	601a      	str	r2, [r3, #0]
 8006882:	bf00      	nop
 8006884:	3708      	adds	r7, #8
 8006886:	46bd      	mov	sp, r7
 8006888:	bd80      	pop	{r7, pc}
 800688a:	bf00      	nop
 800688c:	2000067c 	.word	0x2000067c
 8006890:	20000708 	.word	0x20000708
 8006894:	2000071c 	.word	0x2000071c
 8006898:	20000738 	.word	0x20000738
 800689c:	2000074c 	.word	0x2000074c
 80068a0:	20000764 	.word	0x20000764
 80068a4:	20000730 	.word	0x20000730
 80068a8:	20000734 	.word	0x20000734

080068ac <prvCheckTasksWaitingTermination>:
 80068ac:	b580      	push	{r7, lr}
 80068ae:	b082      	sub	sp, #8
 80068b0:	af00      	add	r7, sp, #0
 80068b2:	e019      	b.n	80068e8 <prvCheckTasksWaitingTermination+0x3c>
 80068b4:	f000 f9d2 	bl	8006c5c <vPortEnterCritical>
 80068b8:	4b10      	ldr	r3, [pc, #64]	; (80068fc <prvCheckTasksWaitingTermination+0x50>)
 80068ba:	68db      	ldr	r3, [r3, #12]
 80068bc:	68db      	ldr	r3, [r3, #12]
 80068be:	607b      	str	r3, [r7, #4]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	3304      	adds	r3, #4
 80068c4:	4618      	mov	r0, r3
 80068c6:	f7ff fb8f 	bl	8005fe8 <uxListRemove>
 80068ca:	4b0d      	ldr	r3, [pc, #52]	; (8006900 <prvCheckTasksWaitingTermination+0x54>)
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	3b01      	subs	r3, #1
 80068d0:	4a0b      	ldr	r2, [pc, #44]	; (8006900 <prvCheckTasksWaitingTermination+0x54>)
 80068d2:	6013      	str	r3, [r2, #0]
 80068d4:	4b0b      	ldr	r3, [pc, #44]	; (8006904 <prvCheckTasksWaitingTermination+0x58>)
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	3b01      	subs	r3, #1
 80068da:	4a0a      	ldr	r2, [pc, #40]	; (8006904 <prvCheckTasksWaitingTermination+0x58>)
 80068dc:	6013      	str	r3, [r2, #0]
 80068de:	f000 f9ed 	bl	8006cbc <vPortExitCritical>
 80068e2:	6878      	ldr	r0, [r7, #4]
 80068e4:	f000 f810 	bl	8006908 <prvDeleteTCB>
 80068e8:	4b06      	ldr	r3, [pc, #24]	; (8006904 <prvCheckTasksWaitingTermination+0x58>)
 80068ea:	681b      	ldr	r3, [r3, #0]
 80068ec:	2b00      	cmp	r3, #0
 80068ee:	d1e1      	bne.n	80068b4 <prvCheckTasksWaitingTermination+0x8>
 80068f0:	bf00      	nop
 80068f2:	bf00      	nop
 80068f4:	3708      	adds	r7, #8
 80068f6:	46bd      	mov	sp, r7
 80068f8:	bd80      	pop	{r7, pc}
 80068fa:	bf00      	nop
 80068fc:	2000074c 	.word	0x2000074c
 8006900:	20000778 	.word	0x20000778
 8006904:	20000760 	.word	0x20000760

08006908 <prvDeleteTCB>:
 8006908:	b580      	push	{r7, lr}
 800690a:	b084      	sub	sp, #16
 800690c:	af00      	add	r7, sp, #0
 800690e:	6078      	str	r0, [r7, #4]
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006916:	2b00      	cmp	r3, #0
 8006918:	d108      	bne.n	800692c <prvDeleteTCB+0x24>
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800691e:	4618      	mov	r0, r3
 8006920:	f000 fb22 	bl	8006f68 <vPortFree>
 8006924:	6878      	ldr	r0, [r7, #4]
 8006926:	f000 fb1f 	bl	8006f68 <vPortFree>
 800692a:	e018      	b.n	800695e <prvDeleteTCB+0x56>
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006932:	2b01      	cmp	r3, #1
 8006934:	d103      	bne.n	800693e <prvDeleteTCB+0x36>
 8006936:	6878      	ldr	r0, [r7, #4]
 8006938:	f000 fb16 	bl	8006f68 <vPortFree>
 800693c:	e00f      	b.n	800695e <prvDeleteTCB+0x56>
 800693e:	687b      	ldr	r3, [r7, #4]
 8006940:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006944:	2b02      	cmp	r3, #2
 8006946:	d00a      	beq.n	800695e <prvDeleteTCB+0x56>
 8006948:	f04f 0350 	mov.w	r3, #80	; 0x50
 800694c:	f383 8811 	msr	BASEPRI, r3
 8006950:	f3bf 8f6f 	isb	sy
 8006954:	f3bf 8f4f 	dsb	sy
 8006958:	60fb      	str	r3, [r7, #12]
 800695a:	bf00      	nop
 800695c:	e7fe      	b.n	800695c <prvDeleteTCB+0x54>
 800695e:	bf00      	nop
 8006960:	3710      	adds	r7, #16
 8006962:	46bd      	mov	sp, r7
 8006964:	bd80      	pop	{r7, pc}
	...

08006968 <prvResetNextTaskUnblockTime>:
 8006968:	b480      	push	{r7}
 800696a:	b083      	sub	sp, #12
 800696c:	af00      	add	r7, sp, #0
 800696e:	4b0e      	ldr	r3, [pc, #56]	; (80069a8 <prvResetNextTaskUnblockTime+0x40>)
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	2b00      	cmp	r3, #0
 8006976:	d101      	bne.n	800697c <prvResetNextTaskUnblockTime+0x14>
 8006978:	2301      	movs	r3, #1
 800697a:	e000      	b.n	800697e <prvResetNextTaskUnblockTime+0x16>
 800697c:	2300      	movs	r3, #0
 800697e:	2b00      	cmp	r3, #0
 8006980:	d004      	beq.n	800698c <prvResetNextTaskUnblockTime+0x24>
 8006982:	4b0a      	ldr	r3, [pc, #40]	; (80069ac <prvResetNextTaskUnblockTime+0x44>)
 8006984:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006988:	601a      	str	r2, [r3, #0]
 800698a:	e008      	b.n	800699e <prvResetNextTaskUnblockTime+0x36>
 800698c:	4b06      	ldr	r3, [pc, #24]	; (80069a8 <prvResetNextTaskUnblockTime+0x40>)
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	68db      	ldr	r3, [r3, #12]
 8006992:	68db      	ldr	r3, [r3, #12]
 8006994:	607b      	str	r3, [r7, #4]
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	685b      	ldr	r3, [r3, #4]
 800699a:	4a04      	ldr	r2, [pc, #16]	; (80069ac <prvResetNextTaskUnblockTime+0x44>)
 800699c:	6013      	str	r3, [r2, #0]
 800699e:	bf00      	nop
 80069a0:	370c      	adds	r7, #12
 80069a2:	46bd      	mov	sp, r7
 80069a4:	bc80      	pop	{r7}
 80069a6:	4770      	bx	lr
 80069a8:	20000730 	.word	0x20000730
 80069ac:	20000798 	.word	0x20000798

080069b0 <prvAddCurrentTaskToDelayedList>:
 80069b0:	b580      	push	{r7, lr}
 80069b2:	b084      	sub	sp, #16
 80069b4:	af00      	add	r7, sp, #0
 80069b6:	6078      	str	r0, [r7, #4]
 80069b8:	6039      	str	r1, [r7, #0]
 80069ba:	4b29      	ldr	r3, [pc, #164]	; (8006a60 <prvAddCurrentTaskToDelayedList+0xb0>)
 80069bc:	681b      	ldr	r3, [r3, #0]
 80069be:	60fb      	str	r3, [r7, #12]
 80069c0:	4b28      	ldr	r3, [pc, #160]	; (8006a64 <prvAddCurrentTaskToDelayedList+0xb4>)
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	3304      	adds	r3, #4
 80069c6:	4618      	mov	r0, r3
 80069c8:	f7ff fb0e 	bl	8005fe8 <uxListRemove>
 80069cc:	4603      	mov	r3, r0
 80069ce:	2b00      	cmp	r3, #0
 80069d0:	d10b      	bne.n	80069ea <prvAddCurrentTaskToDelayedList+0x3a>
 80069d2:	4b24      	ldr	r3, [pc, #144]	; (8006a64 <prvAddCurrentTaskToDelayedList+0xb4>)
 80069d4:	681b      	ldr	r3, [r3, #0]
 80069d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069d8:	2201      	movs	r2, #1
 80069da:	fa02 f303 	lsl.w	r3, r2, r3
 80069de:	43da      	mvns	r2, r3
 80069e0:	4b21      	ldr	r3, [pc, #132]	; (8006a68 <prvAddCurrentTaskToDelayedList+0xb8>)
 80069e2:	681b      	ldr	r3, [r3, #0]
 80069e4:	4013      	ands	r3, r2
 80069e6:	4a20      	ldr	r2, [pc, #128]	; (8006a68 <prvAddCurrentTaskToDelayedList+0xb8>)
 80069e8:	6013      	str	r3, [r2, #0]
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80069f0:	d10a      	bne.n	8006a08 <prvAddCurrentTaskToDelayedList+0x58>
 80069f2:	683b      	ldr	r3, [r7, #0]
 80069f4:	2b00      	cmp	r3, #0
 80069f6:	d007      	beq.n	8006a08 <prvAddCurrentTaskToDelayedList+0x58>
 80069f8:	4b1a      	ldr	r3, [pc, #104]	; (8006a64 <prvAddCurrentTaskToDelayedList+0xb4>)
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	3304      	adds	r3, #4
 80069fe:	4619      	mov	r1, r3
 8006a00:	481a      	ldr	r0, [pc, #104]	; (8006a6c <prvAddCurrentTaskToDelayedList+0xbc>)
 8006a02:	f7ff fa96 	bl	8005f32 <vListInsertEnd>
 8006a06:	e026      	b.n	8006a56 <prvAddCurrentTaskToDelayedList+0xa6>
 8006a08:	68fa      	ldr	r2, [r7, #12]
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	4413      	add	r3, r2
 8006a0e:	60bb      	str	r3, [r7, #8]
 8006a10:	4b14      	ldr	r3, [pc, #80]	; (8006a64 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	68ba      	ldr	r2, [r7, #8]
 8006a16:	605a      	str	r2, [r3, #4]
 8006a18:	68ba      	ldr	r2, [r7, #8]
 8006a1a:	68fb      	ldr	r3, [r7, #12]
 8006a1c:	429a      	cmp	r2, r3
 8006a1e:	d209      	bcs.n	8006a34 <prvAddCurrentTaskToDelayedList+0x84>
 8006a20:	4b13      	ldr	r3, [pc, #76]	; (8006a70 <prvAddCurrentTaskToDelayedList+0xc0>)
 8006a22:	681a      	ldr	r2, [r3, #0]
 8006a24:	4b0f      	ldr	r3, [pc, #60]	; (8006a64 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	3304      	adds	r3, #4
 8006a2a:	4619      	mov	r1, r3
 8006a2c:	4610      	mov	r0, r2
 8006a2e:	f7ff faa3 	bl	8005f78 <vListInsert>
 8006a32:	e010      	b.n	8006a56 <prvAddCurrentTaskToDelayedList+0xa6>
 8006a34:	4b0f      	ldr	r3, [pc, #60]	; (8006a74 <prvAddCurrentTaskToDelayedList+0xc4>)
 8006a36:	681a      	ldr	r2, [r3, #0]
 8006a38:	4b0a      	ldr	r3, [pc, #40]	; (8006a64 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006a3a:	681b      	ldr	r3, [r3, #0]
 8006a3c:	3304      	adds	r3, #4
 8006a3e:	4619      	mov	r1, r3
 8006a40:	4610      	mov	r0, r2
 8006a42:	f7ff fa99 	bl	8005f78 <vListInsert>
 8006a46:	4b0c      	ldr	r3, [pc, #48]	; (8006a78 <prvAddCurrentTaskToDelayedList+0xc8>)
 8006a48:	681b      	ldr	r3, [r3, #0]
 8006a4a:	68ba      	ldr	r2, [r7, #8]
 8006a4c:	429a      	cmp	r2, r3
 8006a4e:	d202      	bcs.n	8006a56 <prvAddCurrentTaskToDelayedList+0xa6>
 8006a50:	4a09      	ldr	r2, [pc, #36]	; (8006a78 <prvAddCurrentTaskToDelayedList+0xc8>)
 8006a52:	68bb      	ldr	r3, [r7, #8]
 8006a54:	6013      	str	r3, [r2, #0]
 8006a56:	bf00      	nop
 8006a58:	3710      	adds	r7, #16
 8006a5a:	46bd      	mov	sp, r7
 8006a5c:	bd80      	pop	{r7, pc}
 8006a5e:	bf00      	nop
 8006a60:	2000077c 	.word	0x2000077c
 8006a64:	20000678 	.word	0x20000678
 8006a68:	20000780 	.word	0x20000780
 8006a6c:	20000764 	.word	0x20000764
 8006a70:	20000734 	.word	0x20000734
 8006a74:	20000730 	.word	0x20000730
 8006a78:	20000798 	.word	0x20000798

08006a7c <pxPortInitialiseStack>:
 8006a7c:	b480      	push	{r7}
 8006a7e:	b085      	sub	sp, #20
 8006a80:	af00      	add	r7, sp, #0
 8006a82:	60f8      	str	r0, [r7, #12]
 8006a84:	60b9      	str	r1, [r7, #8]
 8006a86:	607a      	str	r2, [r7, #4]
 8006a88:	68fb      	ldr	r3, [r7, #12]
 8006a8a:	3b04      	subs	r3, #4
 8006a8c:	60fb      	str	r3, [r7, #12]
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8006a94:	601a      	str	r2, [r3, #0]
 8006a96:	68fb      	ldr	r3, [r7, #12]
 8006a98:	3b04      	subs	r3, #4
 8006a9a:	60fb      	str	r3, [r7, #12]
 8006a9c:	68bb      	ldr	r3, [r7, #8]
 8006a9e:	f023 0201 	bic.w	r2, r3, #1
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	601a      	str	r2, [r3, #0]
 8006aa6:	68fb      	ldr	r3, [r7, #12]
 8006aa8:	3b04      	subs	r3, #4
 8006aaa:	60fb      	str	r3, [r7, #12]
 8006aac:	4a08      	ldr	r2, [pc, #32]	; (8006ad0 <pxPortInitialiseStack+0x54>)
 8006aae:	68fb      	ldr	r3, [r7, #12]
 8006ab0:	601a      	str	r2, [r3, #0]
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	3b14      	subs	r3, #20
 8006ab6:	60fb      	str	r3, [r7, #12]
 8006ab8:	687a      	ldr	r2, [r7, #4]
 8006aba:	68fb      	ldr	r3, [r7, #12]
 8006abc:	601a      	str	r2, [r3, #0]
 8006abe:	68fb      	ldr	r3, [r7, #12]
 8006ac0:	3b20      	subs	r3, #32
 8006ac2:	60fb      	str	r3, [r7, #12]
 8006ac4:	68fb      	ldr	r3, [r7, #12]
 8006ac6:	4618      	mov	r0, r3
 8006ac8:	3714      	adds	r7, #20
 8006aca:	46bd      	mov	sp, r7
 8006acc:	bc80      	pop	{r7}
 8006ace:	4770      	bx	lr
 8006ad0:	08006ad5 	.word	0x08006ad5

08006ad4 <prvTaskExitError>:
 8006ad4:	b480      	push	{r7}
 8006ad6:	b085      	sub	sp, #20
 8006ad8:	af00      	add	r7, sp, #0
 8006ada:	2300      	movs	r3, #0
 8006adc:	607b      	str	r3, [r7, #4]
 8006ade:	4b12      	ldr	r3, [pc, #72]	; (8006b28 <prvTaskExitError+0x54>)
 8006ae0:	681b      	ldr	r3, [r3, #0]
 8006ae2:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006ae6:	d00a      	beq.n	8006afe <prvTaskExitError+0x2a>
 8006ae8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006aec:	f383 8811 	msr	BASEPRI, r3
 8006af0:	f3bf 8f6f 	isb	sy
 8006af4:	f3bf 8f4f 	dsb	sy
 8006af8:	60fb      	str	r3, [r7, #12]
 8006afa:	bf00      	nop
 8006afc:	e7fe      	b.n	8006afc <prvTaskExitError+0x28>
 8006afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b02:	f383 8811 	msr	BASEPRI, r3
 8006b06:	f3bf 8f6f 	isb	sy
 8006b0a:	f3bf 8f4f 	dsb	sy
 8006b0e:	60bb      	str	r3, [r7, #8]
 8006b10:	bf00      	nop
 8006b12:	bf00      	nop
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d0fc      	beq.n	8006b14 <prvTaskExitError+0x40>
 8006b1a:	bf00      	nop
 8006b1c:	bf00      	nop
 8006b1e:	3714      	adds	r7, #20
 8006b20:	46bd      	mov	sp, r7
 8006b22:	bc80      	pop	{r7}
 8006b24:	4770      	bx	lr
 8006b26:	bf00      	nop
 8006b28:	20000010 	.word	0x20000010
 8006b2c:	00000000 	.word	0x00000000

08006b30 <SVC_Handler>:
 8006b30:	4b07      	ldr	r3, [pc, #28]	; (8006b50 <pxCurrentTCBConst2>)
 8006b32:	6819      	ldr	r1, [r3, #0]
 8006b34:	6808      	ldr	r0, [r1, #0]
 8006b36:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006b3a:	f380 8809 	msr	PSP, r0
 8006b3e:	f3bf 8f6f 	isb	sy
 8006b42:	f04f 0000 	mov.w	r0, #0
 8006b46:	f380 8811 	msr	BASEPRI, r0
 8006b4a:	f04e 0e0d 	orr.w	lr, lr, #13
 8006b4e:	4770      	bx	lr

08006b50 <pxCurrentTCBConst2>:
 8006b50:	20000678 	.word	0x20000678
 8006b54:	bf00      	nop
 8006b56:	bf00      	nop

08006b58 <prvPortStartFirstTask>:
 8006b58:	4806      	ldr	r0, [pc, #24]	; (8006b74 <prvPortStartFirstTask+0x1c>)
 8006b5a:	6800      	ldr	r0, [r0, #0]
 8006b5c:	6800      	ldr	r0, [r0, #0]
 8006b5e:	f380 8808 	msr	MSP, r0
 8006b62:	b662      	cpsie	i
 8006b64:	b661      	cpsie	f
 8006b66:	f3bf 8f4f 	dsb	sy
 8006b6a:	f3bf 8f6f 	isb	sy
 8006b6e:	df00      	svc	0
 8006b70:	bf00      	nop
 8006b72:	bf00      	nop
 8006b74:	e000ed08 	.word	0xe000ed08

08006b78 <xPortStartScheduler>:
 8006b78:	b580      	push	{r7, lr}
 8006b7a:	b084      	sub	sp, #16
 8006b7c:	af00      	add	r7, sp, #0
 8006b7e:	4b32      	ldr	r3, [pc, #200]	; (8006c48 <xPortStartScheduler+0xd0>)
 8006b80:	60fb      	str	r3, [r7, #12]
 8006b82:	68fb      	ldr	r3, [r7, #12]
 8006b84:	781b      	ldrb	r3, [r3, #0]
 8006b86:	b2db      	uxtb	r3, r3
 8006b88:	607b      	str	r3, [r7, #4]
 8006b8a:	68fb      	ldr	r3, [r7, #12]
 8006b8c:	22ff      	movs	r2, #255	; 0xff
 8006b8e:	701a      	strb	r2, [r3, #0]
 8006b90:	68fb      	ldr	r3, [r7, #12]
 8006b92:	781b      	ldrb	r3, [r3, #0]
 8006b94:	b2db      	uxtb	r3, r3
 8006b96:	70fb      	strb	r3, [r7, #3]
 8006b98:	78fb      	ldrb	r3, [r7, #3]
 8006b9a:	b2db      	uxtb	r3, r3
 8006b9c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006ba0:	b2da      	uxtb	r2, r3
 8006ba2:	4b2a      	ldr	r3, [pc, #168]	; (8006c4c <xPortStartScheduler+0xd4>)
 8006ba4:	701a      	strb	r2, [r3, #0]
 8006ba6:	4b2a      	ldr	r3, [pc, #168]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006ba8:	2207      	movs	r2, #7
 8006baa:	601a      	str	r2, [r3, #0]
 8006bac:	e009      	b.n	8006bc2 <xPortStartScheduler+0x4a>
 8006bae:	4b28      	ldr	r3, [pc, #160]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	3b01      	subs	r3, #1
 8006bb4:	4a26      	ldr	r2, [pc, #152]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006bb6:	6013      	str	r3, [r2, #0]
 8006bb8:	78fb      	ldrb	r3, [r7, #3]
 8006bba:	b2db      	uxtb	r3, r3
 8006bbc:	005b      	lsls	r3, r3, #1
 8006bbe:	b2db      	uxtb	r3, r3
 8006bc0:	70fb      	strb	r3, [r7, #3]
 8006bc2:	78fb      	ldrb	r3, [r7, #3]
 8006bc4:	b2db      	uxtb	r3, r3
 8006bc6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006bca:	2b80      	cmp	r3, #128	; 0x80
 8006bcc:	d0ef      	beq.n	8006bae <xPortStartScheduler+0x36>
 8006bce:	4b20      	ldr	r3, [pc, #128]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006bd0:	681b      	ldr	r3, [r3, #0]
 8006bd2:	f1c3 0307 	rsb	r3, r3, #7
 8006bd6:	2b04      	cmp	r3, #4
 8006bd8:	d00a      	beq.n	8006bf0 <xPortStartScheduler+0x78>
 8006bda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006bde:	f383 8811 	msr	BASEPRI, r3
 8006be2:	f3bf 8f6f 	isb	sy
 8006be6:	f3bf 8f4f 	dsb	sy
 8006bea:	60bb      	str	r3, [r7, #8]
 8006bec:	bf00      	nop
 8006bee:	e7fe      	b.n	8006bee <xPortStartScheduler+0x76>
 8006bf0:	4b17      	ldr	r3, [pc, #92]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006bf2:	681b      	ldr	r3, [r3, #0]
 8006bf4:	021b      	lsls	r3, r3, #8
 8006bf6:	4a16      	ldr	r2, [pc, #88]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006bf8:	6013      	str	r3, [r2, #0]
 8006bfa:	4b15      	ldr	r3, [pc, #84]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006bfc:	681b      	ldr	r3, [r3, #0]
 8006bfe:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8006c02:	4a13      	ldr	r2, [pc, #76]	; (8006c50 <xPortStartScheduler+0xd8>)
 8006c04:	6013      	str	r3, [r2, #0]
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	b2da      	uxtb	r2, r3
 8006c0a:	68fb      	ldr	r3, [r7, #12]
 8006c0c:	701a      	strb	r2, [r3, #0]
 8006c0e:	4b11      	ldr	r3, [pc, #68]	; (8006c54 <xPortStartScheduler+0xdc>)
 8006c10:	681b      	ldr	r3, [r3, #0]
 8006c12:	4a10      	ldr	r2, [pc, #64]	; (8006c54 <xPortStartScheduler+0xdc>)
 8006c14:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8006c18:	6013      	str	r3, [r2, #0]
 8006c1a:	4b0e      	ldr	r3, [pc, #56]	; (8006c54 <xPortStartScheduler+0xdc>)
 8006c1c:	681b      	ldr	r3, [r3, #0]
 8006c1e:	4a0d      	ldr	r2, [pc, #52]	; (8006c54 <xPortStartScheduler+0xdc>)
 8006c20:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8006c24:	6013      	str	r3, [r2, #0]
 8006c26:	f000 f8b9 	bl	8006d9c <vPortSetupTimerInterrupt>
 8006c2a:	4b0b      	ldr	r3, [pc, #44]	; (8006c58 <xPortStartScheduler+0xe0>)
 8006c2c:	2200      	movs	r2, #0
 8006c2e:	601a      	str	r2, [r3, #0]
 8006c30:	f7ff ff92 	bl	8006b58 <prvPortStartFirstTask>
 8006c34:	f7ff fd88 	bl	8006748 <vTaskSwitchContext>
 8006c38:	f7ff ff4c 	bl	8006ad4 <prvTaskExitError>
 8006c3c:	2300      	movs	r3, #0
 8006c3e:	4618      	mov	r0, r3
 8006c40:	3710      	adds	r7, #16
 8006c42:	46bd      	mov	sp, r7
 8006c44:	bd80      	pop	{r7, pc}
 8006c46:	bf00      	nop
 8006c48:	e000e400 	.word	0xe000e400
 8006c4c:	200007a4 	.word	0x200007a4
 8006c50:	200007a8 	.word	0x200007a8
 8006c54:	e000ed20 	.word	0xe000ed20
 8006c58:	20000010 	.word	0x20000010

08006c5c <vPortEnterCritical>:
 8006c5c:	b480      	push	{r7}
 8006c5e:	b083      	sub	sp, #12
 8006c60:	af00      	add	r7, sp, #0
 8006c62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c66:	f383 8811 	msr	BASEPRI, r3
 8006c6a:	f3bf 8f6f 	isb	sy
 8006c6e:	f3bf 8f4f 	dsb	sy
 8006c72:	607b      	str	r3, [r7, #4]
 8006c74:	bf00      	nop
 8006c76:	4b0f      	ldr	r3, [pc, #60]	; (8006cb4 <vPortEnterCritical+0x58>)
 8006c78:	681b      	ldr	r3, [r3, #0]
 8006c7a:	3301      	adds	r3, #1
 8006c7c:	4a0d      	ldr	r2, [pc, #52]	; (8006cb4 <vPortEnterCritical+0x58>)
 8006c7e:	6013      	str	r3, [r2, #0]
 8006c80:	4b0c      	ldr	r3, [pc, #48]	; (8006cb4 <vPortEnterCritical+0x58>)
 8006c82:	681b      	ldr	r3, [r3, #0]
 8006c84:	2b01      	cmp	r3, #1
 8006c86:	d10f      	bne.n	8006ca8 <vPortEnterCritical+0x4c>
 8006c88:	4b0b      	ldr	r3, [pc, #44]	; (8006cb8 <vPortEnterCritical+0x5c>)
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	b2db      	uxtb	r3, r3
 8006c8e:	2b00      	cmp	r3, #0
 8006c90:	d00a      	beq.n	8006ca8 <vPortEnterCritical+0x4c>
 8006c92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c96:	f383 8811 	msr	BASEPRI, r3
 8006c9a:	f3bf 8f6f 	isb	sy
 8006c9e:	f3bf 8f4f 	dsb	sy
 8006ca2:	603b      	str	r3, [r7, #0]
 8006ca4:	bf00      	nop
 8006ca6:	e7fe      	b.n	8006ca6 <vPortEnterCritical+0x4a>
 8006ca8:	bf00      	nop
 8006caa:	370c      	adds	r7, #12
 8006cac:	46bd      	mov	sp, r7
 8006cae:	bc80      	pop	{r7}
 8006cb0:	4770      	bx	lr
 8006cb2:	bf00      	nop
 8006cb4:	20000010 	.word	0x20000010
 8006cb8:	e000ed04 	.word	0xe000ed04

08006cbc <vPortExitCritical>:
 8006cbc:	b480      	push	{r7}
 8006cbe:	b083      	sub	sp, #12
 8006cc0:	af00      	add	r7, sp, #0
 8006cc2:	4b11      	ldr	r3, [pc, #68]	; (8006d08 <vPortExitCritical+0x4c>)
 8006cc4:	681b      	ldr	r3, [r3, #0]
 8006cc6:	2b00      	cmp	r3, #0
 8006cc8:	d10a      	bne.n	8006ce0 <vPortExitCritical+0x24>
 8006cca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cce:	f383 8811 	msr	BASEPRI, r3
 8006cd2:	f3bf 8f6f 	isb	sy
 8006cd6:	f3bf 8f4f 	dsb	sy
 8006cda:	607b      	str	r3, [r7, #4]
 8006cdc:	bf00      	nop
 8006cde:	e7fe      	b.n	8006cde <vPortExitCritical+0x22>
 8006ce0:	4b09      	ldr	r3, [pc, #36]	; (8006d08 <vPortExitCritical+0x4c>)
 8006ce2:	681b      	ldr	r3, [r3, #0]
 8006ce4:	3b01      	subs	r3, #1
 8006ce6:	4a08      	ldr	r2, [pc, #32]	; (8006d08 <vPortExitCritical+0x4c>)
 8006ce8:	6013      	str	r3, [r2, #0]
 8006cea:	4b07      	ldr	r3, [pc, #28]	; (8006d08 <vPortExitCritical+0x4c>)
 8006cec:	681b      	ldr	r3, [r3, #0]
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d105      	bne.n	8006cfe <vPortExitCritical+0x42>
 8006cf2:	2300      	movs	r3, #0
 8006cf4:	603b      	str	r3, [r7, #0]
 8006cf6:	683b      	ldr	r3, [r7, #0]
 8006cf8:	f383 8811 	msr	BASEPRI, r3
 8006cfc:	bf00      	nop
 8006cfe:	bf00      	nop
 8006d00:	370c      	adds	r7, #12
 8006d02:	46bd      	mov	sp, r7
 8006d04:	bc80      	pop	{r7}
 8006d06:	4770      	bx	lr
 8006d08:	20000010 	.word	0x20000010
 8006d0c:	00000000 	.word	0x00000000

08006d10 <PendSV_Handler>:
 8006d10:	f3ef 8009 	mrs	r0, PSP
 8006d14:	f3bf 8f6f 	isb	sy
 8006d18:	4b0d      	ldr	r3, [pc, #52]	; (8006d50 <pxCurrentTCBConst>)
 8006d1a:	681a      	ldr	r2, [r3, #0]
 8006d1c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006d20:	6010      	str	r0, [r2, #0]
 8006d22:	e92d 4008 	stmdb	sp!, {r3, lr}
 8006d26:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006d2a:	f380 8811 	msr	BASEPRI, r0
 8006d2e:	f7ff fd0b 	bl	8006748 <vTaskSwitchContext>
 8006d32:	f04f 0000 	mov.w	r0, #0
 8006d36:	f380 8811 	msr	BASEPRI, r0
 8006d3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006d3e:	6819      	ldr	r1, [r3, #0]
 8006d40:	6808      	ldr	r0, [r1, #0]
 8006d42:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006d46:	f380 8809 	msr	PSP, r0
 8006d4a:	f3bf 8f6f 	isb	sy
 8006d4e:	4770      	bx	lr

08006d50 <pxCurrentTCBConst>:
 8006d50:	20000678 	.word	0x20000678
 8006d54:	bf00      	nop
 8006d56:	bf00      	nop

08006d58 <SysTick_Handler>:
 8006d58:	b580      	push	{r7, lr}
 8006d5a:	b082      	sub	sp, #8
 8006d5c:	af00      	add	r7, sp, #0
 8006d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d62:	f383 8811 	msr	BASEPRI, r3
 8006d66:	f3bf 8f6f 	isb	sy
 8006d6a:	f3bf 8f4f 	dsb	sy
 8006d6e:	607b      	str	r3, [r7, #4]
 8006d70:	bf00      	nop
 8006d72:	f7ff fc2b 	bl	80065cc <xTaskIncrementTick>
 8006d76:	4603      	mov	r3, r0
 8006d78:	2b00      	cmp	r3, #0
 8006d7a:	d003      	beq.n	8006d84 <SysTick_Handler+0x2c>
 8006d7c:	4b06      	ldr	r3, [pc, #24]	; (8006d98 <SysTick_Handler+0x40>)
 8006d7e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d82:	601a      	str	r2, [r3, #0]
 8006d84:	2300      	movs	r3, #0
 8006d86:	603b      	str	r3, [r7, #0]
 8006d88:	683b      	ldr	r3, [r7, #0]
 8006d8a:	f383 8811 	msr	BASEPRI, r3
 8006d8e:	bf00      	nop
 8006d90:	bf00      	nop
 8006d92:	3708      	adds	r7, #8
 8006d94:	46bd      	mov	sp, r7
 8006d96:	bd80      	pop	{r7, pc}
 8006d98:	e000ed04 	.word	0xe000ed04

08006d9c <vPortSetupTimerInterrupt>:
 8006d9c:	b480      	push	{r7}
 8006d9e:	af00      	add	r7, sp, #0
 8006da0:	4b0a      	ldr	r3, [pc, #40]	; (8006dcc <vPortSetupTimerInterrupt+0x30>)
 8006da2:	2200      	movs	r2, #0
 8006da4:	601a      	str	r2, [r3, #0]
 8006da6:	4b0a      	ldr	r3, [pc, #40]	; (8006dd0 <vPortSetupTimerInterrupt+0x34>)
 8006da8:	2200      	movs	r2, #0
 8006daa:	601a      	str	r2, [r3, #0]
 8006dac:	4b09      	ldr	r3, [pc, #36]	; (8006dd4 <vPortSetupTimerInterrupt+0x38>)
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	4a09      	ldr	r2, [pc, #36]	; (8006dd8 <vPortSetupTimerInterrupt+0x3c>)
 8006db2:	fba2 2303 	umull	r2, r3, r2, r3
 8006db6:	099b      	lsrs	r3, r3, #6
 8006db8:	4a08      	ldr	r2, [pc, #32]	; (8006ddc <vPortSetupTimerInterrupt+0x40>)
 8006dba:	3b01      	subs	r3, #1
 8006dbc:	6013      	str	r3, [r2, #0]
 8006dbe:	4b03      	ldr	r3, [pc, #12]	; (8006dcc <vPortSetupTimerInterrupt+0x30>)
 8006dc0:	2207      	movs	r2, #7
 8006dc2:	601a      	str	r2, [r3, #0]
 8006dc4:	bf00      	nop
 8006dc6:	46bd      	mov	sp, r7
 8006dc8:	bc80      	pop	{r7}
 8006dca:	4770      	bx	lr
 8006dcc:	e000e010 	.word	0xe000e010
 8006dd0:	e000e018 	.word	0xe000e018
 8006dd4:	20000004 	.word	0x20000004
 8006dd8:	10624dd3 	.word	0x10624dd3
 8006ddc:	e000e014 	.word	0xe000e014

08006de0 <pvPortMalloc>:
 8006de0:	b580      	push	{r7, lr}
 8006de2:	b08a      	sub	sp, #40	; 0x28
 8006de4:	af00      	add	r7, sp, #0
 8006de6:	6078      	str	r0, [r7, #4]
 8006de8:	2300      	movs	r3, #0
 8006dea:	61fb      	str	r3, [r7, #28]
 8006dec:	f7ff fb44 	bl	8006478 <vTaskSuspendAll>
 8006df0:	4b58      	ldr	r3, [pc, #352]	; (8006f54 <pvPortMalloc+0x174>)
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	2b00      	cmp	r3, #0
 8006df6:	d101      	bne.n	8006dfc <pvPortMalloc+0x1c>
 8006df8:	f000 f910 	bl	800701c <prvHeapInit>
 8006dfc:	4b56      	ldr	r3, [pc, #344]	; (8006f58 <pvPortMalloc+0x178>)
 8006dfe:	681a      	ldr	r2, [r3, #0]
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	4013      	ands	r3, r2
 8006e04:	2b00      	cmp	r3, #0
 8006e06:	f040 808e 	bne.w	8006f26 <pvPortMalloc+0x146>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	2b00      	cmp	r3, #0
 8006e0e:	d01d      	beq.n	8006e4c <pvPortMalloc+0x6c>
 8006e10:	2208      	movs	r2, #8
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	4413      	add	r3, r2
 8006e16:	607b      	str	r3, [r7, #4]
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	f003 0307 	and.w	r3, r3, #7
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	d014      	beq.n	8006e4c <pvPortMalloc+0x6c>
 8006e22:	687b      	ldr	r3, [r7, #4]
 8006e24:	f023 0307 	bic.w	r3, r3, #7
 8006e28:	3308      	adds	r3, #8
 8006e2a:	607b      	str	r3, [r7, #4]
 8006e2c:	687b      	ldr	r3, [r7, #4]
 8006e2e:	f003 0307 	and.w	r3, r3, #7
 8006e32:	2b00      	cmp	r3, #0
 8006e34:	d00a      	beq.n	8006e4c <pvPortMalloc+0x6c>
 8006e36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e3a:	f383 8811 	msr	BASEPRI, r3
 8006e3e:	f3bf 8f6f 	isb	sy
 8006e42:	f3bf 8f4f 	dsb	sy
 8006e46:	617b      	str	r3, [r7, #20]
 8006e48:	bf00      	nop
 8006e4a:	e7fe      	b.n	8006e4a <pvPortMalloc+0x6a>
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	2b00      	cmp	r3, #0
 8006e50:	d069      	beq.n	8006f26 <pvPortMalloc+0x146>
 8006e52:	4b42      	ldr	r3, [pc, #264]	; (8006f5c <pvPortMalloc+0x17c>)
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	687a      	ldr	r2, [r7, #4]
 8006e58:	429a      	cmp	r2, r3
 8006e5a:	d864      	bhi.n	8006f26 <pvPortMalloc+0x146>
 8006e5c:	4b40      	ldr	r3, [pc, #256]	; (8006f60 <pvPortMalloc+0x180>)
 8006e5e:	623b      	str	r3, [r7, #32]
 8006e60:	4b3f      	ldr	r3, [pc, #252]	; (8006f60 <pvPortMalloc+0x180>)
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	627b      	str	r3, [r7, #36]	; 0x24
 8006e66:	e004      	b.n	8006e72 <pvPortMalloc+0x92>
 8006e68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e6a:	623b      	str	r3, [r7, #32]
 8006e6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	627b      	str	r3, [r7, #36]	; 0x24
 8006e72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e74:	685b      	ldr	r3, [r3, #4]
 8006e76:	687a      	ldr	r2, [r7, #4]
 8006e78:	429a      	cmp	r2, r3
 8006e7a:	d903      	bls.n	8006e84 <pvPortMalloc+0xa4>
 8006e7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e7e:	681b      	ldr	r3, [r3, #0]
 8006e80:	2b00      	cmp	r3, #0
 8006e82:	d1f1      	bne.n	8006e68 <pvPortMalloc+0x88>
 8006e84:	4b33      	ldr	r3, [pc, #204]	; (8006f54 <pvPortMalloc+0x174>)
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006e8a:	429a      	cmp	r2, r3
 8006e8c:	d04b      	beq.n	8006f26 <pvPortMalloc+0x146>
 8006e8e:	6a3b      	ldr	r3, [r7, #32]
 8006e90:	681b      	ldr	r3, [r3, #0]
 8006e92:	2208      	movs	r2, #8
 8006e94:	4413      	add	r3, r2
 8006e96:	61fb      	str	r3, [r7, #28]
 8006e98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e9a:	681a      	ldr	r2, [r3, #0]
 8006e9c:	6a3b      	ldr	r3, [r7, #32]
 8006e9e:	601a      	str	r2, [r3, #0]
 8006ea0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ea2:	685a      	ldr	r2, [r3, #4]
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	1ad2      	subs	r2, r2, r3
 8006ea8:	2308      	movs	r3, #8
 8006eaa:	005b      	lsls	r3, r3, #1
 8006eac:	429a      	cmp	r2, r3
 8006eae:	d91f      	bls.n	8006ef0 <pvPortMalloc+0x110>
 8006eb0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	4413      	add	r3, r2
 8006eb6:	61bb      	str	r3, [r7, #24]
 8006eb8:	69bb      	ldr	r3, [r7, #24]
 8006eba:	f003 0307 	and.w	r3, r3, #7
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d00a      	beq.n	8006ed8 <pvPortMalloc+0xf8>
 8006ec2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ec6:	f383 8811 	msr	BASEPRI, r3
 8006eca:	f3bf 8f6f 	isb	sy
 8006ece:	f3bf 8f4f 	dsb	sy
 8006ed2:	613b      	str	r3, [r7, #16]
 8006ed4:	bf00      	nop
 8006ed6:	e7fe      	b.n	8006ed6 <pvPortMalloc+0xf6>
 8006ed8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006eda:	685a      	ldr	r2, [r3, #4]
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	1ad2      	subs	r2, r2, r3
 8006ee0:	69bb      	ldr	r3, [r7, #24]
 8006ee2:	605a      	str	r2, [r3, #4]
 8006ee4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ee6:	687a      	ldr	r2, [r7, #4]
 8006ee8:	605a      	str	r2, [r3, #4]
 8006eea:	69b8      	ldr	r0, [r7, #24]
 8006eec:	f000 f8f8 	bl	80070e0 <prvInsertBlockIntoFreeList>
 8006ef0:	4b1a      	ldr	r3, [pc, #104]	; (8006f5c <pvPortMalloc+0x17c>)
 8006ef2:	681a      	ldr	r2, [r3, #0]
 8006ef4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ef6:	685b      	ldr	r3, [r3, #4]
 8006ef8:	1ad3      	subs	r3, r2, r3
 8006efa:	4a18      	ldr	r2, [pc, #96]	; (8006f5c <pvPortMalloc+0x17c>)
 8006efc:	6013      	str	r3, [r2, #0]
 8006efe:	4b17      	ldr	r3, [pc, #92]	; (8006f5c <pvPortMalloc+0x17c>)
 8006f00:	681a      	ldr	r2, [r3, #0]
 8006f02:	4b18      	ldr	r3, [pc, #96]	; (8006f64 <pvPortMalloc+0x184>)
 8006f04:	681b      	ldr	r3, [r3, #0]
 8006f06:	429a      	cmp	r2, r3
 8006f08:	d203      	bcs.n	8006f12 <pvPortMalloc+0x132>
 8006f0a:	4b14      	ldr	r3, [pc, #80]	; (8006f5c <pvPortMalloc+0x17c>)
 8006f0c:	681b      	ldr	r3, [r3, #0]
 8006f0e:	4a15      	ldr	r2, [pc, #84]	; (8006f64 <pvPortMalloc+0x184>)
 8006f10:	6013      	str	r3, [r2, #0]
 8006f12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f14:	685a      	ldr	r2, [r3, #4]
 8006f16:	4b10      	ldr	r3, [pc, #64]	; (8006f58 <pvPortMalloc+0x178>)
 8006f18:	681b      	ldr	r3, [r3, #0]
 8006f1a:	431a      	orrs	r2, r3
 8006f1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f1e:	605a      	str	r2, [r3, #4]
 8006f20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f22:	2200      	movs	r2, #0
 8006f24:	601a      	str	r2, [r3, #0]
 8006f26:	f7ff fab5 	bl	8006494 <xTaskResumeAll>
 8006f2a:	69fb      	ldr	r3, [r7, #28]
 8006f2c:	f003 0307 	and.w	r3, r3, #7
 8006f30:	2b00      	cmp	r3, #0
 8006f32:	d00a      	beq.n	8006f4a <pvPortMalloc+0x16a>
 8006f34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f38:	f383 8811 	msr	BASEPRI, r3
 8006f3c:	f3bf 8f6f 	isb	sy
 8006f40:	f3bf 8f4f 	dsb	sy
 8006f44:	60fb      	str	r3, [r7, #12]
 8006f46:	bf00      	nop
 8006f48:	e7fe      	b.n	8006f48 <pvPortMalloc+0x168>
 8006f4a:	69fb      	ldr	r3, [r7, #28]
 8006f4c:	4618      	mov	r0, r3
 8006f4e:	3728      	adds	r7, #40	; 0x28
 8006f50:	46bd      	mov	sp, r7
 8006f52:	bd80      	pop	{r7, pc}
 8006f54:	200013b4 	.word	0x200013b4
 8006f58:	200013c0 	.word	0x200013c0
 8006f5c:	200013b8 	.word	0x200013b8
 8006f60:	200013ac 	.word	0x200013ac
 8006f64:	200013bc 	.word	0x200013bc

08006f68 <vPortFree>:
 8006f68:	b580      	push	{r7, lr}
 8006f6a:	b086      	sub	sp, #24
 8006f6c:	af00      	add	r7, sp, #0
 8006f6e:	6078      	str	r0, [r7, #4]
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	617b      	str	r3, [r7, #20]
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	2b00      	cmp	r3, #0
 8006f78:	d048      	beq.n	800700c <vPortFree+0xa4>
 8006f7a:	2308      	movs	r3, #8
 8006f7c:	425b      	negs	r3, r3
 8006f7e:	697a      	ldr	r2, [r7, #20]
 8006f80:	4413      	add	r3, r2
 8006f82:	617b      	str	r3, [r7, #20]
 8006f84:	697b      	ldr	r3, [r7, #20]
 8006f86:	613b      	str	r3, [r7, #16]
 8006f88:	693b      	ldr	r3, [r7, #16]
 8006f8a:	685a      	ldr	r2, [r3, #4]
 8006f8c:	4b21      	ldr	r3, [pc, #132]	; (8007014 <vPortFree+0xac>)
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	4013      	ands	r3, r2
 8006f92:	2b00      	cmp	r3, #0
 8006f94:	d10a      	bne.n	8006fac <vPortFree+0x44>
 8006f96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f9a:	f383 8811 	msr	BASEPRI, r3
 8006f9e:	f3bf 8f6f 	isb	sy
 8006fa2:	f3bf 8f4f 	dsb	sy
 8006fa6:	60fb      	str	r3, [r7, #12]
 8006fa8:	bf00      	nop
 8006faa:	e7fe      	b.n	8006faa <vPortFree+0x42>
 8006fac:	693b      	ldr	r3, [r7, #16]
 8006fae:	681b      	ldr	r3, [r3, #0]
 8006fb0:	2b00      	cmp	r3, #0
 8006fb2:	d00a      	beq.n	8006fca <vPortFree+0x62>
 8006fb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fb8:	f383 8811 	msr	BASEPRI, r3
 8006fbc:	f3bf 8f6f 	isb	sy
 8006fc0:	f3bf 8f4f 	dsb	sy
 8006fc4:	60bb      	str	r3, [r7, #8]
 8006fc6:	bf00      	nop
 8006fc8:	e7fe      	b.n	8006fc8 <vPortFree+0x60>
 8006fca:	693b      	ldr	r3, [r7, #16]
 8006fcc:	685a      	ldr	r2, [r3, #4]
 8006fce:	4b11      	ldr	r3, [pc, #68]	; (8007014 <vPortFree+0xac>)
 8006fd0:	681b      	ldr	r3, [r3, #0]
 8006fd2:	4013      	ands	r3, r2
 8006fd4:	2b00      	cmp	r3, #0
 8006fd6:	d019      	beq.n	800700c <vPortFree+0xa4>
 8006fd8:	693b      	ldr	r3, [r7, #16]
 8006fda:	681b      	ldr	r3, [r3, #0]
 8006fdc:	2b00      	cmp	r3, #0
 8006fde:	d115      	bne.n	800700c <vPortFree+0xa4>
 8006fe0:	693b      	ldr	r3, [r7, #16]
 8006fe2:	685a      	ldr	r2, [r3, #4]
 8006fe4:	4b0b      	ldr	r3, [pc, #44]	; (8007014 <vPortFree+0xac>)
 8006fe6:	681b      	ldr	r3, [r3, #0]
 8006fe8:	43db      	mvns	r3, r3
 8006fea:	401a      	ands	r2, r3
 8006fec:	693b      	ldr	r3, [r7, #16]
 8006fee:	605a      	str	r2, [r3, #4]
 8006ff0:	f7ff fa42 	bl	8006478 <vTaskSuspendAll>
 8006ff4:	693b      	ldr	r3, [r7, #16]
 8006ff6:	685a      	ldr	r2, [r3, #4]
 8006ff8:	4b07      	ldr	r3, [pc, #28]	; (8007018 <vPortFree+0xb0>)
 8006ffa:	681b      	ldr	r3, [r3, #0]
 8006ffc:	4413      	add	r3, r2
 8006ffe:	4a06      	ldr	r2, [pc, #24]	; (8007018 <vPortFree+0xb0>)
 8007000:	6013      	str	r3, [r2, #0]
 8007002:	6938      	ldr	r0, [r7, #16]
 8007004:	f000 f86c 	bl	80070e0 <prvInsertBlockIntoFreeList>
 8007008:	f7ff fa44 	bl	8006494 <xTaskResumeAll>
 800700c:	bf00      	nop
 800700e:	3718      	adds	r7, #24
 8007010:	46bd      	mov	sp, r7
 8007012:	bd80      	pop	{r7, pc}
 8007014:	200013c0 	.word	0x200013c0
 8007018:	200013b8 	.word	0x200013b8

0800701c <prvHeapInit>:
 800701c:	b480      	push	{r7}
 800701e:	b085      	sub	sp, #20
 8007020:	af00      	add	r7, sp, #0
 8007022:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8007026:	60bb      	str	r3, [r7, #8]
 8007028:	4b27      	ldr	r3, [pc, #156]	; (80070c8 <prvHeapInit+0xac>)
 800702a:	60fb      	str	r3, [r7, #12]
 800702c:	68fb      	ldr	r3, [r7, #12]
 800702e:	f003 0307 	and.w	r3, r3, #7
 8007032:	2b00      	cmp	r3, #0
 8007034:	d00c      	beq.n	8007050 <prvHeapInit+0x34>
 8007036:	68fb      	ldr	r3, [r7, #12]
 8007038:	3307      	adds	r3, #7
 800703a:	60fb      	str	r3, [r7, #12]
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	f023 0307 	bic.w	r3, r3, #7
 8007042:	60fb      	str	r3, [r7, #12]
 8007044:	68ba      	ldr	r2, [r7, #8]
 8007046:	68fb      	ldr	r3, [r7, #12]
 8007048:	1ad3      	subs	r3, r2, r3
 800704a:	4a1f      	ldr	r2, [pc, #124]	; (80070c8 <prvHeapInit+0xac>)
 800704c:	4413      	add	r3, r2
 800704e:	60bb      	str	r3, [r7, #8]
 8007050:	68fb      	ldr	r3, [r7, #12]
 8007052:	607b      	str	r3, [r7, #4]
 8007054:	4a1d      	ldr	r2, [pc, #116]	; (80070cc <prvHeapInit+0xb0>)
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	6013      	str	r3, [r2, #0]
 800705a:	4b1c      	ldr	r3, [pc, #112]	; (80070cc <prvHeapInit+0xb0>)
 800705c:	2200      	movs	r2, #0
 800705e:	605a      	str	r2, [r3, #4]
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	68ba      	ldr	r2, [r7, #8]
 8007064:	4413      	add	r3, r2
 8007066:	60fb      	str	r3, [r7, #12]
 8007068:	2208      	movs	r2, #8
 800706a:	68fb      	ldr	r3, [r7, #12]
 800706c:	1a9b      	subs	r3, r3, r2
 800706e:	60fb      	str	r3, [r7, #12]
 8007070:	68fb      	ldr	r3, [r7, #12]
 8007072:	f023 0307 	bic.w	r3, r3, #7
 8007076:	60fb      	str	r3, [r7, #12]
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	4a15      	ldr	r2, [pc, #84]	; (80070d0 <prvHeapInit+0xb4>)
 800707c:	6013      	str	r3, [r2, #0]
 800707e:	4b14      	ldr	r3, [pc, #80]	; (80070d0 <prvHeapInit+0xb4>)
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	2200      	movs	r2, #0
 8007084:	605a      	str	r2, [r3, #4]
 8007086:	4b12      	ldr	r3, [pc, #72]	; (80070d0 <prvHeapInit+0xb4>)
 8007088:	681b      	ldr	r3, [r3, #0]
 800708a:	2200      	movs	r2, #0
 800708c:	601a      	str	r2, [r3, #0]
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	603b      	str	r3, [r7, #0]
 8007092:	683b      	ldr	r3, [r7, #0]
 8007094:	68fa      	ldr	r2, [r7, #12]
 8007096:	1ad2      	subs	r2, r2, r3
 8007098:	683b      	ldr	r3, [r7, #0]
 800709a:	605a      	str	r2, [r3, #4]
 800709c:	4b0c      	ldr	r3, [pc, #48]	; (80070d0 <prvHeapInit+0xb4>)
 800709e:	681a      	ldr	r2, [r3, #0]
 80070a0:	683b      	ldr	r3, [r7, #0]
 80070a2:	601a      	str	r2, [r3, #0]
 80070a4:	683b      	ldr	r3, [r7, #0]
 80070a6:	685b      	ldr	r3, [r3, #4]
 80070a8:	4a0a      	ldr	r2, [pc, #40]	; (80070d4 <prvHeapInit+0xb8>)
 80070aa:	6013      	str	r3, [r2, #0]
 80070ac:	683b      	ldr	r3, [r7, #0]
 80070ae:	685b      	ldr	r3, [r3, #4]
 80070b0:	4a09      	ldr	r2, [pc, #36]	; (80070d8 <prvHeapInit+0xbc>)
 80070b2:	6013      	str	r3, [r2, #0]
 80070b4:	4b09      	ldr	r3, [pc, #36]	; (80070dc <prvHeapInit+0xc0>)
 80070b6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80070ba:	601a      	str	r2, [r3, #0]
 80070bc:	bf00      	nop
 80070be:	3714      	adds	r7, #20
 80070c0:	46bd      	mov	sp, r7
 80070c2:	bc80      	pop	{r7}
 80070c4:	4770      	bx	lr
 80070c6:	bf00      	nop
 80070c8:	200007ac 	.word	0x200007ac
 80070cc:	200013ac 	.word	0x200013ac
 80070d0:	200013b4 	.word	0x200013b4
 80070d4:	200013bc 	.word	0x200013bc
 80070d8:	200013b8 	.word	0x200013b8
 80070dc:	200013c0 	.word	0x200013c0

080070e0 <prvInsertBlockIntoFreeList>:
 80070e0:	b480      	push	{r7}
 80070e2:	b085      	sub	sp, #20
 80070e4:	af00      	add	r7, sp, #0
 80070e6:	6078      	str	r0, [r7, #4]
 80070e8:	4b27      	ldr	r3, [pc, #156]	; (8007188 <prvInsertBlockIntoFreeList+0xa8>)
 80070ea:	60fb      	str	r3, [r7, #12]
 80070ec:	e002      	b.n	80070f4 <prvInsertBlockIntoFreeList+0x14>
 80070ee:	68fb      	ldr	r3, [r7, #12]
 80070f0:	681b      	ldr	r3, [r3, #0]
 80070f2:	60fb      	str	r3, [r7, #12]
 80070f4:	68fb      	ldr	r3, [r7, #12]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	687a      	ldr	r2, [r7, #4]
 80070fa:	429a      	cmp	r2, r3
 80070fc:	d8f7      	bhi.n	80070ee <prvInsertBlockIntoFreeList+0xe>
 80070fe:	68fb      	ldr	r3, [r7, #12]
 8007100:	60bb      	str	r3, [r7, #8]
 8007102:	68fb      	ldr	r3, [r7, #12]
 8007104:	685b      	ldr	r3, [r3, #4]
 8007106:	68ba      	ldr	r2, [r7, #8]
 8007108:	4413      	add	r3, r2
 800710a:	687a      	ldr	r2, [r7, #4]
 800710c:	429a      	cmp	r2, r3
 800710e:	d108      	bne.n	8007122 <prvInsertBlockIntoFreeList+0x42>
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	685a      	ldr	r2, [r3, #4]
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	685b      	ldr	r3, [r3, #4]
 8007118:	441a      	add	r2, r3
 800711a:	68fb      	ldr	r3, [r7, #12]
 800711c:	605a      	str	r2, [r3, #4]
 800711e:	68fb      	ldr	r3, [r7, #12]
 8007120:	607b      	str	r3, [r7, #4]
 8007122:	687b      	ldr	r3, [r7, #4]
 8007124:	60bb      	str	r3, [r7, #8]
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	685b      	ldr	r3, [r3, #4]
 800712a:	68ba      	ldr	r2, [r7, #8]
 800712c:	441a      	add	r2, r3
 800712e:	68fb      	ldr	r3, [r7, #12]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	429a      	cmp	r2, r3
 8007134:	d118      	bne.n	8007168 <prvInsertBlockIntoFreeList+0x88>
 8007136:	68fb      	ldr	r3, [r7, #12]
 8007138:	681a      	ldr	r2, [r3, #0]
 800713a:	4b14      	ldr	r3, [pc, #80]	; (800718c <prvInsertBlockIntoFreeList+0xac>)
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	429a      	cmp	r2, r3
 8007140:	d00d      	beq.n	800715e <prvInsertBlockIntoFreeList+0x7e>
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	685a      	ldr	r2, [r3, #4]
 8007146:	68fb      	ldr	r3, [r7, #12]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	685b      	ldr	r3, [r3, #4]
 800714c:	441a      	add	r2, r3
 800714e:	687b      	ldr	r3, [r7, #4]
 8007150:	605a      	str	r2, [r3, #4]
 8007152:	68fb      	ldr	r3, [r7, #12]
 8007154:	681b      	ldr	r3, [r3, #0]
 8007156:	681a      	ldr	r2, [r3, #0]
 8007158:	687b      	ldr	r3, [r7, #4]
 800715a:	601a      	str	r2, [r3, #0]
 800715c:	e008      	b.n	8007170 <prvInsertBlockIntoFreeList+0x90>
 800715e:	4b0b      	ldr	r3, [pc, #44]	; (800718c <prvInsertBlockIntoFreeList+0xac>)
 8007160:	681a      	ldr	r2, [r3, #0]
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	601a      	str	r2, [r3, #0]
 8007166:	e003      	b.n	8007170 <prvInsertBlockIntoFreeList+0x90>
 8007168:	68fb      	ldr	r3, [r7, #12]
 800716a:	681a      	ldr	r2, [r3, #0]
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	601a      	str	r2, [r3, #0]
 8007170:	68fa      	ldr	r2, [r7, #12]
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	429a      	cmp	r2, r3
 8007176:	d002      	beq.n	800717e <prvInsertBlockIntoFreeList+0x9e>
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	687a      	ldr	r2, [r7, #4]
 800717c:	601a      	str	r2, [r3, #0]
 800717e:	bf00      	nop
 8007180:	3714      	adds	r7, #20
 8007182:	46bd      	mov	sp, r7
 8007184:	bc80      	pop	{r7}
 8007186:	4770      	bx	lr
 8007188:	200013ac 	.word	0x200013ac
 800718c:	200013b4 	.word	0x200013b4

08007190 <ceilf>:
 8007190:	b570      	push	{r4, r5, r6, lr}
 8007192:	f3c0 55c7 	ubfx	r5, r0, #23, #8
 8007196:	3d7f      	subs	r5, #127	; 0x7f
 8007198:	2d16      	cmp	r5, #22
 800719a:	4601      	mov	r1, r0
 800719c:	4604      	mov	r4, r0
 800719e:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 80071a2:	dc25      	bgt.n	80071f0 <ceilf+0x60>
 80071a4:	2d00      	cmp	r5, #0
 80071a6:	da0e      	bge.n	80071c6 <ceilf+0x36>
 80071a8:	4917      	ldr	r1, [pc, #92]	; (8007208 <ceilf+0x78>)
 80071aa:	f7f9 fcc3 	bl	8000b34 <__addsf3>
 80071ae:	2100      	movs	r1, #0
 80071b0:	f7f9 ff84 	bl	80010bc <__aeabi_fcmpgt>
 80071b4:	b128      	cbz	r0, 80071c2 <ceilf+0x32>
 80071b6:	2c00      	cmp	r4, #0
 80071b8:	db22      	blt.n	8007200 <ceilf+0x70>
 80071ba:	2e00      	cmp	r6, #0
 80071bc:	bf18      	it	ne
 80071be:	f04f 547e 	movne.w	r4, #1065353216	; 0x3f800000
 80071c2:	4621      	mov	r1, r4
 80071c4:	e01a      	b.n	80071fc <ceilf+0x6c>
 80071c6:	4e11      	ldr	r6, [pc, #68]	; (800720c <ceilf+0x7c>)
 80071c8:	412e      	asrs	r6, r5
 80071ca:	4230      	tst	r0, r6
 80071cc:	d016      	beq.n	80071fc <ceilf+0x6c>
 80071ce:	490e      	ldr	r1, [pc, #56]	; (8007208 <ceilf+0x78>)
 80071d0:	f7f9 fcb0 	bl	8000b34 <__addsf3>
 80071d4:	2100      	movs	r1, #0
 80071d6:	f7f9 ff71 	bl	80010bc <__aeabi_fcmpgt>
 80071da:	2800      	cmp	r0, #0
 80071dc:	d0f1      	beq.n	80071c2 <ceilf+0x32>
 80071de:	2c00      	cmp	r4, #0
 80071e0:	bfc2      	ittt	gt
 80071e2:	f44f 0300 	movgt.w	r3, #8388608	; 0x800000
 80071e6:	412b      	asrgt	r3, r5
 80071e8:	18e4      	addgt	r4, r4, r3
 80071ea:	ea24 0406 	bic.w	r4, r4, r6
 80071ee:	e7e8      	b.n	80071c2 <ceilf+0x32>
 80071f0:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 80071f4:	d302      	bcc.n	80071fc <ceilf+0x6c>
 80071f6:	f7f9 fc9d 	bl	8000b34 <__addsf3>
 80071fa:	4601      	mov	r1, r0
 80071fc:	4608      	mov	r0, r1
 80071fe:	bd70      	pop	{r4, r5, r6, pc}
 8007200:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8007204:	e7dd      	b.n	80071c2 <ceilf+0x32>
 8007206:	bf00      	nop
 8007208:	7149f2ca 	.word	0x7149f2ca
 800720c:	007fffff 	.word	0x007fffff

08007210 <__cvt>:
 8007210:	2b00      	cmp	r3, #0
 8007212:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007216:	461f      	mov	r7, r3
 8007218:	bfbb      	ittet	lt
 800721a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800721e:	461f      	movlt	r7, r3
 8007220:	2300      	movge	r3, #0
 8007222:	232d      	movlt	r3, #45	; 0x2d
 8007224:	b088      	sub	sp, #32
 8007226:	4614      	mov	r4, r2
 8007228:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800722a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800722c:	7013      	strb	r3, [r2, #0]
 800722e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007230:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8007234:	f023 0820 	bic.w	r8, r3, #32
 8007238:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800723c:	d005      	beq.n	800724a <__cvt+0x3a>
 800723e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8007242:	d100      	bne.n	8007246 <__cvt+0x36>
 8007244:	3501      	adds	r5, #1
 8007246:	2302      	movs	r3, #2
 8007248:	e000      	b.n	800724c <__cvt+0x3c>
 800724a:	2303      	movs	r3, #3
 800724c:	aa07      	add	r2, sp, #28
 800724e:	9204      	str	r2, [sp, #16]
 8007250:	aa06      	add	r2, sp, #24
 8007252:	e9cd a202 	strd	sl, r2, [sp, #8]
 8007256:	e9cd 3500 	strd	r3, r5, [sp]
 800725a:	4622      	mov	r2, r4
 800725c:	463b      	mov	r3, r7
 800725e:	f000 fe5f 	bl	8007f20 <_dtoa_r>
 8007262:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8007266:	4606      	mov	r6, r0
 8007268:	d102      	bne.n	8007270 <__cvt+0x60>
 800726a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800726c:	07db      	lsls	r3, r3, #31
 800726e:	d522      	bpl.n	80072b6 <__cvt+0xa6>
 8007270:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8007274:	eb06 0905 	add.w	r9, r6, r5
 8007278:	d110      	bne.n	800729c <__cvt+0x8c>
 800727a:	7833      	ldrb	r3, [r6, #0]
 800727c:	2b30      	cmp	r3, #48	; 0x30
 800727e:	d10a      	bne.n	8007296 <__cvt+0x86>
 8007280:	2200      	movs	r2, #0
 8007282:	2300      	movs	r3, #0
 8007284:	4620      	mov	r0, r4
 8007286:	4639      	mov	r1, r7
 8007288:	f7f9 fb8e 	bl	80009a8 <__aeabi_dcmpeq>
 800728c:	b918      	cbnz	r0, 8007296 <__cvt+0x86>
 800728e:	f1c5 0501 	rsb	r5, r5, #1
 8007292:	f8ca 5000 	str.w	r5, [sl]
 8007296:	f8da 3000 	ldr.w	r3, [sl]
 800729a:	4499      	add	r9, r3
 800729c:	2200      	movs	r2, #0
 800729e:	2300      	movs	r3, #0
 80072a0:	4620      	mov	r0, r4
 80072a2:	4639      	mov	r1, r7
 80072a4:	f7f9 fb80 	bl	80009a8 <__aeabi_dcmpeq>
 80072a8:	b108      	cbz	r0, 80072ae <__cvt+0x9e>
 80072aa:	f8cd 901c 	str.w	r9, [sp, #28]
 80072ae:	2230      	movs	r2, #48	; 0x30
 80072b0:	9b07      	ldr	r3, [sp, #28]
 80072b2:	454b      	cmp	r3, r9
 80072b4:	d307      	bcc.n	80072c6 <__cvt+0xb6>
 80072b6:	4630      	mov	r0, r6
 80072b8:	9b07      	ldr	r3, [sp, #28]
 80072ba:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80072bc:	1b9b      	subs	r3, r3, r6
 80072be:	6013      	str	r3, [r2, #0]
 80072c0:	b008      	add	sp, #32
 80072c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80072c6:	1c59      	adds	r1, r3, #1
 80072c8:	9107      	str	r1, [sp, #28]
 80072ca:	701a      	strb	r2, [r3, #0]
 80072cc:	e7f0      	b.n	80072b0 <__cvt+0xa0>

080072ce <__exponent>:
 80072ce:	4603      	mov	r3, r0
 80072d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80072d2:	2900      	cmp	r1, #0
 80072d4:	f803 2b02 	strb.w	r2, [r3], #2
 80072d8:	bfb6      	itet	lt
 80072da:	222d      	movlt	r2, #45	; 0x2d
 80072dc:	222b      	movge	r2, #43	; 0x2b
 80072de:	4249      	neglt	r1, r1
 80072e0:	2909      	cmp	r1, #9
 80072e2:	7042      	strb	r2, [r0, #1]
 80072e4:	dd2a      	ble.n	800733c <__exponent+0x6e>
 80072e6:	f10d 0207 	add.w	r2, sp, #7
 80072ea:	4617      	mov	r7, r2
 80072ec:	260a      	movs	r6, #10
 80072ee:	fb91 f5f6 	sdiv	r5, r1, r6
 80072f2:	4694      	mov	ip, r2
 80072f4:	fb06 1415 	mls	r4, r6, r5, r1
 80072f8:	3430      	adds	r4, #48	; 0x30
 80072fa:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80072fe:	460c      	mov	r4, r1
 8007300:	2c63      	cmp	r4, #99	; 0x63
 8007302:	4629      	mov	r1, r5
 8007304:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8007308:	dcf1      	bgt.n	80072ee <__exponent+0x20>
 800730a:	3130      	adds	r1, #48	; 0x30
 800730c:	f1ac 0402 	sub.w	r4, ip, #2
 8007310:	f802 1c01 	strb.w	r1, [r2, #-1]
 8007314:	4622      	mov	r2, r4
 8007316:	1c41      	adds	r1, r0, #1
 8007318:	42ba      	cmp	r2, r7
 800731a:	d30a      	bcc.n	8007332 <__exponent+0x64>
 800731c:	f10d 0209 	add.w	r2, sp, #9
 8007320:	eba2 020c 	sub.w	r2, r2, ip
 8007324:	42bc      	cmp	r4, r7
 8007326:	bf88      	it	hi
 8007328:	2200      	movhi	r2, #0
 800732a:	4413      	add	r3, r2
 800732c:	1a18      	subs	r0, r3, r0
 800732e:	b003      	add	sp, #12
 8007330:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007332:	f812 5b01 	ldrb.w	r5, [r2], #1
 8007336:	f801 5f01 	strb.w	r5, [r1, #1]!
 800733a:	e7ed      	b.n	8007318 <__exponent+0x4a>
 800733c:	2330      	movs	r3, #48	; 0x30
 800733e:	3130      	adds	r1, #48	; 0x30
 8007340:	7083      	strb	r3, [r0, #2]
 8007342:	70c1      	strb	r1, [r0, #3]
 8007344:	1d03      	adds	r3, r0, #4
 8007346:	e7f1      	b.n	800732c <__exponent+0x5e>

08007348 <_printf_float>:
 8007348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800734c:	b091      	sub	sp, #68	; 0x44
 800734e:	460c      	mov	r4, r1
 8007350:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8007354:	4616      	mov	r6, r2
 8007356:	461f      	mov	r7, r3
 8007358:	4605      	mov	r5, r0
 800735a:	f000 fcc5 	bl	8007ce8 <_localeconv_r>
 800735e:	6803      	ldr	r3, [r0, #0]
 8007360:	4618      	mov	r0, r3
 8007362:	9309      	str	r3, [sp, #36]	; 0x24
 8007364:	f7f8 fef4 	bl	8000150 <strlen>
 8007368:	2300      	movs	r3, #0
 800736a:	930e      	str	r3, [sp, #56]	; 0x38
 800736c:	f8d8 3000 	ldr.w	r3, [r8]
 8007370:	900a      	str	r0, [sp, #40]	; 0x28
 8007372:	3307      	adds	r3, #7
 8007374:	f023 0307 	bic.w	r3, r3, #7
 8007378:	f103 0208 	add.w	r2, r3, #8
 800737c:	f894 9018 	ldrb.w	r9, [r4, #24]
 8007380:	f8d4 b000 	ldr.w	fp, [r4]
 8007384:	f8c8 2000 	str.w	r2, [r8]
 8007388:	e9d3 a800 	ldrd	sl, r8, [r3]
 800738c:	4652      	mov	r2, sl
 800738e:	4643      	mov	r3, r8
 8007390:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8007394:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8007398:	930b      	str	r3, [sp, #44]	; 0x2c
 800739a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800739e:	4650      	mov	r0, sl
 80073a0:	4b9c      	ldr	r3, [pc, #624]	; (8007614 <_printf_float+0x2cc>)
 80073a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80073a4:	f7f9 fb32 	bl	8000a0c <__aeabi_dcmpun>
 80073a8:	bb70      	cbnz	r0, 8007408 <_printf_float+0xc0>
 80073aa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80073ae:	4650      	mov	r0, sl
 80073b0:	4b98      	ldr	r3, [pc, #608]	; (8007614 <_printf_float+0x2cc>)
 80073b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80073b4:	f7f9 fb0c 	bl	80009d0 <__aeabi_dcmple>
 80073b8:	bb30      	cbnz	r0, 8007408 <_printf_float+0xc0>
 80073ba:	2200      	movs	r2, #0
 80073bc:	2300      	movs	r3, #0
 80073be:	4650      	mov	r0, sl
 80073c0:	4641      	mov	r1, r8
 80073c2:	f7f9 fafb 	bl	80009bc <__aeabi_dcmplt>
 80073c6:	b110      	cbz	r0, 80073ce <_printf_float+0x86>
 80073c8:	232d      	movs	r3, #45	; 0x2d
 80073ca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80073ce:	4a92      	ldr	r2, [pc, #584]	; (8007618 <_printf_float+0x2d0>)
 80073d0:	4b92      	ldr	r3, [pc, #584]	; (800761c <_printf_float+0x2d4>)
 80073d2:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80073d6:	bf94      	ite	ls
 80073d8:	4690      	movls	r8, r2
 80073da:	4698      	movhi	r8, r3
 80073dc:	2303      	movs	r3, #3
 80073de:	f04f 0a00 	mov.w	sl, #0
 80073e2:	6123      	str	r3, [r4, #16]
 80073e4:	f02b 0304 	bic.w	r3, fp, #4
 80073e8:	6023      	str	r3, [r4, #0]
 80073ea:	4633      	mov	r3, r6
 80073ec:	4621      	mov	r1, r4
 80073ee:	4628      	mov	r0, r5
 80073f0:	9700      	str	r7, [sp, #0]
 80073f2:	aa0f      	add	r2, sp, #60	; 0x3c
 80073f4:	f000 f9d6 	bl	80077a4 <_printf_common>
 80073f8:	3001      	adds	r0, #1
 80073fa:	f040 8090 	bne.w	800751e <_printf_float+0x1d6>
 80073fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007402:	b011      	add	sp, #68	; 0x44
 8007404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007408:	4652      	mov	r2, sl
 800740a:	4643      	mov	r3, r8
 800740c:	4650      	mov	r0, sl
 800740e:	4641      	mov	r1, r8
 8007410:	f7f9 fafc 	bl	8000a0c <__aeabi_dcmpun>
 8007414:	b148      	cbz	r0, 800742a <_printf_float+0xe2>
 8007416:	f1b8 0f00 	cmp.w	r8, #0
 800741a:	bfb8      	it	lt
 800741c:	232d      	movlt	r3, #45	; 0x2d
 800741e:	4a80      	ldr	r2, [pc, #512]	; (8007620 <_printf_float+0x2d8>)
 8007420:	bfb8      	it	lt
 8007422:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8007426:	4b7f      	ldr	r3, [pc, #508]	; (8007624 <_printf_float+0x2dc>)
 8007428:	e7d3      	b.n	80073d2 <_printf_float+0x8a>
 800742a:	6863      	ldr	r3, [r4, #4]
 800742c:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8007430:	1c5a      	adds	r2, r3, #1
 8007432:	d142      	bne.n	80074ba <_printf_float+0x172>
 8007434:	2306      	movs	r3, #6
 8007436:	6063      	str	r3, [r4, #4]
 8007438:	2200      	movs	r2, #0
 800743a:	9206      	str	r2, [sp, #24]
 800743c:	aa0e      	add	r2, sp, #56	; 0x38
 800743e:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8007442:	aa0d      	add	r2, sp, #52	; 0x34
 8007444:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8007448:	9203      	str	r2, [sp, #12]
 800744a:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800744e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8007452:	6023      	str	r3, [r4, #0]
 8007454:	6863      	ldr	r3, [r4, #4]
 8007456:	4652      	mov	r2, sl
 8007458:	9300      	str	r3, [sp, #0]
 800745a:	4628      	mov	r0, r5
 800745c:	4643      	mov	r3, r8
 800745e:	910b      	str	r1, [sp, #44]	; 0x2c
 8007460:	f7ff fed6 	bl	8007210 <__cvt>
 8007464:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007466:	4680      	mov	r8, r0
 8007468:	2947      	cmp	r1, #71	; 0x47
 800746a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800746c:	d108      	bne.n	8007480 <_printf_float+0x138>
 800746e:	1cc8      	adds	r0, r1, #3
 8007470:	db02      	blt.n	8007478 <_printf_float+0x130>
 8007472:	6863      	ldr	r3, [r4, #4]
 8007474:	4299      	cmp	r1, r3
 8007476:	dd40      	ble.n	80074fa <_printf_float+0x1b2>
 8007478:	f1a9 0902 	sub.w	r9, r9, #2
 800747c:	fa5f f989 	uxtb.w	r9, r9
 8007480:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8007484:	d81f      	bhi.n	80074c6 <_printf_float+0x17e>
 8007486:	464a      	mov	r2, r9
 8007488:	3901      	subs	r1, #1
 800748a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800748e:	910d      	str	r1, [sp, #52]	; 0x34
 8007490:	f7ff ff1d 	bl	80072ce <__exponent>
 8007494:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007496:	4682      	mov	sl, r0
 8007498:	1813      	adds	r3, r2, r0
 800749a:	2a01      	cmp	r2, #1
 800749c:	6123      	str	r3, [r4, #16]
 800749e:	dc02      	bgt.n	80074a6 <_printf_float+0x15e>
 80074a0:	6822      	ldr	r2, [r4, #0]
 80074a2:	07d2      	lsls	r2, r2, #31
 80074a4:	d501      	bpl.n	80074aa <_printf_float+0x162>
 80074a6:	3301      	adds	r3, #1
 80074a8:	6123      	str	r3, [r4, #16]
 80074aa:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80074ae:	2b00      	cmp	r3, #0
 80074b0:	d09b      	beq.n	80073ea <_printf_float+0xa2>
 80074b2:	232d      	movs	r3, #45	; 0x2d
 80074b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80074b8:	e797      	b.n	80073ea <_printf_float+0xa2>
 80074ba:	2947      	cmp	r1, #71	; 0x47
 80074bc:	d1bc      	bne.n	8007438 <_printf_float+0xf0>
 80074be:	2b00      	cmp	r3, #0
 80074c0:	d1ba      	bne.n	8007438 <_printf_float+0xf0>
 80074c2:	2301      	movs	r3, #1
 80074c4:	e7b7      	b.n	8007436 <_printf_float+0xee>
 80074c6:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80074ca:	d118      	bne.n	80074fe <_printf_float+0x1b6>
 80074cc:	2900      	cmp	r1, #0
 80074ce:	6863      	ldr	r3, [r4, #4]
 80074d0:	dd0b      	ble.n	80074ea <_printf_float+0x1a2>
 80074d2:	6121      	str	r1, [r4, #16]
 80074d4:	b913      	cbnz	r3, 80074dc <_printf_float+0x194>
 80074d6:	6822      	ldr	r2, [r4, #0]
 80074d8:	07d0      	lsls	r0, r2, #31
 80074da:	d502      	bpl.n	80074e2 <_printf_float+0x19a>
 80074dc:	3301      	adds	r3, #1
 80074de:	440b      	add	r3, r1
 80074e0:	6123      	str	r3, [r4, #16]
 80074e2:	f04f 0a00 	mov.w	sl, #0
 80074e6:	65a1      	str	r1, [r4, #88]	; 0x58
 80074e8:	e7df      	b.n	80074aa <_printf_float+0x162>
 80074ea:	b913      	cbnz	r3, 80074f2 <_printf_float+0x1aa>
 80074ec:	6822      	ldr	r2, [r4, #0]
 80074ee:	07d2      	lsls	r2, r2, #31
 80074f0:	d501      	bpl.n	80074f6 <_printf_float+0x1ae>
 80074f2:	3302      	adds	r3, #2
 80074f4:	e7f4      	b.n	80074e0 <_printf_float+0x198>
 80074f6:	2301      	movs	r3, #1
 80074f8:	e7f2      	b.n	80074e0 <_printf_float+0x198>
 80074fa:	f04f 0967 	mov.w	r9, #103	; 0x67
 80074fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007500:	4299      	cmp	r1, r3
 8007502:	db05      	blt.n	8007510 <_printf_float+0x1c8>
 8007504:	6823      	ldr	r3, [r4, #0]
 8007506:	6121      	str	r1, [r4, #16]
 8007508:	07d8      	lsls	r0, r3, #31
 800750a:	d5ea      	bpl.n	80074e2 <_printf_float+0x19a>
 800750c:	1c4b      	adds	r3, r1, #1
 800750e:	e7e7      	b.n	80074e0 <_printf_float+0x198>
 8007510:	2900      	cmp	r1, #0
 8007512:	bfcc      	ite	gt
 8007514:	2201      	movgt	r2, #1
 8007516:	f1c1 0202 	rsble	r2, r1, #2
 800751a:	4413      	add	r3, r2
 800751c:	e7e0      	b.n	80074e0 <_printf_float+0x198>
 800751e:	6823      	ldr	r3, [r4, #0]
 8007520:	055a      	lsls	r2, r3, #21
 8007522:	d407      	bmi.n	8007534 <_printf_float+0x1ec>
 8007524:	6923      	ldr	r3, [r4, #16]
 8007526:	4642      	mov	r2, r8
 8007528:	4631      	mov	r1, r6
 800752a:	4628      	mov	r0, r5
 800752c:	47b8      	blx	r7
 800752e:	3001      	adds	r0, #1
 8007530:	d12b      	bne.n	800758a <_printf_float+0x242>
 8007532:	e764      	b.n	80073fe <_printf_float+0xb6>
 8007534:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8007538:	f240 80dd 	bls.w	80076f6 <_printf_float+0x3ae>
 800753c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007540:	2200      	movs	r2, #0
 8007542:	2300      	movs	r3, #0
 8007544:	f7f9 fa30 	bl	80009a8 <__aeabi_dcmpeq>
 8007548:	2800      	cmp	r0, #0
 800754a:	d033      	beq.n	80075b4 <_printf_float+0x26c>
 800754c:	2301      	movs	r3, #1
 800754e:	4631      	mov	r1, r6
 8007550:	4628      	mov	r0, r5
 8007552:	4a35      	ldr	r2, [pc, #212]	; (8007628 <_printf_float+0x2e0>)
 8007554:	47b8      	blx	r7
 8007556:	3001      	adds	r0, #1
 8007558:	f43f af51 	beq.w	80073fe <_printf_float+0xb6>
 800755c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8007560:	429a      	cmp	r2, r3
 8007562:	db02      	blt.n	800756a <_printf_float+0x222>
 8007564:	6823      	ldr	r3, [r4, #0]
 8007566:	07d8      	lsls	r0, r3, #31
 8007568:	d50f      	bpl.n	800758a <_printf_float+0x242>
 800756a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800756e:	4631      	mov	r1, r6
 8007570:	4628      	mov	r0, r5
 8007572:	47b8      	blx	r7
 8007574:	3001      	adds	r0, #1
 8007576:	f43f af42 	beq.w	80073fe <_printf_float+0xb6>
 800757a:	f04f 0800 	mov.w	r8, #0
 800757e:	f104 091a 	add.w	r9, r4, #26
 8007582:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007584:	3b01      	subs	r3, #1
 8007586:	4543      	cmp	r3, r8
 8007588:	dc09      	bgt.n	800759e <_printf_float+0x256>
 800758a:	6823      	ldr	r3, [r4, #0]
 800758c:	079b      	lsls	r3, r3, #30
 800758e:	f100 8104 	bmi.w	800779a <_printf_float+0x452>
 8007592:	68e0      	ldr	r0, [r4, #12]
 8007594:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007596:	4298      	cmp	r0, r3
 8007598:	bfb8      	it	lt
 800759a:	4618      	movlt	r0, r3
 800759c:	e731      	b.n	8007402 <_printf_float+0xba>
 800759e:	2301      	movs	r3, #1
 80075a0:	464a      	mov	r2, r9
 80075a2:	4631      	mov	r1, r6
 80075a4:	4628      	mov	r0, r5
 80075a6:	47b8      	blx	r7
 80075a8:	3001      	adds	r0, #1
 80075aa:	f43f af28 	beq.w	80073fe <_printf_float+0xb6>
 80075ae:	f108 0801 	add.w	r8, r8, #1
 80075b2:	e7e6      	b.n	8007582 <_printf_float+0x23a>
 80075b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80075b6:	2b00      	cmp	r3, #0
 80075b8:	dc38      	bgt.n	800762c <_printf_float+0x2e4>
 80075ba:	2301      	movs	r3, #1
 80075bc:	4631      	mov	r1, r6
 80075be:	4628      	mov	r0, r5
 80075c0:	4a19      	ldr	r2, [pc, #100]	; (8007628 <_printf_float+0x2e0>)
 80075c2:	47b8      	blx	r7
 80075c4:	3001      	adds	r0, #1
 80075c6:	f43f af1a 	beq.w	80073fe <_printf_float+0xb6>
 80075ca:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 80075ce:	4313      	orrs	r3, r2
 80075d0:	d102      	bne.n	80075d8 <_printf_float+0x290>
 80075d2:	6823      	ldr	r3, [r4, #0]
 80075d4:	07d9      	lsls	r1, r3, #31
 80075d6:	d5d8      	bpl.n	800758a <_printf_float+0x242>
 80075d8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80075dc:	4631      	mov	r1, r6
 80075de:	4628      	mov	r0, r5
 80075e0:	47b8      	blx	r7
 80075e2:	3001      	adds	r0, #1
 80075e4:	f43f af0b 	beq.w	80073fe <_printf_float+0xb6>
 80075e8:	f04f 0900 	mov.w	r9, #0
 80075ec:	f104 0a1a 	add.w	sl, r4, #26
 80075f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80075f2:	425b      	negs	r3, r3
 80075f4:	454b      	cmp	r3, r9
 80075f6:	dc01      	bgt.n	80075fc <_printf_float+0x2b4>
 80075f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80075fa:	e794      	b.n	8007526 <_printf_float+0x1de>
 80075fc:	2301      	movs	r3, #1
 80075fe:	4652      	mov	r2, sl
 8007600:	4631      	mov	r1, r6
 8007602:	4628      	mov	r0, r5
 8007604:	47b8      	blx	r7
 8007606:	3001      	adds	r0, #1
 8007608:	f43f aef9 	beq.w	80073fe <_printf_float+0xb6>
 800760c:	f109 0901 	add.w	r9, r9, #1
 8007610:	e7ee      	b.n	80075f0 <_printf_float+0x2a8>
 8007612:	bf00      	nop
 8007614:	7fefffff 	.word	0x7fefffff
 8007618:	08009c1a 	.word	0x08009c1a
 800761c:	08009c1e 	.word	0x08009c1e
 8007620:	08009c22 	.word	0x08009c22
 8007624:	08009c26 	.word	0x08009c26
 8007628:	08009c2a 	.word	0x08009c2a
 800762c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800762e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8007630:	429a      	cmp	r2, r3
 8007632:	bfa8      	it	ge
 8007634:	461a      	movge	r2, r3
 8007636:	2a00      	cmp	r2, #0
 8007638:	4691      	mov	r9, r2
 800763a:	dc37      	bgt.n	80076ac <_printf_float+0x364>
 800763c:	f04f 0b00 	mov.w	fp, #0
 8007640:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007644:	f104 021a 	add.w	r2, r4, #26
 8007648:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800764c:	ebaa 0309 	sub.w	r3, sl, r9
 8007650:	455b      	cmp	r3, fp
 8007652:	dc33      	bgt.n	80076bc <_printf_float+0x374>
 8007654:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8007658:	429a      	cmp	r2, r3
 800765a:	db3b      	blt.n	80076d4 <_printf_float+0x38c>
 800765c:	6823      	ldr	r3, [r4, #0]
 800765e:	07da      	lsls	r2, r3, #31
 8007660:	d438      	bmi.n	80076d4 <_printf_float+0x38c>
 8007662:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8007666:	eba2 0903 	sub.w	r9, r2, r3
 800766a:	eba2 020a 	sub.w	r2, r2, sl
 800766e:	4591      	cmp	r9, r2
 8007670:	bfa8      	it	ge
 8007672:	4691      	movge	r9, r2
 8007674:	f1b9 0f00 	cmp.w	r9, #0
 8007678:	dc34      	bgt.n	80076e4 <_printf_float+0x39c>
 800767a:	f04f 0800 	mov.w	r8, #0
 800767e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007682:	f104 0a1a 	add.w	sl, r4, #26
 8007686:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800768a:	1a9b      	subs	r3, r3, r2
 800768c:	eba3 0309 	sub.w	r3, r3, r9
 8007690:	4543      	cmp	r3, r8
 8007692:	f77f af7a 	ble.w	800758a <_printf_float+0x242>
 8007696:	2301      	movs	r3, #1
 8007698:	4652      	mov	r2, sl
 800769a:	4631      	mov	r1, r6
 800769c:	4628      	mov	r0, r5
 800769e:	47b8      	blx	r7
 80076a0:	3001      	adds	r0, #1
 80076a2:	f43f aeac 	beq.w	80073fe <_printf_float+0xb6>
 80076a6:	f108 0801 	add.w	r8, r8, #1
 80076aa:	e7ec      	b.n	8007686 <_printf_float+0x33e>
 80076ac:	4613      	mov	r3, r2
 80076ae:	4631      	mov	r1, r6
 80076b0:	4642      	mov	r2, r8
 80076b2:	4628      	mov	r0, r5
 80076b4:	47b8      	blx	r7
 80076b6:	3001      	adds	r0, #1
 80076b8:	d1c0      	bne.n	800763c <_printf_float+0x2f4>
 80076ba:	e6a0      	b.n	80073fe <_printf_float+0xb6>
 80076bc:	2301      	movs	r3, #1
 80076be:	4631      	mov	r1, r6
 80076c0:	4628      	mov	r0, r5
 80076c2:	920b      	str	r2, [sp, #44]	; 0x2c
 80076c4:	47b8      	blx	r7
 80076c6:	3001      	adds	r0, #1
 80076c8:	f43f ae99 	beq.w	80073fe <_printf_float+0xb6>
 80076cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80076ce:	f10b 0b01 	add.w	fp, fp, #1
 80076d2:	e7b9      	b.n	8007648 <_printf_float+0x300>
 80076d4:	4631      	mov	r1, r6
 80076d6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80076da:	4628      	mov	r0, r5
 80076dc:	47b8      	blx	r7
 80076de:	3001      	adds	r0, #1
 80076e0:	d1bf      	bne.n	8007662 <_printf_float+0x31a>
 80076e2:	e68c      	b.n	80073fe <_printf_float+0xb6>
 80076e4:	464b      	mov	r3, r9
 80076e6:	4631      	mov	r1, r6
 80076e8:	4628      	mov	r0, r5
 80076ea:	eb08 020a 	add.w	r2, r8, sl
 80076ee:	47b8      	blx	r7
 80076f0:	3001      	adds	r0, #1
 80076f2:	d1c2      	bne.n	800767a <_printf_float+0x332>
 80076f4:	e683      	b.n	80073fe <_printf_float+0xb6>
 80076f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80076f8:	2a01      	cmp	r2, #1
 80076fa:	dc01      	bgt.n	8007700 <_printf_float+0x3b8>
 80076fc:	07db      	lsls	r3, r3, #31
 80076fe:	d539      	bpl.n	8007774 <_printf_float+0x42c>
 8007700:	2301      	movs	r3, #1
 8007702:	4642      	mov	r2, r8
 8007704:	4631      	mov	r1, r6
 8007706:	4628      	mov	r0, r5
 8007708:	47b8      	blx	r7
 800770a:	3001      	adds	r0, #1
 800770c:	f43f ae77 	beq.w	80073fe <_printf_float+0xb6>
 8007710:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007714:	4631      	mov	r1, r6
 8007716:	4628      	mov	r0, r5
 8007718:	47b8      	blx	r7
 800771a:	3001      	adds	r0, #1
 800771c:	f43f ae6f 	beq.w	80073fe <_printf_float+0xb6>
 8007720:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007724:	2200      	movs	r2, #0
 8007726:	2300      	movs	r3, #0
 8007728:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 800772c:	f7f9 f93c 	bl	80009a8 <__aeabi_dcmpeq>
 8007730:	b9d8      	cbnz	r0, 800776a <_printf_float+0x422>
 8007732:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
 8007736:	f108 0201 	add.w	r2, r8, #1
 800773a:	4631      	mov	r1, r6
 800773c:	4628      	mov	r0, r5
 800773e:	47b8      	blx	r7
 8007740:	3001      	adds	r0, #1
 8007742:	d10e      	bne.n	8007762 <_printf_float+0x41a>
 8007744:	e65b      	b.n	80073fe <_printf_float+0xb6>
 8007746:	2301      	movs	r3, #1
 8007748:	464a      	mov	r2, r9
 800774a:	4631      	mov	r1, r6
 800774c:	4628      	mov	r0, r5
 800774e:	47b8      	blx	r7
 8007750:	3001      	adds	r0, #1
 8007752:	f43f ae54 	beq.w	80073fe <_printf_float+0xb6>
 8007756:	f108 0801 	add.w	r8, r8, #1
 800775a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800775c:	3b01      	subs	r3, #1
 800775e:	4543      	cmp	r3, r8
 8007760:	dcf1      	bgt.n	8007746 <_printf_float+0x3fe>
 8007762:	4653      	mov	r3, sl
 8007764:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8007768:	e6de      	b.n	8007528 <_printf_float+0x1e0>
 800776a:	f04f 0800 	mov.w	r8, #0
 800776e:	f104 091a 	add.w	r9, r4, #26
 8007772:	e7f2      	b.n	800775a <_printf_float+0x412>
 8007774:	2301      	movs	r3, #1
 8007776:	4642      	mov	r2, r8
 8007778:	e7df      	b.n	800773a <_printf_float+0x3f2>
 800777a:	2301      	movs	r3, #1
 800777c:	464a      	mov	r2, r9
 800777e:	4631      	mov	r1, r6
 8007780:	4628      	mov	r0, r5
 8007782:	47b8      	blx	r7
 8007784:	3001      	adds	r0, #1
 8007786:	f43f ae3a 	beq.w	80073fe <_printf_float+0xb6>
 800778a:	f108 0801 	add.w	r8, r8, #1
 800778e:	68e3      	ldr	r3, [r4, #12]
 8007790:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007792:	1a5b      	subs	r3, r3, r1
 8007794:	4543      	cmp	r3, r8
 8007796:	dcf0      	bgt.n	800777a <_printf_float+0x432>
 8007798:	e6fb      	b.n	8007592 <_printf_float+0x24a>
 800779a:	f04f 0800 	mov.w	r8, #0
 800779e:	f104 0919 	add.w	r9, r4, #25
 80077a2:	e7f4      	b.n	800778e <_printf_float+0x446>

080077a4 <_printf_common>:
 80077a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80077a8:	4616      	mov	r6, r2
 80077aa:	4699      	mov	r9, r3
 80077ac:	688a      	ldr	r2, [r1, #8]
 80077ae:	690b      	ldr	r3, [r1, #16]
 80077b0:	4607      	mov	r7, r0
 80077b2:	4293      	cmp	r3, r2
 80077b4:	bfb8      	it	lt
 80077b6:	4613      	movlt	r3, r2
 80077b8:	6033      	str	r3, [r6, #0]
 80077ba:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80077be:	460c      	mov	r4, r1
 80077c0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80077c4:	b10a      	cbz	r2, 80077ca <_printf_common+0x26>
 80077c6:	3301      	adds	r3, #1
 80077c8:	6033      	str	r3, [r6, #0]
 80077ca:	6823      	ldr	r3, [r4, #0]
 80077cc:	0699      	lsls	r1, r3, #26
 80077ce:	bf42      	ittt	mi
 80077d0:	6833      	ldrmi	r3, [r6, #0]
 80077d2:	3302      	addmi	r3, #2
 80077d4:	6033      	strmi	r3, [r6, #0]
 80077d6:	6825      	ldr	r5, [r4, #0]
 80077d8:	f015 0506 	ands.w	r5, r5, #6
 80077dc:	d106      	bne.n	80077ec <_printf_common+0x48>
 80077de:	f104 0a19 	add.w	sl, r4, #25
 80077e2:	68e3      	ldr	r3, [r4, #12]
 80077e4:	6832      	ldr	r2, [r6, #0]
 80077e6:	1a9b      	subs	r3, r3, r2
 80077e8:	42ab      	cmp	r3, r5
 80077ea:	dc2b      	bgt.n	8007844 <_printf_common+0xa0>
 80077ec:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80077f0:	1e13      	subs	r3, r2, #0
 80077f2:	6822      	ldr	r2, [r4, #0]
 80077f4:	bf18      	it	ne
 80077f6:	2301      	movne	r3, #1
 80077f8:	0692      	lsls	r2, r2, #26
 80077fa:	d430      	bmi.n	800785e <_printf_common+0xba>
 80077fc:	4649      	mov	r1, r9
 80077fe:	4638      	mov	r0, r7
 8007800:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007804:	47c0      	blx	r8
 8007806:	3001      	adds	r0, #1
 8007808:	d023      	beq.n	8007852 <_printf_common+0xae>
 800780a:	6823      	ldr	r3, [r4, #0]
 800780c:	6922      	ldr	r2, [r4, #16]
 800780e:	f003 0306 	and.w	r3, r3, #6
 8007812:	2b04      	cmp	r3, #4
 8007814:	bf14      	ite	ne
 8007816:	2500      	movne	r5, #0
 8007818:	6833      	ldreq	r3, [r6, #0]
 800781a:	f04f 0600 	mov.w	r6, #0
 800781e:	bf08      	it	eq
 8007820:	68e5      	ldreq	r5, [r4, #12]
 8007822:	f104 041a 	add.w	r4, r4, #26
 8007826:	bf08      	it	eq
 8007828:	1aed      	subeq	r5, r5, r3
 800782a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800782e:	bf08      	it	eq
 8007830:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007834:	4293      	cmp	r3, r2
 8007836:	bfc4      	itt	gt
 8007838:	1a9b      	subgt	r3, r3, r2
 800783a:	18ed      	addgt	r5, r5, r3
 800783c:	42b5      	cmp	r5, r6
 800783e:	d11a      	bne.n	8007876 <_printf_common+0xd2>
 8007840:	2000      	movs	r0, #0
 8007842:	e008      	b.n	8007856 <_printf_common+0xb2>
 8007844:	2301      	movs	r3, #1
 8007846:	4652      	mov	r2, sl
 8007848:	4649      	mov	r1, r9
 800784a:	4638      	mov	r0, r7
 800784c:	47c0      	blx	r8
 800784e:	3001      	adds	r0, #1
 8007850:	d103      	bne.n	800785a <_printf_common+0xb6>
 8007852:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007856:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800785a:	3501      	adds	r5, #1
 800785c:	e7c1      	b.n	80077e2 <_printf_common+0x3e>
 800785e:	2030      	movs	r0, #48	; 0x30
 8007860:	18e1      	adds	r1, r4, r3
 8007862:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007866:	1c5a      	adds	r2, r3, #1
 8007868:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800786c:	4422      	add	r2, r4
 800786e:	3302      	adds	r3, #2
 8007870:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007874:	e7c2      	b.n	80077fc <_printf_common+0x58>
 8007876:	2301      	movs	r3, #1
 8007878:	4622      	mov	r2, r4
 800787a:	4649      	mov	r1, r9
 800787c:	4638      	mov	r0, r7
 800787e:	47c0      	blx	r8
 8007880:	3001      	adds	r0, #1
 8007882:	d0e6      	beq.n	8007852 <_printf_common+0xae>
 8007884:	3601      	adds	r6, #1
 8007886:	e7d9      	b.n	800783c <_printf_common+0x98>

08007888 <_printf_i>:
 8007888:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800788c:	7e0f      	ldrb	r7, [r1, #24]
 800788e:	4691      	mov	r9, r2
 8007890:	2f78      	cmp	r7, #120	; 0x78
 8007892:	4680      	mov	r8, r0
 8007894:	460c      	mov	r4, r1
 8007896:	469a      	mov	sl, r3
 8007898:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800789a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800789e:	d807      	bhi.n	80078b0 <_printf_i+0x28>
 80078a0:	2f62      	cmp	r7, #98	; 0x62
 80078a2:	d80a      	bhi.n	80078ba <_printf_i+0x32>
 80078a4:	2f00      	cmp	r7, #0
 80078a6:	f000 80d5 	beq.w	8007a54 <_printf_i+0x1cc>
 80078aa:	2f58      	cmp	r7, #88	; 0x58
 80078ac:	f000 80c1 	beq.w	8007a32 <_printf_i+0x1aa>
 80078b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80078b4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80078b8:	e03a      	b.n	8007930 <_printf_i+0xa8>
 80078ba:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80078be:	2b15      	cmp	r3, #21
 80078c0:	d8f6      	bhi.n	80078b0 <_printf_i+0x28>
 80078c2:	a101      	add	r1, pc, #4	; (adr r1, 80078c8 <_printf_i+0x40>)
 80078c4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80078c8:	08007921 	.word	0x08007921
 80078cc:	08007935 	.word	0x08007935
 80078d0:	080078b1 	.word	0x080078b1
 80078d4:	080078b1 	.word	0x080078b1
 80078d8:	080078b1 	.word	0x080078b1
 80078dc:	080078b1 	.word	0x080078b1
 80078e0:	08007935 	.word	0x08007935
 80078e4:	080078b1 	.word	0x080078b1
 80078e8:	080078b1 	.word	0x080078b1
 80078ec:	080078b1 	.word	0x080078b1
 80078f0:	080078b1 	.word	0x080078b1
 80078f4:	08007a3b 	.word	0x08007a3b
 80078f8:	08007961 	.word	0x08007961
 80078fc:	080079f5 	.word	0x080079f5
 8007900:	080078b1 	.word	0x080078b1
 8007904:	080078b1 	.word	0x080078b1
 8007908:	08007a5d 	.word	0x08007a5d
 800790c:	080078b1 	.word	0x080078b1
 8007910:	08007961 	.word	0x08007961
 8007914:	080078b1 	.word	0x080078b1
 8007918:	080078b1 	.word	0x080078b1
 800791c:	080079fd 	.word	0x080079fd
 8007920:	682b      	ldr	r3, [r5, #0]
 8007922:	1d1a      	adds	r2, r3, #4
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	602a      	str	r2, [r5, #0]
 8007928:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800792c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007930:	2301      	movs	r3, #1
 8007932:	e0a0      	b.n	8007a76 <_printf_i+0x1ee>
 8007934:	6820      	ldr	r0, [r4, #0]
 8007936:	682b      	ldr	r3, [r5, #0]
 8007938:	0607      	lsls	r7, r0, #24
 800793a:	f103 0104 	add.w	r1, r3, #4
 800793e:	6029      	str	r1, [r5, #0]
 8007940:	d501      	bpl.n	8007946 <_printf_i+0xbe>
 8007942:	681e      	ldr	r6, [r3, #0]
 8007944:	e003      	b.n	800794e <_printf_i+0xc6>
 8007946:	0646      	lsls	r6, r0, #25
 8007948:	d5fb      	bpl.n	8007942 <_printf_i+0xba>
 800794a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800794e:	2e00      	cmp	r6, #0
 8007950:	da03      	bge.n	800795a <_printf_i+0xd2>
 8007952:	232d      	movs	r3, #45	; 0x2d
 8007954:	4276      	negs	r6, r6
 8007956:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800795a:	230a      	movs	r3, #10
 800795c:	4859      	ldr	r0, [pc, #356]	; (8007ac4 <_printf_i+0x23c>)
 800795e:	e012      	b.n	8007986 <_printf_i+0xfe>
 8007960:	682b      	ldr	r3, [r5, #0]
 8007962:	6820      	ldr	r0, [r4, #0]
 8007964:	1d19      	adds	r1, r3, #4
 8007966:	6029      	str	r1, [r5, #0]
 8007968:	0605      	lsls	r5, r0, #24
 800796a:	d501      	bpl.n	8007970 <_printf_i+0xe8>
 800796c:	681e      	ldr	r6, [r3, #0]
 800796e:	e002      	b.n	8007976 <_printf_i+0xee>
 8007970:	0641      	lsls	r1, r0, #25
 8007972:	d5fb      	bpl.n	800796c <_printf_i+0xe4>
 8007974:	881e      	ldrh	r6, [r3, #0]
 8007976:	2f6f      	cmp	r7, #111	; 0x6f
 8007978:	bf0c      	ite	eq
 800797a:	2308      	moveq	r3, #8
 800797c:	230a      	movne	r3, #10
 800797e:	4851      	ldr	r0, [pc, #324]	; (8007ac4 <_printf_i+0x23c>)
 8007980:	2100      	movs	r1, #0
 8007982:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007986:	6865      	ldr	r5, [r4, #4]
 8007988:	2d00      	cmp	r5, #0
 800798a:	bfa8      	it	ge
 800798c:	6821      	ldrge	r1, [r4, #0]
 800798e:	60a5      	str	r5, [r4, #8]
 8007990:	bfa4      	itt	ge
 8007992:	f021 0104 	bicge.w	r1, r1, #4
 8007996:	6021      	strge	r1, [r4, #0]
 8007998:	b90e      	cbnz	r6, 800799e <_printf_i+0x116>
 800799a:	2d00      	cmp	r5, #0
 800799c:	d04b      	beq.n	8007a36 <_printf_i+0x1ae>
 800799e:	4615      	mov	r5, r2
 80079a0:	fbb6 f1f3 	udiv	r1, r6, r3
 80079a4:	fb03 6711 	mls	r7, r3, r1, r6
 80079a8:	5dc7      	ldrb	r7, [r0, r7]
 80079aa:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80079ae:	4637      	mov	r7, r6
 80079b0:	42bb      	cmp	r3, r7
 80079b2:	460e      	mov	r6, r1
 80079b4:	d9f4      	bls.n	80079a0 <_printf_i+0x118>
 80079b6:	2b08      	cmp	r3, #8
 80079b8:	d10b      	bne.n	80079d2 <_printf_i+0x14a>
 80079ba:	6823      	ldr	r3, [r4, #0]
 80079bc:	07de      	lsls	r6, r3, #31
 80079be:	d508      	bpl.n	80079d2 <_printf_i+0x14a>
 80079c0:	6923      	ldr	r3, [r4, #16]
 80079c2:	6861      	ldr	r1, [r4, #4]
 80079c4:	4299      	cmp	r1, r3
 80079c6:	bfde      	ittt	le
 80079c8:	2330      	movle	r3, #48	; 0x30
 80079ca:	f805 3c01 	strble.w	r3, [r5, #-1]
 80079ce:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80079d2:	1b52      	subs	r2, r2, r5
 80079d4:	6122      	str	r2, [r4, #16]
 80079d6:	464b      	mov	r3, r9
 80079d8:	4621      	mov	r1, r4
 80079da:	4640      	mov	r0, r8
 80079dc:	f8cd a000 	str.w	sl, [sp]
 80079e0:	aa03      	add	r2, sp, #12
 80079e2:	f7ff fedf 	bl	80077a4 <_printf_common>
 80079e6:	3001      	adds	r0, #1
 80079e8:	d14a      	bne.n	8007a80 <_printf_i+0x1f8>
 80079ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80079ee:	b004      	add	sp, #16
 80079f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80079f4:	6823      	ldr	r3, [r4, #0]
 80079f6:	f043 0320 	orr.w	r3, r3, #32
 80079fa:	6023      	str	r3, [r4, #0]
 80079fc:	2778      	movs	r7, #120	; 0x78
 80079fe:	4832      	ldr	r0, [pc, #200]	; (8007ac8 <_printf_i+0x240>)
 8007a00:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8007a04:	6823      	ldr	r3, [r4, #0]
 8007a06:	6829      	ldr	r1, [r5, #0]
 8007a08:	061f      	lsls	r7, r3, #24
 8007a0a:	f851 6b04 	ldr.w	r6, [r1], #4
 8007a0e:	d402      	bmi.n	8007a16 <_printf_i+0x18e>
 8007a10:	065f      	lsls	r7, r3, #25
 8007a12:	bf48      	it	mi
 8007a14:	b2b6      	uxthmi	r6, r6
 8007a16:	07df      	lsls	r7, r3, #31
 8007a18:	bf48      	it	mi
 8007a1a:	f043 0320 	orrmi.w	r3, r3, #32
 8007a1e:	6029      	str	r1, [r5, #0]
 8007a20:	bf48      	it	mi
 8007a22:	6023      	strmi	r3, [r4, #0]
 8007a24:	b91e      	cbnz	r6, 8007a2e <_printf_i+0x1a6>
 8007a26:	6823      	ldr	r3, [r4, #0]
 8007a28:	f023 0320 	bic.w	r3, r3, #32
 8007a2c:	6023      	str	r3, [r4, #0]
 8007a2e:	2310      	movs	r3, #16
 8007a30:	e7a6      	b.n	8007980 <_printf_i+0xf8>
 8007a32:	4824      	ldr	r0, [pc, #144]	; (8007ac4 <_printf_i+0x23c>)
 8007a34:	e7e4      	b.n	8007a00 <_printf_i+0x178>
 8007a36:	4615      	mov	r5, r2
 8007a38:	e7bd      	b.n	80079b6 <_printf_i+0x12e>
 8007a3a:	682b      	ldr	r3, [r5, #0]
 8007a3c:	6826      	ldr	r6, [r4, #0]
 8007a3e:	1d18      	adds	r0, r3, #4
 8007a40:	6961      	ldr	r1, [r4, #20]
 8007a42:	6028      	str	r0, [r5, #0]
 8007a44:	0635      	lsls	r5, r6, #24
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	d501      	bpl.n	8007a4e <_printf_i+0x1c6>
 8007a4a:	6019      	str	r1, [r3, #0]
 8007a4c:	e002      	b.n	8007a54 <_printf_i+0x1cc>
 8007a4e:	0670      	lsls	r0, r6, #25
 8007a50:	d5fb      	bpl.n	8007a4a <_printf_i+0x1c2>
 8007a52:	8019      	strh	r1, [r3, #0]
 8007a54:	2300      	movs	r3, #0
 8007a56:	4615      	mov	r5, r2
 8007a58:	6123      	str	r3, [r4, #16]
 8007a5a:	e7bc      	b.n	80079d6 <_printf_i+0x14e>
 8007a5c:	682b      	ldr	r3, [r5, #0]
 8007a5e:	2100      	movs	r1, #0
 8007a60:	1d1a      	adds	r2, r3, #4
 8007a62:	602a      	str	r2, [r5, #0]
 8007a64:	681d      	ldr	r5, [r3, #0]
 8007a66:	6862      	ldr	r2, [r4, #4]
 8007a68:	4628      	mov	r0, r5
 8007a6a:	f000 f9b4 	bl	8007dd6 <memchr>
 8007a6e:	b108      	cbz	r0, 8007a74 <_printf_i+0x1ec>
 8007a70:	1b40      	subs	r0, r0, r5
 8007a72:	6060      	str	r0, [r4, #4]
 8007a74:	6863      	ldr	r3, [r4, #4]
 8007a76:	6123      	str	r3, [r4, #16]
 8007a78:	2300      	movs	r3, #0
 8007a7a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007a7e:	e7aa      	b.n	80079d6 <_printf_i+0x14e>
 8007a80:	462a      	mov	r2, r5
 8007a82:	4649      	mov	r1, r9
 8007a84:	4640      	mov	r0, r8
 8007a86:	6923      	ldr	r3, [r4, #16]
 8007a88:	47d0      	blx	sl
 8007a8a:	3001      	adds	r0, #1
 8007a8c:	d0ad      	beq.n	80079ea <_printf_i+0x162>
 8007a8e:	6823      	ldr	r3, [r4, #0]
 8007a90:	079b      	lsls	r3, r3, #30
 8007a92:	d413      	bmi.n	8007abc <_printf_i+0x234>
 8007a94:	68e0      	ldr	r0, [r4, #12]
 8007a96:	9b03      	ldr	r3, [sp, #12]
 8007a98:	4298      	cmp	r0, r3
 8007a9a:	bfb8      	it	lt
 8007a9c:	4618      	movlt	r0, r3
 8007a9e:	e7a6      	b.n	80079ee <_printf_i+0x166>
 8007aa0:	2301      	movs	r3, #1
 8007aa2:	4632      	mov	r2, r6
 8007aa4:	4649      	mov	r1, r9
 8007aa6:	4640      	mov	r0, r8
 8007aa8:	47d0      	blx	sl
 8007aaa:	3001      	adds	r0, #1
 8007aac:	d09d      	beq.n	80079ea <_printf_i+0x162>
 8007aae:	3501      	adds	r5, #1
 8007ab0:	68e3      	ldr	r3, [r4, #12]
 8007ab2:	9903      	ldr	r1, [sp, #12]
 8007ab4:	1a5b      	subs	r3, r3, r1
 8007ab6:	42ab      	cmp	r3, r5
 8007ab8:	dcf2      	bgt.n	8007aa0 <_printf_i+0x218>
 8007aba:	e7eb      	b.n	8007a94 <_printf_i+0x20c>
 8007abc:	2500      	movs	r5, #0
 8007abe:	f104 0619 	add.w	r6, r4, #25
 8007ac2:	e7f5      	b.n	8007ab0 <_printf_i+0x228>
 8007ac4:	08009c2c 	.word	0x08009c2c
 8007ac8:	08009c3d 	.word	0x08009c3d

08007acc <std>:
 8007acc:	2300      	movs	r3, #0
 8007ace:	b510      	push	{r4, lr}
 8007ad0:	4604      	mov	r4, r0
 8007ad2:	e9c0 3300 	strd	r3, r3, [r0]
 8007ad6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007ada:	6083      	str	r3, [r0, #8]
 8007adc:	8181      	strh	r1, [r0, #12]
 8007ade:	6643      	str	r3, [r0, #100]	; 0x64
 8007ae0:	81c2      	strh	r2, [r0, #14]
 8007ae2:	6183      	str	r3, [r0, #24]
 8007ae4:	4619      	mov	r1, r3
 8007ae6:	2208      	movs	r2, #8
 8007ae8:	305c      	adds	r0, #92	; 0x5c
 8007aea:	f000 f8f4 	bl	8007cd6 <memset>
 8007aee:	4b0d      	ldr	r3, [pc, #52]	; (8007b24 <std+0x58>)
 8007af0:	6224      	str	r4, [r4, #32]
 8007af2:	6263      	str	r3, [r4, #36]	; 0x24
 8007af4:	4b0c      	ldr	r3, [pc, #48]	; (8007b28 <std+0x5c>)
 8007af6:	62a3      	str	r3, [r4, #40]	; 0x28
 8007af8:	4b0c      	ldr	r3, [pc, #48]	; (8007b2c <std+0x60>)
 8007afa:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007afc:	4b0c      	ldr	r3, [pc, #48]	; (8007b30 <std+0x64>)
 8007afe:	6323      	str	r3, [r4, #48]	; 0x30
 8007b00:	4b0c      	ldr	r3, [pc, #48]	; (8007b34 <std+0x68>)
 8007b02:	429c      	cmp	r4, r3
 8007b04:	d006      	beq.n	8007b14 <std+0x48>
 8007b06:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8007b0a:	4294      	cmp	r4, r2
 8007b0c:	d002      	beq.n	8007b14 <std+0x48>
 8007b0e:	33d0      	adds	r3, #208	; 0xd0
 8007b10:	429c      	cmp	r4, r3
 8007b12:	d105      	bne.n	8007b20 <std+0x54>
 8007b14:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b1c:	f000 b958 	b.w	8007dd0 <__retarget_lock_init_recursive>
 8007b20:	bd10      	pop	{r4, pc}
 8007b22:	bf00      	nop
 8007b24:	08007c51 	.word	0x08007c51
 8007b28:	08007c73 	.word	0x08007c73
 8007b2c:	08007cab 	.word	0x08007cab
 8007b30:	08007ccf 	.word	0x08007ccf
 8007b34:	200013c4 	.word	0x200013c4

08007b38 <stdio_exit_handler>:
 8007b38:	4a02      	ldr	r2, [pc, #8]	; (8007b44 <stdio_exit_handler+0xc>)
 8007b3a:	4903      	ldr	r1, [pc, #12]	; (8007b48 <stdio_exit_handler+0x10>)
 8007b3c:	4803      	ldr	r0, [pc, #12]	; (8007b4c <stdio_exit_handler+0x14>)
 8007b3e:	f000 b869 	b.w	8007c14 <_fwalk_sglue>
 8007b42:	bf00      	nop
 8007b44:	20000014 	.word	0x20000014
 8007b48:	080094d5 	.word	0x080094d5
 8007b4c:	20000020 	.word	0x20000020

08007b50 <cleanup_stdio>:
 8007b50:	6841      	ldr	r1, [r0, #4]
 8007b52:	4b0c      	ldr	r3, [pc, #48]	; (8007b84 <cleanup_stdio+0x34>)
 8007b54:	b510      	push	{r4, lr}
 8007b56:	4299      	cmp	r1, r3
 8007b58:	4604      	mov	r4, r0
 8007b5a:	d001      	beq.n	8007b60 <cleanup_stdio+0x10>
 8007b5c:	f001 fcba 	bl	80094d4 <_fflush_r>
 8007b60:	68a1      	ldr	r1, [r4, #8]
 8007b62:	4b09      	ldr	r3, [pc, #36]	; (8007b88 <cleanup_stdio+0x38>)
 8007b64:	4299      	cmp	r1, r3
 8007b66:	d002      	beq.n	8007b6e <cleanup_stdio+0x1e>
 8007b68:	4620      	mov	r0, r4
 8007b6a:	f001 fcb3 	bl	80094d4 <_fflush_r>
 8007b6e:	68e1      	ldr	r1, [r4, #12]
 8007b70:	4b06      	ldr	r3, [pc, #24]	; (8007b8c <cleanup_stdio+0x3c>)
 8007b72:	4299      	cmp	r1, r3
 8007b74:	d004      	beq.n	8007b80 <cleanup_stdio+0x30>
 8007b76:	4620      	mov	r0, r4
 8007b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b7c:	f001 bcaa 	b.w	80094d4 <_fflush_r>
 8007b80:	bd10      	pop	{r4, pc}
 8007b82:	bf00      	nop
 8007b84:	200013c4 	.word	0x200013c4
 8007b88:	2000142c 	.word	0x2000142c
 8007b8c:	20001494 	.word	0x20001494

08007b90 <global_stdio_init.part.0>:
 8007b90:	b510      	push	{r4, lr}
 8007b92:	4b0b      	ldr	r3, [pc, #44]	; (8007bc0 <global_stdio_init.part.0+0x30>)
 8007b94:	4c0b      	ldr	r4, [pc, #44]	; (8007bc4 <global_stdio_init.part.0+0x34>)
 8007b96:	4a0c      	ldr	r2, [pc, #48]	; (8007bc8 <global_stdio_init.part.0+0x38>)
 8007b98:	4620      	mov	r0, r4
 8007b9a:	601a      	str	r2, [r3, #0]
 8007b9c:	2104      	movs	r1, #4
 8007b9e:	2200      	movs	r2, #0
 8007ba0:	f7ff ff94 	bl	8007acc <std>
 8007ba4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8007ba8:	2201      	movs	r2, #1
 8007baa:	2109      	movs	r1, #9
 8007bac:	f7ff ff8e 	bl	8007acc <std>
 8007bb0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007bb4:	2202      	movs	r2, #2
 8007bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007bba:	2112      	movs	r1, #18
 8007bbc:	f7ff bf86 	b.w	8007acc <std>
 8007bc0:	200014fc 	.word	0x200014fc
 8007bc4:	200013c4 	.word	0x200013c4
 8007bc8:	08007b39 	.word	0x08007b39

08007bcc <__sfp_lock_acquire>:
 8007bcc:	4801      	ldr	r0, [pc, #4]	; (8007bd4 <__sfp_lock_acquire+0x8>)
 8007bce:	f000 b900 	b.w	8007dd2 <__retarget_lock_acquire_recursive>
 8007bd2:	bf00      	nop
 8007bd4:	20001505 	.word	0x20001505

08007bd8 <__sfp_lock_release>:
 8007bd8:	4801      	ldr	r0, [pc, #4]	; (8007be0 <__sfp_lock_release+0x8>)
 8007bda:	f000 b8fb 	b.w	8007dd4 <__retarget_lock_release_recursive>
 8007bde:	bf00      	nop
 8007be0:	20001505 	.word	0x20001505

08007be4 <__sinit>:
 8007be4:	b510      	push	{r4, lr}
 8007be6:	4604      	mov	r4, r0
 8007be8:	f7ff fff0 	bl	8007bcc <__sfp_lock_acquire>
 8007bec:	6a23      	ldr	r3, [r4, #32]
 8007bee:	b11b      	cbz	r3, 8007bf8 <__sinit+0x14>
 8007bf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007bf4:	f7ff bff0 	b.w	8007bd8 <__sfp_lock_release>
 8007bf8:	4b04      	ldr	r3, [pc, #16]	; (8007c0c <__sinit+0x28>)
 8007bfa:	6223      	str	r3, [r4, #32]
 8007bfc:	4b04      	ldr	r3, [pc, #16]	; (8007c10 <__sinit+0x2c>)
 8007bfe:	681b      	ldr	r3, [r3, #0]
 8007c00:	2b00      	cmp	r3, #0
 8007c02:	d1f5      	bne.n	8007bf0 <__sinit+0xc>
 8007c04:	f7ff ffc4 	bl	8007b90 <global_stdio_init.part.0>
 8007c08:	e7f2      	b.n	8007bf0 <__sinit+0xc>
 8007c0a:	bf00      	nop
 8007c0c:	08007b51 	.word	0x08007b51
 8007c10:	200014fc 	.word	0x200014fc

08007c14 <_fwalk_sglue>:
 8007c14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007c18:	4607      	mov	r7, r0
 8007c1a:	4688      	mov	r8, r1
 8007c1c:	4614      	mov	r4, r2
 8007c1e:	2600      	movs	r6, #0
 8007c20:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007c24:	f1b9 0901 	subs.w	r9, r9, #1
 8007c28:	d505      	bpl.n	8007c36 <_fwalk_sglue+0x22>
 8007c2a:	6824      	ldr	r4, [r4, #0]
 8007c2c:	2c00      	cmp	r4, #0
 8007c2e:	d1f7      	bne.n	8007c20 <_fwalk_sglue+0xc>
 8007c30:	4630      	mov	r0, r6
 8007c32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007c36:	89ab      	ldrh	r3, [r5, #12]
 8007c38:	2b01      	cmp	r3, #1
 8007c3a:	d907      	bls.n	8007c4c <_fwalk_sglue+0x38>
 8007c3c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007c40:	3301      	adds	r3, #1
 8007c42:	d003      	beq.n	8007c4c <_fwalk_sglue+0x38>
 8007c44:	4629      	mov	r1, r5
 8007c46:	4638      	mov	r0, r7
 8007c48:	47c0      	blx	r8
 8007c4a:	4306      	orrs	r6, r0
 8007c4c:	3568      	adds	r5, #104	; 0x68
 8007c4e:	e7e9      	b.n	8007c24 <_fwalk_sglue+0x10>

08007c50 <__sread>:
 8007c50:	b510      	push	{r4, lr}
 8007c52:	460c      	mov	r4, r1
 8007c54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007c58:	f000 f86c 	bl	8007d34 <_read_r>
 8007c5c:	2800      	cmp	r0, #0
 8007c5e:	bfab      	itete	ge
 8007c60:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007c62:	89a3      	ldrhlt	r3, [r4, #12]
 8007c64:	181b      	addge	r3, r3, r0
 8007c66:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8007c6a:	bfac      	ite	ge
 8007c6c:	6563      	strge	r3, [r4, #84]	; 0x54
 8007c6e:	81a3      	strhlt	r3, [r4, #12]
 8007c70:	bd10      	pop	{r4, pc}

08007c72 <__swrite>:
 8007c72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c76:	461f      	mov	r7, r3
 8007c78:	898b      	ldrh	r3, [r1, #12]
 8007c7a:	4605      	mov	r5, r0
 8007c7c:	05db      	lsls	r3, r3, #23
 8007c7e:	460c      	mov	r4, r1
 8007c80:	4616      	mov	r6, r2
 8007c82:	d505      	bpl.n	8007c90 <__swrite+0x1e>
 8007c84:	2302      	movs	r3, #2
 8007c86:	2200      	movs	r2, #0
 8007c88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007c8c:	f000 f840 	bl	8007d10 <_lseek_r>
 8007c90:	89a3      	ldrh	r3, [r4, #12]
 8007c92:	4632      	mov	r2, r6
 8007c94:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007c98:	81a3      	strh	r3, [r4, #12]
 8007c9a:	4628      	mov	r0, r5
 8007c9c:	463b      	mov	r3, r7
 8007c9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007ca2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007ca6:	f000 b857 	b.w	8007d58 <_write_r>

08007caa <__sseek>:
 8007caa:	b510      	push	{r4, lr}
 8007cac:	460c      	mov	r4, r1
 8007cae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cb2:	f000 f82d 	bl	8007d10 <_lseek_r>
 8007cb6:	1c43      	adds	r3, r0, #1
 8007cb8:	89a3      	ldrh	r3, [r4, #12]
 8007cba:	bf15      	itete	ne
 8007cbc:	6560      	strne	r0, [r4, #84]	; 0x54
 8007cbe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007cc2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007cc6:	81a3      	strheq	r3, [r4, #12]
 8007cc8:	bf18      	it	ne
 8007cca:	81a3      	strhne	r3, [r4, #12]
 8007ccc:	bd10      	pop	{r4, pc}

08007cce <__sclose>:
 8007cce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cd2:	f000 b80d 	b.w	8007cf0 <_close_r>

08007cd6 <memset>:
 8007cd6:	4603      	mov	r3, r0
 8007cd8:	4402      	add	r2, r0
 8007cda:	4293      	cmp	r3, r2
 8007cdc:	d100      	bne.n	8007ce0 <memset+0xa>
 8007cde:	4770      	bx	lr
 8007ce0:	f803 1b01 	strb.w	r1, [r3], #1
 8007ce4:	e7f9      	b.n	8007cda <memset+0x4>
	...

08007ce8 <_localeconv_r>:
 8007ce8:	4800      	ldr	r0, [pc, #0]	; (8007cec <_localeconv_r+0x4>)
 8007cea:	4770      	bx	lr
 8007cec:	20000160 	.word	0x20000160

08007cf0 <_close_r>:
 8007cf0:	b538      	push	{r3, r4, r5, lr}
 8007cf2:	2300      	movs	r3, #0
 8007cf4:	4d05      	ldr	r5, [pc, #20]	; (8007d0c <_close_r+0x1c>)
 8007cf6:	4604      	mov	r4, r0
 8007cf8:	4608      	mov	r0, r1
 8007cfa:	602b      	str	r3, [r5, #0]
 8007cfc:	f7fa fe6c 	bl	80029d8 <_close>
 8007d00:	1c43      	adds	r3, r0, #1
 8007d02:	d102      	bne.n	8007d0a <_close_r+0x1a>
 8007d04:	682b      	ldr	r3, [r5, #0]
 8007d06:	b103      	cbz	r3, 8007d0a <_close_r+0x1a>
 8007d08:	6023      	str	r3, [r4, #0]
 8007d0a:	bd38      	pop	{r3, r4, r5, pc}
 8007d0c:	20001500 	.word	0x20001500

08007d10 <_lseek_r>:
 8007d10:	b538      	push	{r3, r4, r5, lr}
 8007d12:	4604      	mov	r4, r0
 8007d14:	4608      	mov	r0, r1
 8007d16:	4611      	mov	r1, r2
 8007d18:	2200      	movs	r2, #0
 8007d1a:	4d05      	ldr	r5, [pc, #20]	; (8007d30 <_lseek_r+0x20>)
 8007d1c:	602a      	str	r2, [r5, #0]
 8007d1e:	461a      	mov	r2, r3
 8007d20:	f7fa fe7e 	bl	8002a20 <_lseek>
 8007d24:	1c43      	adds	r3, r0, #1
 8007d26:	d102      	bne.n	8007d2e <_lseek_r+0x1e>
 8007d28:	682b      	ldr	r3, [r5, #0]
 8007d2a:	b103      	cbz	r3, 8007d2e <_lseek_r+0x1e>
 8007d2c:	6023      	str	r3, [r4, #0]
 8007d2e:	bd38      	pop	{r3, r4, r5, pc}
 8007d30:	20001500 	.word	0x20001500

08007d34 <_read_r>:
 8007d34:	b538      	push	{r3, r4, r5, lr}
 8007d36:	4604      	mov	r4, r0
 8007d38:	4608      	mov	r0, r1
 8007d3a:	4611      	mov	r1, r2
 8007d3c:	2200      	movs	r2, #0
 8007d3e:	4d05      	ldr	r5, [pc, #20]	; (8007d54 <_read_r+0x20>)
 8007d40:	602a      	str	r2, [r5, #0]
 8007d42:	461a      	mov	r2, r3
 8007d44:	f7fa fe0f 	bl	8002966 <_read>
 8007d48:	1c43      	adds	r3, r0, #1
 8007d4a:	d102      	bne.n	8007d52 <_read_r+0x1e>
 8007d4c:	682b      	ldr	r3, [r5, #0]
 8007d4e:	b103      	cbz	r3, 8007d52 <_read_r+0x1e>
 8007d50:	6023      	str	r3, [r4, #0]
 8007d52:	bd38      	pop	{r3, r4, r5, pc}
 8007d54:	20001500 	.word	0x20001500

08007d58 <_write_r>:
 8007d58:	b538      	push	{r3, r4, r5, lr}
 8007d5a:	4604      	mov	r4, r0
 8007d5c:	4608      	mov	r0, r1
 8007d5e:	4611      	mov	r1, r2
 8007d60:	2200      	movs	r2, #0
 8007d62:	4d05      	ldr	r5, [pc, #20]	; (8007d78 <_write_r+0x20>)
 8007d64:	602a      	str	r2, [r5, #0]
 8007d66:	461a      	mov	r2, r3
 8007d68:	f7fa fe1a 	bl	80029a0 <_write>
 8007d6c:	1c43      	adds	r3, r0, #1
 8007d6e:	d102      	bne.n	8007d76 <_write_r+0x1e>
 8007d70:	682b      	ldr	r3, [r5, #0]
 8007d72:	b103      	cbz	r3, 8007d76 <_write_r+0x1e>
 8007d74:	6023      	str	r3, [r4, #0]
 8007d76:	bd38      	pop	{r3, r4, r5, pc}
 8007d78:	20001500 	.word	0x20001500

08007d7c <__errno>:
 8007d7c:	4b01      	ldr	r3, [pc, #4]	; (8007d84 <__errno+0x8>)
 8007d7e:	6818      	ldr	r0, [r3, #0]
 8007d80:	4770      	bx	lr
 8007d82:	bf00      	nop
 8007d84:	2000006c 	.word	0x2000006c

08007d88 <__libc_init_array>:
 8007d88:	b570      	push	{r4, r5, r6, lr}
 8007d8a:	2600      	movs	r6, #0
 8007d8c:	4d0c      	ldr	r5, [pc, #48]	; (8007dc0 <__libc_init_array+0x38>)
 8007d8e:	4c0d      	ldr	r4, [pc, #52]	; (8007dc4 <__libc_init_array+0x3c>)
 8007d90:	1b64      	subs	r4, r4, r5
 8007d92:	10a4      	asrs	r4, r4, #2
 8007d94:	42a6      	cmp	r6, r4
 8007d96:	d109      	bne.n	8007dac <__libc_init_array+0x24>
 8007d98:	f001 fede 	bl	8009b58 <_init>
 8007d9c:	2600      	movs	r6, #0
 8007d9e:	4d0a      	ldr	r5, [pc, #40]	; (8007dc8 <__libc_init_array+0x40>)
 8007da0:	4c0a      	ldr	r4, [pc, #40]	; (8007dcc <__libc_init_array+0x44>)
 8007da2:	1b64      	subs	r4, r4, r5
 8007da4:	10a4      	asrs	r4, r4, #2
 8007da6:	42a6      	cmp	r6, r4
 8007da8:	d105      	bne.n	8007db6 <__libc_init_array+0x2e>
 8007daa:	bd70      	pop	{r4, r5, r6, pc}
 8007dac:	f855 3b04 	ldr.w	r3, [r5], #4
 8007db0:	4798      	blx	r3
 8007db2:	3601      	adds	r6, #1
 8007db4:	e7ee      	b.n	8007d94 <__libc_init_array+0xc>
 8007db6:	f855 3b04 	ldr.w	r3, [r5], #4
 8007dba:	4798      	blx	r3
 8007dbc:	3601      	adds	r6, #1
 8007dbe:	e7f2      	b.n	8007da6 <__libc_init_array+0x1e>
 8007dc0:	08009f8c 	.word	0x08009f8c
 8007dc4:	08009f8c 	.word	0x08009f8c
 8007dc8:	08009f8c 	.word	0x08009f8c
 8007dcc:	08009f94 	.word	0x08009f94

08007dd0 <__retarget_lock_init_recursive>:
 8007dd0:	4770      	bx	lr

08007dd2 <__retarget_lock_acquire_recursive>:
 8007dd2:	4770      	bx	lr

08007dd4 <__retarget_lock_release_recursive>:
 8007dd4:	4770      	bx	lr

08007dd6 <memchr>:
 8007dd6:	4603      	mov	r3, r0
 8007dd8:	b510      	push	{r4, lr}
 8007dda:	b2c9      	uxtb	r1, r1
 8007ddc:	4402      	add	r2, r0
 8007dde:	4293      	cmp	r3, r2
 8007de0:	4618      	mov	r0, r3
 8007de2:	d101      	bne.n	8007de8 <memchr+0x12>
 8007de4:	2000      	movs	r0, #0
 8007de6:	e003      	b.n	8007df0 <memchr+0x1a>
 8007de8:	7804      	ldrb	r4, [r0, #0]
 8007dea:	3301      	adds	r3, #1
 8007dec:	428c      	cmp	r4, r1
 8007dee:	d1f6      	bne.n	8007dde <memchr+0x8>
 8007df0:	bd10      	pop	{r4, pc}

08007df2 <memcpy>:
 8007df2:	440a      	add	r2, r1
 8007df4:	4291      	cmp	r1, r2
 8007df6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007dfa:	d100      	bne.n	8007dfe <memcpy+0xc>
 8007dfc:	4770      	bx	lr
 8007dfe:	b510      	push	{r4, lr}
 8007e00:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007e04:	4291      	cmp	r1, r2
 8007e06:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007e0a:	d1f9      	bne.n	8007e00 <memcpy+0xe>
 8007e0c:	bd10      	pop	{r4, pc}

08007e0e <quorem>:
 8007e0e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e12:	6903      	ldr	r3, [r0, #16]
 8007e14:	690c      	ldr	r4, [r1, #16]
 8007e16:	4607      	mov	r7, r0
 8007e18:	42a3      	cmp	r3, r4
 8007e1a:	db7f      	blt.n	8007f1c <quorem+0x10e>
 8007e1c:	3c01      	subs	r4, #1
 8007e1e:	f100 0514 	add.w	r5, r0, #20
 8007e22:	f101 0814 	add.w	r8, r1, #20
 8007e26:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8007e2a:	9301      	str	r3, [sp, #4]
 8007e2c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8007e30:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8007e34:	3301      	adds	r3, #1
 8007e36:	429a      	cmp	r2, r3
 8007e38:	fbb2 f6f3 	udiv	r6, r2, r3
 8007e3c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8007e40:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8007e44:	d331      	bcc.n	8007eaa <quorem+0x9c>
 8007e46:	f04f 0e00 	mov.w	lr, #0
 8007e4a:	4640      	mov	r0, r8
 8007e4c:	46ac      	mov	ip, r5
 8007e4e:	46f2      	mov	sl, lr
 8007e50:	f850 2b04 	ldr.w	r2, [r0], #4
 8007e54:	b293      	uxth	r3, r2
 8007e56:	fb06 e303 	mla	r3, r6, r3, lr
 8007e5a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8007e5e:	0c1a      	lsrs	r2, r3, #16
 8007e60:	b29b      	uxth	r3, r3
 8007e62:	fb06 220e 	mla	r2, r6, lr, r2
 8007e66:	ebaa 0303 	sub.w	r3, sl, r3
 8007e6a:	f8dc a000 	ldr.w	sl, [ip]
 8007e6e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8007e72:	fa1f fa8a 	uxth.w	sl, sl
 8007e76:	4453      	add	r3, sl
 8007e78:	f8dc a000 	ldr.w	sl, [ip]
 8007e7c:	b292      	uxth	r2, r2
 8007e7e:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8007e82:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8007e86:	b29b      	uxth	r3, r3
 8007e88:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007e8c:	4581      	cmp	r9, r0
 8007e8e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8007e92:	f84c 3b04 	str.w	r3, [ip], #4
 8007e96:	d2db      	bcs.n	8007e50 <quorem+0x42>
 8007e98:	f855 300b 	ldr.w	r3, [r5, fp]
 8007e9c:	b92b      	cbnz	r3, 8007eaa <quorem+0x9c>
 8007e9e:	9b01      	ldr	r3, [sp, #4]
 8007ea0:	3b04      	subs	r3, #4
 8007ea2:	429d      	cmp	r5, r3
 8007ea4:	461a      	mov	r2, r3
 8007ea6:	d32d      	bcc.n	8007f04 <quorem+0xf6>
 8007ea8:	613c      	str	r4, [r7, #16]
 8007eaa:	4638      	mov	r0, r7
 8007eac:	f001 f992 	bl	80091d4 <__mcmp>
 8007eb0:	2800      	cmp	r0, #0
 8007eb2:	db23      	blt.n	8007efc <quorem+0xee>
 8007eb4:	4629      	mov	r1, r5
 8007eb6:	2000      	movs	r0, #0
 8007eb8:	3601      	adds	r6, #1
 8007eba:	f858 2b04 	ldr.w	r2, [r8], #4
 8007ebe:	f8d1 c000 	ldr.w	ip, [r1]
 8007ec2:	b293      	uxth	r3, r2
 8007ec4:	1ac3      	subs	r3, r0, r3
 8007ec6:	0c12      	lsrs	r2, r2, #16
 8007ec8:	fa1f f08c 	uxth.w	r0, ip
 8007ecc:	4403      	add	r3, r0
 8007ece:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8007ed2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8007ed6:	b29b      	uxth	r3, r3
 8007ed8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007edc:	45c1      	cmp	r9, r8
 8007ede:	ea4f 4022 	mov.w	r0, r2, asr #16
 8007ee2:	f841 3b04 	str.w	r3, [r1], #4
 8007ee6:	d2e8      	bcs.n	8007eba <quorem+0xac>
 8007ee8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8007eec:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8007ef0:	b922      	cbnz	r2, 8007efc <quorem+0xee>
 8007ef2:	3b04      	subs	r3, #4
 8007ef4:	429d      	cmp	r5, r3
 8007ef6:	461a      	mov	r2, r3
 8007ef8:	d30a      	bcc.n	8007f10 <quorem+0x102>
 8007efa:	613c      	str	r4, [r7, #16]
 8007efc:	4630      	mov	r0, r6
 8007efe:	b003      	add	sp, #12
 8007f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f04:	6812      	ldr	r2, [r2, #0]
 8007f06:	3b04      	subs	r3, #4
 8007f08:	2a00      	cmp	r2, #0
 8007f0a:	d1cd      	bne.n	8007ea8 <quorem+0x9a>
 8007f0c:	3c01      	subs	r4, #1
 8007f0e:	e7c8      	b.n	8007ea2 <quorem+0x94>
 8007f10:	6812      	ldr	r2, [r2, #0]
 8007f12:	3b04      	subs	r3, #4
 8007f14:	2a00      	cmp	r2, #0
 8007f16:	d1f0      	bne.n	8007efa <quorem+0xec>
 8007f18:	3c01      	subs	r4, #1
 8007f1a:	e7eb      	b.n	8007ef4 <quorem+0xe6>
 8007f1c:	2000      	movs	r0, #0
 8007f1e:	e7ee      	b.n	8007efe <quorem+0xf0>

08007f20 <_dtoa_r>:
 8007f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f24:	4616      	mov	r6, r2
 8007f26:	461f      	mov	r7, r3
 8007f28:	69c4      	ldr	r4, [r0, #28]
 8007f2a:	b099      	sub	sp, #100	; 0x64
 8007f2c:	4605      	mov	r5, r0
 8007f2e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8007f32:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8007f36:	b974      	cbnz	r4, 8007f56 <_dtoa_r+0x36>
 8007f38:	2010      	movs	r0, #16
 8007f3a:	f000 fe1d 	bl	8008b78 <malloc>
 8007f3e:	4602      	mov	r2, r0
 8007f40:	61e8      	str	r0, [r5, #28]
 8007f42:	b920      	cbnz	r0, 8007f4e <_dtoa_r+0x2e>
 8007f44:	21ef      	movs	r1, #239	; 0xef
 8007f46:	4bac      	ldr	r3, [pc, #688]	; (80081f8 <_dtoa_r+0x2d8>)
 8007f48:	48ac      	ldr	r0, [pc, #688]	; (80081fc <_dtoa_r+0x2dc>)
 8007f4a:	f001 fafb 	bl	8009544 <__assert_func>
 8007f4e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8007f52:	6004      	str	r4, [r0, #0]
 8007f54:	60c4      	str	r4, [r0, #12]
 8007f56:	69eb      	ldr	r3, [r5, #28]
 8007f58:	6819      	ldr	r1, [r3, #0]
 8007f5a:	b151      	cbz	r1, 8007f72 <_dtoa_r+0x52>
 8007f5c:	685a      	ldr	r2, [r3, #4]
 8007f5e:	2301      	movs	r3, #1
 8007f60:	4093      	lsls	r3, r2
 8007f62:	604a      	str	r2, [r1, #4]
 8007f64:	608b      	str	r3, [r1, #8]
 8007f66:	4628      	mov	r0, r5
 8007f68:	f000 fefa 	bl	8008d60 <_Bfree>
 8007f6c:	2200      	movs	r2, #0
 8007f6e:	69eb      	ldr	r3, [r5, #28]
 8007f70:	601a      	str	r2, [r3, #0]
 8007f72:	1e3b      	subs	r3, r7, #0
 8007f74:	bfaf      	iteee	ge
 8007f76:	2300      	movge	r3, #0
 8007f78:	2201      	movlt	r2, #1
 8007f7a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8007f7e:	9305      	strlt	r3, [sp, #20]
 8007f80:	bfa8      	it	ge
 8007f82:	f8c8 3000 	strge.w	r3, [r8]
 8007f86:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8007f8a:	4b9d      	ldr	r3, [pc, #628]	; (8008200 <_dtoa_r+0x2e0>)
 8007f8c:	bfb8      	it	lt
 8007f8e:	f8c8 2000 	strlt.w	r2, [r8]
 8007f92:	ea33 0309 	bics.w	r3, r3, r9
 8007f96:	d119      	bne.n	8007fcc <_dtoa_r+0xac>
 8007f98:	f242 730f 	movw	r3, #9999	; 0x270f
 8007f9c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8007f9e:	6013      	str	r3, [r2, #0]
 8007fa0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007fa4:	4333      	orrs	r3, r6
 8007fa6:	f000 8589 	beq.w	8008abc <_dtoa_r+0xb9c>
 8007faa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8007fac:	b953      	cbnz	r3, 8007fc4 <_dtoa_r+0xa4>
 8007fae:	4b95      	ldr	r3, [pc, #596]	; (8008204 <_dtoa_r+0x2e4>)
 8007fb0:	e023      	b.n	8007ffa <_dtoa_r+0xda>
 8007fb2:	4b95      	ldr	r3, [pc, #596]	; (8008208 <_dtoa_r+0x2e8>)
 8007fb4:	9303      	str	r3, [sp, #12]
 8007fb6:	3308      	adds	r3, #8
 8007fb8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8007fba:	6013      	str	r3, [r2, #0]
 8007fbc:	9803      	ldr	r0, [sp, #12]
 8007fbe:	b019      	add	sp, #100	; 0x64
 8007fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007fc4:	4b8f      	ldr	r3, [pc, #572]	; (8008204 <_dtoa_r+0x2e4>)
 8007fc6:	9303      	str	r3, [sp, #12]
 8007fc8:	3303      	adds	r3, #3
 8007fca:	e7f5      	b.n	8007fb8 <_dtoa_r+0x98>
 8007fcc:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8007fd0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8007fd4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8007fd8:	2200      	movs	r2, #0
 8007fda:	2300      	movs	r3, #0
 8007fdc:	f7f8 fce4 	bl	80009a8 <__aeabi_dcmpeq>
 8007fe0:	4680      	mov	r8, r0
 8007fe2:	b160      	cbz	r0, 8007ffe <_dtoa_r+0xde>
 8007fe4:	2301      	movs	r3, #1
 8007fe6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8007fe8:	6013      	str	r3, [r2, #0]
 8007fea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8007fec:	2b00      	cmp	r3, #0
 8007fee:	f000 8562 	beq.w	8008ab6 <_dtoa_r+0xb96>
 8007ff2:	4b86      	ldr	r3, [pc, #536]	; (800820c <_dtoa_r+0x2ec>)
 8007ff4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8007ff6:	6013      	str	r3, [r2, #0]
 8007ff8:	3b01      	subs	r3, #1
 8007ffa:	9303      	str	r3, [sp, #12]
 8007ffc:	e7de      	b.n	8007fbc <_dtoa_r+0x9c>
 8007ffe:	ab16      	add	r3, sp, #88	; 0x58
 8008000:	9301      	str	r3, [sp, #4]
 8008002:	ab17      	add	r3, sp, #92	; 0x5c
 8008004:	9300      	str	r3, [sp, #0]
 8008006:	4628      	mov	r0, r5
 8008008:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800800c:	f001 f98a 	bl	8009324 <__d2b>
 8008010:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8008014:	4682      	mov	sl, r0
 8008016:	2c00      	cmp	r4, #0
 8008018:	d07e      	beq.n	8008118 <_dtoa_r+0x1f8>
 800801a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800801e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008020:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8008024:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008028:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800802c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8008030:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8008034:	4619      	mov	r1, r3
 8008036:	2200      	movs	r2, #0
 8008038:	4b75      	ldr	r3, [pc, #468]	; (8008210 <_dtoa_r+0x2f0>)
 800803a:	f7f8 f895 	bl	8000168 <__aeabi_dsub>
 800803e:	a368      	add	r3, pc, #416	; (adr r3, 80081e0 <_dtoa_r+0x2c0>)
 8008040:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008044:	f7f8 fa48 	bl	80004d8 <__aeabi_dmul>
 8008048:	a367      	add	r3, pc, #412	; (adr r3, 80081e8 <_dtoa_r+0x2c8>)
 800804a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800804e:	f7f8 f88d 	bl	800016c <__adddf3>
 8008052:	4606      	mov	r6, r0
 8008054:	4620      	mov	r0, r4
 8008056:	460f      	mov	r7, r1
 8008058:	f7f8 f9d4 	bl	8000404 <__aeabi_i2d>
 800805c:	a364      	add	r3, pc, #400	; (adr r3, 80081f0 <_dtoa_r+0x2d0>)
 800805e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008062:	f7f8 fa39 	bl	80004d8 <__aeabi_dmul>
 8008066:	4602      	mov	r2, r0
 8008068:	460b      	mov	r3, r1
 800806a:	4630      	mov	r0, r6
 800806c:	4639      	mov	r1, r7
 800806e:	f7f8 f87d 	bl	800016c <__adddf3>
 8008072:	4606      	mov	r6, r0
 8008074:	460f      	mov	r7, r1
 8008076:	f7f8 fcdf 	bl	8000a38 <__aeabi_d2iz>
 800807a:	2200      	movs	r2, #0
 800807c:	4683      	mov	fp, r0
 800807e:	2300      	movs	r3, #0
 8008080:	4630      	mov	r0, r6
 8008082:	4639      	mov	r1, r7
 8008084:	f7f8 fc9a 	bl	80009bc <__aeabi_dcmplt>
 8008088:	b148      	cbz	r0, 800809e <_dtoa_r+0x17e>
 800808a:	4658      	mov	r0, fp
 800808c:	f7f8 f9ba 	bl	8000404 <__aeabi_i2d>
 8008090:	4632      	mov	r2, r6
 8008092:	463b      	mov	r3, r7
 8008094:	f7f8 fc88 	bl	80009a8 <__aeabi_dcmpeq>
 8008098:	b908      	cbnz	r0, 800809e <_dtoa_r+0x17e>
 800809a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800809e:	f1bb 0f16 	cmp.w	fp, #22
 80080a2:	d857      	bhi.n	8008154 <_dtoa_r+0x234>
 80080a4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80080a8:	4b5a      	ldr	r3, [pc, #360]	; (8008214 <_dtoa_r+0x2f4>)
 80080aa:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80080ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080b2:	f7f8 fc83 	bl	80009bc <__aeabi_dcmplt>
 80080b6:	2800      	cmp	r0, #0
 80080b8:	d04e      	beq.n	8008158 <_dtoa_r+0x238>
 80080ba:	2300      	movs	r3, #0
 80080bc:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80080c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80080c2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80080c4:	1b1b      	subs	r3, r3, r4
 80080c6:	1e5a      	subs	r2, r3, #1
 80080c8:	bf46      	itte	mi
 80080ca:	f1c3 0901 	rsbmi	r9, r3, #1
 80080ce:	2300      	movmi	r3, #0
 80080d0:	f04f 0900 	movpl.w	r9, #0
 80080d4:	9209      	str	r2, [sp, #36]	; 0x24
 80080d6:	bf48      	it	mi
 80080d8:	9309      	strmi	r3, [sp, #36]	; 0x24
 80080da:	f1bb 0f00 	cmp.w	fp, #0
 80080de:	db3d      	blt.n	800815c <_dtoa_r+0x23c>
 80080e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080e2:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80080e6:	445b      	add	r3, fp
 80080e8:	9309      	str	r3, [sp, #36]	; 0x24
 80080ea:	2300      	movs	r3, #0
 80080ec:	930a      	str	r3, [sp, #40]	; 0x28
 80080ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80080f0:	2b09      	cmp	r3, #9
 80080f2:	d867      	bhi.n	80081c4 <_dtoa_r+0x2a4>
 80080f4:	2b05      	cmp	r3, #5
 80080f6:	bfc4      	itt	gt
 80080f8:	3b04      	subgt	r3, #4
 80080fa:	9322      	strgt	r3, [sp, #136]	; 0x88
 80080fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80080fe:	bfc8      	it	gt
 8008100:	2400      	movgt	r4, #0
 8008102:	f1a3 0302 	sub.w	r3, r3, #2
 8008106:	bfd8      	it	le
 8008108:	2401      	movle	r4, #1
 800810a:	2b03      	cmp	r3, #3
 800810c:	f200 8086 	bhi.w	800821c <_dtoa_r+0x2fc>
 8008110:	e8df f003 	tbb	[pc, r3]
 8008114:	5637392c 	.word	0x5637392c
 8008118:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800811c:	441c      	add	r4, r3
 800811e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8008122:	2b20      	cmp	r3, #32
 8008124:	bfc1      	itttt	gt
 8008126:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800812a:	fa09 f903 	lslgt.w	r9, r9, r3
 800812e:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 8008132:	fa26 f303 	lsrgt.w	r3, r6, r3
 8008136:	bfd6      	itet	le
 8008138:	f1c3 0320 	rsble	r3, r3, #32
 800813c:	ea49 0003 	orrgt.w	r0, r9, r3
 8008140:	fa06 f003 	lslle.w	r0, r6, r3
 8008144:	f7f8 f94e 	bl	80003e4 <__aeabi_ui2d>
 8008148:	2201      	movs	r2, #1
 800814a:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 800814e:	3c01      	subs	r4, #1
 8008150:	9213      	str	r2, [sp, #76]	; 0x4c
 8008152:	e76f      	b.n	8008034 <_dtoa_r+0x114>
 8008154:	2301      	movs	r3, #1
 8008156:	e7b3      	b.n	80080c0 <_dtoa_r+0x1a0>
 8008158:	900f      	str	r0, [sp, #60]	; 0x3c
 800815a:	e7b2      	b.n	80080c2 <_dtoa_r+0x1a2>
 800815c:	f1cb 0300 	rsb	r3, fp, #0
 8008160:	930a      	str	r3, [sp, #40]	; 0x28
 8008162:	2300      	movs	r3, #0
 8008164:	eba9 090b 	sub.w	r9, r9, fp
 8008168:	930e      	str	r3, [sp, #56]	; 0x38
 800816a:	e7c0      	b.n	80080ee <_dtoa_r+0x1ce>
 800816c:	2300      	movs	r3, #0
 800816e:	930b      	str	r3, [sp, #44]	; 0x2c
 8008170:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008172:	2b00      	cmp	r3, #0
 8008174:	dc55      	bgt.n	8008222 <_dtoa_r+0x302>
 8008176:	2301      	movs	r3, #1
 8008178:	461a      	mov	r2, r3
 800817a:	9306      	str	r3, [sp, #24]
 800817c:	9308      	str	r3, [sp, #32]
 800817e:	9223      	str	r2, [sp, #140]	; 0x8c
 8008180:	e00b      	b.n	800819a <_dtoa_r+0x27a>
 8008182:	2301      	movs	r3, #1
 8008184:	e7f3      	b.n	800816e <_dtoa_r+0x24e>
 8008186:	2300      	movs	r3, #0
 8008188:	930b      	str	r3, [sp, #44]	; 0x2c
 800818a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800818c:	445b      	add	r3, fp
 800818e:	9306      	str	r3, [sp, #24]
 8008190:	3301      	adds	r3, #1
 8008192:	2b01      	cmp	r3, #1
 8008194:	9308      	str	r3, [sp, #32]
 8008196:	bfb8      	it	lt
 8008198:	2301      	movlt	r3, #1
 800819a:	2100      	movs	r1, #0
 800819c:	2204      	movs	r2, #4
 800819e:	69e8      	ldr	r0, [r5, #28]
 80081a0:	f102 0614 	add.w	r6, r2, #20
 80081a4:	429e      	cmp	r6, r3
 80081a6:	d940      	bls.n	800822a <_dtoa_r+0x30a>
 80081a8:	6041      	str	r1, [r0, #4]
 80081aa:	4628      	mov	r0, r5
 80081ac:	f000 fd98 	bl	8008ce0 <_Balloc>
 80081b0:	9003      	str	r0, [sp, #12]
 80081b2:	2800      	cmp	r0, #0
 80081b4:	d13c      	bne.n	8008230 <_dtoa_r+0x310>
 80081b6:	4602      	mov	r2, r0
 80081b8:	f240 11af 	movw	r1, #431	; 0x1af
 80081bc:	4b16      	ldr	r3, [pc, #88]	; (8008218 <_dtoa_r+0x2f8>)
 80081be:	e6c3      	b.n	8007f48 <_dtoa_r+0x28>
 80081c0:	2301      	movs	r3, #1
 80081c2:	e7e1      	b.n	8008188 <_dtoa_r+0x268>
 80081c4:	2401      	movs	r4, #1
 80081c6:	2300      	movs	r3, #0
 80081c8:	940b      	str	r4, [sp, #44]	; 0x2c
 80081ca:	9322      	str	r3, [sp, #136]	; 0x88
 80081cc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80081d0:	2200      	movs	r2, #0
 80081d2:	9306      	str	r3, [sp, #24]
 80081d4:	9308      	str	r3, [sp, #32]
 80081d6:	2312      	movs	r3, #18
 80081d8:	e7d1      	b.n	800817e <_dtoa_r+0x25e>
 80081da:	bf00      	nop
 80081dc:	f3af 8000 	nop.w
 80081e0:	636f4361 	.word	0x636f4361
 80081e4:	3fd287a7 	.word	0x3fd287a7
 80081e8:	8b60c8b3 	.word	0x8b60c8b3
 80081ec:	3fc68a28 	.word	0x3fc68a28
 80081f0:	509f79fb 	.word	0x509f79fb
 80081f4:	3fd34413 	.word	0x3fd34413
 80081f8:	08009c5b 	.word	0x08009c5b
 80081fc:	08009c72 	.word	0x08009c72
 8008200:	7ff00000 	.word	0x7ff00000
 8008204:	08009c57 	.word	0x08009c57
 8008208:	08009c4e 	.word	0x08009c4e
 800820c:	08009c2b 	.word	0x08009c2b
 8008210:	3ff80000 	.word	0x3ff80000
 8008214:	08009d60 	.word	0x08009d60
 8008218:	08009cca 	.word	0x08009cca
 800821c:	2301      	movs	r3, #1
 800821e:	930b      	str	r3, [sp, #44]	; 0x2c
 8008220:	e7d4      	b.n	80081cc <_dtoa_r+0x2ac>
 8008222:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008224:	9306      	str	r3, [sp, #24]
 8008226:	9308      	str	r3, [sp, #32]
 8008228:	e7b7      	b.n	800819a <_dtoa_r+0x27a>
 800822a:	3101      	adds	r1, #1
 800822c:	0052      	lsls	r2, r2, #1
 800822e:	e7b7      	b.n	80081a0 <_dtoa_r+0x280>
 8008230:	69eb      	ldr	r3, [r5, #28]
 8008232:	9a03      	ldr	r2, [sp, #12]
 8008234:	601a      	str	r2, [r3, #0]
 8008236:	9b08      	ldr	r3, [sp, #32]
 8008238:	2b0e      	cmp	r3, #14
 800823a:	f200 80a8 	bhi.w	800838e <_dtoa_r+0x46e>
 800823e:	2c00      	cmp	r4, #0
 8008240:	f000 80a5 	beq.w	800838e <_dtoa_r+0x46e>
 8008244:	f1bb 0f00 	cmp.w	fp, #0
 8008248:	dd34      	ble.n	80082b4 <_dtoa_r+0x394>
 800824a:	4b9a      	ldr	r3, [pc, #616]	; (80084b4 <_dtoa_r+0x594>)
 800824c:	f00b 020f 	and.w	r2, fp, #15
 8008250:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008254:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8008258:	e9d3 3400 	ldrd	r3, r4, [r3]
 800825c:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8008260:	ea4f 142b 	mov.w	r4, fp, asr #4
 8008264:	d016      	beq.n	8008294 <_dtoa_r+0x374>
 8008266:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800826a:	4b93      	ldr	r3, [pc, #588]	; (80084b8 <_dtoa_r+0x598>)
 800826c:	2703      	movs	r7, #3
 800826e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008272:	f7f8 fa5b 	bl	800072c <__aeabi_ddiv>
 8008276:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800827a:	f004 040f 	and.w	r4, r4, #15
 800827e:	4e8e      	ldr	r6, [pc, #568]	; (80084b8 <_dtoa_r+0x598>)
 8008280:	b954      	cbnz	r4, 8008298 <_dtoa_r+0x378>
 8008282:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008286:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800828a:	f7f8 fa4f 	bl	800072c <__aeabi_ddiv>
 800828e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008292:	e029      	b.n	80082e8 <_dtoa_r+0x3c8>
 8008294:	2702      	movs	r7, #2
 8008296:	e7f2      	b.n	800827e <_dtoa_r+0x35e>
 8008298:	07e1      	lsls	r1, r4, #31
 800829a:	d508      	bpl.n	80082ae <_dtoa_r+0x38e>
 800829c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80082a0:	e9d6 2300 	ldrd	r2, r3, [r6]
 80082a4:	f7f8 f918 	bl	80004d8 <__aeabi_dmul>
 80082a8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80082ac:	3701      	adds	r7, #1
 80082ae:	1064      	asrs	r4, r4, #1
 80082b0:	3608      	adds	r6, #8
 80082b2:	e7e5      	b.n	8008280 <_dtoa_r+0x360>
 80082b4:	f000 80a5 	beq.w	8008402 <_dtoa_r+0x4e2>
 80082b8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80082bc:	f1cb 0400 	rsb	r4, fp, #0
 80082c0:	4b7c      	ldr	r3, [pc, #496]	; (80084b4 <_dtoa_r+0x594>)
 80082c2:	f004 020f 	and.w	r2, r4, #15
 80082c6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80082ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082ce:	f7f8 f903 	bl	80004d8 <__aeabi_dmul>
 80082d2:	2702      	movs	r7, #2
 80082d4:	2300      	movs	r3, #0
 80082d6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80082da:	4e77      	ldr	r6, [pc, #476]	; (80084b8 <_dtoa_r+0x598>)
 80082dc:	1124      	asrs	r4, r4, #4
 80082de:	2c00      	cmp	r4, #0
 80082e0:	f040 8084 	bne.w	80083ec <_dtoa_r+0x4cc>
 80082e4:	2b00      	cmp	r3, #0
 80082e6:	d1d2      	bne.n	800828e <_dtoa_r+0x36e>
 80082e8:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80082ec:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80082f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	f000 8087 	beq.w	8008406 <_dtoa_r+0x4e6>
 80082f8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80082fc:	2200      	movs	r2, #0
 80082fe:	4b6f      	ldr	r3, [pc, #444]	; (80084bc <_dtoa_r+0x59c>)
 8008300:	f7f8 fb5c 	bl	80009bc <__aeabi_dcmplt>
 8008304:	2800      	cmp	r0, #0
 8008306:	d07e      	beq.n	8008406 <_dtoa_r+0x4e6>
 8008308:	9b08      	ldr	r3, [sp, #32]
 800830a:	2b00      	cmp	r3, #0
 800830c:	d07b      	beq.n	8008406 <_dtoa_r+0x4e6>
 800830e:	9b06      	ldr	r3, [sp, #24]
 8008310:	2b00      	cmp	r3, #0
 8008312:	dd38      	ble.n	8008386 <_dtoa_r+0x466>
 8008314:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008318:	2200      	movs	r2, #0
 800831a:	4b69      	ldr	r3, [pc, #420]	; (80084c0 <_dtoa_r+0x5a0>)
 800831c:	f7f8 f8dc 	bl	80004d8 <__aeabi_dmul>
 8008320:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008324:	9c06      	ldr	r4, [sp, #24]
 8008326:	f10b 38ff 	add.w	r8, fp, #4294967295	; 0xffffffff
 800832a:	3701      	adds	r7, #1
 800832c:	4638      	mov	r0, r7
 800832e:	f7f8 f869 	bl	8000404 <__aeabi_i2d>
 8008332:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008336:	f7f8 f8cf 	bl	80004d8 <__aeabi_dmul>
 800833a:	2200      	movs	r2, #0
 800833c:	4b61      	ldr	r3, [pc, #388]	; (80084c4 <_dtoa_r+0x5a4>)
 800833e:	f7f7 ff15 	bl	800016c <__adddf3>
 8008342:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8008346:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800834a:	9611      	str	r6, [sp, #68]	; 0x44
 800834c:	2c00      	cmp	r4, #0
 800834e:	d15d      	bne.n	800840c <_dtoa_r+0x4ec>
 8008350:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008354:	2200      	movs	r2, #0
 8008356:	4b5c      	ldr	r3, [pc, #368]	; (80084c8 <_dtoa_r+0x5a8>)
 8008358:	f7f7 ff06 	bl	8000168 <__aeabi_dsub>
 800835c:	4602      	mov	r2, r0
 800835e:	460b      	mov	r3, r1
 8008360:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008364:	4633      	mov	r3, r6
 8008366:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008368:	f7f8 fb46 	bl	80009f8 <__aeabi_dcmpgt>
 800836c:	2800      	cmp	r0, #0
 800836e:	f040 8295 	bne.w	800889c <_dtoa_r+0x97c>
 8008372:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008376:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008378:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800837c:	f7f8 fb1e 	bl	80009bc <__aeabi_dcmplt>
 8008380:	2800      	cmp	r0, #0
 8008382:	f040 8289 	bne.w	8008898 <_dtoa_r+0x978>
 8008386:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800838a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800838e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008390:	2b00      	cmp	r3, #0
 8008392:	f2c0 8151 	blt.w	8008638 <_dtoa_r+0x718>
 8008396:	f1bb 0f0e 	cmp.w	fp, #14
 800839a:	f300 814d 	bgt.w	8008638 <_dtoa_r+0x718>
 800839e:	4b45      	ldr	r3, [pc, #276]	; (80084b4 <_dtoa_r+0x594>)
 80083a0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80083a4:	e9d3 3400 	ldrd	r3, r4, [r3]
 80083a8:	e9cd 3406 	strd	r3, r4, [sp, #24]
 80083ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80083ae:	2b00      	cmp	r3, #0
 80083b0:	f280 80da 	bge.w	8008568 <_dtoa_r+0x648>
 80083b4:	9b08      	ldr	r3, [sp, #32]
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	f300 80d6 	bgt.w	8008568 <_dtoa_r+0x648>
 80083bc:	f040 826b 	bne.w	8008896 <_dtoa_r+0x976>
 80083c0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80083c4:	2200      	movs	r2, #0
 80083c6:	4b40      	ldr	r3, [pc, #256]	; (80084c8 <_dtoa_r+0x5a8>)
 80083c8:	f7f8 f886 	bl	80004d8 <__aeabi_dmul>
 80083cc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80083d0:	f7f8 fb08 	bl	80009e4 <__aeabi_dcmpge>
 80083d4:	9c08      	ldr	r4, [sp, #32]
 80083d6:	4626      	mov	r6, r4
 80083d8:	2800      	cmp	r0, #0
 80083da:	f040 8241 	bne.w	8008860 <_dtoa_r+0x940>
 80083de:	2331      	movs	r3, #49	; 0x31
 80083e0:	9f03      	ldr	r7, [sp, #12]
 80083e2:	f10b 0b01 	add.w	fp, fp, #1
 80083e6:	f807 3b01 	strb.w	r3, [r7], #1
 80083ea:	e23d      	b.n	8008868 <_dtoa_r+0x948>
 80083ec:	07e2      	lsls	r2, r4, #31
 80083ee:	d505      	bpl.n	80083fc <_dtoa_r+0x4dc>
 80083f0:	e9d6 2300 	ldrd	r2, r3, [r6]
 80083f4:	f7f8 f870 	bl	80004d8 <__aeabi_dmul>
 80083f8:	2301      	movs	r3, #1
 80083fa:	3701      	adds	r7, #1
 80083fc:	1064      	asrs	r4, r4, #1
 80083fe:	3608      	adds	r6, #8
 8008400:	e76d      	b.n	80082de <_dtoa_r+0x3be>
 8008402:	2702      	movs	r7, #2
 8008404:	e770      	b.n	80082e8 <_dtoa_r+0x3c8>
 8008406:	46d8      	mov	r8, fp
 8008408:	9c08      	ldr	r4, [sp, #32]
 800840a:	e78f      	b.n	800832c <_dtoa_r+0x40c>
 800840c:	9903      	ldr	r1, [sp, #12]
 800840e:	4b29      	ldr	r3, [pc, #164]	; (80084b4 <_dtoa_r+0x594>)
 8008410:	4421      	add	r1, r4
 8008412:	9112      	str	r1, [sp, #72]	; 0x48
 8008414:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008416:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800841a:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800841e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008422:	2900      	cmp	r1, #0
 8008424:	d054      	beq.n	80084d0 <_dtoa_r+0x5b0>
 8008426:	2000      	movs	r0, #0
 8008428:	4928      	ldr	r1, [pc, #160]	; (80084cc <_dtoa_r+0x5ac>)
 800842a:	f7f8 f97f 	bl	800072c <__aeabi_ddiv>
 800842e:	463b      	mov	r3, r7
 8008430:	4632      	mov	r2, r6
 8008432:	f7f7 fe99 	bl	8000168 <__aeabi_dsub>
 8008436:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800843a:	9f03      	ldr	r7, [sp, #12]
 800843c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008440:	f7f8 fafa 	bl	8000a38 <__aeabi_d2iz>
 8008444:	4604      	mov	r4, r0
 8008446:	f7f7 ffdd 	bl	8000404 <__aeabi_i2d>
 800844a:	4602      	mov	r2, r0
 800844c:	460b      	mov	r3, r1
 800844e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008452:	f7f7 fe89 	bl	8000168 <__aeabi_dsub>
 8008456:	4602      	mov	r2, r0
 8008458:	460b      	mov	r3, r1
 800845a:	3430      	adds	r4, #48	; 0x30
 800845c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008460:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008464:	f807 4b01 	strb.w	r4, [r7], #1
 8008468:	f7f8 faa8 	bl	80009bc <__aeabi_dcmplt>
 800846c:	2800      	cmp	r0, #0
 800846e:	d173      	bne.n	8008558 <_dtoa_r+0x638>
 8008470:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008474:	2000      	movs	r0, #0
 8008476:	4911      	ldr	r1, [pc, #68]	; (80084bc <_dtoa_r+0x59c>)
 8008478:	f7f7 fe76 	bl	8000168 <__aeabi_dsub>
 800847c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008480:	f7f8 fa9c 	bl	80009bc <__aeabi_dcmplt>
 8008484:	2800      	cmp	r0, #0
 8008486:	f040 80b6 	bne.w	80085f6 <_dtoa_r+0x6d6>
 800848a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800848c:	429f      	cmp	r7, r3
 800848e:	f43f af7a 	beq.w	8008386 <_dtoa_r+0x466>
 8008492:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008496:	2200      	movs	r2, #0
 8008498:	4b09      	ldr	r3, [pc, #36]	; (80084c0 <_dtoa_r+0x5a0>)
 800849a:	f7f8 f81d 	bl	80004d8 <__aeabi_dmul>
 800849e:	2200      	movs	r2, #0
 80084a0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80084a4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80084a8:	4b05      	ldr	r3, [pc, #20]	; (80084c0 <_dtoa_r+0x5a0>)
 80084aa:	f7f8 f815 	bl	80004d8 <__aeabi_dmul>
 80084ae:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80084b2:	e7c3      	b.n	800843c <_dtoa_r+0x51c>
 80084b4:	08009d60 	.word	0x08009d60
 80084b8:	08009d38 	.word	0x08009d38
 80084bc:	3ff00000 	.word	0x3ff00000
 80084c0:	40240000 	.word	0x40240000
 80084c4:	401c0000 	.word	0x401c0000
 80084c8:	40140000 	.word	0x40140000
 80084cc:	3fe00000 	.word	0x3fe00000
 80084d0:	4630      	mov	r0, r6
 80084d2:	4639      	mov	r1, r7
 80084d4:	f7f8 f800 	bl	80004d8 <__aeabi_dmul>
 80084d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80084da:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80084de:	9c03      	ldr	r4, [sp, #12]
 80084e0:	9314      	str	r3, [sp, #80]	; 0x50
 80084e2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80084e6:	f7f8 faa7 	bl	8000a38 <__aeabi_d2iz>
 80084ea:	9015      	str	r0, [sp, #84]	; 0x54
 80084ec:	f7f7 ff8a 	bl	8000404 <__aeabi_i2d>
 80084f0:	4602      	mov	r2, r0
 80084f2:	460b      	mov	r3, r1
 80084f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80084f8:	f7f7 fe36 	bl	8000168 <__aeabi_dsub>
 80084fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80084fe:	4606      	mov	r6, r0
 8008500:	3330      	adds	r3, #48	; 0x30
 8008502:	f804 3b01 	strb.w	r3, [r4], #1
 8008506:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008508:	460f      	mov	r7, r1
 800850a:	429c      	cmp	r4, r3
 800850c:	f04f 0200 	mov.w	r2, #0
 8008510:	d124      	bne.n	800855c <_dtoa_r+0x63c>
 8008512:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008516:	4baf      	ldr	r3, [pc, #700]	; (80087d4 <_dtoa_r+0x8b4>)
 8008518:	f7f7 fe28 	bl	800016c <__adddf3>
 800851c:	4602      	mov	r2, r0
 800851e:	460b      	mov	r3, r1
 8008520:	4630      	mov	r0, r6
 8008522:	4639      	mov	r1, r7
 8008524:	f7f8 fa68 	bl	80009f8 <__aeabi_dcmpgt>
 8008528:	2800      	cmp	r0, #0
 800852a:	d163      	bne.n	80085f4 <_dtoa_r+0x6d4>
 800852c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008530:	2000      	movs	r0, #0
 8008532:	49a8      	ldr	r1, [pc, #672]	; (80087d4 <_dtoa_r+0x8b4>)
 8008534:	f7f7 fe18 	bl	8000168 <__aeabi_dsub>
 8008538:	4602      	mov	r2, r0
 800853a:	460b      	mov	r3, r1
 800853c:	4630      	mov	r0, r6
 800853e:	4639      	mov	r1, r7
 8008540:	f7f8 fa3c 	bl	80009bc <__aeabi_dcmplt>
 8008544:	2800      	cmp	r0, #0
 8008546:	f43f af1e 	beq.w	8008386 <_dtoa_r+0x466>
 800854a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800854c:	1e7b      	subs	r3, r7, #1
 800854e:	9314      	str	r3, [sp, #80]	; 0x50
 8008550:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8008554:	2b30      	cmp	r3, #48	; 0x30
 8008556:	d0f8      	beq.n	800854a <_dtoa_r+0x62a>
 8008558:	46c3      	mov	fp, r8
 800855a:	e03b      	b.n	80085d4 <_dtoa_r+0x6b4>
 800855c:	4b9e      	ldr	r3, [pc, #632]	; (80087d8 <_dtoa_r+0x8b8>)
 800855e:	f7f7 ffbb 	bl	80004d8 <__aeabi_dmul>
 8008562:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008566:	e7bc      	b.n	80084e2 <_dtoa_r+0x5c2>
 8008568:	9f03      	ldr	r7, [sp, #12]
 800856a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800856e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008572:	4640      	mov	r0, r8
 8008574:	4649      	mov	r1, r9
 8008576:	f7f8 f8d9 	bl	800072c <__aeabi_ddiv>
 800857a:	f7f8 fa5d 	bl	8000a38 <__aeabi_d2iz>
 800857e:	4604      	mov	r4, r0
 8008580:	f7f7 ff40 	bl	8000404 <__aeabi_i2d>
 8008584:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008588:	f7f7 ffa6 	bl	80004d8 <__aeabi_dmul>
 800858c:	4602      	mov	r2, r0
 800858e:	460b      	mov	r3, r1
 8008590:	4640      	mov	r0, r8
 8008592:	4649      	mov	r1, r9
 8008594:	f7f7 fde8 	bl	8000168 <__aeabi_dsub>
 8008598:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800859c:	f807 6b01 	strb.w	r6, [r7], #1
 80085a0:	9e03      	ldr	r6, [sp, #12]
 80085a2:	f8dd c020 	ldr.w	ip, [sp, #32]
 80085a6:	1bbe      	subs	r6, r7, r6
 80085a8:	45b4      	cmp	ip, r6
 80085aa:	4602      	mov	r2, r0
 80085ac:	460b      	mov	r3, r1
 80085ae:	d136      	bne.n	800861e <_dtoa_r+0x6fe>
 80085b0:	f7f7 fddc 	bl	800016c <__adddf3>
 80085b4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80085b8:	4680      	mov	r8, r0
 80085ba:	4689      	mov	r9, r1
 80085bc:	f7f8 fa1c 	bl	80009f8 <__aeabi_dcmpgt>
 80085c0:	bb58      	cbnz	r0, 800861a <_dtoa_r+0x6fa>
 80085c2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80085c6:	4640      	mov	r0, r8
 80085c8:	4649      	mov	r1, r9
 80085ca:	f7f8 f9ed 	bl	80009a8 <__aeabi_dcmpeq>
 80085ce:	b108      	cbz	r0, 80085d4 <_dtoa_r+0x6b4>
 80085d0:	07e3      	lsls	r3, r4, #31
 80085d2:	d422      	bmi.n	800861a <_dtoa_r+0x6fa>
 80085d4:	4651      	mov	r1, sl
 80085d6:	4628      	mov	r0, r5
 80085d8:	f000 fbc2 	bl	8008d60 <_Bfree>
 80085dc:	2300      	movs	r3, #0
 80085de:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80085e0:	703b      	strb	r3, [r7, #0]
 80085e2:	f10b 0301 	add.w	r3, fp, #1
 80085e6:	6013      	str	r3, [r2, #0]
 80085e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	f43f ace6 	beq.w	8007fbc <_dtoa_r+0x9c>
 80085f0:	601f      	str	r7, [r3, #0]
 80085f2:	e4e3      	b.n	8007fbc <_dtoa_r+0x9c>
 80085f4:	4627      	mov	r7, r4
 80085f6:	463b      	mov	r3, r7
 80085f8:	461f      	mov	r7, r3
 80085fa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80085fe:	2a39      	cmp	r2, #57	; 0x39
 8008600:	d107      	bne.n	8008612 <_dtoa_r+0x6f2>
 8008602:	9a03      	ldr	r2, [sp, #12]
 8008604:	429a      	cmp	r2, r3
 8008606:	d1f7      	bne.n	80085f8 <_dtoa_r+0x6d8>
 8008608:	2230      	movs	r2, #48	; 0x30
 800860a:	9903      	ldr	r1, [sp, #12]
 800860c:	f108 0801 	add.w	r8, r8, #1
 8008610:	700a      	strb	r2, [r1, #0]
 8008612:	781a      	ldrb	r2, [r3, #0]
 8008614:	3201      	adds	r2, #1
 8008616:	701a      	strb	r2, [r3, #0]
 8008618:	e79e      	b.n	8008558 <_dtoa_r+0x638>
 800861a:	46d8      	mov	r8, fp
 800861c:	e7eb      	b.n	80085f6 <_dtoa_r+0x6d6>
 800861e:	2200      	movs	r2, #0
 8008620:	4b6d      	ldr	r3, [pc, #436]	; (80087d8 <_dtoa_r+0x8b8>)
 8008622:	f7f7 ff59 	bl	80004d8 <__aeabi_dmul>
 8008626:	2200      	movs	r2, #0
 8008628:	2300      	movs	r3, #0
 800862a:	4680      	mov	r8, r0
 800862c:	4689      	mov	r9, r1
 800862e:	f7f8 f9bb 	bl	80009a8 <__aeabi_dcmpeq>
 8008632:	2800      	cmp	r0, #0
 8008634:	d09b      	beq.n	800856e <_dtoa_r+0x64e>
 8008636:	e7cd      	b.n	80085d4 <_dtoa_r+0x6b4>
 8008638:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800863a:	2a00      	cmp	r2, #0
 800863c:	f000 80c4 	beq.w	80087c8 <_dtoa_r+0x8a8>
 8008640:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8008642:	2a01      	cmp	r2, #1
 8008644:	f300 80a8 	bgt.w	8008798 <_dtoa_r+0x878>
 8008648:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800864a:	2a00      	cmp	r2, #0
 800864c:	f000 80a0 	beq.w	8008790 <_dtoa_r+0x870>
 8008650:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8008654:	464f      	mov	r7, r9
 8008656:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008658:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800865a:	2101      	movs	r1, #1
 800865c:	441a      	add	r2, r3
 800865e:	4628      	mov	r0, r5
 8008660:	4499      	add	r9, r3
 8008662:	9209      	str	r2, [sp, #36]	; 0x24
 8008664:	f000 fc32 	bl	8008ecc <__i2b>
 8008668:	4606      	mov	r6, r0
 800866a:	b15f      	cbz	r7, 8008684 <_dtoa_r+0x764>
 800866c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800866e:	2b00      	cmp	r3, #0
 8008670:	dd08      	ble.n	8008684 <_dtoa_r+0x764>
 8008672:	42bb      	cmp	r3, r7
 8008674:	bfa8      	it	ge
 8008676:	463b      	movge	r3, r7
 8008678:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800867a:	eba9 0903 	sub.w	r9, r9, r3
 800867e:	1aff      	subs	r7, r7, r3
 8008680:	1ad3      	subs	r3, r2, r3
 8008682:	9309      	str	r3, [sp, #36]	; 0x24
 8008684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008686:	b1f3      	cbz	r3, 80086c6 <_dtoa_r+0x7a6>
 8008688:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800868a:	2b00      	cmp	r3, #0
 800868c:	f000 80a0 	beq.w	80087d0 <_dtoa_r+0x8b0>
 8008690:	2c00      	cmp	r4, #0
 8008692:	dd10      	ble.n	80086b6 <_dtoa_r+0x796>
 8008694:	4631      	mov	r1, r6
 8008696:	4622      	mov	r2, r4
 8008698:	4628      	mov	r0, r5
 800869a:	f000 fcd5 	bl	8009048 <__pow5mult>
 800869e:	4652      	mov	r2, sl
 80086a0:	4601      	mov	r1, r0
 80086a2:	4606      	mov	r6, r0
 80086a4:	4628      	mov	r0, r5
 80086a6:	f000 fc27 	bl	8008ef8 <__multiply>
 80086aa:	4680      	mov	r8, r0
 80086ac:	4651      	mov	r1, sl
 80086ae:	4628      	mov	r0, r5
 80086b0:	f000 fb56 	bl	8008d60 <_Bfree>
 80086b4:	46c2      	mov	sl, r8
 80086b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80086b8:	1b1a      	subs	r2, r3, r4
 80086ba:	d004      	beq.n	80086c6 <_dtoa_r+0x7a6>
 80086bc:	4651      	mov	r1, sl
 80086be:	4628      	mov	r0, r5
 80086c0:	f000 fcc2 	bl	8009048 <__pow5mult>
 80086c4:	4682      	mov	sl, r0
 80086c6:	2101      	movs	r1, #1
 80086c8:	4628      	mov	r0, r5
 80086ca:	f000 fbff 	bl	8008ecc <__i2b>
 80086ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80086d0:	4604      	mov	r4, r0
 80086d2:	2b00      	cmp	r3, #0
 80086d4:	f340 8082 	ble.w	80087dc <_dtoa_r+0x8bc>
 80086d8:	461a      	mov	r2, r3
 80086da:	4601      	mov	r1, r0
 80086dc:	4628      	mov	r0, r5
 80086de:	f000 fcb3 	bl	8009048 <__pow5mult>
 80086e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80086e4:	4604      	mov	r4, r0
 80086e6:	2b01      	cmp	r3, #1
 80086e8:	dd7b      	ble.n	80087e2 <_dtoa_r+0x8c2>
 80086ea:	f04f 0800 	mov.w	r8, #0
 80086ee:	6923      	ldr	r3, [r4, #16]
 80086f0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80086f4:	6918      	ldr	r0, [r3, #16]
 80086f6:	f000 fb9b 	bl	8008e30 <__hi0bits>
 80086fa:	f1c0 0020 	rsb	r0, r0, #32
 80086fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008700:	4418      	add	r0, r3
 8008702:	f010 001f 	ands.w	r0, r0, #31
 8008706:	f000 8092 	beq.w	800882e <_dtoa_r+0x90e>
 800870a:	f1c0 0320 	rsb	r3, r0, #32
 800870e:	2b04      	cmp	r3, #4
 8008710:	f340 8085 	ble.w	800881e <_dtoa_r+0x8fe>
 8008714:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008716:	f1c0 001c 	rsb	r0, r0, #28
 800871a:	4403      	add	r3, r0
 800871c:	4481      	add	r9, r0
 800871e:	4407      	add	r7, r0
 8008720:	9309      	str	r3, [sp, #36]	; 0x24
 8008722:	f1b9 0f00 	cmp.w	r9, #0
 8008726:	dd05      	ble.n	8008734 <_dtoa_r+0x814>
 8008728:	4651      	mov	r1, sl
 800872a:	464a      	mov	r2, r9
 800872c:	4628      	mov	r0, r5
 800872e:	f000 fce5 	bl	80090fc <__lshift>
 8008732:	4682      	mov	sl, r0
 8008734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008736:	2b00      	cmp	r3, #0
 8008738:	dd05      	ble.n	8008746 <_dtoa_r+0x826>
 800873a:	4621      	mov	r1, r4
 800873c:	461a      	mov	r2, r3
 800873e:	4628      	mov	r0, r5
 8008740:	f000 fcdc 	bl	80090fc <__lshift>
 8008744:	4604      	mov	r4, r0
 8008746:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008748:	2b00      	cmp	r3, #0
 800874a:	d072      	beq.n	8008832 <_dtoa_r+0x912>
 800874c:	4621      	mov	r1, r4
 800874e:	4650      	mov	r0, sl
 8008750:	f000 fd40 	bl	80091d4 <__mcmp>
 8008754:	2800      	cmp	r0, #0
 8008756:	da6c      	bge.n	8008832 <_dtoa_r+0x912>
 8008758:	2300      	movs	r3, #0
 800875a:	4651      	mov	r1, sl
 800875c:	220a      	movs	r2, #10
 800875e:	4628      	mov	r0, r5
 8008760:	f000 fb20 	bl	8008da4 <__multadd>
 8008764:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008766:	4682      	mov	sl, r0
 8008768:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800876c:	2b00      	cmp	r3, #0
 800876e:	f000 81ac 	beq.w	8008aca <_dtoa_r+0xbaa>
 8008772:	2300      	movs	r3, #0
 8008774:	4631      	mov	r1, r6
 8008776:	220a      	movs	r2, #10
 8008778:	4628      	mov	r0, r5
 800877a:	f000 fb13 	bl	8008da4 <__multadd>
 800877e:	9b06      	ldr	r3, [sp, #24]
 8008780:	4606      	mov	r6, r0
 8008782:	2b00      	cmp	r3, #0
 8008784:	f300 8093 	bgt.w	80088ae <_dtoa_r+0x98e>
 8008788:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800878a:	2b02      	cmp	r3, #2
 800878c:	dc59      	bgt.n	8008842 <_dtoa_r+0x922>
 800878e:	e08e      	b.n	80088ae <_dtoa_r+0x98e>
 8008790:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8008792:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8008796:	e75d      	b.n	8008654 <_dtoa_r+0x734>
 8008798:	9b08      	ldr	r3, [sp, #32]
 800879a:	1e5c      	subs	r4, r3, #1
 800879c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800879e:	42a3      	cmp	r3, r4
 80087a0:	bfbf      	itttt	lt
 80087a2:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80087a4:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 80087a6:	1ae3      	sublt	r3, r4, r3
 80087a8:	18d2      	addlt	r2, r2, r3
 80087aa:	bfa8      	it	ge
 80087ac:	1b1c      	subge	r4, r3, r4
 80087ae:	9b08      	ldr	r3, [sp, #32]
 80087b0:	bfbe      	ittt	lt
 80087b2:	940a      	strlt	r4, [sp, #40]	; 0x28
 80087b4:	920e      	strlt	r2, [sp, #56]	; 0x38
 80087b6:	2400      	movlt	r4, #0
 80087b8:	2b00      	cmp	r3, #0
 80087ba:	bfb5      	itete	lt
 80087bc:	eba9 0703 	sublt.w	r7, r9, r3
 80087c0:	464f      	movge	r7, r9
 80087c2:	2300      	movlt	r3, #0
 80087c4:	9b08      	ldrge	r3, [sp, #32]
 80087c6:	e747      	b.n	8008658 <_dtoa_r+0x738>
 80087c8:	464f      	mov	r7, r9
 80087ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80087cc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80087ce:	e74c      	b.n	800866a <_dtoa_r+0x74a>
 80087d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80087d2:	e773      	b.n	80086bc <_dtoa_r+0x79c>
 80087d4:	3fe00000 	.word	0x3fe00000
 80087d8:	40240000 	.word	0x40240000
 80087dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80087de:	2b01      	cmp	r3, #1
 80087e0:	dc18      	bgt.n	8008814 <_dtoa_r+0x8f4>
 80087e2:	9b04      	ldr	r3, [sp, #16]
 80087e4:	b9b3      	cbnz	r3, 8008814 <_dtoa_r+0x8f4>
 80087e6:	9b05      	ldr	r3, [sp, #20]
 80087e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80087ec:	b993      	cbnz	r3, 8008814 <_dtoa_r+0x8f4>
 80087ee:	9b05      	ldr	r3, [sp, #20]
 80087f0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80087f4:	0d1b      	lsrs	r3, r3, #20
 80087f6:	051b      	lsls	r3, r3, #20
 80087f8:	b17b      	cbz	r3, 800881a <_dtoa_r+0x8fa>
 80087fa:	f04f 0801 	mov.w	r8, #1
 80087fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008800:	f109 0901 	add.w	r9, r9, #1
 8008804:	3301      	adds	r3, #1
 8008806:	9309      	str	r3, [sp, #36]	; 0x24
 8008808:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800880a:	2b00      	cmp	r3, #0
 800880c:	f47f af6f 	bne.w	80086ee <_dtoa_r+0x7ce>
 8008810:	2001      	movs	r0, #1
 8008812:	e774      	b.n	80086fe <_dtoa_r+0x7de>
 8008814:	f04f 0800 	mov.w	r8, #0
 8008818:	e7f6      	b.n	8008808 <_dtoa_r+0x8e8>
 800881a:	4698      	mov	r8, r3
 800881c:	e7f4      	b.n	8008808 <_dtoa_r+0x8e8>
 800881e:	d080      	beq.n	8008722 <_dtoa_r+0x802>
 8008820:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008822:	331c      	adds	r3, #28
 8008824:	441a      	add	r2, r3
 8008826:	4499      	add	r9, r3
 8008828:	441f      	add	r7, r3
 800882a:	9209      	str	r2, [sp, #36]	; 0x24
 800882c:	e779      	b.n	8008722 <_dtoa_r+0x802>
 800882e:	4603      	mov	r3, r0
 8008830:	e7f6      	b.n	8008820 <_dtoa_r+0x900>
 8008832:	9b08      	ldr	r3, [sp, #32]
 8008834:	2b00      	cmp	r3, #0
 8008836:	dc34      	bgt.n	80088a2 <_dtoa_r+0x982>
 8008838:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800883a:	2b02      	cmp	r3, #2
 800883c:	dd31      	ble.n	80088a2 <_dtoa_r+0x982>
 800883e:	9b08      	ldr	r3, [sp, #32]
 8008840:	9306      	str	r3, [sp, #24]
 8008842:	9b06      	ldr	r3, [sp, #24]
 8008844:	b963      	cbnz	r3, 8008860 <_dtoa_r+0x940>
 8008846:	4621      	mov	r1, r4
 8008848:	2205      	movs	r2, #5
 800884a:	4628      	mov	r0, r5
 800884c:	f000 faaa 	bl	8008da4 <__multadd>
 8008850:	4601      	mov	r1, r0
 8008852:	4604      	mov	r4, r0
 8008854:	4650      	mov	r0, sl
 8008856:	f000 fcbd 	bl	80091d4 <__mcmp>
 800885a:	2800      	cmp	r0, #0
 800885c:	f73f adbf 	bgt.w	80083de <_dtoa_r+0x4be>
 8008860:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008862:	9f03      	ldr	r7, [sp, #12]
 8008864:	ea6f 0b03 	mvn.w	fp, r3
 8008868:	f04f 0800 	mov.w	r8, #0
 800886c:	4621      	mov	r1, r4
 800886e:	4628      	mov	r0, r5
 8008870:	f000 fa76 	bl	8008d60 <_Bfree>
 8008874:	2e00      	cmp	r6, #0
 8008876:	f43f aead 	beq.w	80085d4 <_dtoa_r+0x6b4>
 800887a:	f1b8 0f00 	cmp.w	r8, #0
 800887e:	d005      	beq.n	800888c <_dtoa_r+0x96c>
 8008880:	45b0      	cmp	r8, r6
 8008882:	d003      	beq.n	800888c <_dtoa_r+0x96c>
 8008884:	4641      	mov	r1, r8
 8008886:	4628      	mov	r0, r5
 8008888:	f000 fa6a 	bl	8008d60 <_Bfree>
 800888c:	4631      	mov	r1, r6
 800888e:	4628      	mov	r0, r5
 8008890:	f000 fa66 	bl	8008d60 <_Bfree>
 8008894:	e69e      	b.n	80085d4 <_dtoa_r+0x6b4>
 8008896:	2400      	movs	r4, #0
 8008898:	4626      	mov	r6, r4
 800889a:	e7e1      	b.n	8008860 <_dtoa_r+0x940>
 800889c:	46c3      	mov	fp, r8
 800889e:	4626      	mov	r6, r4
 80088a0:	e59d      	b.n	80083de <_dtoa_r+0x4be>
 80088a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80088a4:	2b00      	cmp	r3, #0
 80088a6:	f000 80c8 	beq.w	8008a3a <_dtoa_r+0xb1a>
 80088aa:	9b08      	ldr	r3, [sp, #32]
 80088ac:	9306      	str	r3, [sp, #24]
 80088ae:	2f00      	cmp	r7, #0
 80088b0:	dd05      	ble.n	80088be <_dtoa_r+0x99e>
 80088b2:	4631      	mov	r1, r6
 80088b4:	463a      	mov	r2, r7
 80088b6:	4628      	mov	r0, r5
 80088b8:	f000 fc20 	bl	80090fc <__lshift>
 80088bc:	4606      	mov	r6, r0
 80088be:	f1b8 0f00 	cmp.w	r8, #0
 80088c2:	d05b      	beq.n	800897c <_dtoa_r+0xa5c>
 80088c4:	4628      	mov	r0, r5
 80088c6:	6871      	ldr	r1, [r6, #4]
 80088c8:	f000 fa0a 	bl	8008ce0 <_Balloc>
 80088cc:	4607      	mov	r7, r0
 80088ce:	b928      	cbnz	r0, 80088dc <_dtoa_r+0x9bc>
 80088d0:	4602      	mov	r2, r0
 80088d2:	f240 21ef 	movw	r1, #751	; 0x2ef
 80088d6:	4b81      	ldr	r3, [pc, #516]	; (8008adc <_dtoa_r+0xbbc>)
 80088d8:	f7ff bb36 	b.w	8007f48 <_dtoa_r+0x28>
 80088dc:	6932      	ldr	r2, [r6, #16]
 80088de:	f106 010c 	add.w	r1, r6, #12
 80088e2:	3202      	adds	r2, #2
 80088e4:	0092      	lsls	r2, r2, #2
 80088e6:	300c      	adds	r0, #12
 80088e8:	f7ff fa83 	bl	8007df2 <memcpy>
 80088ec:	2201      	movs	r2, #1
 80088ee:	4639      	mov	r1, r7
 80088f0:	4628      	mov	r0, r5
 80088f2:	f000 fc03 	bl	80090fc <__lshift>
 80088f6:	46b0      	mov	r8, r6
 80088f8:	4606      	mov	r6, r0
 80088fa:	9b03      	ldr	r3, [sp, #12]
 80088fc:	9a03      	ldr	r2, [sp, #12]
 80088fe:	3301      	adds	r3, #1
 8008900:	9308      	str	r3, [sp, #32]
 8008902:	9b06      	ldr	r3, [sp, #24]
 8008904:	4413      	add	r3, r2
 8008906:	930b      	str	r3, [sp, #44]	; 0x2c
 8008908:	9b04      	ldr	r3, [sp, #16]
 800890a:	f003 0301 	and.w	r3, r3, #1
 800890e:	930a      	str	r3, [sp, #40]	; 0x28
 8008910:	9b08      	ldr	r3, [sp, #32]
 8008912:	4621      	mov	r1, r4
 8008914:	3b01      	subs	r3, #1
 8008916:	4650      	mov	r0, sl
 8008918:	9304      	str	r3, [sp, #16]
 800891a:	f7ff fa78 	bl	8007e0e <quorem>
 800891e:	4641      	mov	r1, r8
 8008920:	9006      	str	r0, [sp, #24]
 8008922:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8008926:	4650      	mov	r0, sl
 8008928:	f000 fc54 	bl	80091d4 <__mcmp>
 800892c:	4632      	mov	r2, r6
 800892e:	9009      	str	r0, [sp, #36]	; 0x24
 8008930:	4621      	mov	r1, r4
 8008932:	4628      	mov	r0, r5
 8008934:	f000 fc6a 	bl	800920c <__mdiff>
 8008938:	68c2      	ldr	r2, [r0, #12]
 800893a:	4607      	mov	r7, r0
 800893c:	bb02      	cbnz	r2, 8008980 <_dtoa_r+0xa60>
 800893e:	4601      	mov	r1, r0
 8008940:	4650      	mov	r0, sl
 8008942:	f000 fc47 	bl	80091d4 <__mcmp>
 8008946:	4602      	mov	r2, r0
 8008948:	4639      	mov	r1, r7
 800894a:	4628      	mov	r0, r5
 800894c:	920c      	str	r2, [sp, #48]	; 0x30
 800894e:	f000 fa07 	bl	8008d60 <_Bfree>
 8008952:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008954:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008956:	9f08      	ldr	r7, [sp, #32]
 8008958:	ea43 0102 	orr.w	r1, r3, r2
 800895c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800895e:	4319      	orrs	r1, r3
 8008960:	d110      	bne.n	8008984 <_dtoa_r+0xa64>
 8008962:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8008966:	d029      	beq.n	80089bc <_dtoa_r+0xa9c>
 8008968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800896a:	2b00      	cmp	r3, #0
 800896c:	dd02      	ble.n	8008974 <_dtoa_r+0xa54>
 800896e:	9b06      	ldr	r3, [sp, #24]
 8008970:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8008974:	9b04      	ldr	r3, [sp, #16]
 8008976:	f883 9000 	strb.w	r9, [r3]
 800897a:	e777      	b.n	800886c <_dtoa_r+0x94c>
 800897c:	4630      	mov	r0, r6
 800897e:	e7ba      	b.n	80088f6 <_dtoa_r+0x9d6>
 8008980:	2201      	movs	r2, #1
 8008982:	e7e1      	b.n	8008948 <_dtoa_r+0xa28>
 8008984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008986:	2b00      	cmp	r3, #0
 8008988:	db04      	blt.n	8008994 <_dtoa_r+0xa74>
 800898a:	9922      	ldr	r1, [sp, #136]	; 0x88
 800898c:	430b      	orrs	r3, r1
 800898e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008990:	430b      	orrs	r3, r1
 8008992:	d120      	bne.n	80089d6 <_dtoa_r+0xab6>
 8008994:	2a00      	cmp	r2, #0
 8008996:	dded      	ble.n	8008974 <_dtoa_r+0xa54>
 8008998:	4651      	mov	r1, sl
 800899a:	2201      	movs	r2, #1
 800899c:	4628      	mov	r0, r5
 800899e:	f000 fbad 	bl	80090fc <__lshift>
 80089a2:	4621      	mov	r1, r4
 80089a4:	4682      	mov	sl, r0
 80089a6:	f000 fc15 	bl	80091d4 <__mcmp>
 80089aa:	2800      	cmp	r0, #0
 80089ac:	dc03      	bgt.n	80089b6 <_dtoa_r+0xa96>
 80089ae:	d1e1      	bne.n	8008974 <_dtoa_r+0xa54>
 80089b0:	f019 0f01 	tst.w	r9, #1
 80089b4:	d0de      	beq.n	8008974 <_dtoa_r+0xa54>
 80089b6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80089ba:	d1d8      	bne.n	800896e <_dtoa_r+0xa4e>
 80089bc:	2339      	movs	r3, #57	; 0x39
 80089be:	9a04      	ldr	r2, [sp, #16]
 80089c0:	7013      	strb	r3, [r2, #0]
 80089c2:	463b      	mov	r3, r7
 80089c4:	461f      	mov	r7, r3
 80089c6:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 80089ca:	3b01      	subs	r3, #1
 80089cc:	2a39      	cmp	r2, #57	; 0x39
 80089ce:	d06b      	beq.n	8008aa8 <_dtoa_r+0xb88>
 80089d0:	3201      	adds	r2, #1
 80089d2:	701a      	strb	r2, [r3, #0]
 80089d4:	e74a      	b.n	800886c <_dtoa_r+0x94c>
 80089d6:	2a00      	cmp	r2, #0
 80089d8:	dd07      	ble.n	80089ea <_dtoa_r+0xaca>
 80089da:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80089de:	d0ed      	beq.n	80089bc <_dtoa_r+0xa9c>
 80089e0:	9a04      	ldr	r2, [sp, #16]
 80089e2:	f109 0301 	add.w	r3, r9, #1
 80089e6:	7013      	strb	r3, [r2, #0]
 80089e8:	e740      	b.n	800886c <_dtoa_r+0x94c>
 80089ea:	9b08      	ldr	r3, [sp, #32]
 80089ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80089ee:	f803 9c01 	strb.w	r9, [r3, #-1]
 80089f2:	4293      	cmp	r3, r2
 80089f4:	d042      	beq.n	8008a7c <_dtoa_r+0xb5c>
 80089f6:	4651      	mov	r1, sl
 80089f8:	2300      	movs	r3, #0
 80089fa:	220a      	movs	r2, #10
 80089fc:	4628      	mov	r0, r5
 80089fe:	f000 f9d1 	bl	8008da4 <__multadd>
 8008a02:	45b0      	cmp	r8, r6
 8008a04:	4682      	mov	sl, r0
 8008a06:	f04f 0300 	mov.w	r3, #0
 8008a0a:	f04f 020a 	mov.w	r2, #10
 8008a0e:	4641      	mov	r1, r8
 8008a10:	4628      	mov	r0, r5
 8008a12:	d107      	bne.n	8008a24 <_dtoa_r+0xb04>
 8008a14:	f000 f9c6 	bl	8008da4 <__multadd>
 8008a18:	4680      	mov	r8, r0
 8008a1a:	4606      	mov	r6, r0
 8008a1c:	9b08      	ldr	r3, [sp, #32]
 8008a1e:	3301      	adds	r3, #1
 8008a20:	9308      	str	r3, [sp, #32]
 8008a22:	e775      	b.n	8008910 <_dtoa_r+0x9f0>
 8008a24:	f000 f9be 	bl	8008da4 <__multadd>
 8008a28:	4631      	mov	r1, r6
 8008a2a:	4680      	mov	r8, r0
 8008a2c:	2300      	movs	r3, #0
 8008a2e:	220a      	movs	r2, #10
 8008a30:	4628      	mov	r0, r5
 8008a32:	f000 f9b7 	bl	8008da4 <__multadd>
 8008a36:	4606      	mov	r6, r0
 8008a38:	e7f0      	b.n	8008a1c <_dtoa_r+0xafc>
 8008a3a:	9b08      	ldr	r3, [sp, #32]
 8008a3c:	9306      	str	r3, [sp, #24]
 8008a3e:	9f03      	ldr	r7, [sp, #12]
 8008a40:	4621      	mov	r1, r4
 8008a42:	4650      	mov	r0, sl
 8008a44:	f7ff f9e3 	bl	8007e0e <quorem>
 8008a48:	9b03      	ldr	r3, [sp, #12]
 8008a4a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8008a4e:	f807 9b01 	strb.w	r9, [r7], #1
 8008a52:	1afa      	subs	r2, r7, r3
 8008a54:	9b06      	ldr	r3, [sp, #24]
 8008a56:	4293      	cmp	r3, r2
 8008a58:	dd07      	ble.n	8008a6a <_dtoa_r+0xb4a>
 8008a5a:	4651      	mov	r1, sl
 8008a5c:	2300      	movs	r3, #0
 8008a5e:	220a      	movs	r2, #10
 8008a60:	4628      	mov	r0, r5
 8008a62:	f000 f99f 	bl	8008da4 <__multadd>
 8008a66:	4682      	mov	sl, r0
 8008a68:	e7ea      	b.n	8008a40 <_dtoa_r+0xb20>
 8008a6a:	9b06      	ldr	r3, [sp, #24]
 8008a6c:	f04f 0800 	mov.w	r8, #0
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	bfcc      	ite	gt
 8008a74:	461f      	movgt	r7, r3
 8008a76:	2701      	movle	r7, #1
 8008a78:	9b03      	ldr	r3, [sp, #12]
 8008a7a:	441f      	add	r7, r3
 8008a7c:	4651      	mov	r1, sl
 8008a7e:	2201      	movs	r2, #1
 8008a80:	4628      	mov	r0, r5
 8008a82:	f000 fb3b 	bl	80090fc <__lshift>
 8008a86:	4621      	mov	r1, r4
 8008a88:	4682      	mov	sl, r0
 8008a8a:	f000 fba3 	bl	80091d4 <__mcmp>
 8008a8e:	2800      	cmp	r0, #0
 8008a90:	dc97      	bgt.n	80089c2 <_dtoa_r+0xaa2>
 8008a92:	d102      	bne.n	8008a9a <_dtoa_r+0xb7a>
 8008a94:	f019 0f01 	tst.w	r9, #1
 8008a98:	d193      	bne.n	80089c2 <_dtoa_r+0xaa2>
 8008a9a:	463b      	mov	r3, r7
 8008a9c:	461f      	mov	r7, r3
 8008a9e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008aa2:	2a30      	cmp	r2, #48	; 0x30
 8008aa4:	d0fa      	beq.n	8008a9c <_dtoa_r+0xb7c>
 8008aa6:	e6e1      	b.n	800886c <_dtoa_r+0x94c>
 8008aa8:	9a03      	ldr	r2, [sp, #12]
 8008aaa:	429a      	cmp	r2, r3
 8008aac:	d18a      	bne.n	80089c4 <_dtoa_r+0xaa4>
 8008aae:	2331      	movs	r3, #49	; 0x31
 8008ab0:	f10b 0b01 	add.w	fp, fp, #1
 8008ab4:	e797      	b.n	80089e6 <_dtoa_r+0xac6>
 8008ab6:	4b0a      	ldr	r3, [pc, #40]	; (8008ae0 <_dtoa_r+0xbc0>)
 8008ab8:	f7ff ba9f 	b.w	8007ffa <_dtoa_r+0xda>
 8008abc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008abe:	2b00      	cmp	r3, #0
 8008ac0:	f47f aa77 	bne.w	8007fb2 <_dtoa_r+0x92>
 8008ac4:	4b07      	ldr	r3, [pc, #28]	; (8008ae4 <_dtoa_r+0xbc4>)
 8008ac6:	f7ff ba98 	b.w	8007ffa <_dtoa_r+0xda>
 8008aca:	9b06      	ldr	r3, [sp, #24]
 8008acc:	2b00      	cmp	r3, #0
 8008ace:	dcb6      	bgt.n	8008a3e <_dtoa_r+0xb1e>
 8008ad0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008ad2:	2b02      	cmp	r3, #2
 8008ad4:	f73f aeb5 	bgt.w	8008842 <_dtoa_r+0x922>
 8008ad8:	e7b1      	b.n	8008a3e <_dtoa_r+0xb1e>
 8008ada:	bf00      	nop
 8008adc:	08009cca 	.word	0x08009cca
 8008ae0:	08009c2a 	.word	0x08009c2a
 8008ae4:	08009c4e 	.word	0x08009c4e

08008ae8 <_free_r>:
 8008ae8:	b538      	push	{r3, r4, r5, lr}
 8008aea:	4605      	mov	r5, r0
 8008aec:	2900      	cmp	r1, #0
 8008aee:	d040      	beq.n	8008b72 <_free_r+0x8a>
 8008af0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008af4:	1f0c      	subs	r4, r1, #4
 8008af6:	2b00      	cmp	r3, #0
 8008af8:	bfb8      	it	lt
 8008afa:	18e4      	addlt	r4, r4, r3
 8008afc:	f000 f8e4 	bl	8008cc8 <__malloc_lock>
 8008b00:	4a1c      	ldr	r2, [pc, #112]	; (8008b74 <_free_r+0x8c>)
 8008b02:	6813      	ldr	r3, [r2, #0]
 8008b04:	b933      	cbnz	r3, 8008b14 <_free_r+0x2c>
 8008b06:	6063      	str	r3, [r4, #4]
 8008b08:	6014      	str	r4, [r2, #0]
 8008b0a:	4628      	mov	r0, r5
 8008b0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008b10:	f000 b8e0 	b.w	8008cd4 <__malloc_unlock>
 8008b14:	42a3      	cmp	r3, r4
 8008b16:	d908      	bls.n	8008b2a <_free_r+0x42>
 8008b18:	6820      	ldr	r0, [r4, #0]
 8008b1a:	1821      	adds	r1, r4, r0
 8008b1c:	428b      	cmp	r3, r1
 8008b1e:	bf01      	itttt	eq
 8008b20:	6819      	ldreq	r1, [r3, #0]
 8008b22:	685b      	ldreq	r3, [r3, #4]
 8008b24:	1809      	addeq	r1, r1, r0
 8008b26:	6021      	streq	r1, [r4, #0]
 8008b28:	e7ed      	b.n	8008b06 <_free_r+0x1e>
 8008b2a:	461a      	mov	r2, r3
 8008b2c:	685b      	ldr	r3, [r3, #4]
 8008b2e:	b10b      	cbz	r3, 8008b34 <_free_r+0x4c>
 8008b30:	42a3      	cmp	r3, r4
 8008b32:	d9fa      	bls.n	8008b2a <_free_r+0x42>
 8008b34:	6811      	ldr	r1, [r2, #0]
 8008b36:	1850      	adds	r0, r2, r1
 8008b38:	42a0      	cmp	r0, r4
 8008b3a:	d10b      	bne.n	8008b54 <_free_r+0x6c>
 8008b3c:	6820      	ldr	r0, [r4, #0]
 8008b3e:	4401      	add	r1, r0
 8008b40:	1850      	adds	r0, r2, r1
 8008b42:	4283      	cmp	r3, r0
 8008b44:	6011      	str	r1, [r2, #0]
 8008b46:	d1e0      	bne.n	8008b0a <_free_r+0x22>
 8008b48:	6818      	ldr	r0, [r3, #0]
 8008b4a:	685b      	ldr	r3, [r3, #4]
 8008b4c:	4408      	add	r0, r1
 8008b4e:	6010      	str	r0, [r2, #0]
 8008b50:	6053      	str	r3, [r2, #4]
 8008b52:	e7da      	b.n	8008b0a <_free_r+0x22>
 8008b54:	d902      	bls.n	8008b5c <_free_r+0x74>
 8008b56:	230c      	movs	r3, #12
 8008b58:	602b      	str	r3, [r5, #0]
 8008b5a:	e7d6      	b.n	8008b0a <_free_r+0x22>
 8008b5c:	6820      	ldr	r0, [r4, #0]
 8008b5e:	1821      	adds	r1, r4, r0
 8008b60:	428b      	cmp	r3, r1
 8008b62:	bf01      	itttt	eq
 8008b64:	6819      	ldreq	r1, [r3, #0]
 8008b66:	685b      	ldreq	r3, [r3, #4]
 8008b68:	1809      	addeq	r1, r1, r0
 8008b6a:	6021      	streq	r1, [r4, #0]
 8008b6c:	6063      	str	r3, [r4, #4]
 8008b6e:	6054      	str	r4, [r2, #4]
 8008b70:	e7cb      	b.n	8008b0a <_free_r+0x22>
 8008b72:	bd38      	pop	{r3, r4, r5, pc}
 8008b74:	20001508 	.word	0x20001508

08008b78 <malloc>:
 8008b78:	4b02      	ldr	r3, [pc, #8]	; (8008b84 <malloc+0xc>)
 8008b7a:	4601      	mov	r1, r0
 8008b7c:	6818      	ldr	r0, [r3, #0]
 8008b7e:	f000 b823 	b.w	8008bc8 <_malloc_r>
 8008b82:	bf00      	nop
 8008b84:	2000006c 	.word	0x2000006c

08008b88 <sbrk_aligned>:
 8008b88:	b570      	push	{r4, r5, r6, lr}
 8008b8a:	4e0e      	ldr	r6, [pc, #56]	; (8008bc4 <sbrk_aligned+0x3c>)
 8008b8c:	460c      	mov	r4, r1
 8008b8e:	6831      	ldr	r1, [r6, #0]
 8008b90:	4605      	mov	r5, r0
 8008b92:	b911      	cbnz	r1, 8008b9a <sbrk_aligned+0x12>
 8008b94:	f000 fcc6 	bl	8009524 <_sbrk_r>
 8008b98:	6030      	str	r0, [r6, #0]
 8008b9a:	4621      	mov	r1, r4
 8008b9c:	4628      	mov	r0, r5
 8008b9e:	f000 fcc1 	bl	8009524 <_sbrk_r>
 8008ba2:	1c43      	adds	r3, r0, #1
 8008ba4:	d00a      	beq.n	8008bbc <sbrk_aligned+0x34>
 8008ba6:	1cc4      	adds	r4, r0, #3
 8008ba8:	f024 0403 	bic.w	r4, r4, #3
 8008bac:	42a0      	cmp	r0, r4
 8008bae:	d007      	beq.n	8008bc0 <sbrk_aligned+0x38>
 8008bb0:	1a21      	subs	r1, r4, r0
 8008bb2:	4628      	mov	r0, r5
 8008bb4:	f000 fcb6 	bl	8009524 <_sbrk_r>
 8008bb8:	3001      	adds	r0, #1
 8008bba:	d101      	bne.n	8008bc0 <sbrk_aligned+0x38>
 8008bbc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8008bc0:	4620      	mov	r0, r4
 8008bc2:	bd70      	pop	{r4, r5, r6, pc}
 8008bc4:	2000150c 	.word	0x2000150c

08008bc8 <_malloc_r>:
 8008bc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008bcc:	1ccd      	adds	r5, r1, #3
 8008bce:	f025 0503 	bic.w	r5, r5, #3
 8008bd2:	3508      	adds	r5, #8
 8008bd4:	2d0c      	cmp	r5, #12
 8008bd6:	bf38      	it	cc
 8008bd8:	250c      	movcc	r5, #12
 8008bda:	2d00      	cmp	r5, #0
 8008bdc:	4607      	mov	r7, r0
 8008bde:	db01      	blt.n	8008be4 <_malloc_r+0x1c>
 8008be0:	42a9      	cmp	r1, r5
 8008be2:	d905      	bls.n	8008bf0 <_malloc_r+0x28>
 8008be4:	230c      	movs	r3, #12
 8008be6:	2600      	movs	r6, #0
 8008be8:	603b      	str	r3, [r7, #0]
 8008bea:	4630      	mov	r0, r6
 8008bec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008bf0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8008cc4 <_malloc_r+0xfc>
 8008bf4:	f000 f868 	bl	8008cc8 <__malloc_lock>
 8008bf8:	f8d8 3000 	ldr.w	r3, [r8]
 8008bfc:	461c      	mov	r4, r3
 8008bfe:	bb5c      	cbnz	r4, 8008c58 <_malloc_r+0x90>
 8008c00:	4629      	mov	r1, r5
 8008c02:	4638      	mov	r0, r7
 8008c04:	f7ff ffc0 	bl	8008b88 <sbrk_aligned>
 8008c08:	1c43      	adds	r3, r0, #1
 8008c0a:	4604      	mov	r4, r0
 8008c0c:	d155      	bne.n	8008cba <_malloc_r+0xf2>
 8008c0e:	f8d8 4000 	ldr.w	r4, [r8]
 8008c12:	4626      	mov	r6, r4
 8008c14:	2e00      	cmp	r6, #0
 8008c16:	d145      	bne.n	8008ca4 <_malloc_r+0xdc>
 8008c18:	2c00      	cmp	r4, #0
 8008c1a:	d048      	beq.n	8008cae <_malloc_r+0xe6>
 8008c1c:	6823      	ldr	r3, [r4, #0]
 8008c1e:	4631      	mov	r1, r6
 8008c20:	4638      	mov	r0, r7
 8008c22:	eb04 0903 	add.w	r9, r4, r3
 8008c26:	f000 fc7d 	bl	8009524 <_sbrk_r>
 8008c2a:	4581      	cmp	r9, r0
 8008c2c:	d13f      	bne.n	8008cae <_malloc_r+0xe6>
 8008c2e:	6821      	ldr	r1, [r4, #0]
 8008c30:	4638      	mov	r0, r7
 8008c32:	1a6d      	subs	r5, r5, r1
 8008c34:	4629      	mov	r1, r5
 8008c36:	f7ff ffa7 	bl	8008b88 <sbrk_aligned>
 8008c3a:	3001      	adds	r0, #1
 8008c3c:	d037      	beq.n	8008cae <_malloc_r+0xe6>
 8008c3e:	6823      	ldr	r3, [r4, #0]
 8008c40:	442b      	add	r3, r5
 8008c42:	6023      	str	r3, [r4, #0]
 8008c44:	f8d8 3000 	ldr.w	r3, [r8]
 8008c48:	2b00      	cmp	r3, #0
 8008c4a:	d038      	beq.n	8008cbe <_malloc_r+0xf6>
 8008c4c:	685a      	ldr	r2, [r3, #4]
 8008c4e:	42a2      	cmp	r2, r4
 8008c50:	d12b      	bne.n	8008caa <_malloc_r+0xe2>
 8008c52:	2200      	movs	r2, #0
 8008c54:	605a      	str	r2, [r3, #4]
 8008c56:	e00f      	b.n	8008c78 <_malloc_r+0xb0>
 8008c58:	6822      	ldr	r2, [r4, #0]
 8008c5a:	1b52      	subs	r2, r2, r5
 8008c5c:	d41f      	bmi.n	8008c9e <_malloc_r+0xd6>
 8008c5e:	2a0b      	cmp	r2, #11
 8008c60:	d917      	bls.n	8008c92 <_malloc_r+0xca>
 8008c62:	1961      	adds	r1, r4, r5
 8008c64:	42a3      	cmp	r3, r4
 8008c66:	6025      	str	r5, [r4, #0]
 8008c68:	bf18      	it	ne
 8008c6a:	6059      	strne	r1, [r3, #4]
 8008c6c:	6863      	ldr	r3, [r4, #4]
 8008c6e:	bf08      	it	eq
 8008c70:	f8c8 1000 	streq.w	r1, [r8]
 8008c74:	5162      	str	r2, [r4, r5]
 8008c76:	604b      	str	r3, [r1, #4]
 8008c78:	4638      	mov	r0, r7
 8008c7a:	f104 060b 	add.w	r6, r4, #11
 8008c7e:	f000 f829 	bl	8008cd4 <__malloc_unlock>
 8008c82:	f026 0607 	bic.w	r6, r6, #7
 8008c86:	1d23      	adds	r3, r4, #4
 8008c88:	1af2      	subs	r2, r6, r3
 8008c8a:	d0ae      	beq.n	8008bea <_malloc_r+0x22>
 8008c8c:	1b9b      	subs	r3, r3, r6
 8008c8e:	50a3      	str	r3, [r4, r2]
 8008c90:	e7ab      	b.n	8008bea <_malloc_r+0x22>
 8008c92:	42a3      	cmp	r3, r4
 8008c94:	6862      	ldr	r2, [r4, #4]
 8008c96:	d1dd      	bne.n	8008c54 <_malloc_r+0x8c>
 8008c98:	f8c8 2000 	str.w	r2, [r8]
 8008c9c:	e7ec      	b.n	8008c78 <_malloc_r+0xb0>
 8008c9e:	4623      	mov	r3, r4
 8008ca0:	6864      	ldr	r4, [r4, #4]
 8008ca2:	e7ac      	b.n	8008bfe <_malloc_r+0x36>
 8008ca4:	4634      	mov	r4, r6
 8008ca6:	6876      	ldr	r6, [r6, #4]
 8008ca8:	e7b4      	b.n	8008c14 <_malloc_r+0x4c>
 8008caa:	4613      	mov	r3, r2
 8008cac:	e7cc      	b.n	8008c48 <_malloc_r+0x80>
 8008cae:	230c      	movs	r3, #12
 8008cb0:	4638      	mov	r0, r7
 8008cb2:	603b      	str	r3, [r7, #0]
 8008cb4:	f000 f80e 	bl	8008cd4 <__malloc_unlock>
 8008cb8:	e797      	b.n	8008bea <_malloc_r+0x22>
 8008cba:	6025      	str	r5, [r4, #0]
 8008cbc:	e7dc      	b.n	8008c78 <_malloc_r+0xb0>
 8008cbe:	605b      	str	r3, [r3, #4]
 8008cc0:	deff      	udf	#255	; 0xff
 8008cc2:	bf00      	nop
 8008cc4:	20001508 	.word	0x20001508

08008cc8 <__malloc_lock>:
 8008cc8:	4801      	ldr	r0, [pc, #4]	; (8008cd0 <__malloc_lock+0x8>)
 8008cca:	f7ff b882 	b.w	8007dd2 <__retarget_lock_acquire_recursive>
 8008cce:	bf00      	nop
 8008cd0:	20001504 	.word	0x20001504

08008cd4 <__malloc_unlock>:
 8008cd4:	4801      	ldr	r0, [pc, #4]	; (8008cdc <__malloc_unlock+0x8>)
 8008cd6:	f7ff b87d 	b.w	8007dd4 <__retarget_lock_release_recursive>
 8008cda:	bf00      	nop
 8008cdc:	20001504 	.word	0x20001504

08008ce0 <_Balloc>:
 8008ce0:	b570      	push	{r4, r5, r6, lr}
 8008ce2:	69c6      	ldr	r6, [r0, #28]
 8008ce4:	4604      	mov	r4, r0
 8008ce6:	460d      	mov	r5, r1
 8008ce8:	b976      	cbnz	r6, 8008d08 <_Balloc+0x28>
 8008cea:	2010      	movs	r0, #16
 8008cec:	f7ff ff44 	bl	8008b78 <malloc>
 8008cf0:	4602      	mov	r2, r0
 8008cf2:	61e0      	str	r0, [r4, #28]
 8008cf4:	b920      	cbnz	r0, 8008d00 <_Balloc+0x20>
 8008cf6:	216b      	movs	r1, #107	; 0x6b
 8008cf8:	4b17      	ldr	r3, [pc, #92]	; (8008d58 <_Balloc+0x78>)
 8008cfa:	4818      	ldr	r0, [pc, #96]	; (8008d5c <_Balloc+0x7c>)
 8008cfc:	f000 fc22 	bl	8009544 <__assert_func>
 8008d00:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8008d04:	6006      	str	r6, [r0, #0]
 8008d06:	60c6      	str	r6, [r0, #12]
 8008d08:	69e6      	ldr	r6, [r4, #28]
 8008d0a:	68f3      	ldr	r3, [r6, #12]
 8008d0c:	b183      	cbz	r3, 8008d30 <_Balloc+0x50>
 8008d0e:	69e3      	ldr	r3, [r4, #28]
 8008d10:	68db      	ldr	r3, [r3, #12]
 8008d12:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8008d16:	b9b8      	cbnz	r0, 8008d48 <_Balloc+0x68>
 8008d18:	2101      	movs	r1, #1
 8008d1a:	fa01 f605 	lsl.w	r6, r1, r5
 8008d1e:	1d72      	adds	r2, r6, #5
 8008d20:	4620      	mov	r0, r4
 8008d22:	0092      	lsls	r2, r2, #2
 8008d24:	f000 fc2c 	bl	8009580 <_calloc_r>
 8008d28:	b160      	cbz	r0, 8008d44 <_Balloc+0x64>
 8008d2a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8008d2e:	e00e      	b.n	8008d4e <_Balloc+0x6e>
 8008d30:	2221      	movs	r2, #33	; 0x21
 8008d32:	2104      	movs	r1, #4
 8008d34:	4620      	mov	r0, r4
 8008d36:	f000 fc23 	bl	8009580 <_calloc_r>
 8008d3a:	69e3      	ldr	r3, [r4, #28]
 8008d3c:	60f0      	str	r0, [r6, #12]
 8008d3e:	68db      	ldr	r3, [r3, #12]
 8008d40:	2b00      	cmp	r3, #0
 8008d42:	d1e4      	bne.n	8008d0e <_Balloc+0x2e>
 8008d44:	2000      	movs	r0, #0
 8008d46:	bd70      	pop	{r4, r5, r6, pc}
 8008d48:	6802      	ldr	r2, [r0, #0]
 8008d4a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8008d4e:	2300      	movs	r3, #0
 8008d50:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8008d54:	e7f7      	b.n	8008d46 <_Balloc+0x66>
 8008d56:	bf00      	nop
 8008d58:	08009c5b 	.word	0x08009c5b
 8008d5c:	08009cdb 	.word	0x08009cdb

08008d60 <_Bfree>:
 8008d60:	b570      	push	{r4, r5, r6, lr}
 8008d62:	69c6      	ldr	r6, [r0, #28]
 8008d64:	4605      	mov	r5, r0
 8008d66:	460c      	mov	r4, r1
 8008d68:	b976      	cbnz	r6, 8008d88 <_Bfree+0x28>
 8008d6a:	2010      	movs	r0, #16
 8008d6c:	f7ff ff04 	bl	8008b78 <malloc>
 8008d70:	4602      	mov	r2, r0
 8008d72:	61e8      	str	r0, [r5, #28]
 8008d74:	b920      	cbnz	r0, 8008d80 <_Bfree+0x20>
 8008d76:	218f      	movs	r1, #143	; 0x8f
 8008d78:	4b08      	ldr	r3, [pc, #32]	; (8008d9c <_Bfree+0x3c>)
 8008d7a:	4809      	ldr	r0, [pc, #36]	; (8008da0 <_Bfree+0x40>)
 8008d7c:	f000 fbe2 	bl	8009544 <__assert_func>
 8008d80:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8008d84:	6006      	str	r6, [r0, #0]
 8008d86:	60c6      	str	r6, [r0, #12]
 8008d88:	b13c      	cbz	r4, 8008d9a <_Bfree+0x3a>
 8008d8a:	69eb      	ldr	r3, [r5, #28]
 8008d8c:	6862      	ldr	r2, [r4, #4]
 8008d8e:	68db      	ldr	r3, [r3, #12]
 8008d90:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8008d94:	6021      	str	r1, [r4, #0]
 8008d96:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8008d9a:	bd70      	pop	{r4, r5, r6, pc}
 8008d9c:	08009c5b 	.word	0x08009c5b
 8008da0:	08009cdb 	.word	0x08009cdb

08008da4 <__multadd>:
 8008da4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008da8:	4607      	mov	r7, r0
 8008daa:	460c      	mov	r4, r1
 8008dac:	461e      	mov	r6, r3
 8008dae:	2000      	movs	r0, #0
 8008db0:	690d      	ldr	r5, [r1, #16]
 8008db2:	f101 0c14 	add.w	ip, r1, #20
 8008db6:	f8dc 3000 	ldr.w	r3, [ip]
 8008dba:	3001      	adds	r0, #1
 8008dbc:	b299      	uxth	r1, r3
 8008dbe:	fb02 6101 	mla	r1, r2, r1, r6
 8008dc2:	0c1e      	lsrs	r6, r3, #16
 8008dc4:	0c0b      	lsrs	r3, r1, #16
 8008dc6:	fb02 3306 	mla	r3, r2, r6, r3
 8008dca:	b289      	uxth	r1, r1
 8008dcc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8008dd0:	4285      	cmp	r5, r0
 8008dd2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8008dd6:	f84c 1b04 	str.w	r1, [ip], #4
 8008dda:	dcec      	bgt.n	8008db6 <__multadd+0x12>
 8008ddc:	b30e      	cbz	r6, 8008e22 <__multadd+0x7e>
 8008dde:	68a3      	ldr	r3, [r4, #8]
 8008de0:	42ab      	cmp	r3, r5
 8008de2:	dc19      	bgt.n	8008e18 <__multadd+0x74>
 8008de4:	6861      	ldr	r1, [r4, #4]
 8008de6:	4638      	mov	r0, r7
 8008de8:	3101      	adds	r1, #1
 8008dea:	f7ff ff79 	bl	8008ce0 <_Balloc>
 8008dee:	4680      	mov	r8, r0
 8008df0:	b928      	cbnz	r0, 8008dfe <__multadd+0x5a>
 8008df2:	4602      	mov	r2, r0
 8008df4:	21ba      	movs	r1, #186	; 0xba
 8008df6:	4b0c      	ldr	r3, [pc, #48]	; (8008e28 <__multadd+0x84>)
 8008df8:	480c      	ldr	r0, [pc, #48]	; (8008e2c <__multadd+0x88>)
 8008dfa:	f000 fba3 	bl	8009544 <__assert_func>
 8008dfe:	6922      	ldr	r2, [r4, #16]
 8008e00:	f104 010c 	add.w	r1, r4, #12
 8008e04:	3202      	adds	r2, #2
 8008e06:	0092      	lsls	r2, r2, #2
 8008e08:	300c      	adds	r0, #12
 8008e0a:	f7fe fff2 	bl	8007df2 <memcpy>
 8008e0e:	4621      	mov	r1, r4
 8008e10:	4638      	mov	r0, r7
 8008e12:	f7ff ffa5 	bl	8008d60 <_Bfree>
 8008e16:	4644      	mov	r4, r8
 8008e18:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8008e1c:	3501      	adds	r5, #1
 8008e1e:	615e      	str	r6, [r3, #20]
 8008e20:	6125      	str	r5, [r4, #16]
 8008e22:	4620      	mov	r0, r4
 8008e24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e28:	08009cca 	.word	0x08009cca
 8008e2c:	08009cdb 	.word	0x08009cdb

08008e30 <__hi0bits>:
 8008e30:	0c02      	lsrs	r2, r0, #16
 8008e32:	0412      	lsls	r2, r2, #16
 8008e34:	4603      	mov	r3, r0
 8008e36:	b9ca      	cbnz	r2, 8008e6c <__hi0bits+0x3c>
 8008e38:	0403      	lsls	r3, r0, #16
 8008e3a:	2010      	movs	r0, #16
 8008e3c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8008e40:	bf04      	itt	eq
 8008e42:	021b      	lsleq	r3, r3, #8
 8008e44:	3008      	addeq	r0, #8
 8008e46:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8008e4a:	bf04      	itt	eq
 8008e4c:	011b      	lsleq	r3, r3, #4
 8008e4e:	3004      	addeq	r0, #4
 8008e50:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8008e54:	bf04      	itt	eq
 8008e56:	009b      	lsleq	r3, r3, #2
 8008e58:	3002      	addeq	r0, #2
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	db05      	blt.n	8008e6a <__hi0bits+0x3a>
 8008e5e:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8008e62:	f100 0001 	add.w	r0, r0, #1
 8008e66:	bf08      	it	eq
 8008e68:	2020      	moveq	r0, #32
 8008e6a:	4770      	bx	lr
 8008e6c:	2000      	movs	r0, #0
 8008e6e:	e7e5      	b.n	8008e3c <__hi0bits+0xc>

08008e70 <__lo0bits>:
 8008e70:	6803      	ldr	r3, [r0, #0]
 8008e72:	4602      	mov	r2, r0
 8008e74:	f013 0007 	ands.w	r0, r3, #7
 8008e78:	d00b      	beq.n	8008e92 <__lo0bits+0x22>
 8008e7a:	07d9      	lsls	r1, r3, #31
 8008e7c:	d421      	bmi.n	8008ec2 <__lo0bits+0x52>
 8008e7e:	0798      	lsls	r0, r3, #30
 8008e80:	bf49      	itett	mi
 8008e82:	085b      	lsrmi	r3, r3, #1
 8008e84:	089b      	lsrpl	r3, r3, #2
 8008e86:	2001      	movmi	r0, #1
 8008e88:	6013      	strmi	r3, [r2, #0]
 8008e8a:	bf5c      	itt	pl
 8008e8c:	2002      	movpl	r0, #2
 8008e8e:	6013      	strpl	r3, [r2, #0]
 8008e90:	4770      	bx	lr
 8008e92:	b299      	uxth	r1, r3
 8008e94:	b909      	cbnz	r1, 8008e9a <__lo0bits+0x2a>
 8008e96:	2010      	movs	r0, #16
 8008e98:	0c1b      	lsrs	r3, r3, #16
 8008e9a:	b2d9      	uxtb	r1, r3
 8008e9c:	b909      	cbnz	r1, 8008ea2 <__lo0bits+0x32>
 8008e9e:	3008      	adds	r0, #8
 8008ea0:	0a1b      	lsrs	r3, r3, #8
 8008ea2:	0719      	lsls	r1, r3, #28
 8008ea4:	bf04      	itt	eq
 8008ea6:	091b      	lsreq	r3, r3, #4
 8008ea8:	3004      	addeq	r0, #4
 8008eaa:	0799      	lsls	r1, r3, #30
 8008eac:	bf04      	itt	eq
 8008eae:	089b      	lsreq	r3, r3, #2
 8008eb0:	3002      	addeq	r0, #2
 8008eb2:	07d9      	lsls	r1, r3, #31
 8008eb4:	d403      	bmi.n	8008ebe <__lo0bits+0x4e>
 8008eb6:	085b      	lsrs	r3, r3, #1
 8008eb8:	f100 0001 	add.w	r0, r0, #1
 8008ebc:	d003      	beq.n	8008ec6 <__lo0bits+0x56>
 8008ebe:	6013      	str	r3, [r2, #0]
 8008ec0:	4770      	bx	lr
 8008ec2:	2000      	movs	r0, #0
 8008ec4:	4770      	bx	lr
 8008ec6:	2020      	movs	r0, #32
 8008ec8:	4770      	bx	lr
	...

08008ecc <__i2b>:
 8008ecc:	b510      	push	{r4, lr}
 8008ece:	460c      	mov	r4, r1
 8008ed0:	2101      	movs	r1, #1
 8008ed2:	f7ff ff05 	bl	8008ce0 <_Balloc>
 8008ed6:	4602      	mov	r2, r0
 8008ed8:	b928      	cbnz	r0, 8008ee6 <__i2b+0x1a>
 8008eda:	f240 1145 	movw	r1, #325	; 0x145
 8008ede:	4b04      	ldr	r3, [pc, #16]	; (8008ef0 <__i2b+0x24>)
 8008ee0:	4804      	ldr	r0, [pc, #16]	; (8008ef4 <__i2b+0x28>)
 8008ee2:	f000 fb2f 	bl	8009544 <__assert_func>
 8008ee6:	2301      	movs	r3, #1
 8008ee8:	6144      	str	r4, [r0, #20]
 8008eea:	6103      	str	r3, [r0, #16]
 8008eec:	bd10      	pop	{r4, pc}
 8008eee:	bf00      	nop
 8008ef0:	08009cca 	.word	0x08009cca
 8008ef4:	08009cdb 	.word	0x08009cdb

08008ef8 <__multiply>:
 8008ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008efc:	4691      	mov	r9, r2
 8008efe:	690a      	ldr	r2, [r1, #16]
 8008f00:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8008f04:	460c      	mov	r4, r1
 8008f06:	429a      	cmp	r2, r3
 8008f08:	bfbe      	ittt	lt
 8008f0a:	460b      	movlt	r3, r1
 8008f0c:	464c      	movlt	r4, r9
 8008f0e:	4699      	movlt	r9, r3
 8008f10:	6927      	ldr	r7, [r4, #16]
 8008f12:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8008f16:	68a3      	ldr	r3, [r4, #8]
 8008f18:	6861      	ldr	r1, [r4, #4]
 8008f1a:	eb07 060a 	add.w	r6, r7, sl
 8008f1e:	42b3      	cmp	r3, r6
 8008f20:	b085      	sub	sp, #20
 8008f22:	bfb8      	it	lt
 8008f24:	3101      	addlt	r1, #1
 8008f26:	f7ff fedb 	bl	8008ce0 <_Balloc>
 8008f2a:	b930      	cbnz	r0, 8008f3a <__multiply+0x42>
 8008f2c:	4602      	mov	r2, r0
 8008f2e:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8008f32:	4b43      	ldr	r3, [pc, #268]	; (8009040 <__multiply+0x148>)
 8008f34:	4843      	ldr	r0, [pc, #268]	; (8009044 <__multiply+0x14c>)
 8008f36:	f000 fb05 	bl	8009544 <__assert_func>
 8008f3a:	f100 0514 	add.w	r5, r0, #20
 8008f3e:	462b      	mov	r3, r5
 8008f40:	2200      	movs	r2, #0
 8008f42:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8008f46:	4543      	cmp	r3, r8
 8008f48:	d321      	bcc.n	8008f8e <__multiply+0x96>
 8008f4a:	f104 0314 	add.w	r3, r4, #20
 8008f4e:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8008f52:	f109 0314 	add.w	r3, r9, #20
 8008f56:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8008f5a:	9202      	str	r2, [sp, #8]
 8008f5c:	1b3a      	subs	r2, r7, r4
 8008f5e:	3a15      	subs	r2, #21
 8008f60:	f022 0203 	bic.w	r2, r2, #3
 8008f64:	3204      	adds	r2, #4
 8008f66:	f104 0115 	add.w	r1, r4, #21
 8008f6a:	428f      	cmp	r7, r1
 8008f6c:	bf38      	it	cc
 8008f6e:	2204      	movcc	r2, #4
 8008f70:	9201      	str	r2, [sp, #4]
 8008f72:	9a02      	ldr	r2, [sp, #8]
 8008f74:	9303      	str	r3, [sp, #12]
 8008f76:	429a      	cmp	r2, r3
 8008f78:	d80c      	bhi.n	8008f94 <__multiply+0x9c>
 8008f7a:	2e00      	cmp	r6, #0
 8008f7c:	dd03      	ble.n	8008f86 <__multiply+0x8e>
 8008f7e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8008f82:	2b00      	cmp	r3, #0
 8008f84:	d05a      	beq.n	800903c <__multiply+0x144>
 8008f86:	6106      	str	r6, [r0, #16]
 8008f88:	b005      	add	sp, #20
 8008f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f8e:	f843 2b04 	str.w	r2, [r3], #4
 8008f92:	e7d8      	b.n	8008f46 <__multiply+0x4e>
 8008f94:	f8b3 a000 	ldrh.w	sl, [r3]
 8008f98:	f1ba 0f00 	cmp.w	sl, #0
 8008f9c:	d023      	beq.n	8008fe6 <__multiply+0xee>
 8008f9e:	46a9      	mov	r9, r5
 8008fa0:	f04f 0c00 	mov.w	ip, #0
 8008fa4:	f104 0e14 	add.w	lr, r4, #20
 8008fa8:	f85e 2b04 	ldr.w	r2, [lr], #4
 8008fac:	f8d9 1000 	ldr.w	r1, [r9]
 8008fb0:	fa1f fb82 	uxth.w	fp, r2
 8008fb4:	b289      	uxth	r1, r1
 8008fb6:	fb0a 110b 	mla	r1, sl, fp, r1
 8008fba:	4461      	add	r1, ip
 8008fbc:	f8d9 c000 	ldr.w	ip, [r9]
 8008fc0:	0c12      	lsrs	r2, r2, #16
 8008fc2:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8008fc6:	fb0a c202 	mla	r2, sl, r2, ip
 8008fca:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8008fce:	b289      	uxth	r1, r1
 8008fd0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008fd4:	4577      	cmp	r7, lr
 8008fd6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8008fda:	f849 1b04 	str.w	r1, [r9], #4
 8008fde:	d8e3      	bhi.n	8008fa8 <__multiply+0xb0>
 8008fe0:	9a01      	ldr	r2, [sp, #4]
 8008fe2:	f845 c002 	str.w	ip, [r5, r2]
 8008fe6:	9a03      	ldr	r2, [sp, #12]
 8008fe8:	3304      	adds	r3, #4
 8008fea:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8008fee:	f1b9 0f00 	cmp.w	r9, #0
 8008ff2:	d021      	beq.n	8009038 <__multiply+0x140>
 8008ff4:	46ae      	mov	lr, r5
 8008ff6:	f04f 0a00 	mov.w	sl, #0
 8008ffa:	6829      	ldr	r1, [r5, #0]
 8008ffc:	f104 0c14 	add.w	ip, r4, #20
 8009000:	f8bc b000 	ldrh.w	fp, [ip]
 8009004:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8009008:	b289      	uxth	r1, r1
 800900a:	fb09 220b 	mla	r2, r9, fp, r2
 800900e:	4452      	add	r2, sl
 8009010:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009014:	f84e 1b04 	str.w	r1, [lr], #4
 8009018:	f85c 1b04 	ldr.w	r1, [ip], #4
 800901c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8009020:	f8be 1000 	ldrh.w	r1, [lr]
 8009024:	4567      	cmp	r7, ip
 8009026:	fb09 110a 	mla	r1, r9, sl, r1
 800902a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800902e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8009032:	d8e5      	bhi.n	8009000 <__multiply+0x108>
 8009034:	9a01      	ldr	r2, [sp, #4]
 8009036:	50a9      	str	r1, [r5, r2]
 8009038:	3504      	adds	r5, #4
 800903a:	e79a      	b.n	8008f72 <__multiply+0x7a>
 800903c:	3e01      	subs	r6, #1
 800903e:	e79c      	b.n	8008f7a <__multiply+0x82>
 8009040:	08009cca 	.word	0x08009cca
 8009044:	08009cdb 	.word	0x08009cdb

08009048 <__pow5mult>:
 8009048:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800904c:	4615      	mov	r5, r2
 800904e:	f012 0203 	ands.w	r2, r2, #3
 8009052:	4606      	mov	r6, r0
 8009054:	460f      	mov	r7, r1
 8009056:	d007      	beq.n	8009068 <__pow5mult+0x20>
 8009058:	4c25      	ldr	r4, [pc, #148]	; (80090f0 <__pow5mult+0xa8>)
 800905a:	3a01      	subs	r2, #1
 800905c:	2300      	movs	r3, #0
 800905e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8009062:	f7ff fe9f 	bl	8008da4 <__multadd>
 8009066:	4607      	mov	r7, r0
 8009068:	10ad      	asrs	r5, r5, #2
 800906a:	d03d      	beq.n	80090e8 <__pow5mult+0xa0>
 800906c:	69f4      	ldr	r4, [r6, #28]
 800906e:	b97c      	cbnz	r4, 8009090 <__pow5mult+0x48>
 8009070:	2010      	movs	r0, #16
 8009072:	f7ff fd81 	bl	8008b78 <malloc>
 8009076:	4602      	mov	r2, r0
 8009078:	61f0      	str	r0, [r6, #28]
 800907a:	b928      	cbnz	r0, 8009088 <__pow5mult+0x40>
 800907c:	f240 11b3 	movw	r1, #435	; 0x1b3
 8009080:	4b1c      	ldr	r3, [pc, #112]	; (80090f4 <__pow5mult+0xac>)
 8009082:	481d      	ldr	r0, [pc, #116]	; (80090f8 <__pow5mult+0xb0>)
 8009084:	f000 fa5e 	bl	8009544 <__assert_func>
 8009088:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800908c:	6004      	str	r4, [r0, #0]
 800908e:	60c4      	str	r4, [r0, #12]
 8009090:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8009094:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009098:	b94c      	cbnz	r4, 80090ae <__pow5mult+0x66>
 800909a:	f240 2171 	movw	r1, #625	; 0x271
 800909e:	4630      	mov	r0, r6
 80090a0:	f7ff ff14 	bl	8008ecc <__i2b>
 80090a4:	2300      	movs	r3, #0
 80090a6:	4604      	mov	r4, r0
 80090a8:	f8c8 0008 	str.w	r0, [r8, #8]
 80090ac:	6003      	str	r3, [r0, #0]
 80090ae:	f04f 0900 	mov.w	r9, #0
 80090b2:	07eb      	lsls	r3, r5, #31
 80090b4:	d50a      	bpl.n	80090cc <__pow5mult+0x84>
 80090b6:	4639      	mov	r1, r7
 80090b8:	4622      	mov	r2, r4
 80090ba:	4630      	mov	r0, r6
 80090bc:	f7ff ff1c 	bl	8008ef8 <__multiply>
 80090c0:	4680      	mov	r8, r0
 80090c2:	4639      	mov	r1, r7
 80090c4:	4630      	mov	r0, r6
 80090c6:	f7ff fe4b 	bl	8008d60 <_Bfree>
 80090ca:	4647      	mov	r7, r8
 80090cc:	106d      	asrs	r5, r5, #1
 80090ce:	d00b      	beq.n	80090e8 <__pow5mult+0xa0>
 80090d0:	6820      	ldr	r0, [r4, #0]
 80090d2:	b938      	cbnz	r0, 80090e4 <__pow5mult+0x9c>
 80090d4:	4622      	mov	r2, r4
 80090d6:	4621      	mov	r1, r4
 80090d8:	4630      	mov	r0, r6
 80090da:	f7ff ff0d 	bl	8008ef8 <__multiply>
 80090de:	6020      	str	r0, [r4, #0]
 80090e0:	f8c0 9000 	str.w	r9, [r0]
 80090e4:	4604      	mov	r4, r0
 80090e6:	e7e4      	b.n	80090b2 <__pow5mult+0x6a>
 80090e8:	4638      	mov	r0, r7
 80090ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80090ee:	bf00      	nop
 80090f0:	08009e28 	.word	0x08009e28
 80090f4:	08009c5b 	.word	0x08009c5b
 80090f8:	08009cdb 	.word	0x08009cdb

080090fc <__lshift>:
 80090fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009100:	460c      	mov	r4, r1
 8009102:	4607      	mov	r7, r0
 8009104:	4691      	mov	r9, r2
 8009106:	6923      	ldr	r3, [r4, #16]
 8009108:	6849      	ldr	r1, [r1, #4]
 800910a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800910e:	68a3      	ldr	r3, [r4, #8]
 8009110:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8009114:	f108 0601 	add.w	r6, r8, #1
 8009118:	42b3      	cmp	r3, r6
 800911a:	db0b      	blt.n	8009134 <__lshift+0x38>
 800911c:	4638      	mov	r0, r7
 800911e:	f7ff fddf 	bl	8008ce0 <_Balloc>
 8009122:	4605      	mov	r5, r0
 8009124:	b948      	cbnz	r0, 800913a <__lshift+0x3e>
 8009126:	4602      	mov	r2, r0
 8009128:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800912c:	4b27      	ldr	r3, [pc, #156]	; (80091cc <__lshift+0xd0>)
 800912e:	4828      	ldr	r0, [pc, #160]	; (80091d0 <__lshift+0xd4>)
 8009130:	f000 fa08 	bl	8009544 <__assert_func>
 8009134:	3101      	adds	r1, #1
 8009136:	005b      	lsls	r3, r3, #1
 8009138:	e7ee      	b.n	8009118 <__lshift+0x1c>
 800913a:	2300      	movs	r3, #0
 800913c:	f100 0114 	add.w	r1, r0, #20
 8009140:	f100 0210 	add.w	r2, r0, #16
 8009144:	4618      	mov	r0, r3
 8009146:	4553      	cmp	r3, sl
 8009148:	db33      	blt.n	80091b2 <__lshift+0xb6>
 800914a:	6920      	ldr	r0, [r4, #16]
 800914c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009150:	f104 0314 	add.w	r3, r4, #20
 8009154:	f019 091f 	ands.w	r9, r9, #31
 8009158:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800915c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009160:	d02b      	beq.n	80091ba <__lshift+0xbe>
 8009162:	468a      	mov	sl, r1
 8009164:	2200      	movs	r2, #0
 8009166:	f1c9 0e20 	rsb	lr, r9, #32
 800916a:	6818      	ldr	r0, [r3, #0]
 800916c:	fa00 f009 	lsl.w	r0, r0, r9
 8009170:	4310      	orrs	r0, r2
 8009172:	f84a 0b04 	str.w	r0, [sl], #4
 8009176:	f853 2b04 	ldr.w	r2, [r3], #4
 800917a:	459c      	cmp	ip, r3
 800917c:	fa22 f20e 	lsr.w	r2, r2, lr
 8009180:	d8f3      	bhi.n	800916a <__lshift+0x6e>
 8009182:	ebac 0304 	sub.w	r3, ip, r4
 8009186:	3b15      	subs	r3, #21
 8009188:	f023 0303 	bic.w	r3, r3, #3
 800918c:	3304      	adds	r3, #4
 800918e:	f104 0015 	add.w	r0, r4, #21
 8009192:	4584      	cmp	ip, r0
 8009194:	bf38      	it	cc
 8009196:	2304      	movcc	r3, #4
 8009198:	50ca      	str	r2, [r1, r3]
 800919a:	b10a      	cbz	r2, 80091a0 <__lshift+0xa4>
 800919c:	f108 0602 	add.w	r6, r8, #2
 80091a0:	3e01      	subs	r6, #1
 80091a2:	4638      	mov	r0, r7
 80091a4:	4621      	mov	r1, r4
 80091a6:	612e      	str	r6, [r5, #16]
 80091a8:	f7ff fdda 	bl	8008d60 <_Bfree>
 80091ac:	4628      	mov	r0, r5
 80091ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80091b2:	f842 0f04 	str.w	r0, [r2, #4]!
 80091b6:	3301      	adds	r3, #1
 80091b8:	e7c5      	b.n	8009146 <__lshift+0x4a>
 80091ba:	3904      	subs	r1, #4
 80091bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80091c0:	459c      	cmp	ip, r3
 80091c2:	f841 2f04 	str.w	r2, [r1, #4]!
 80091c6:	d8f9      	bhi.n	80091bc <__lshift+0xc0>
 80091c8:	e7ea      	b.n	80091a0 <__lshift+0xa4>
 80091ca:	bf00      	nop
 80091cc:	08009cca 	.word	0x08009cca
 80091d0:	08009cdb 	.word	0x08009cdb

080091d4 <__mcmp>:
 80091d4:	4603      	mov	r3, r0
 80091d6:	690a      	ldr	r2, [r1, #16]
 80091d8:	6900      	ldr	r0, [r0, #16]
 80091da:	b530      	push	{r4, r5, lr}
 80091dc:	1a80      	subs	r0, r0, r2
 80091de:	d10d      	bne.n	80091fc <__mcmp+0x28>
 80091e0:	3314      	adds	r3, #20
 80091e2:	3114      	adds	r1, #20
 80091e4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80091e8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80091ec:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80091f0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80091f4:	4295      	cmp	r5, r2
 80091f6:	d002      	beq.n	80091fe <__mcmp+0x2a>
 80091f8:	d304      	bcc.n	8009204 <__mcmp+0x30>
 80091fa:	2001      	movs	r0, #1
 80091fc:	bd30      	pop	{r4, r5, pc}
 80091fe:	42a3      	cmp	r3, r4
 8009200:	d3f4      	bcc.n	80091ec <__mcmp+0x18>
 8009202:	e7fb      	b.n	80091fc <__mcmp+0x28>
 8009204:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009208:	e7f8      	b.n	80091fc <__mcmp+0x28>
	...

0800920c <__mdiff>:
 800920c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009210:	460d      	mov	r5, r1
 8009212:	4607      	mov	r7, r0
 8009214:	4611      	mov	r1, r2
 8009216:	4628      	mov	r0, r5
 8009218:	4614      	mov	r4, r2
 800921a:	f7ff ffdb 	bl	80091d4 <__mcmp>
 800921e:	1e06      	subs	r6, r0, #0
 8009220:	d111      	bne.n	8009246 <__mdiff+0x3a>
 8009222:	4631      	mov	r1, r6
 8009224:	4638      	mov	r0, r7
 8009226:	f7ff fd5b 	bl	8008ce0 <_Balloc>
 800922a:	4602      	mov	r2, r0
 800922c:	b928      	cbnz	r0, 800923a <__mdiff+0x2e>
 800922e:	f240 2137 	movw	r1, #567	; 0x237
 8009232:	4b3a      	ldr	r3, [pc, #232]	; (800931c <__mdiff+0x110>)
 8009234:	483a      	ldr	r0, [pc, #232]	; (8009320 <__mdiff+0x114>)
 8009236:	f000 f985 	bl	8009544 <__assert_func>
 800923a:	2301      	movs	r3, #1
 800923c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8009240:	4610      	mov	r0, r2
 8009242:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009246:	bfa4      	itt	ge
 8009248:	4623      	movge	r3, r4
 800924a:	462c      	movge	r4, r5
 800924c:	4638      	mov	r0, r7
 800924e:	6861      	ldr	r1, [r4, #4]
 8009250:	bfa6      	itte	ge
 8009252:	461d      	movge	r5, r3
 8009254:	2600      	movge	r6, #0
 8009256:	2601      	movlt	r6, #1
 8009258:	f7ff fd42 	bl	8008ce0 <_Balloc>
 800925c:	4602      	mov	r2, r0
 800925e:	b918      	cbnz	r0, 8009268 <__mdiff+0x5c>
 8009260:	f240 2145 	movw	r1, #581	; 0x245
 8009264:	4b2d      	ldr	r3, [pc, #180]	; (800931c <__mdiff+0x110>)
 8009266:	e7e5      	b.n	8009234 <__mdiff+0x28>
 8009268:	f102 0814 	add.w	r8, r2, #20
 800926c:	46c2      	mov	sl, r8
 800926e:	f04f 0c00 	mov.w	ip, #0
 8009272:	6927      	ldr	r7, [r4, #16]
 8009274:	60c6      	str	r6, [r0, #12]
 8009276:	692e      	ldr	r6, [r5, #16]
 8009278:	f104 0014 	add.w	r0, r4, #20
 800927c:	f105 0914 	add.w	r9, r5, #20
 8009280:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8009284:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8009288:	3410      	adds	r4, #16
 800928a:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800928e:	f859 3b04 	ldr.w	r3, [r9], #4
 8009292:	fa1f f18b 	uxth.w	r1, fp
 8009296:	4461      	add	r1, ip
 8009298:	fa1f fc83 	uxth.w	ip, r3
 800929c:	0c1b      	lsrs	r3, r3, #16
 800929e:	eba1 010c 	sub.w	r1, r1, ip
 80092a2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80092a6:	eb03 4321 	add.w	r3, r3, r1, asr #16
 80092aa:	b289      	uxth	r1, r1
 80092ac:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80092b0:	454e      	cmp	r6, r9
 80092b2:	ea4f 4c23 	mov.w	ip, r3, asr #16
 80092b6:	f84a 1b04 	str.w	r1, [sl], #4
 80092ba:	d8e6      	bhi.n	800928a <__mdiff+0x7e>
 80092bc:	1b73      	subs	r3, r6, r5
 80092be:	3b15      	subs	r3, #21
 80092c0:	f023 0303 	bic.w	r3, r3, #3
 80092c4:	3515      	adds	r5, #21
 80092c6:	3304      	adds	r3, #4
 80092c8:	42ae      	cmp	r6, r5
 80092ca:	bf38      	it	cc
 80092cc:	2304      	movcc	r3, #4
 80092ce:	4418      	add	r0, r3
 80092d0:	4443      	add	r3, r8
 80092d2:	461e      	mov	r6, r3
 80092d4:	4605      	mov	r5, r0
 80092d6:	4575      	cmp	r5, lr
 80092d8:	d30e      	bcc.n	80092f8 <__mdiff+0xec>
 80092da:	f10e 0103 	add.w	r1, lr, #3
 80092de:	1a09      	subs	r1, r1, r0
 80092e0:	f021 0103 	bic.w	r1, r1, #3
 80092e4:	3803      	subs	r0, #3
 80092e6:	4586      	cmp	lr, r0
 80092e8:	bf38      	it	cc
 80092ea:	2100      	movcc	r1, #0
 80092ec:	440b      	add	r3, r1
 80092ee:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80092f2:	b189      	cbz	r1, 8009318 <__mdiff+0x10c>
 80092f4:	6117      	str	r7, [r2, #16]
 80092f6:	e7a3      	b.n	8009240 <__mdiff+0x34>
 80092f8:	f855 8b04 	ldr.w	r8, [r5], #4
 80092fc:	fa1f f188 	uxth.w	r1, r8
 8009300:	4461      	add	r1, ip
 8009302:	140c      	asrs	r4, r1, #16
 8009304:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8009308:	b289      	uxth	r1, r1
 800930a:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800930e:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8009312:	f846 1b04 	str.w	r1, [r6], #4
 8009316:	e7de      	b.n	80092d6 <__mdiff+0xca>
 8009318:	3f01      	subs	r7, #1
 800931a:	e7e8      	b.n	80092ee <__mdiff+0xe2>
 800931c:	08009cca 	.word	0x08009cca
 8009320:	08009cdb 	.word	0x08009cdb

08009324 <__d2b>:
 8009324:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009326:	2101      	movs	r1, #1
 8009328:	4617      	mov	r7, r2
 800932a:	461c      	mov	r4, r3
 800932c:	9e08      	ldr	r6, [sp, #32]
 800932e:	f7ff fcd7 	bl	8008ce0 <_Balloc>
 8009332:	4605      	mov	r5, r0
 8009334:	b930      	cbnz	r0, 8009344 <__d2b+0x20>
 8009336:	4602      	mov	r2, r0
 8009338:	f240 310f 	movw	r1, #783	; 0x30f
 800933c:	4b22      	ldr	r3, [pc, #136]	; (80093c8 <__d2b+0xa4>)
 800933e:	4823      	ldr	r0, [pc, #140]	; (80093cc <__d2b+0xa8>)
 8009340:	f000 f900 	bl	8009544 <__assert_func>
 8009344:	f3c4 0313 	ubfx	r3, r4, #0, #20
 8009348:	f3c4 540a 	ubfx	r4, r4, #20, #11
 800934c:	bb24      	cbnz	r4, 8009398 <__d2b+0x74>
 800934e:	2f00      	cmp	r7, #0
 8009350:	9301      	str	r3, [sp, #4]
 8009352:	d026      	beq.n	80093a2 <__d2b+0x7e>
 8009354:	4668      	mov	r0, sp
 8009356:	9700      	str	r7, [sp, #0]
 8009358:	f7ff fd8a 	bl	8008e70 <__lo0bits>
 800935c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8009360:	b1e8      	cbz	r0, 800939e <__d2b+0x7a>
 8009362:	f1c0 0320 	rsb	r3, r0, #32
 8009366:	fa02 f303 	lsl.w	r3, r2, r3
 800936a:	430b      	orrs	r3, r1
 800936c:	40c2      	lsrs	r2, r0
 800936e:	616b      	str	r3, [r5, #20]
 8009370:	9201      	str	r2, [sp, #4]
 8009372:	9b01      	ldr	r3, [sp, #4]
 8009374:	2b00      	cmp	r3, #0
 8009376:	bf14      	ite	ne
 8009378:	2102      	movne	r1, #2
 800937a:	2101      	moveq	r1, #1
 800937c:	61ab      	str	r3, [r5, #24]
 800937e:	6129      	str	r1, [r5, #16]
 8009380:	b1bc      	cbz	r4, 80093b2 <__d2b+0x8e>
 8009382:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8009386:	4404      	add	r4, r0
 8009388:	6034      	str	r4, [r6, #0]
 800938a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800938e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009390:	6018      	str	r0, [r3, #0]
 8009392:	4628      	mov	r0, r5
 8009394:	b003      	add	sp, #12
 8009396:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009398:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800939c:	e7d7      	b.n	800934e <__d2b+0x2a>
 800939e:	6169      	str	r1, [r5, #20]
 80093a0:	e7e7      	b.n	8009372 <__d2b+0x4e>
 80093a2:	a801      	add	r0, sp, #4
 80093a4:	f7ff fd64 	bl	8008e70 <__lo0bits>
 80093a8:	9b01      	ldr	r3, [sp, #4]
 80093aa:	2101      	movs	r1, #1
 80093ac:	616b      	str	r3, [r5, #20]
 80093ae:	3020      	adds	r0, #32
 80093b0:	e7e5      	b.n	800937e <__d2b+0x5a>
 80093b2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80093b6:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 80093ba:	6030      	str	r0, [r6, #0]
 80093bc:	6918      	ldr	r0, [r3, #16]
 80093be:	f7ff fd37 	bl	8008e30 <__hi0bits>
 80093c2:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80093c6:	e7e2      	b.n	800938e <__d2b+0x6a>
 80093c8:	08009cca 	.word	0x08009cca
 80093cc:	08009cdb 	.word	0x08009cdb

080093d0 <__sflush_r>:
 80093d0:	898a      	ldrh	r2, [r1, #12]
 80093d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093d4:	4605      	mov	r5, r0
 80093d6:	0710      	lsls	r0, r2, #28
 80093d8:	460c      	mov	r4, r1
 80093da:	d457      	bmi.n	800948c <__sflush_r+0xbc>
 80093dc:	684b      	ldr	r3, [r1, #4]
 80093de:	2b00      	cmp	r3, #0
 80093e0:	dc04      	bgt.n	80093ec <__sflush_r+0x1c>
 80093e2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80093e4:	2b00      	cmp	r3, #0
 80093e6:	dc01      	bgt.n	80093ec <__sflush_r+0x1c>
 80093e8:	2000      	movs	r0, #0
 80093ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80093ec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80093ee:	2e00      	cmp	r6, #0
 80093f0:	d0fa      	beq.n	80093e8 <__sflush_r+0x18>
 80093f2:	2300      	movs	r3, #0
 80093f4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80093f8:	682f      	ldr	r7, [r5, #0]
 80093fa:	6a21      	ldr	r1, [r4, #32]
 80093fc:	602b      	str	r3, [r5, #0]
 80093fe:	d032      	beq.n	8009466 <__sflush_r+0x96>
 8009400:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009402:	89a3      	ldrh	r3, [r4, #12]
 8009404:	075a      	lsls	r2, r3, #29
 8009406:	d505      	bpl.n	8009414 <__sflush_r+0x44>
 8009408:	6863      	ldr	r3, [r4, #4]
 800940a:	1ac0      	subs	r0, r0, r3
 800940c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800940e:	b10b      	cbz	r3, 8009414 <__sflush_r+0x44>
 8009410:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009412:	1ac0      	subs	r0, r0, r3
 8009414:	2300      	movs	r3, #0
 8009416:	4602      	mov	r2, r0
 8009418:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800941a:	4628      	mov	r0, r5
 800941c:	6a21      	ldr	r1, [r4, #32]
 800941e:	47b0      	blx	r6
 8009420:	1c43      	adds	r3, r0, #1
 8009422:	89a3      	ldrh	r3, [r4, #12]
 8009424:	d106      	bne.n	8009434 <__sflush_r+0x64>
 8009426:	6829      	ldr	r1, [r5, #0]
 8009428:	291d      	cmp	r1, #29
 800942a:	d82b      	bhi.n	8009484 <__sflush_r+0xb4>
 800942c:	4a28      	ldr	r2, [pc, #160]	; (80094d0 <__sflush_r+0x100>)
 800942e:	410a      	asrs	r2, r1
 8009430:	07d6      	lsls	r6, r2, #31
 8009432:	d427      	bmi.n	8009484 <__sflush_r+0xb4>
 8009434:	2200      	movs	r2, #0
 8009436:	6062      	str	r2, [r4, #4]
 8009438:	6922      	ldr	r2, [r4, #16]
 800943a:	04d9      	lsls	r1, r3, #19
 800943c:	6022      	str	r2, [r4, #0]
 800943e:	d504      	bpl.n	800944a <__sflush_r+0x7a>
 8009440:	1c42      	adds	r2, r0, #1
 8009442:	d101      	bne.n	8009448 <__sflush_r+0x78>
 8009444:	682b      	ldr	r3, [r5, #0]
 8009446:	b903      	cbnz	r3, 800944a <__sflush_r+0x7a>
 8009448:	6560      	str	r0, [r4, #84]	; 0x54
 800944a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800944c:	602f      	str	r7, [r5, #0]
 800944e:	2900      	cmp	r1, #0
 8009450:	d0ca      	beq.n	80093e8 <__sflush_r+0x18>
 8009452:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8009456:	4299      	cmp	r1, r3
 8009458:	d002      	beq.n	8009460 <__sflush_r+0x90>
 800945a:	4628      	mov	r0, r5
 800945c:	f7ff fb44 	bl	8008ae8 <_free_r>
 8009460:	2000      	movs	r0, #0
 8009462:	6360      	str	r0, [r4, #52]	; 0x34
 8009464:	e7c1      	b.n	80093ea <__sflush_r+0x1a>
 8009466:	2301      	movs	r3, #1
 8009468:	4628      	mov	r0, r5
 800946a:	47b0      	blx	r6
 800946c:	1c41      	adds	r1, r0, #1
 800946e:	d1c8      	bne.n	8009402 <__sflush_r+0x32>
 8009470:	682b      	ldr	r3, [r5, #0]
 8009472:	2b00      	cmp	r3, #0
 8009474:	d0c5      	beq.n	8009402 <__sflush_r+0x32>
 8009476:	2b1d      	cmp	r3, #29
 8009478:	d001      	beq.n	800947e <__sflush_r+0xae>
 800947a:	2b16      	cmp	r3, #22
 800947c:	d101      	bne.n	8009482 <__sflush_r+0xb2>
 800947e:	602f      	str	r7, [r5, #0]
 8009480:	e7b2      	b.n	80093e8 <__sflush_r+0x18>
 8009482:	89a3      	ldrh	r3, [r4, #12]
 8009484:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009488:	81a3      	strh	r3, [r4, #12]
 800948a:	e7ae      	b.n	80093ea <__sflush_r+0x1a>
 800948c:	690f      	ldr	r7, [r1, #16]
 800948e:	2f00      	cmp	r7, #0
 8009490:	d0aa      	beq.n	80093e8 <__sflush_r+0x18>
 8009492:	0793      	lsls	r3, r2, #30
 8009494:	bf18      	it	ne
 8009496:	2300      	movne	r3, #0
 8009498:	680e      	ldr	r6, [r1, #0]
 800949a:	bf08      	it	eq
 800949c:	694b      	ldreq	r3, [r1, #20]
 800949e:	1bf6      	subs	r6, r6, r7
 80094a0:	600f      	str	r7, [r1, #0]
 80094a2:	608b      	str	r3, [r1, #8]
 80094a4:	2e00      	cmp	r6, #0
 80094a6:	dd9f      	ble.n	80093e8 <__sflush_r+0x18>
 80094a8:	4633      	mov	r3, r6
 80094aa:	463a      	mov	r2, r7
 80094ac:	4628      	mov	r0, r5
 80094ae:	6a21      	ldr	r1, [r4, #32]
 80094b0:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80094b4:	47e0      	blx	ip
 80094b6:	2800      	cmp	r0, #0
 80094b8:	dc06      	bgt.n	80094c8 <__sflush_r+0xf8>
 80094ba:	89a3      	ldrh	r3, [r4, #12]
 80094bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80094c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80094c4:	81a3      	strh	r3, [r4, #12]
 80094c6:	e790      	b.n	80093ea <__sflush_r+0x1a>
 80094c8:	4407      	add	r7, r0
 80094ca:	1a36      	subs	r6, r6, r0
 80094cc:	e7ea      	b.n	80094a4 <__sflush_r+0xd4>
 80094ce:	bf00      	nop
 80094d0:	dfbffffe 	.word	0xdfbffffe

080094d4 <_fflush_r>:
 80094d4:	b538      	push	{r3, r4, r5, lr}
 80094d6:	690b      	ldr	r3, [r1, #16]
 80094d8:	4605      	mov	r5, r0
 80094da:	460c      	mov	r4, r1
 80094dc:	b913      	cbnz	r3, 80094e4 <_fflush_r+0x10>
 80094de:	2500      	movs	r5, #0
 80094e0:	4628      	mov	r0, r5
 80094e2:	bd38      	pop	{r3, r4, r5, pc}
 80094e4:	b118      	cbz	r0, 80094ee <_fflush_r+0x1a>
 80094e6:	6a03      	ldr	r3, [r0, #32]
 80094e8:	b90b      	cbnz	r3, 80094ee <_fflush_r+0x1a>
 80094ea:	f7fe fb7b 	bl	8007be4 <__sinit>
 80094ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80094f2:	2b00      	cmp	r3, #0
 80094f4:	d0f3      	beq.n	80094de <_fflush_r+0xa>
 80094f6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80094f8:	07d0      	lsls	r0, r2, #31
 80094fa:	d404      	bmi.n	8009506 <_fflush_r+0x32>
 80094fc:	0599      	lsls	r1, r3, #22
 80094fe:	d402      	bmi.n	8009506 <_fflush_r+0x32>
 8009500:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009502:	f7fe fc66 	bl	8007dd2 <__retarget_lock_acquire_recursive>
 8009506:	4628      	mov	r0, r5
 8009508:	4621      	mov	r1, r4
 800950a:	f7ff ff61 	bl	80093d0 <__sflush_r>
 800950e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009510:	4605      	mov	r5, r0
 8009512:	07da      	lsls	r2, r3, #31
 8009514:	d4e4      	bmi.n	80094e0 <_fflush_r+0xc>
 8009516:	89a3      	ldrh	r3, [r4, #12]
 8009518:	059b      	lsls	r3, r3, #22
 800951a:	d4e1      	bmi.n	80094e0 <_fflush_r+0xc>
 800951c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800951e:	f7fe fc59 	bl	8007dd4 <__retarget_lock_release_recursive>
 8009522:	e7dd      	b.n	80094e0 <_fflush_r+0xc>

08009524 <_sbrk_r>:
 8009524:	b538      	push	{r3, r4, r5, lr}
 8009526:	2300      	movs	r3, #0
 8009528:	4d05      	ldr	r5, [pc, #20]	; (8009540 <_sbrk_r+0x1c>)
 800952a:	4604      	mov	r4, r0
 800952c:	4608      	mov	r0, r1
 800952e:	602b      	str	r3, [r5, #0]
 8009530:	f7f9 fa82 	bl	8002a38 <_sbrk>
 8009534:	1c43      	adds	r3, r0, #1
 8009536:	d102      	bne.n	800953e <_sbrk_r+0x1a>
 8009538:	682b      	ldr	r3, [r5, #0]
 800953a:	b103      	cbz	r3, 800953e <_sbrk_r+0x1a>
 800953c:	6023      	str	r3, [r4, #0]
 800953e:	bd38      	pop	{r3, r4, r5, pc}
 8009540:	20001500 	.word	0x20001500

08009544 <__assert_func>:
 8009544:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009546:	4614      	mov	r4, r2
 8009548:	461a      	mov	r2, r3
 800954a:	4b09      	ldr	r3, [pc, #36]	; (8009570 <__assert_func+0x2c>)
 800954c:	4605      	mov	r5, r0
 800954e:	681b      	ldr	r3, [r3, #0]
 8009550:	68d8      	ldr	r0, [r3, #12]
 8009552:	b14c      	cbz	r4, 8009568 <__assert_func+0x24>
 8009554:	4b07      	ldr	r3, [pc, #28]	; (8009574 <__assert_func+0x30>)
 8009556:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800955a:	9100      	str	r1, [sp, #0]
 800955c:	462b      	mov	r3, r5
 800955e:	4906      	ldr	r1, [pc, #24]	; (8009578 <__assert_func+0x34>)
 8009560:	f000 f842 	bl	80095e8 <fiprintf>
 8009564:	f000 f852 	bl	800960c <abort>
 8009568:	4b04      	ldr	r3, [pc, #16]	; (800957c <__assert_func+0x38>)
 800956a:	461c      	mov	r4, r3
 800956c:	e7f3      	b.n	8009556 <__assert_func+0x12>
 800956e:	bf00      	nop
 8009570:	2000006c 	.word	0x2000006c
 8009574:	08009e3e 	.word	0x08009e3e
 8009578:	08009e4b 	.word	0x08009e4b
 800957c:	08009e79 	.word	0x08009e79

08009580 <_calloc_r>:
 8009580:	b570      	push	{r4, r5, r6, lr}
 8009582:	fba1 5402 	umull	r5, r4, r1, r2
 8009586:	b934      	cbnz	r4, 8009596 <_calloc_r+0x16>
 8009588:	4629      	mov	r1, r5
 800958a:	f7ff fb1d 	bl	8008bc8 <_malloc_r>
 800958e:	4606      	mov	r6, r0
 8009590:	b928      	cbnz	r0, 800959e <_calloc_r+0x1e>
 8009592:	4630      	mov	r0, r6
 8009594:	bd70      	pop	{r4, r5, r6, pc}
 8009596:	220c      	movs	r2, #12
 8009598:	2600      	movs	r6, #0
 800959a:	6002      	str	r2, [r0, #0]
 800959c:	e7f9      	b.n	8009592 <_calloc_r+0x12>
 800959e:	462a      	mov	r2, r5
 80095a0:	4621      	mov	r1, r4
 80095a2:	f7fe fb98 	bl	8007cd6 <memset>
 80095a6:	e7f4      	b.n	8009592 <_calloc_r+0x12>

080095a8 <__ascii_mbtowc>:
 80095a8:	b082      	sub	sp, #8
 80095aa:	b901      	cbnz	r1, 80095ae <__ascii_mbtowc+0x6>
 80095ac:	a901      	add	r1, sp, #4
 80095ae:	b142      	cbz	r2, 80095c2 <__ascii_mbtowc+0x1a>
 80095b0:	b14b      	cbz	r3, 80095c6 <__ascii_mbtowc+0x1e>
 80095b2:	7813      	ldrb	r3, [r2, #0]
 80095b4:	600b      	str	r3, [r1, #0]
 80095b6:	7812      	ldrb	r2, [r2, #0]
 80095b8:	1e10      	subs	r0, r2, #0
 80095ba:	bf18      	it	ne
 80095bc:	2001      	movne	r0, #1
 80095be:	b002      	add	sp, #8
 80095c0:	4770      	bx	lr
 80095c2:	4610      	mov	r0, r2
 80095c4:	e7fb      	b.n	80095be <__ascii_mbtowc+0x16>
 80095c6:	f06f 0001 	mvn.w	r0, #1
 80095ca:	e7f8      	b.n	80095be <__ascii_mbtowc+0x16>

080095cc <__ascii_wctomb>:
 80095cc:	4603      	mov	r3, r0
 80095ce:	4608      	mov	r0, r1
 80095d0:	b141      	cbz	r1, 80095e4 <__ascii_wctomb+0x18>
 80095d2:	2aff      	cmp	r2, #255	; 0xff
 80095d4:	d904      	bls.n	80095e0 <__ascii_wctomb+0x14>
 80095d6:	228a      	movs	r2, #138	; 0x8a
 80095d8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80095dc:	601a      	str	r2, [r3, #0]
 80095de:	4770      	bx	lr
 80095e0:	2001      	movs	r0, #1
 80095e2:	700a      	strb	r2, [r1, #0]
 80095e4:	4770      	bx	lr
	...

080095e8 <fiprintf>:
 80095e8:	b40e      	push	{r1, r2, r3}
 80095ea:	b503      	push	{r0, r1, lr}
 80095ec:	4601      	mov	r1, r0
 80095ee:	ab03      	add	r3, sp, #12
 80095f0:	4805      	ldr	r0, [pc, #20]	; (8009608 <fiprintf+0x20>)
 80095f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80095f6:	6800      	ldr	r0, [r0, #0]
 80095f8:	9301      	str	r3, [sp, #4]
 80095fa:	f000 f835 	bl	8009668 <_vfiprintf_r>
 80095fe:	b002      	add	sp, #8
 8009600:	f85d eb04 	ldr.w	lr, [sp], #4
 8009604:	b003      	add	sp, #12
 8009606:	4770      	bx	lr
 8009608:	2000006c 	.word	0x2000006c

0800960c <abort>:
 800960c:	2006      	movs	r0, #6
 800960e:	b508      	push	{r3, lr}
 8009610:	f000 fa02 	bl	8009a18 <raise>
 8009614:	2001      	movs	r0, #1
 8009616:	f7f9 f99c 	bl	8002952 <_exit>

0800961a <__sfputc_r>:
 800961a:	6893      	ldr	r3, [r2, #8]
 800961c:	b410      	push	{r4}
 800961e:	3b01      	subs	r3, #1
 8009620:	2b00      	cmp	r3, #0
 8009622:	6093      	str	r3, [r2, #8]
 8009624:	da07      	bge.n	8009636 <__sfputc_r+0x1c>
 8009626:	6994      	ldr	r4, [r2, #24]
 8009628:	42a3      	cmp	r3, r4
 800962a:	db01      	blt.n	8009630 <__sfputc_r+0x16>
 800962c:	290a      	cmp	r1, #10
 800962e:	d102      	bne.n	8009636 <__sfputc_r+0x1c>
 8009630:	bc10      	pop	{r4}
 8009632:	f000 b933 	b.w	800989c <__swbuf_r>
 8009636:	6813      	ldr	r3, [r2, #0]
 8009638:	1c58      	adds	r0, r3, #1
 800963a:	6010      	str	r0, [r2, #0]
 800963c:	7019      	strb	r1, [r3, #0]
 800963e:	4608      	mov	r0, r1
 8009640:	bc10      	pop	{r4}
 8009642:	4770      	bx	lr

08009644 <__sfputs_r>:
 8009644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009646:	4606      	mov	r6, r0
 8009648:	460f      	mov	r7, r1
 800964a:	4614      	mov	r4, r2
 800964c:	18d5      	adds	r5, r2, r3
 800964e:	42ac      	cmp	r4, r5
 8009650:	d101      	bne.n	8009656 <__sfputs_r+0x12>
 8009652:	2000      	movs	r0, #0
 8009654:	e007      	b.n	8009666 <__sfputs_r+0x22>
 8009656:	463a      	mov	r2, r7
 8009658:	4630      	mov	r0, r6
 800965a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800965e:	f7ff ffdc 	bl	800961a <__sfputc_r>
 8009662:	1c43      	adds	r3, r0, #1
 8009664:	d1f3      	bne.n	800964e <__sfputs_r+0xa>
 8009666:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009668 <_vfiprintf_r>:
 8009668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800966c:	460d      	mov	r5, r1
 800966e:	4614      	mov	r4, r2
 8009670:	4698      	mov	r8, r3
 8009672:	4606      	mov	r6, r0
 8009674:	b09d      	sub	sp, #116	; 0x74
 8009676:	b118      	cbz	r0, 8009680 <_vfiprintf_r+0x18>
 8009678:	6a03      	ldr	r3, [r0, #32]
 800967a:	b90b      	cbnz	r3, 8009680 <_vfiprintf_r+0x18>
 800967c:	f7fe fab2 	bl	8007be4 <__sinit>
 8009680:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009682:	07d9      	lsls	r1, r3, #31
 8009684:	d405      	bmi.n	8009692 <_vfiprintf_r+0x2a>
 8009686:	89ab      	ldrh	r3, [r5, #12]
 8009688:	059a      	lsls	r2, r3, #22
 800968a:	d402      	bmi.n	8009692 <_vfiprintf_r+0x2a>
 800968c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800968e:	f7fe fba0 	bl	8007dd2 <__retarget_lock_acquire_recursive>
 8009692:	89ab      	ldrh	r3, [r5, #12]
 8009694:	071b      	lsls	r3, r3, #28
 8009696:	d501      	bpl.n	800969c <_vfiprintf_r+0x34>
 8009698:	692b      	ldr	r3, [r5, #16]
 800969a:	b99b      	cbnz	r3, 80096c4 <_vfiprintf_r+0x5c>
 800969c:	4629      	mov	r1, r5
 800969e:	4630      	mov	r0, r6
 80096a0:	f000 f93a 	bl	8009918 <__swsetup_r>
 80096a4:	b170      	cbz	r0, 80096c4 <_vfiprintf_r+0x5c>
 80096a6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80096a8:	07dc      	lsls	r4, r3, #31
 80096aa:	d504      	bpl.n	80096b6 <_vfiprintf_r+0x4e>
 80096ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80096b0:	b01d      	add	sp, #116	; 0x74
 80096b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80096b6:	89ab      	ldrh	r3, [r5, #12]
 80096b8:	0598      	lsls	r0, r3, #22
 80096ba:	d4f7      	bmi.n	80096ac <_vfiprintf_r+0x44>
 80096bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80096be:	f7fe fb89 	bl	8007dd4 <__retarget_lock_release_recursive>
 80096c2:	e7f3      	b.n	80096ac <_vfiprintf_r+0x44>
 80096c4:	2300      	movs	r3, #0
 80096c6:	9309      	str	r3, [sp, #36]	; 0x24
 80096c8:	2320      	movs	r3, #32
 80096ca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80096ce:	2330      	movs	r3, #48	; 0x30
 80096d0:	f04f 0901 	mov.w	r9, #1
 80096d4:	f8cd 800c 	str.w	r8, [sp, #12]
 80096d8:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8009888 <_vfiprintf_r+0x220>
 80096dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80096e0:	4623      	mov	r3, r4
 80096e2:	469a      	mov	sl, r3
 80096e4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80096e8:	b10a      	cbz	r2, 80096ee <_vfiprintf_r+0x86>
 80096ea:	2a25      	cmp	r2, #37	; 0x25
 80096ec:	d1f9      	bne.n	80096e2 <_vfiprintf_r+0x7a>
 80096ee:	ebba 0b04 	subs.w	fp, sl, r4
 80096f2:	d00b      	beq.n	800970c <_vfiprintf_r+0xa4>
 80096f4:	465b      	mov	r3, fp
 80096f6:	4622      	mov	r2, r4
 80096f8:	4629      	mov	r1, r5
 80096fa:	4630      	mov	r0, r6
 80096fc:	f7ff ffa2 	bl	8009644 <__sfputs_r>
 8009700:	3001      	adds	r0, #1
 8009702:	f000 80a9 	beq.w	8009858 <_vfiprintf_r+0x1f0>
 8009706:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009708:	445a      	add	r2, fp
 800970a:	9209      	str	r2, [sp, #36]	; 0x24
 800970c:	f89a 3000 	ldrb.w	r3, [sl]
 8009710:	2b00      	cmp	r3, #0
 8009712:	f000 80a1 	beq.w	8009858 <_vfiprintf_r+0x1f0>
 8009716:	2300      	movs	r3, #0
 8009718:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800971c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009720:	f10a 0a01 	add.w	sl, sl, #1
 8009724:	9304      	str	r3, [sp, #16]
 8009726:	9307      	str	r3, [sp, #28]
 8009728:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800972c:	931a      	str	r3, [sp, #104]	; 0x68
 800972e:	4654      	mov	r4, sl
 8009730:	2205      	movs	r2, #5
 8009732:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009736:	4854      	ldr	r0, [pc, #336]	; (8009888 <_vfiprintf_r+0x220>)
 8009738:	f7fe fb4d 	bl	8007dd6 <memchr>
 800973c:	9a04      	ldr	r2, [sp, #16]
 800973e:	b9d8      	cbnz	r0, 8009778 <_vfiprintf_r+0x110>
 8009740:	06d1      	lsls	r1, r2, #27
 8009742:	bf44      	itt	mi
 8009744:	2320      	movmi	r3, #32
 8009746:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800974a:	0713      	lsls	r3, r2, #28
 800974c:	bf44      	itt	mi
 800974e:	232b      	movmi	r3, #43	; 0x2b
 8009750:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009754:	f89a 3000 	ldrb.w	r3, [sl]
 8009758:	2b2a      	cmp	r3, #42	; 0x2a
 800975a:	d015      	beq.n	8009788 <_vfiprintf_r+0x120>
 800975c:	4654      	mov	r4, sl
 800975e:	2000      	movs	r0, #0
 8009760:	f04f 0c0a 	mov.w	ip, #10
 8009764:	9a07      	ldr	r2, [sp, #28]
 8009766:	4621      	mov	r1, r4
 8009768:	f811 3b01 	ldrb.w	r3, [r1], #1
 800976c:	3b30      	subs	r3, #48	; 0x30
 800976e:	2b09      	cmp	r3, #9
 8009770:	d94d      	bls.n	800980e <_vfiprintf_r+0x1a6>
 8009772:	b1b0      	cbz	r0, 80097a2 <_vfiprintf_r+0x13a>
 8009774:	9207      	str	r2, [sp, #28]
 8009776:	e014      	b.n	80097a2 <_vfiprintf_r+0x13a>
 8009778:	eba0 0308 	sub.w	r3, r0, r8
 800977c:	fa09 f303 	lsl.w	r3, r9, r3
 8009780:	4313      	orrs	r3, r2
 8009782:	46a2      	mov	sl, r4
 8009784:	9304      	str	r3, [sp, #16]
 8009786:	e7d2      	b.n	800972e <_vfiprintf_r+0xc6>
 8009788:	9b03      	ldr	r3, [sp, #12]
 800978a:	1d19      	adds	r1, r3, #4
 800978c:	681b      	ldr	r3, [r3, #0]
 800978e:	9103      	str	r1, [sp, #12]
 8009790:	2b00      	cmp	r3, #0
 8009792:	bfbb      	ittet	lt
 8009794:	425b      	neglt	r3, r3
 8009796:	f042 0202 	orrlt.w	r2, r2, #2
 800979a:	9307      	strge	r3, [sp, #28]
 800979c:	9307      	strlt	r3, [sp, #28]
 800979e:	bfb8      	it	lt
 80097a0:	9204      	strlt	r2, [sp, #16]
 80097a2:	7823      	ldrb	r3, [r4, #0]
 80097a4:	2b2e      	cmp	r3, #46	; 0x2e
 80097a6:	d10c      	bne.n	80097c2 <_vfiprintf_r+0x15a>
 80097a8:	7863      	ldrb	r3, [r4, #1]
 80097aa:	2b2a      	cmp	r3, #42	; 0x2a
 80097ac:	d134      	bne.n	8009818 <_vfiprintf_r+0x1b0>
 80097ae:	9b03      	ldr	r3, [sp, #12]
 80097b0:	3402      	adds	r4, #2
 80097b2:	1d1a      	adds	r2, r3, #4
 80097b4:	681b      	ldr	r3, [r3, #0]
 80097b6:	9203      	str	r2, [sp, #12]
 80097b8:	2b00      	cmp	r3, #0
 80097ba:	bfb8      	it	lt
 80097bc:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80097c0:	9305      	str	r3, [sp, #20]
 80097c2:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800988c <_vfiprintf_r+0x224>
 80097c6:	2203      	movs	r2, #3
 80097c8:	4650      	mov	r0, sl
 80097ca:	7821      	ldrb	r1, [r4, #0]
 80097cc:	f7fe fb03 	bl	8007dd6 <memchr>
 80097d0:	b138      	cbz	r0, 80097e2 <_vfiprintf_r+0x17a>
 80097d2:	2240      	movs	r2, #64	; 0x40
 80097d4:	9b04      	ldr	r3, [sp, #16]
 80097d6:	eba0 000a 	sub.w	r0, r0, sl
 80097da:	4082      	lsls	r2, r0
 80097dc:	4313      	orrs	r3, r2
 80097de:	3401      	adds	r4, #1
 80097e0:	9304      	str	r3, [sp, #16]
 80097e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80097e6:	2206      	movs	r2, #6
 80097e8:	4829      	ldr	r0, [pc, #164]	; (8009890 <_vfiprintf_r+0x228>)
 80097ea:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80097ee:	f7fe faf2 	bl	8007dd6 <memchr>
 80097f2:	2800      	cmp	r0, #0
 80097f4:	d03f      	beq.n	8009876 <_vfiprintf_r+0x20e>
 80097f6:	4b27      	ldr	r3, [pc, #156]	; (8009894 <_vfiprintf_r+0x22c>)
 80097f8:	bb1b      	cbnz	r3, 8009842 <_vfiprintf_r+0x1da>
 80097fa:	9b03      	ldr	r3, [sp, #12]
 80097fc:	3307      	adds	r3, #7
 80097fe:	f023 0307 	bic.w	r3, r3, #7
 8009802:	3308      	adds	r3, #8
 8009804:	9303      	str	r3, [sp, #12]
 8009806:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009808:	443b      	add	r3, r7
 800980a:	9309      	str	r3, [sp, #36]	; 0x24
 800980c:	e768      	b.n	80096e0 <_vfiprintf_r+0x78>
 800980e:	460c      	mov	r4, r1
 8009810:	2001      	movs	r0, #1
 8009812:	fb0c 3202 	mla	r2, ip, r2, r3
 8009816:	e7a6      	b.n	8009766 <_vfiprintf_r+0xfe>
 8009818:	2300      	movs	r3, #0
 800981a:	f04f 0c0a 	mov.w	ip, #10
 800981e:	4619      	mov	r1, r3
 8009820:	3401      	adds	r4, #1
 8009822:	9305      	str	r3, [sp, #20]
 8009824:	4620      	mov	r0, r4
 8009826:	f810 2b01 	ldrb.w	r2, [r0], #1
 800982a:	3a30      	subs	r2, #48	; 0x30
 800982c:	2a09      	cmp	r2, #9
 800982e:	d903      	bls.n	8009838 <_vfiprintf_r+0x1d0>
 8009830:	2b00      	cmp	r3, #0
 8009832:	d0c6      	beq.n	80097c2 <_vfiprintf_r+0x15a>
 8009834:	9105      	str	r1, [sp, #20]
 8009836:	e7c4      	b.n	80097c2 <_vfiprintf_r+0x15a>
 8009838:	4604      	mov	r4, r0
 800983a:	2301      	movs	r3, #1
 800983c:	fb0c 2101 	mla	r1, ip, r1, r2
 8009840:	e7f0      	b.n	8009824 <_vfiprintf_r+0x1bc>
 8009842:	ab03      	add	r3, sp, #12
 8009844:	9300      	str	r3, [sp, #0]
 8009846:	462a      	mov	r2, r5
 8009848:	4630      	mov	r0, r6
 800984a:	4b13      	ldr	r3, [pc, #76]	; (8009898 <_vfiprintf_r+0x230>)
 800984c:	a904      	add	r1, sp, #16
 800984e:	f7fd fd7b 	bl	8007348 <_printf_float>
 8009852:	4607      	mov	r7, r0
 8009854:	1c78      	adds	r0, r7, #1
 8009856:	d1d6      	bne.n	8009806 <_vfiprintf_r+0x19e>
 8009858:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800985a:	07d9      	lsls	r1, r3, #31
 800985c:	d405      	bmi.n	800986a <_vfiprintf_r+0x202>
 800985e:	89ab      	ldrh	r3, [r5, #12]
 8009860:	059a      	lsls	r2, r3, #22
 8009862:	d402      	bmi.n	800986a <_vfiprintf_r+0x202>
 8009864:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009866:	f7fe fab5 	bl	8007dd4 <__retarget_lock_release_recursive>
 800986a:	89ab      	ldrh	r3, [r5, #12]
 800986c:	065b      	lsls	r3, r3, #25
 800986e:	f53f af1d 	bmi.w	80096ac <_vfiprintf_r+0x44>
 8009872:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009874:	e71c      	b.n	80096b0 <_vfiprintf_r+0x48>
 8009876:	ab03      	add	r3, sp, #12
 8009878:	9300      	str	r3, [sp, #0]
 800987a:	462a      	mov	r2, r5
 800987c:	4630      	mov	r0, r6
 800987e:	4b06      	ldr	r3, [pc, #24]	; (8009898 <_vfiprintf_r+0x230>)
 8009880:	a904      	add	r1, sp, #16
 8009882:	f7fe f801 	bl	8007888 <_printf_i>
 8009886:	e7e4      	b.n	8009852 <_vfiprintf_r+0x1ea>
 8009888:	08009f7b 	.word	0x08009f7b
 800988c:	08009f81 	.word	0x08009f81
 8009890:	08009f85 	.word	0x08009f85
 8009894:	08007349 	.word	0x08007349
 8009898:	08009645 	.word	0x08009645

0800989c <__swbuf_r>:
 800989c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800989e:	460e      	mov	r6, r1
 80098a0:	4614      	mov	r4, r2
 80098a2:	4605      	mov	r5, r0
 80098a4:	b118      	cbz	r0, 80098ae <__swbuf_r+0x12>
 80098a6:	6a03      	ldr	r3, [r0, #32]
 80098a8:	b90b      	cbnz	r3, 80098ae <__swbuf_r+0x12>
 80098aa:	f7fe f99b 	bl	8007be4 <__sinit>
 80098ae:	69a3      	ldr	r3, [r4, #24]
 80098b0:	60a3      	str	r3, [r4, #8]
 80098b2:	89a3      	ldrh	r3, [r4, #12]
 80098b4:	071a      	lsls	r2, r3, #28
 80098b6:	d525      	bpl.n	8009904 <__swbuf_r+0x68>
 80098b8:	6923      	ldr	r3, [r4, #16]
 80098ba:	b31b      	cbz	r3, 8009904 <__swbuf_r+0x68>
 80098bc:	6823      	ldr	r3, [r4, #0]
 80098be:	6922      	ldr	r2, [r4, #16]
 80098c0:	b2f6      	uxtb	r6, r6
 80098c2:	1a98      	subs	r0, r3, r2
 80098c4:	6963      	ldr	r3, [r4, #20]
 80098c6:	4637      	mov	r7, r6
 80098c8:	4283      	cmp	r3, r0
 80098ca:	dc04      	bgt.n	80098d6 <__swbuf_r+0x3a>
 80098cc:	4621      	mov	r1, r4
 80098ce:	4628      	mov	r0, r5
 80098d0:	f7ff fe00 	bl	80094d4 <_fflush_r>
 80098d4:	b9e0      	cbnz	r0, 8009910 <__swbuf_r+0x74>
 80098d6:	68a3      	ldr	r3, [r4, #8]
 80098d8:	3b01      	subs	r3, #1
 80098da:	60a3      	str	r3, [r4, #8]
 80098dc:	6823      	ldr	r3, [r4, #0]
 80098de:	1c5a      	adds	r2, r3, #1
 80098e0:	6022      	str	r2, [r4, #0]
 80098e2:	701e      	strb	r6, [r3, #0]
 80098e4:	6962      	ldr	r2, [r4, #20]
 80098e6:	1c43      	adds	r3, r0, #1
 80098e8:	429a      	cmp	r2, r3
 80098ea:	d004      	beq.n	80098f6 <__swbuf_r+0x5a>
 80098ec:	89a3      	ldrh	r3, [r4, #12]
 80098ee:	07db      	lsls	r3, r3, #31
 80098f0:	d506      	bpl.n	8009900 <__swbuf_r+0x64>
 80098f2:	2e0a      	cmp	r6, #10
 80098f4:	d104      	bne.n	8009900 <__swbuf_r+0x64>
 80098f6:	4621      	mov	r1, r4
 80098f8:	4628      	mov	r0, r5
 80098fa:	f7ff fdeb 	bl	80094d4 <_fflush_r>
 80098fe:	b938      	cbnz	r0, 8009910 <__swbuf_r+0x74>
 8009900:	4638      	mov	r0, r7
 8009902:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009904:	4621      	mov	r1, r4
 8009906:	4628      	mov	r0, r5
 8009908:	f000 f806 	bl	8009918 <__swsetup_r>
 800990c:	2800      	cmp	r0, #0
 800990e:	d0d5      	beq.n	80098bc <__swbuf_r+0x20>
 8009910:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8009914:	e7f4      	b.n	8009900 <__swbuf_r+0x64>
	...

08009918 <__swsetup_r>:
 8009918:	b538      	push	{r3, r4, r5, lr}
 800991a:	4b2a      	ldr	r3, [pc, #168]	; (80099c4 <__swsetup_r+0xac>)
 800991c:	4605      	mov	r5, r0
 800991e:	6818      	ldr	r0, [r3, #0]
 8009920:	460c      	mov	r4, r1
 8009922:	b118      	cbz	r0, 800992c <__swsetup_r+0x14>
 8009924:	6a03      	ldr	r3, [r0, #32]
 8009926:	b90b      	cbnz	r3, 800992c <__swsetup_r+0x14>
 8009928:	f7fe f95c 	bl	8007be4 <__sinit>
 800992c:	89a3      	ldrh	r3, [r4, #12]
 800992e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8009932:	0718      	lsls	r0, r3, #28
 8009934:	d422      	bmi.n	800997c <__swsetup_r+0x64>
 8009936:	06d9      	lsls	r1, r3, #27
 8009938:	d407      	bmi.n	800994a <__swsetup_r+0x32>
 800993a:	2309      	movs	r3, #9
 800993c:	602b      	str	r3, [r5, #0]
 800993e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8009942:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009946:	81a3      	strh	r3, [r4, #12]
 8009948:	e034      	b.n	80099b4 <__swsetup_r+0x9c>
 800994a:	0758      	lsls	r0, r3, #29
 800994c:	d512      	bpl.n	8009974 <__swsetup_r+0x5c>
 800994e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009950:	b141      	cbz	r1, 8009964 <__swsetup_r+0x4c>
 8009952:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8009956:	4299      	cmp	r1, r3
 8009958:	d002      	beq.n	8009960 <__swsetup_r+0x48>
 800995a:	4628      	mov	r0, r5
 800995c:	f7ff f8c4 	bl	8008ae8 <_free_r>
 8009960:	2300      	movs	r3, #0
 8009962:	6363      	str	r3, [r4, #52]	; 0x34
 8009964:	89a3      	ldrh	r3, [r4, #12]
 8009966:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800996a:	81a3      	strh	r3, [r4, #12]
 800996c:	2300      	movs	r3, #0
 800996e:	6063      	str	r3, [r4, #4]
 8009970:	6923      	ldr	r3, [r4, #16]
 8009972:	6023      	str	r3, [r4, #0]
 8009974:	89a3      	ldrh	r3, [r4, #12]
 8009976:	f043 0308 	orr.w	r3, r3, #8
 800997a:	81a3      	strh	r3, [r4, #12]
 800997c:	6923      	ldr	r3, [r4, #16]
 800997e:	b94b      	cbnz	r3, 8009994 <__swsetup_r+0x7c>
 8009980:	89a3      	ldrh	r3, [r4, #12]
 8009982:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8009986:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800998a:	d003      	beq.n	8009994 <__swsetup_r+0x7c>
 800998c:	4621      	mov	r1, r4
 800998e:	4628      	mov	r0, r5
 8009990:	f000 f883 	bl	8009a9a <__smakebuf_r>
 8009994:	89a0      	ldrh	r0, [r4, #12]
 8009996:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800999a:	f010 0301 	ands.w	r3, r0, #1
 800999e:	d00a      	beq.n	80099b6 <__swsetup_r+0x9e>
 80099a0:	2300      	movs	r3, #0
 80099a2:	60a3      	str	r3, [r4, #8]
 80099a4:	6963      	ldr	r3, [r4, #20]
 80099a6:	425b      	negs	r3, r3
 80099a8:	61a3      	str	r3, [r4, #24]
 80099aa:	6923      	ldr	r3, [r4, #16]
 80099ac:	b943      	cbnz	r3, 80099c0 <__swsetup_r+0xa8>
 80099ae:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80099b2:	d1c4      	bne.n	800993e <__swsetup_r+0x26>
 80099b4:	bd38      	pop	{r3, r4, r5, pc}
 80099b6:	0781      	lsls	r1, r0, #30
 80099b8:	bf58      	it	pl
 80099ba:	6963      	ldrpl	r3, [r4, #20]
 80099bc:	60a3      	str	r3, [r4, #8]
 80099be:	e7f4      	b.n	80099aa <__swsetup_r+0x92>
 80099c0:	2000      	movs	r0, #0
 80099c2:	e7f7      	b.n	80099b4 <__swsetup_r+0x9c>
 80099c4:	2000006c 	.word	0x2000006c

080099c8 <_raise_r>:
 80099c8:	291f      	cmp	r1, #31
 80099ca:	b538      	push	{r3, r4, r5, lr}
 80099cc:	4604      	mov	r4, r0
 80099ce:	460d      	mov	r5, r1
 80099d0:	d904      	bls.n	80099dc <_raise_r+0x14>
 80099d2:	2316      	movs	r3, #22
 80099d4:	6003      	str	r3, [r0, #0]
 80099d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80099da:	bd38      	pop	{r3, r4, r5, pc}
 80099dc:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80099de:	b112      	cbz	r2, 80099e6 <_raise_r+0x1e>
 80099e0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80099e4:	b94b      	cbnz	r3, 80099fa <_raise_r+0x32>
 80099e6:	4620      	mov	r0, r4
 80099e8:	f000 f830 	bl	8009a4c <_getpid_r>
 80099ec:	462a      	mov	r2, r5
 80099ee:	4601      	mov	r1, r0
 80099f0:	4620      	mov	r0, r4
 80099f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80099f6:	f000 b817 	b.w	8009a28 <_kill_r>
 80099fa:	2b01      	cmp	r3, #1
 80099fc:	d00a      	beq.n	8009a14 <_raise_r+0x4c>
 80099fe:	1c59      	adds	r1, r3, #1
 8009a00:	d103      	bne.n	8009a0a <_raise_r+0x42>
 8009a02:	2316      	movs	r3, #22
 8009a04:	6003      	str	r3, [r0, #0]
 8009a06:	2001      	movs	r0, #1
 8009a08:	e7e7      	b.n	80099da <_raise_r+0x12>
 8009a0a:	2400      	movs	r4, #0
 8009a0c:	4628      	mov	r0, r5
 8009a0e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8009a12:	4798      	blx	r3
 8009a14:	2000      	movs	r0, #0
 8009a16:	e7e0      	b.n	80099da <_raise_r+0x12>

08009a18 <raise>:
 8009a18:	4b02      	ldr	r3, [pc, #8]	; (8009a24 <raise+0xc>)
 8009a1a:	4601      	mov	r1, r0
 8009a1c:	6818      	ldr	r0, [r3, #0]
 8009a1e:	f7ff bfd3 	b.w	80099c8 <_raise_r>
 8009a22:	bf00      	nop
 8009a24:	2000006c 	.word	0x2000006c

08009a28 <_kill_r>:
 8009a28:	b538      	push	{r3, r4, r5, lr}
 8009a2a:	2300      	movs	r3, #0
 8009a2c:	4d06      	ldr	r5, [pc, #24]	; (8009a48 <_kill_r+0x20>)
 8009a2e:	4604      	mov	r4, r0
 8009a30:	4608      	mov	r0, r1
 8009a32:	4611      	mov	r1, r2
 8009a34:	602b      	str	r3, [r5, #0]
 8009a36:	f7f8 ff7c 	bl	8002932 <_kill>
 8009a3a:	1c43      	adds	r3, r0, #1
 8009a3c:	d102      	bne.n	8009a44 <_kill_r+0x1c>
 8009a3e:	682b      	ldr	r3, [r5, #0]
 8009a40:	b103      	cbz	r3, 8009a44 <_kill_r+0x1c>
 8009a42:	6023      	str	r3, [r4, #0]
 8009a44:	bd38      	pop	{r3, r4, r5, pc}
 8009a46:	bf00      	nop
 8009a48:	20001500 	.word	0x20001500

08009a4c <_getpid_r>:
 8009a4c:	f7f8 bf6a 	b.w	8002924 <_getpid>

08009a50 <__swhatbuf_r>:
 8009a50:	b570      	push	{r4, r5, r6, lr}
 8009a52:	460c      	mov	r4, r1
 8009a54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009a58:	4615      	mov	r5, r2
 8009a5a:	2900      	cmp	r1, #0
 8009a5c:	461e      	mov	r6, r3
 8009a5e:	b096      	sub	sp, #88	; 0x58
 8009a60:	da0c      	bge.n	8009a7c <__swhatbuf_r+0x2c>
 8009a62:	89a3      	ldrh	r3, [r4, #12]
 8009a64:	2100      	movs	r1, #0
 8009a66:	f013 0f80 	tst.w	r3, #128	; 0x80
 8009a6a:	bf0c      	ite	eq
 8009a6c:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8009a70:	2340      	movne	r3, #64	; 0x40
 8009a72:	2000      	movs	r0, #0
 8009a74:	6031      	str	r1, [r6, #0]
 8009a76:	602b      	str	r3, [r5, #0]
 8009a78:	b016      	add	sp, #88	; 0x58
 8009a7a:	bd70      	pop	{r4, r5, r6, pc}
 8009a7c:	466a      	mov	r2, sp
 8009a7e:	f000 f849 	bl	8009b14 <_fstat_r>
 8009a82:	2800      	cmp	r0, #0
 8009a84:	dbed      	blt.n	8009a62 <__swhatbuf_r+0x12>
 8009a86:	9901      	ldr	r1, [sp, #4]
 8009a88:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8009a8c:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8009a90:	4259      	negs	r1, r3
 8009a92:	4159      	adcs	r1, r3
 8009a94:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009a98:	e7eb      	b.n	8009a72 <__swhatbuf_r+0x22>

08009a9a <__smakebuf_r>:
 8009a9a:	898b      	ldrh	r3, [r1, #12]
 8009a9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a9e:	079d      	lsls	r5, r3, #30
 8009aa0:	4606      	mov	r6, r0
 8009aa2:	460c      	mov	r4, r1
 8009aa4:	d507      	bpl.n	8009ab6 <__smakebuf_r+0x1c>
 8009aa6:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8009aaa:	6023      	str	r3, [r4, #0]
 8009aac:	6123      	str	r3, [r4, #16]
 8009aae:	2301      	movs	r3, #1
 8009ab0:	6163      	str	r3, [r4, #20]
 8009ab2:	b002      	add	sp, #8
 8009ab4:	bd70      	pop	{r4, r5, r6, pc}
 8009ab6:	466a      	mov	r2, sp
 8009ab8:	ab01      	add	r3, sp, #4
 8009aba:	f7ff ffc9 	bl	8009a50 <__swhatbuf_r>
 8009abe:	9900      	ldr	r1, [sp, #0]
 8009ac0:	4605      	mov	r5, r0
 8009ac2:	4630      	mov	r0, r6
 8009ac4:	f7ff f880 	bl	8008bc8 <_malloc_r>
 8009ac8:	b948      	cbnz	r0, 8009ade <__smakebuf_r+0x44>
 8009aca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009ace:	059a      	lsls	r2, r3, #22
 8009ad0:	d4ef      	bmi.n	8009ab2 <__smakebuf_r+0x18>
 8009ad2:	f023 0303 	bic.w	r3, r3, #3
 8009ad6:	f043 0302 	orr.w	r3, r3, #2
 8009ada:	81a3      	strh	r3, [r4, #12]
 8009adc:	e7e3      	b.n	8009aa6 <__smakebuf_r+0xc>
 8009ade:	89a3      	ldrh	r3, [r4, #12]
 8009ae0:	6020      	str	r0, [r4, #0]
 8009ae2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009ae6:	81a3      	strh	r3, [r4, #12]
 8009ae8:	9b00      	ldr	r3, [sp, #0]
 8009aea:	6120      	str	r0, [r4, #16]
 8009aec:	6163      	str	r3, [r4, #20]
 8009aee:	9b01      	ldr	r3, [sp, #4]
 8009af0:	b15b      	cbz	r3, 8009b0a <__smakebuf_r+0x70>
 8009af2:	4630      	mov	r0, r6
 8009af4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8009af8:	f000 f81e 	bl	8009b38 <_isatty_r>
 8009afc:	b128      	cbz	r0, 8009b0a <__smakebuf_r+0x70>
 8009afe:	89a3      	ldrh	r3, [r4, #12]
 8009b00:	f023 0303 	bic.w	r3, r3, #3
 8009b04:	f043 0301 	orr.w	r3, r3, #1
 8009b08:	81a3      	strh	r3, [r4, #12]
 8009b0a:	89a3      	ldrh	r3, [r4, #12]
 8009b0c:	431d      	orrs	r5, r3
 8009b0e:	81a5      	strh	r5, [r4, #12]
 8009b10:	e7cf      	b.n	8009ab2 <__smakebuf_r+0x18>
	...

08009b14 <_fstat_r>:
 8009b14:	b538      	push	{r3, r4, r5, lr}
 8009b16:	2300      	movs	r3, #0
 8009b18:	4d06      	ldr	r5, [pc, #24]	; (8009b34 <_fstat_r+0x20>)
 8009b1a:	4604      	mov	r4, r0
 8009b1c:	4608      	mov	r0, r1
 8009b1e:	4611      	mov	r1, r2
 8009b20:	602b      	str	r3, [r5, #0]
 8009b22:	f7f8 ff64 	bl	80029ee <_fstat>
 8009b26:	1c43      	adds	r3, r0, #1
 8009b28:	d102      	bne.n	8009b30 <_fstat_r+0x1c>
 8009b2a:	682b      	ldr	r3, [r5, #0]
 8009b2c:	b103      	cbz	r3, 8009b30 <_fstat_r+0x1c>
 8009b2e:	6023      	str	r3, [r4, #0]
 8009b30:	bd38      	pop	{r3, r4, r5, pc}
 8009b32:	bf00      	nop
 8009b34:	20001500 	.word	0x20001500

08009b38 <_isatty_r>:
 8009b38:	b538      	push	{r3, r4, r5, lr}
 8009b3a:	2300      	movs	r3, #0
 8009b3c:	4d05      	ldr	r5, [pc, #20]	; (8009b54 <_isatty_r+0x1c>)
 8009b3e:	4604      	mov	r4, r0
 8009b40:	4608      	mov	r0, r1
 8009b42:	602b      	str	r3, [r5, #0]
 8009b44:	f7f8 ff62 	bl	8002a0c <_isatty>
 8009b48:	1c43      	adds	r3, r0, #1
 8009b4a:	d102      	bne.n	8009b52 <_isatty_r+0x1a>
 8009b4c:	682b      	ldr	r3, [r5, #0]
 8009b4e:	b103      	cbz	r3, 8009b52 <_isatty_r+0x1a>
 8009b50:	6023      	str	r3, [r4, #0]
 8009b52:	bd38      	pop	{r3, r4, r5, pc}
 8009b54:	20001500 	.word	0x20001500

08009b58 <_init>:
 8009b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009b5a:	bf00      	nop
 8009b5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009b5e:	bc08      	pop	{r3}
 8009b60:	469e      	mov	lr, r3
 8009b62:	4770      	bx	lr

08009b64 <_fini>:
 8009b64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009b66:	bf00      	nop
 8009b68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009b6a:	bc08      	pop	{r3}
 8009b6c:	469e      	mov	lr, r3
 8009b6e:	4770      	bx	lr
