
2moto1enco.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a230  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000041c  0800a340  0800a340  0001a340  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a75c  0800a75c  000201d8  2**0
                  CONTENTS
  4 .ARM          00000000  0800a75c  0800a75c  000201d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800a75c  0800a75c  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800a75c  0800a75c  0001a75c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800a764  0800a764  0001a764  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  0800a768  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000014b0  200001d8  0800a940  000201d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001688  0800a940  00021688  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020201  2**0
                  CONTENTS, READONLY
 13 .debug_info   000227d6  00000000  00000000  00020244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000447b  00000000  00000000  00042a1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001800  00000000  00000000  00046e98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001288  00000000  00000000  00048698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001e48b  00000000  00000000  00049920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00019cb7  00000000  00000000  00067dab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009d78f  00000000  00000000  00081a62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000075c4  00000000  00000000  0011f1f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000065  00000000  00000000  001267b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d8 	.word	0x200001d8
 800012c:	00000000 	.word	0x00000000
 8000130:	0800a328 	.word	0x0800a328

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001dc 	.word	0x200001dc
 800014c:	0800a328 	.word	0x0800a328

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_frsub>:
 8000b68:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b6c:	e002      	b.n	8000b74 <__addsf3>
 8000b6e:	bf00      	nop

08000b70 <__aeabi_fsub>:
 8000b70:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b74 <__addsf3>:
 8000b74:	0042      	lsls	r2, r0, #1
 8000b76:	bf1f      	itttt	ne
 8000b78:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b7c:	ea92 0f03 	teqne	r2, r3
 8000b80:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b84:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b88:	d06a      	beq.n	8000c60 <__addsf3+0xec>
 8000b8a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b8e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b92:	bfc1      	itttt	gt
 8000b94:	18d2      	addgt	r2, r2, r3
 8000b96:	4041      	eorgt	r1, r0
 8000b98:	4048      	eorgt	r0, r1
 8000b9a:	4041      	eorgt	r1, r0
 8000b9c:	bfb8      	it	lt
 8000b9e:	425b      	neglt	r3, r3
 8000ba0:	2b19      	cmp	r3, #25
 8000ba2:	bf88      	it	hi
 8000ba4:	4770      	bxhi	lr
 8000ba6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000baa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bae:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bba:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bbe:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000bc2:	bf18      	it	ne
 8000bc4:	4249      	negne	r1, r1
 8000bc6:	ea92 0f03 	teq	r2, r3
 8000bca:	d03f      	beq.n	8000c4c <__addsf3+0xd8>
 8000bcc:	f1a2 0201 	sub.w	r2, r2, #1
 8000bd0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bd4:	eb10 000c 	adds.w	r0, r0, ip
 8000bd8:	f1c3 0320 	rsb	r3, r3, #32
 8000bdc:	fa01 f103 	lsl.w	r1, r1, r3
 8000be0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000be4:	d502      	bpl.n	8000bec <__addsf3+0x78>
 8000be6:	4249      	negs	r1, r1
 8000be8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bec:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000bf0:	d313      	bcc.n	8000c1a <__addsf3+0xa6>
 8000bf2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000bf6:	d306      	bcc.n	8000c06 <__addsf3+0x92>
 8000bf8:	0840      	lsrs	r0, r0, #1
 8000bfa:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bfe:	f102 0201 	add.w	r2, r2, #1
 8000c02:	2afe      	cmp	r2, #254	; 0xfe
 8000c04:	d251      	bcs.n	8000caa <__addsf3+0x136>
 8000c06:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c0a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c0e:	bf08      	it	eq
 8000c10:	f020 0001 	biceq.w	r0, r0, #1
 8000c14:	ea40 0003 	orr.w	r0, r0, r3
 8000c18:	4770      	bx	lr
 8000c1a:	0049      	lsls	r1, r1, #1
 8000c1c:	eb40 0000 	adc.w	r0, r0, r0
 8000c20:	3a01      	subs	r2, #1
 8000c22:	bf28      	it	cs
 8000c24:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c28:	d2ed      	bcs.n	8000c06 <__addsf3+0x92>
 8000c2a:	fab0 fc80 	clz	ip, r0
 8000c2e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c32:	ebb2 020c 	subs.w	r2, r2, ip
 8000c36:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c3a:	bfaa      	itet	ge
 8000c3c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c40:	4252      	neglt	r2, r2
 8000c42:	4318      	orrge	r0, r3
 8000c44:	bfbc      	itt	lt
 8000c46:	40d0      	lsrlt	r0, r2
 8000c48:	4318      	orrlt	r0, r3
 8000c4a:	4770      	bx	lr
 8000c4c:	f092 0f00 	teq	r2, #0
 8000c50:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c54:	bf06      	itte	eq
 8000c56:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c5a:	3201      	addeq	r2, #1
 8000c5c:	3b01      	subne	r3, #1
 8000c5e:	e7b5      	b.n	8000bcc <__addsf3+0x58>
 8000c60:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c64:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c68:	bf18      	it	ne
 8000c6a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c6e:	d021      	beq.n	8000cb4 <__addsf3+0x140>
 8000c70:	ea92 0f03 	teq	r2, r3
 8000c74:	d004      	beq.n	8000c80 <__addsf3+0x10c>
 8000c76:	f092 0f00 	teq	r2, #0
 8000c7a:	bf08      	it	eq
 8000c7c:	4608      	moveq	r0, r1
 8000c7e:	4770      	bx	lr
 8000c80:	ea90 0f01 	teq	r0, r1
 8000c84:	bf1c      	itt	ne
 8000c86:	2000      	movne	r0, #0
 8000c88:	4770      	bxne	lr
 8000c8a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000c8e:	d104      	bne.n	8000c9a <__addsf3+0x126>
 8000c90:	0040      	lsls	r0, r0, #1
 8000c92:	bf28      	it	cs
 8000c94:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000c98:	4770      	bx	lr
 8000c9a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000c9e:	bf3c      	itt	cc
 8000ca0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ca4:	4770      	bxcc	lr
 8000ca6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000caa:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cae:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cb2:	4770      	bx	lr
 8000cb4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cb8:	bf16      	itet	ne
 8000cba:	4608      	movne	r0, r1
 8000cbc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cc0:	4601      	movne	r1, r0
 8000cc2:	0242      	lsls	r2, r0, #9
 8000cc4:	bf06      	itte	eq
 8000cc6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cca:	ea90 0f01 	teqeq	r0, r1
 8000cce:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cd2:	4770      	bx	lr

08000cd4 <__aeabi_ui2f>:
 8000cd4:	f04f 0300 	mov.w	r3, #0
 8000cd8:	e004      	b.n	8000ce4 <__aeabi_i2f+0x8>
 8000cda:	bf00      	nop

08000cdc <__aeabi_i2f>:
 8000cdc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000ce0:	bf48      	it	mi
 8000ce2:	4240      	negmi	r0, r0
 8000ce4:	ea5f 0c00 	movs.w	ip, r0
 8000ce8:	bf08      	it	eq
 8000cea:	4770      	bxeq	lr
 8000cec:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000cf0:	4601      	mov	r1, r0
 8000cf2:	f04f 0000 	mov.w	r0, #0
 8000cf6:	e01c      	b.n	8000d32 <__aeabi_l2f+0x2a>

08000cf8 <__aeabi_ul2f>:
 8000cf8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f04f 0300 	mov.w	r3, #0
 8000d04:	e00a      	b.n	8000d1c <__aeabi_l2f+0x14>
 8000d06:	bf00      	nop

08000d08 <__aeabi_l2f>:
 8000d08:	ea50 0201 	orrs.w	r2, r0, r1
 8000d0c:	bf08      	it	eq
 8000d0e:	4770      	bxeq	lr
 8000d10:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__aeabi_l2f+0x14>
 8000d16:	4240      	negs	r0, r0
 8000d18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d1c:	ea5f 0c01 	movs.w	ip, r1
 8000d20:	bf02      	ittt	eq
 8000d22:	4684      	moveq	ip, r0
 8000d24:	4601      	moveq	r1, r0
 8000d26:	2000      	moveq	r0, #0
 8000d28:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d2c:	bf08      	it	eq
 8000d2e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d32:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d36:	fabc f28c 	clz	r2, ip
 8000d3a:	3a08      	subs	r2, #8
 8000d3c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d40:	db10      	blt.n	8000d64 <__aeabi_l2f+0x5c>
 8000d42:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d46:	4463      	add	r3, ip
 8000d48:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d4c:	f1c2 0220 	rsb	r2, r2, #32
 8000d50:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d54:	fa20 f202 	lsr.w	r2, r0, r2
 8000d58:	eb43 0002 	adc.w	r0, r3, r2
 8000d5c:	bf08      	it	eq
 8000d5e:	f020 0001 	biceq.w	r0, r0, #1
 8000d62:	4770      	bx	lr
 8000d64:	f102 0220 	add.w	r2, r2, #32
 8000d68:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d74:	fa21 f202 	lsr.w	r2, r1, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d82:	4770      	bx	lr

08000d84 <__aeabi_fmul>:
 8000d84:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d8c:	bf1e      	ittt	ne
 8000d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d92:	ea92 0f0c 	teqne	r2, ip
 8000d96:	ea93 0f0c 	teqne	r3, ip
 8000d9a:	d06f      	beq.n	8000e7c <__aeabi_fmul+0xf8>
 8000d9c:	441a      	add	r2, r3
 8000d9e:	ea80 0c01 	eor.w	ip, r0, r1
 8000da2:	0240      	lsls	r0, r0, #9
 8000da4:	bf18      	it	ne
 8000da6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000daa:	d01e      	beq.n	8000dea <__aeabi_fmul+0x66>
 8000dac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000db0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000db4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000db8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dbc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000dc0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000dc4:	bf3e      	ittt	cc
 8000dc6:	0049      	lslcc	r1, r1, #1
 8000dc8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dcc:	005b      	lslcc	r3, r3, #1
 8000dce:	ea40 0001 	orr.w	r0, r0, r1
 8000dd2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000dd6:	2afd      	cmp	r2, #253	; 0xfd
 8000dd8:	d81d      	bhi.n	8000e16 <__aeabi_fmul+0x92>
 8000dda:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000de2:	bf08      	it	eq
 8000de4:	f020 0001 	biceq.w	r0, r0, #1
 8000de8:	4770      	bx	lr
 8000dea:	f090 0f00 	teq	r0, #0
 8000dee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000df2:	bf08      	it	eq
 8000df4:	0249      	lsleq	r1, r1, #9
 8000df6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dfa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dfe:	3a7f      	subs	r2, #127	; 0x7f
 8000e00:	bfc2      	ittt	gt
 8000e02:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e0a:	4770      	bxgt	lr
 8000e0c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e10:	f04f 0300 	mov.w	r3, #0
 8000e14:	3a01      	subs	r2, #1
 8000e16:	dc5d      	bgt.n	8000ed4 <__aeabi_fmul+0x150>
 8000e18:	f112 0f19 	cmn.w	r2, #25
 8000e1c:	bfdc      	itt	le
 8000e1e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e22:	4770      	bxle	lr
 8000e24:	f1c2 0200 	rsb	r2, r2, #0
 8000e28:	0041      	lsls	r1, r0, #1
 8000e2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e2e:	f1c2 0220 	rsb	r2, r2, #32
 8000e32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e3a:	f140 0000 	adc.w	r0, r0, #0
 8000e3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e42:	bf08      	it	eq
 8000e44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e48:	4770      	bx	lr
 8000e4a:	f092 0f00 	teq	r2, #0
 8000e4e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e52:	bf02      	ittt	eq
 8000e54:	0040      	lsleq	r0, r0, #1
 8000e56:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e5a:	3a01      	subeq	r2, #1
 8000e5c:	d0f9      	beq.n	8000e52 <__aeabi_fmul+0xce>
 8000e5e:	ea40 000c 	orr.w	r0, r0, ip
 8000e62:	f093 0f00 	teq	r3, #0
 8000e66:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e6a:	bf02      	ittt	eq
 8000e6c:	0049      	lsleq	r1, r1, #1
 8000e6e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e72:	3b01      	subeq	r3, #1
 8000e74:	d0f9      	beq.n	8000e6a <__aeabi_fmul+0xe6>
 8000e76:	ea41 010c 	orr.w	r1, r1, ip
 8000e7a:	e78f      	b.n	8000d9c <__aeabi_fmul+0x18>
 8000e7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e80:	ea92 0f0c 	teq	r2, ip
 8000e84:	bf18      	it	ne
 8000e86:	ea93 0f0c 	teqne	r3, ip
 8000e8a:	d00a      	beq.n	8000ea2 <__aeabi_fmul+0x11e>
 8000e8c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e90:	bf18      	it	ne
 8000e92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e96:	d1d8      	bne.n	8000e4a <__aeabi_fmul+0xc6>
 8000e98:	ea80 0001 	eor.w	r0, r0, r1
 8000e9c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ea0:	4770      	bx	lr
 8000ea2:	f090 0f00 	teq	r0, #0
 8000ea6:	bf17      	itett	ne
 8000ea8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000eac:	4608      	moveq	r0, r1
 8000eae:	f091 0f00 	teqne	r1, #0
 8000eb2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000eb6:	d014      	beq.n	8000ee2 <__aeabi_fmul+0x15e>
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	d101      	bne.n	8000ec2 <__aeabi_fmul+0x13e>
 8000ebe:	0242      	lsls	r2, r0, #9
 8000ec0:	d10f      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ec2:	ea93 0f0c 	teq	r3, ip
 8000ec6:	d103      	bne.n	8000ed0 <__aeabi_fmul+0x14c>
 8000ec8:	024b      	lsls	r3, r1, #9
 8000eca:	bf18      	it	ne
 8000ecc:	4608      	movne	r0, r1
 8000ece:	d108      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ed8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000edc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ee0:	4770      	bx	lr
 8000ee2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ee6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000eea:	4770      	bx	lr

08000eec <__aeabi_fdiv>:
 8000eec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000ef0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000ef4:	bf1e      	ittt	ne
 8000ef6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000efa:	ea92 0f0c 	teqne	r2, ip
 8000efe:	ea93 0f0c 	teqne	r3, ip
 8000f02:	d069      	beq.n	8000fd8 <__aeabi_fdiv+0xec>
 8000f04:	eba2 0203 	sub.w	r2, r2, r3
 8000f08:	ea80 0c01 	eor.w	ip, r0, r1
 8000f0c:	0249      	lsls	r1, r1, #9
 8000f0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f12:	d037      	beq.n	8000f84 <__aeabi_fdiv+0x98>
 8000f14:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f20:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f24:	428b      	cmp	r3, r1
 8000f26:	bf38      	it	cc
 8000f28:	005b      	lslcc	r3, r3, #1
 8000f2a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f2e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f32:	428b      	cmp	r3, r1
 8000f34:	bf24      	itt	cs
 8000f36:	1a5b      	subcs	r3, r3, r1
 8000f38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f40:	bf24      	itt	cs
 8000f42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f4e:	bf24      	itt	cs
 8000f50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f5c:	bf24      	itt	cs
 8000f5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f66:	011b      	lsls	r3, r3, #4
 8000f68:	bf18      	it	ne
 8000f6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f6e:	d1e0      	bne.n	8000f32 <__aeabi_fdiv+0x46>
 8000f70:	2afd      	cmp	r2, #253	; 0xfd
 8000f72:	f63f af50 	bhi.w	8000e16 <__aeabi_fmul+0x92>
 8000f76:	428b      	cmp	r3, r1
 8000f78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f7c:	bf08      	it	eq
 8000f7e:	f020 0001 	biceq.w	r0, r0, #1
 8000f82:	4770      	bx	lr
 8000f84:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f8c:	327f      	adds	r2, #127	; 0x7f
 8000f8e:	bfc2      	ittt	gt
 8000f90:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f98:	4770      	bxgt	lr
 8000f9a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f9e:	f04f 0300 	mov.w	r3, #0
 8000fa2:	3a01      	subs	r2, #1
 8000fa4:	e737      	b.n	8000e16 <__aeabi_fmul+0x92>
 8000fa6:	f092 0f00 	teq	r2, #0
 8000faa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fae:	bf02      	ittt	eq
 8000fb0:	0040      	lsleq	r0, r0, #1
 8000fb2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fb6:	3a01      	subeq	r2, #1
 8000fb8:	d0f9      	beq.n	8000fae <__aeabi_fdiv+0xc2>
 8000fba:	ea40 000c 	orr.w	r0, r0, ip
 8000fbe:	f093 0f00 	teq	r3, #0
 8000fc2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0049      	lsleq	r1, r1, #1
 8000fca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fce:	3b01      	subeq	r3, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fdiv+0xda>
 8000fd2:	ea41 010c 	orr.w	r1, r1, ip
 8000fd6:	e795      	b.n	8000f04 <__aeabi_fdiv+0x18>
 8000fd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fdc:	ea92 0f0c 	teq	r2, ip
 8000fe0:	d108      	bne.n	8000ff4 <__aeabi_fdiv+0x108>
 8000fe2:	0242      	lsls	r2, r0, #9
 8000fe4:	f47f af7d 	bne.w	8000ee2 <__aeabi_fmul+0x15e>
 8000fe8:	ea93 0f0c 	teq	r3, ip
 8000fec:	f47f af70 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	e776      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ff4:	ea93 0f0c 	teq	r3, ip
 8000ff8:	d104      	bne.n	8001004 <__aeabi_fdiv+0x118>
 8000ffa:	024b      	lsls	r3, r1, #9
 8000ffc:	f43f af4c 	beq.w	8000e98 <__aeabi_fmul+0x114>
 8001000:	4608      	mov	r0, r1
 8001002:	e76e      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001004:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001008:	bf18      	it	ne
 800100a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800100e:	d1ca      	bne.n	8000fa6 <__aeabi_fdiv+0xba>
 8001010:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001014:	f47f af5c 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8001018:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800101c:	f47f af3c 	bne.w	8000e98 <__aeabi_fmul+0x114>
 8001020:	e75f      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001022:	bf00      	nop

08001024 <__gesf2>:
 8001024:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8001028:	e006      	b.n	8001038 <__cmpsf2+0x4>
 800102a:	bf00      	nop

0800102c <__lesf2>:
 800102c:	f04f 0c01 	mov.w	ip, #1
 8001030:	e002      	b.n	8001038 <__cmpsf2+0x4>
 8001032:	bf00      	nop

08001034 <__cmpsf2>:
 8001034:	f04f 0c01 	mov.w	ip, #1
 8001038:	f84d cd04 	str.w	ip, [sp, #-4]!
 800103c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001040:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001044:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001048:	bf18      	it	ne
 800104a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800104e:	d011      	beq.n	8001074 <__cmpsf2+0x40>
 8001050:	b001      	add	sp, #4
 8001052:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001056:	bf18      	it	ne
 8001058:	ea90 0f01 	teqne	r0, r1
 800105c:	bf58      	it	pl
 800105e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001062:	bf88      	it	hi
 8001064:	17c8      	asrhi	r0, r1, #31
 8001066:	bf38      	it	cc
 8001068:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800106c:	bf18      	it	ne
 800106e:	f040 0001 	orrne.w	r0, r0, #1
 8001072:	4770      	bx	lr
 8001074:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001078:	d102      	bne.n	8001080 <__cmpsf2+0x4c>
 800107a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800107e:	d105      	bne.n	800108c <__cmpsf2+0x58>
 8001080:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001084:	d1e4      	bne.n	8001050 <__cmpsf2+0x1c>
 8001086:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800108a:	d0e1      	beq.n	8001050 <__cmpsf2+0x1c>
 800108c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop

08001094 <__aeabi_cfrcmple>:
 8001094:	4684      	mov	ip, r0
 8001096:	4608      	mov	r0, r1
 8001098:	4661      	mov	r1, ip
 800109a:	e7ff      	b.n	800109c <__aeabi_cfcmpeq>

0800109c <__aeabi_cfcmpeq>:
 800109c:	b50f      	push	{r0, r1, r2, r3, lr}
 800109e:	f7ff ffc9 	bl	8001034 <__cmpsf2>
 80010a2:	2800      	cmp	r0, #0
 80010a4:	bf48      	it	mi
 80010a6:	f110 0f00 	cmnmi.w	r0, #0
 80010aa:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010ac <__aeabi_fcmpeq>:
 80010ac:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010b0:	f7ff fff4 	bl	800109c <__aeabi_cfcmpeq>
 80010b4:	bf0c      	ite	eq
 80010b6:	2001      	moveq	r0, #1
 80010b8:	2000      	movne	r0, #0
 80010ba:	f85d fb08 	ldr.w	pc, [sp], #8
 80010be:	bf00      	nop

080010c0 <__aeabi_fcmplt>:
 80010c0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010c4:	f7ff ffea 	bl	800109c <__aeabi_cfcmpeq>
 80010c8:	bf34      	ite	cc
 80010ca:	2001      	movcc	r0, #1
 80010cc:	2000      	movcs	r0, #0
 80010ce:	f85d fb08 	ldr.w	pc, [sp], #8
 80010d2:	bf00      	nop

080010d4 <__aeabi_fcmple>:
 80010d4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010d8:	f7ff ffe0 	bl	800109c <__aeabi_cfcmpeq>
 80010dc:	bf94      	ite	ls
 80010de:	2001      	movls	r0, #1
 80010e0:	2000      	movhi	r0, #0
 80010e2:	f85d fb08 	ldr.w	pc, [sp], #8
 80010e6:	bf00      	nop

080010e8 <__aeabi_fcmpge>:
 80010e8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010ec:	f7ff ffd2 	bl	8001094 <__aeabi_cfrcmple>
 80010f0:	bf94      	ite	ls
 80010f2:	2001      	movls	r0, #1
 80010f4:	2000      	movhi	r0, #0
 80010f6:	f85d fb08 	ldr.w	pc, [sp], #8
 80010fa:	bf00      	nop

080010fc <__aeabi_fcmpgt>:
 80010fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001100:	f7ff ffc8 	bl	8001094 <__aeabi_cfrcmple>
 8001104:	bf34      	ite	cc
 8001106:	2001      	movcc	r0, #1
 8001108:	2000      	movcs	r0, #0
 800110a:	f85d fb08 	ldr.w	pc, [sp], #8
 800110e:	bf00      	nop

08001110 <__aeabi_f2uiz>:
 8001110:	0042      	lsls	r2, r0, #1
 8001112:	d20e      	bcs.n	8001132 <__aeabi_f2uiz+0x22>
 8001114:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001118:	d30b      	bcc.n	8001132 <__aeabi_f2uiz+0x22>
 800111a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800111e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001122:	d409      	bmi.n	8001138 <__aeabi_f2uiz+0x28>
 8001124:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001128:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800112c:	fa23 f002 	lsr.w	r0, r3, r2
 8001130:	4770      	bx	lr
 8001132:	f04f 0000 	mov.w	r0, #0
 8001136:	4770      	bx	lr
 8001138:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800113c:	d101      	bne.n	8001142 <__aeabi_f2uiz+0x32>
 800113e:	0242      	lsls	r2, r0, #9
 8001140:	d102      	bne.n	8001148 <__aeabi_f2uiz+0x38>
 8001142:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001146:	4770      	bx	lr
 8001148:	f04f 0000 	mov.w	r0, #0
 800114c:	4770      	bx	lr
 800114e:	bf00      	nop

08001150 <setCSLine>:
 8001150:	b580      	push	{r7, lr}
 8001152:	b082      	sub	sp, #8
 8001154:	af00      	add	r7, sp, #0
 8001156:	6078      	str	r0, [r7, #4]
 8001158:	460b      	mov	r3, r1
 800115a:	807b      	strh	r3, [r7, #2]
 800115c:	4613      	mov	r3, r2
 800115e:	707b      	strb	r3, [r7, #1]
 8001160:	787a      	ldrb	r2, [r7, #1]
 8001162:	887b      	ldrh	r3, [r7, #2]
 8001164:	4619      	mov	r1, r3
 8001166:	6878      	ldr	r0, [r7, #4]
 8001168:	f002 fb74 	bl	8003854 <HAL_GPIO_WritePin>
 800116c:	bf00      	nop
 800116e:	3708      	adds	r7, #8
 8001170:	46bd      	mov	sp, r7
 8001172:	bd80      	pop	{r7, pc}

08001174 <spiWriteRead>:
 8001174:	b580      	push	{r7, lr}
 8001176:	b088      	sub	sp, #32
 8001178:	af02      	add	r7, sp, #8
 800117a:	60f8      	str	r0, [r7, #12]
 800117c:	607a      	str	r2, [r7, #4]
 800117e:	461a      	mov	r2, r3
 8001180:	460b      	mov	r3, r1
 8001182:	72fb      	strb	r3, [r7, #11]
 8001184:	4613      	mov	r3, r2
 8001186:	813b      	strh	r3, [r7, #8]
 8001188:	893b      	ldrh	r3, [r7, #8]
 800118a:	2200      	movs	r2, #0
 800118c:	4619      	mov	r1, r3
 800118e:	6878      	ldr	r0, [r7, #4]
 8001190:	f7ff ffde 	bl	8001150 <setCSLine>
 8001194:	2003      	movs	r0, #3
 8001196:	f000 f901 	bl	800139c <delay>
 800119a:	f107 0217 	add.w	r2, r7, #23
 800119e:	f107 010b 	add.w	r1, r7, #11
 80011a2:	230a      	movs	r3, #10
 80011a4:	9300      	str	r3, [sp, #0]
 80011a6:	2301      	movs	r3, #1
 80011a8:	68f8      	ldr	r0, [r7, #12]
 80011aa:	f003 f86f 	bl	800428c <HAL_SPI_TransmitReceive>
 80011ae:	2003      	movs	r0, #3
 80011b0:	f000 f8f4 	bl	800139c <delay>
 80011b4:	f897 2020 	ldrb.w	r2, [r7, #32]
 80011b8:	893b      	ldrh	r3, [r7, #8]
 80011ba:	4619      	mov	r1, r3
 80011bc:	6878      	ldr	r0, [r7, #4]
 80011be:	f7ff ffc7 	bl	8001150 <setCSLine>
 80011c2:	7dfb      	ldrb	r3, [r7, #23]
 80011c4:	4618      	mov	r0, r3
 80011c6:	3718      	adds	r7, #24
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd80      	pop	{r7, pc}

080011cc <getPositionSPI>:
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b08c      	sub	sp, #48	; 0x30
 80011d0:	af02      	add	r7, sp, #8
 80011d2:	60f8      	str	r0, [r7, #12]
 80011d4:	60b9      	str	r1, [r7, #8]
 80011d6:	4611      	mov	r1, r2
 80011d8:	461a      	mov	r2, r3
 80011da:	460b      	mov	r3, r1
 80011dc:	80fb      	strh	r3, [r7, #6]
 80011de:	4613      	mov	r3, r2
 80011e0:	717b      	strb	r3, [r7, #5]
 80011e2:	f000 f8ed 	bl	80013c0 <DWT_Delay_Init>
 80011e6:	2300      	movs	r3, #0
 80011e8:	84fb      	strh	r3, [r7, #38]	; 0x26
 80011ea:	88fb      	ldrh	r3, [r7, #6]
 80011ec:	2200      	movs	r2, #0
 80011ee:	9200      	str	r2, [sp, #0]
 80011f0:	68ba      	ldr	r2, [r7, #8]
 80011f2:	2100      	movs	r1, #0
 80011f4:	68f8      	ldr	r0, [r7, #12]
 80011f6:	f7ff ffbd 	bl	8001174 <spiWriteRead>
 80011fa:	4603      	mov	r3, r0
 80011fc:	b29b      	uxth	r3, r3
 80011fe:	021b      	lsls	r3, r3, #8
 8001200:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001202:	2003      	movs	r0, #3
 8001204:	f000 f8ca 	bl	800139c <delay>
 8001208:	88fb      	ldrh	r3, [r7, #6]
 800120a:	2201      	movs	r2, #1
 800120c:	9200      	str	r2, [sp, #0]
 800120e:	68ba      	ldr	r2, [r7, #8]
 8001210:	2100      	movs	r1, #0
 8001212:	68f8      	ldr	r0, [r7, #12]
 8001214:	f7ff ffae 	bl	8001174 <spiWriteRead>
 8001218:	4603      	mov	r3, r0
 800121a:	b29a      	uxth	r2, r3
 800121c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800121e:	4313      	orrs	r3, r2
 8001220:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001222:	2300      	movs	r3, #0
 8001224:	623b      	str	r3, [r7, #32]
 8001226:	e010      	b.n	800124a <getPositionSPI+0x7e>
 8001228:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800122a:	6a3b      	ldr	r3, [r7, #32]
 800122c:	fa42 f303 	asr.w	r3, r2, r3
 8001230:	b2db      	uxtb	r3, r3
 8001232:	f003 0301 	and.w	r3, r3, #1
 8001236:	b2d9      	uxtb	r1, r3
 8001238:	f107 0210 	add.w	r2, r7, #16
 800123c:	6a3b      	ldr	r3, [r7, #32]
 800123e:	4413      	add	r3, r2
 8001240:	460a      	mov	r2, r1
 8001242:	701a      	strb	r2, [r3, #0]
 8001244:	6a3b      	ldr	r3, [r7, #32]
 8001246:	3301      	adds	r3, #1
 8001248:	623b      	str	r3, [r7, #32]
 800124a:	6a3b      	ldr	r3, [r7, #32]
 800124c:	2b0f      	cmp	r3, #15
 800124e:	ddeb      	ble.n	8001228 <getPositionSPI+0x5c>
 8001250:	7ffb      	ldrb	r3, [r7, #31]
 8001252:	4619      	mov	r1, r3
 8001254:	7f7a      	ldrb	r2, [r7, #29]
 8001256:	7efb      	ldrb	r3, [r7, #27]
 8001258:	4053      	eors	r3, r2
 800125a:	b2da      	uxtb	r2, r3
 800125c:	7e7b      	ldrb	r3, [r7, #25]
 800125e:	4053      	eors	r3, r2
 8001260:	b2da      	uxtb	r2, r3
 8001262:	7dfb      	ldrb	r3, [r7, #23]
 8001264:	4053      	eors	r3, r2
 8001266:	b2da      	uxtb	r2, r3
 8001268:	7d7b      	ldrb	r3, [r7, #21]
 800126a:	4053      	eors	r3, r2
 800126c:	b2da      	uxtb	r2, r3
 800126e:	7cfb      	ldrb	r3, [r7, #19]
 8001270:	4053      	eors	r3, r2
 8001272:	b2da      	uxtb	r2, r3
 8001274:	7c7b      	ldrb	r3, [r7, #17]
 8001276:	429a      	cmp	r2, r3
 8001278:	bf0c      	ite	eq
 800127a:	2301      	moveq	r3, #1
 800127c:	2300      	movne	r3, #0
 800127e:	b2db      	uxtb	r3, r3
 8001280:	4299      	cmp	r1, r3
 8001282:	d11e      	bne.n	80012c2 <getPositionSPI+0xf6>
 8001284:	7fbb      	ldrb	r3, [r7, #30]
 8001286:	4619      	mov	r1, r3
 8001288:	7f3a      	ldrb	r2, [r7, #28]
 800128a:	7ebb      	ldrb	r3, [r7, #26]
 800128c:	4053      	eors	r3, r2
 800128e:	b2da      	uxtb	r2, r3
 8001290:	7e3b      	ldrb	r3, [r7, #24]
 8001292:	4053      	eors	r3, r2
 8001294:	b2da      	uxtb	r2, r3
 8001296:	7dbb      	ldrb	r3, [r7, #22]
 8001298:	4053      	eors	r3, r2
 800129a:	b2da      	uxtb	r2, r3
 800129c:	7d3b      	ldrb	r3, [r7, #20]
 800129e:	4053      	eors	r3, r2
 80012a0:	b2da      	uxtb	r2, r3
 80012a2:	7cbb      	ldrb	r3, [r7, #18]
 80012a4:	4053      	eors	r3, r2
 80012a6:	b2da      	uxtb	r2, r3
 80012a8:	7c3b      	ldrb	r3, [r7, #16]
 80012aa:	429a      	cmp	r2, r3
 80012ac:	bf0c      	ite	eq
 80012ae:	2301      	moveq	r3, #1
 80012b0:	2300      	movne	r3, #0
 80012b2:	b2db      	uxtb	r3, r3
 80012b4:	4299      	cmp	r1, r3
 80012b6:	d104      	bne.n	80012c2 <getPositionSPI+0xf6>
 80012b8:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80012ba:	f3c3 030d 	ubfx	r3, r3, #0, #14
 80012be:	84fb      	strh	r3, [r7, #38]	; 0x26
 80012c0:	e002      	b.n	80012c8 <getPositionSPI+0xfc>
 80012c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80012c6:	84fb      	strh	r3, [r7, #38]	; 0x26
 80012c8:	797b      	ldrb	r3, [r7, #5]
 80012ca:	2b0c      	cmp	r3, #12
 80012cc:	d107      	bne.n	80012de <getPositionSPI+0x112>
 80012ce:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80012d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80012d4:	4293      	cmp	r3, r2
 80012d6:	d002      	beq.n	80012de <getPositionSPI+0x112>
 80012d8:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80012da:	089b      	lsrs	r3, r3, #2
 80012dc:	84fb      	strh	r3, [r7, #38]	; 0x26
 80012de:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80012e0:	4618      	mov	r0, r3
 80012e2:	3728      	adds	r7, #40	; 0x28
 80012e4:	46bd      	mov	sp, r7
 80012e6:	bd80      	pop	{r7, pc}

080012e8 <calculateAngle>:
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b084      	sub	sp, #16
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	4603      	mov	r3, r0
 80012f0:	460a      	mov	r2, r1
 80012f2:	80fb      	strh	r3, [r7, #6]
 80012f4:	4613      	mov	r3, r2
 80012f6:	717b      	strb	r3, [r7, #5]
 80012f8:	f04f 0300 	mov.w	r3, #0
 80012fc:	60fb      	str	r3, [r7, #12]
 80012fe:	797b      	ldrb	r3, [r7, #5]
 8001300:	2b0c      	cmp	r3, #12
 8001302:	d11e      	bne.n	8001342 <calculateAngle+0x5a>
 8001304:	88fb      	ldrh	r3, [r7, #6]
 8001306:	4618      	mov	r0, r3
 8001308:	f7ff fce4 	bl	8000cd4 <__aeabi_ui2f>
 800130c:	4603      	mov	r3, r0
 800130e:	4618      	mov	r0, r3
 8001310:	f7ff f88a 	bl	8000428 <__aeabi_f2d>
 8001314:	f04f 0200 	mov.w	r2, #0
 8001318:	4b1d      	ldr	r3, [pc, #116]	; (8001390 <calculateAngle+0xa8>)
 800131a:	f7ff f8dd 	bl	80004d8 <__aeabi_dmul>
 800131e:	4602      	mov	r2, r0
 8001320:	460b      	mov	r3, r1
 8001322:	4610      	mov	r0, r2
 8001324:	4619      	mov	r1, r3
 8001326:	f04f 0200 	mov.w	r2, #0
 800132a:	4b1a      	ldr	r3, [pc, #104]	; (8001394 <calculateAngle+0xac>)
 800132c:	f7ff f9fe 	bl	800072c <__aeabi_ddiv>
 8001330:	4602      	mov	r2, r0
 8001332:	460b      	mov	r3, r1
 8001334:	4610      	mov	r0, r2
 8001336:	4619      	mov	r1, r3
 8001338:	f7ff fbc6 	bl	8000ac8 <__aeabi_d2f>
 800133c:	4603      	mov	r3, r0
 800133e:	60fb      	str	r3, [r7, #12]
 8001340:	e020      	b.n	8001384 <calculateAngle+0x9c>
 8001342:	797b      	ldrb	r3, [r7, #5]
 8001344:	2b0e      	cmp	r3, #14
 8001346:	d11d      	bne.n	8001384 <calculateAngle+0x9c>
 8001348:	88fb      	ldrh	r3, [r7, #6]
 800134a:	4618      	mov	r0, r3
 800134c:	f7ff fcc2 	bl	8000cd4 <__aeabi_ui2f>
 8001350:	4603      	mov	r3, r0
 8001352:	4618      	mov	r0, r3
 8001354:	f7ff f868 	bl	8000428 <__aeabi_f2d>
 8001358:	f04f 0200 	mov.w	r2, #0
 800135c:	4b0c      	ldr	r3, [pc, #48]	; (8001390 <calculateAngle+0xa8>)
 800135e:	f7ff f8bb 	bl	80004d8 <__aeabi_dmul>
 8001362:	4602      	mov	r2, r0
 8001364:	460b      	mov	r3, r1
 8001366:	4610      	mov	r0, r2
 8001368:	4619      	mov	r1, r3
 800136a:	f04f 0200 	mov.w	r2, #0
 800136e:	4b0a      	ldr	r3, [pc, #40]	; (8001398 <calculateAngle+0xb0>)
 8001370:	f7ff f9dc 	bl	800072c <__aeabi_ddiv>
 8001374:	4602      	mov	r2, r0
 8001376:	460b      	mov	r3, r1
 8001378:	4610      	mov	r0, r2
 800137a:	4619      	mov	r1, r3
 800137c:	f7ff fba4 	bl	8000ac8 <__aeabi_d2f>
 8001380:	4603      	mov	r3, r0
 8001382:	60fb      	str	r3, [r7, #12]
 8001384:	68fb      	ldr	r3, [r7, #12]
 8001386:	4618      	mov	r0, r3
 8001388:	3710      	adds	r7, #16
 800138a:	46bd      	mov	sp, r7
 800138c:	bd80      	pop	{r7, pc}
 800138e:	bf00      	nop
 8001390:	40768000 	.word	0x40768000
 8001394:	40b00000 	.word	0x40b00000
 8001398:	40d00000 	.word	0x40d00000

0800139c <delay>:
 800139c:	b580      	push	{r7, lr}
 800139e:	b082      	sub	sp, #8
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	6878      	ldr	r0, [r7, #4]
 80013a6:	f000 f83b 	bl	8001420 <DWT_Delay_us>
 80013aa:	bf00      	nop
 80013ac:	3708      	adds	r7, #8
 80013ae:	46bd      	mov	sp, r7
 80013b0:	bd80      	pop	{r7, pc}

080013b2 <startDWT>:
 80013b2:	b580      	push	{r7, lr}
 80013b4:	af00      	add	r7, sp, #0
 80013b6:	f000 f803 	bl	80013c0 <DWT_Delay_Init>
 80013ba:	bf00      	nop
 80013bc:	4618      	mov	r0, r3
 80013be:	bd80      	pop	{r7, pc}

080013c0 <DWT_Delay_Init>:
 80013c0:	b480      	push	{r7}
 80013c2:	af00      	add	r7, sp, #0
 80013c4:	4b14      	ldr	r3, [pc, #80]	; (8001418 <DWT_Delay_Init+0x58>)
 80013c6:	68db      	ldr	r3, [r3, #12]
 80013c8:	4a13      	ldr	r2, [pc, #76]	; (8001418 <DWT_Delay_Init+0x58>)
 80013ca:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80013ce:	60d3      	str	r3, [r2, #12]
 80013d0:	4b11      	ldr	r3, [pc, #68]	; (8001418 <DWT_Delay_Init+0x58>)
 80013d2:	68db      	ldr	r3, [r3, #12]
 80013d4:	4a10      	ldr	r2, [pc, #64]	; (8001418 <DWT_Delay_Init+0x58>)
 80013d6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80013da:	60d3      	str	r3, [r2, #12]
 80013dc:	4b0f      	ldr	r3, [pc, #60]	; (800141c <DWT_Delay_Init+0x5c>)
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	4a0e      	ldr	r2, [pc, #56]	; (800141c <DWT_Delay_Init+0x5c>)
 80013e2:	f023 0301 	bic.w	r3, r3, #1
 80013e6:	6013      	str	r3, [r2, #0]
 80013e8:	4b0c      	ldr	r3, [pc, #48]	; (800141c <DWT_Delay_Init+0x5c>)
 80013ea:	681b      	ldr	r3, [r3, #0]
 80013ec:	4a0b      	ldr	r2, [pc, #44]	; (800141c <DWT_Delay_Init+0x5c>)
 80013ee:	f043 0301 	orr.w	r3, r3, #1
 80013f2:	6013      	str	r3, [r2, #0]
 80013f4:	4b09      	ldr	r3, [pc, #36]	; (800141c <DWT_Delay_Init+0x5c>)
 80013f6:	2200      	movs	r2, #0
 80013f8:	605a      	str	r2, [r3, #4]
 80013fa:	bf00      	nop
 80013fc:	bf00      	nop
 80013fe:	bf00      	nop
 8001400:	4b06      	ldr	r3, [pc, #24]	; (800141c <DWT_Delay_Init+0x5c>)
 8001402:	685b      	ldr	r3, [r3, #4]
 8001404:	2b00      	cmp	r3, #0
 8001406:	d001      	beq.n	800140c <DWT_Delay_Init+0x4c>
 8001408:	2300      	movs	r3, #0
 800140a:	e000      	b.n	800140e <DWT_Delay_Init+0x4e>
 800140c:	2301      	movs	r3, #1
 800140e:	4618      	mov	r0, r3
 8001410:	46bd      	mov	sp, r7
 8001412:	bc80      	pop	{r7}
 8001414:	4770      	bx	lr
 8001416:	bf00      	nop
 8001418:	e000edf0 	.word	0xe000edf0
 800141c:	e0001000 	.word	0xe0001000

08001420 <DWT_Delay_us>:
 8001420:	b580      	push	{r7, lr}
 8001422:	b084      	sub	sp, #16
 8001424:	af00      	add	r7, sp, #0
 8001426:	6078      	str	r0, [r7, #4]
 8001428:	4b0f      	ldr	r3, [pc, #60]	; (8001468 <DWT_Delay_us+0x48>)
 800142a:	685b      	ldr	r3, [r3, #4]
 800142c:	60fb      	str	r3, [r7, #12]
 800142e:	f002 fe0f 	bl	8004050 <HAL_RCC_GetHCLKFreq>
 8001432:	4603      	mov	r3, r0
 8001434:	4a0d      	ldr	r2, [pc, #52]	; (800146c <DWT_Delay_us+0x4c>)
 8001436:	fba2 2303 	umull	r2, r3, r2, r3
 800143a:	0c9b      	lsrs	r3, r3, #18
 800143c:	60bb      	str	r3, [r7, #8]
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	68ba      	ldr	r2, [r7, #8]
 8001442:	fb02 f303 	mul.w	r3, r2, r3
 8001446:	607b      	str	r3, [r7, #4]
 8001448:	bf00      	nop
 800144a:	4b07      	ldr	r3, [pc, #28]	; (8001468 <DWT_Delay_us+0x48>)
 800144c:	685a      	ldr	r2, [r3, #4]
 800144e:	68fb      	ldr	r3, [r7, #12]
 8001450:	1ad2      	subs	r2, r2, r3
 8001452:	6879      	ldr	r1, [r7, #4]
 8001454:	68bb      	ldr	r3, [r7, #8]
 8001456:	1acb      	subs	r3, r1, r3
 8001458:	429a      	cmp	r2, r3
 800145a:	d3f6      	bcc.n	800144a <DWT_Delay_us+0x2a>
 800145c:	bf00      	nop
 800145e:	bf00      	nop
 8001460:	3710      	adds	r7, #16
 8001462:	46bd      	mov	sp, r7
 8001464:	bd80      	pop	{r7, pc}
 8001466:	bf00      	nop
 8001468:	e0001000 	.word	0xe0001000
 800146c:	431bde83 	.word	0x431bde83

08001470 <_ZSt3absd>:
// 2735. std::abs(short), std::abs(signed char) and others should return int

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR double
  abs(double __x)
  { return __builtin_fabs(__x); }
 8001470:	b480      	push	{r7}
 8001472:	b083      	sub	sp, #12
 8001474:	af00      	add	r7, sp, #0
 8001476:	e9c7 0100 	strd	r0, r1, [r7]
 800147a:	683a      	ldr	r2, [r7, #0]
 800147c:	6879      	ldr	r1, [r7, #4]
 800147e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8001482:	4610      	mov	r0, r2
 8001484:	4619      	mov	r1, r3
 8001486:	370c      	adds	r7, #12
 8001488:	46bd      	mov	sp, r7
 800148a:	bc80      	pop	{r7}
 800148c:	4770      	bx	lr

0800148e <_ZSt3absf>:

  inline _GLIBCXX_CONSTEXPR float
  abs(float __x)
  { return __builtin_fabsf(__x); }
 800148e:	b480      	push	{r7}
 8001490:	b083      	sub	sp, #12
 8001492:	af00      	add	r7, sp, #0
 8001494:	6078      	str	r0, [r7, #4]
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800149c:	4618      	mov	r0, r3
 800149e:	370c      	adds	r7, #12
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bc80      	pop	{r7}
 80014a4:	4770      	bx	lr

080014a6 <_ZSt4ceilf>:
  using ::ceil;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  ceil(float __x)
  { return __builtin_ceilf(__x); }
 80014a6:	b580      	push	{r7, lr}
 80014a8:	b082      	sub	sp, #8
 80014aa:	af00      	add	r7, sp, #0
 80014ac:	6078      	str	r0, [r7, #4]
 80014ae:	6878      	ldr	r0, [r7, #4]
 80014b0:	f006 f9fe 	bl	80078b0 <ceilf>
 80014b4:	4603      	mov	r3, r0
 80014b6:	4618      	mov	r0, r3
 80014b8:	3708      	adds	r7, #8
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}
	...

080014c0 <_ZN7RoboArmC1Ehh>:
#include "RoboArm.h"
//#include "TMC2209.h"

RoboArm::RoboArm(uint8_t defaultAngleT, uint8_t defaultDistanseT) {
 80014c0:	b580      	push	{r7, lr}
 80014c2:	b082      	sub	sp, #8
 80014c4:	af00      	add	r7, sp, #0
 80014c6:	6078      	str	r0, [r7, #4]
 80014c8:	460b      	mov	r3, r1
 80014ca:	70fb      	strb	r3, [r7, #3]
 80014cc:	4613      	mov	r3, r2
 80014ce:	70bb      	strb	r3, [r7, #2]
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	4a29      	ldr	r2, [pc, #164]	; (8001578 <_ZN7RoboArmC1Ehh+0xb8>)
 80014d4:	601a      	str	r2, [r3, #0]
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	2200      	movs	r2, #0
 80014da:	645a      	str	r2, [r3, #68]	; 0x44
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	2200      	movs	r2, #0
 80014e0:	649a      	str	r2, [r3, #72]	; 0x48
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	4a25      	ldr	r2, [pc, #148]	; (800157c <_ZN7RoboArmC1Ehh+0xbc>)
 80014e6:	64da      	str	r2, [r3, #76]	; 0x4c
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	220e      	movs	r2, #14
 80014ec:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	3370      	adds	r3, #112	; 0x70
 80014f4:	4618      	mov	r0, r3
 80014f6:	f000 fce8 	bl	8001eca <_ZN7TMC2209C1Ev>
 80014fa:	687b      	ldr	r3, [r7, #4]
 80014fc:	3398      	adds	r3, #152	; 0x98
 80014fe:	4618      	mov	r0, r3
 8001500:	f000 fce3 	bl	8001eca <_ZN7TMC2209C1Ev>
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	33c0      	adds	r3, #192	; 0xc0
 8001508:	4618      	mov	r0, r3
 800150a:	f000 fcde 	bl	8001eca <_ZN7TMC2209C1Ev>
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	2200      	movs	r2, #0
 8001512:	f883 20ee 	strb.w	r2, [r3, #238]	; 0xee
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	2200      	movs	r2, #0
 800151a:	f883 20ef 	strb.w	r2, [r3, #239]	; 0xef
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	2200      	movs	r2, #0
 8001522:	f883 20f6 	strb.w	r2, [r3, #246]	; 0xf6
 8001526:	687b      	ldr	r3, [r7, #4]
 8001528:	2200      	movs	r2, #0
 800152a:	f8a3 20f8 	strh.w	r2, [r3, #248]	; 0xf8
 800152e:	687b      	ldr	r3, [r7, #4]
 8001530:	f04f 0200 	mov.w	r2, #0
 8001534:	f8c3 20fc 	str.w	r2, [r3, #252]	; 0xfc
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	2200      	movs	r2, #0
 800153c:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	f04f 0200 	mov.w	r2, #0
 8001546:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
 800154a:	687b      	ldr	r3, [r7, #4]
 800154c:	f04f 0200 	mov.w	r2, #0
 8001550:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
	defaultAngle = defaultAngleT;
 8001554:	78fb      	ldrb	r3, [r7, #3]
 8001556:	b29a      	uxth	r2, r3
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	f8a3 20f0 	strh.w	r2, [r3, #240]	; 0xf0
	defaultDistanse = defaultDistanseT;
 800155e:	78bb      	ldrb	r3, [r7, #2]
 8001560:	b29a      	uxth	r2, r3
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	f8a3 20f2 	strh.w	r2, [r3, #242]	; 0xf2

//	tmcd_angle.setup(huartTmc, 115200, tmcd_angle.SERIAL_ADDRESS_0);
//	tmcd_gripper.setup(huartTmc, 115200, tmcd_gripper.SERIAL_ADDRESS_1);
//	tmcd_linear.setup(huartTmc, 115200, tmcd_linear.SERIAL_ADDRESS_3);

	startDWT();
 8001568:	f7ff ff23 	bl	80013b2 <startDWT>
}
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	4618      	mov	r0, r3
 8001570:	3708      	adds	r7, #8
 8001572:	46bd      	mov	sp, r7
 8001574:	bd80      	pop	{r7, pc}
 8001576:	bf00      	nop
 8001578:	42200000 	.word	0x42200000
 800157c:	437a0000 	.word	0x437a0000

08001580 <_ZN7RoboArm13EmergencyStopEv>:

int RoboArm::CloseGripper() {
	return 0;
}

int RoboArm::EmergencyStop() {
 8001580:	b580      	push	{r7, lr}
 8001582:	b082      	sub	sp, #8
 8001584:	af00      	add	r7, sp, #0
 8001586:	6078      	str	r0, [r7, #4]

	HAL_GPIO_WritePin(En1_GPIO_Port_M1, En1_Pin_M1, GPIO_PIN_SET);
 8001588:	687b      	ldr	r3, [r7, #4]
 800158a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 8001590:	2201      	movs	r2, #1
 8001592:	4619      	mov	r1, r3
 8001594:	f002 f95e 	bl	8003854 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(En2_GPIO_Port_M2, En2_Pin_M2, GPIO_PIN_SET);
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 80015a0:	2201      	movs	r2, #1
 80015a2:	4619      	mov	r1, r3
 80015a4:	f002 f956 	bl	8003854 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(En3_GPIO_Port_M3, En3_Pin_M3, GPIO_PIN_SET);
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80015ac:	687b      	ldr	r3, [r7, #4]
 80015ae:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 80015b2:	2201      	movs	r2, #1
 80015b4:	4619      	mov	r1, r3
 80015b6:	f002 f94d 	bl	8003854 <HAL_GPIO_WritePin>

	HAL_TIM_PWM_Stop(htim1M1, TIM_CHANNEL_1);
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	685b      	ldr	r3, [r3, #4]
 80015be:	2100      	movs	r1, #0
 80015c0:	4618      	mov	r0, r3
 80015c2:	f003 fb7f 	bl	8004cc4 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(htim2M2, TIM_CHANNEL_2);
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	689b      	ldr	r3, [r3, #8]
 80015ca:	2104      	movs	r1, #4
 80015cc:	4618      	mov	r0, r3
 80015ce:	f003 fb79 	bl	8004cc4 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(htim3M3, TIM_CHANNEL_3);
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	68db      	ldr	r3, [r3, #12]
 80015d6:	2108      	movs	r1, #8
 80015d8:	4618      	mov	r0, r3
 80015da:	f003 fb73 	bl	8004cc4 <HAL_TIM_PWM_Stop>

	HAL_TIM_Base_Stop_IT(htim1M1);
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	685b      	ldr	r3, [r3, #4]
 80015e2:	4618      	mov	r0, r3
 80015e4:	f003 fa4e 	bl	8004a84 <HAL_TIM_Base_Stop_IT>
	HAL_TIM_Base_Stop_IT(htim2M2);
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	689b      	ldr	r3, [r3, #8]
 80015ec:	4618      	mov	r0, r3
 80015ee:	f003 fa49 	bl	8004a84 <HAL_TIM_Base_Stop_IT>
	HAL_TIM_Base_Stop_IT(htim3M3);
 80015f2:	687b      	ldr	r3, [r7, #4]
 80015f4:	68db      	ldr	r3, [r3, #12]
 80015f6:	4618      	mov	r0, r3
 80015f8:	f003 fa44 	bl	8004a84 <HAL_TIM_Base_Stop_IT>

	return 0;
 80015fc:	2300      	movs	r3, #0
}
 80015fe:	4618      	mov	r0, r3
 8001600:	3708      	adds	r7, #8
 8001602:	46bd      	mov	sp, r7
 8001604:	bd80      	pop	{r7, pc}
	...

08001608 <_ZN7RoboArm15GetLastPositionEv>:

	return 0;

}

int RoboArm::GetLastPosition() {
 8001608:	b580      	push	{r7, lr}
 800160a:	b086      	sub	sp, #24
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
	int attempts = 0;
 8001610:	2300      	movs	r3, #0
 8001612:	617b      	str	r3, [r7, #20]
	uint32_t posnowT_ang = GetPosEncoders(1);
 8001614:	2101      	movs	r1, #1
 8001616:	6878      	ldr	r0, [r7, #4]
 8001618:	f000 faaf 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 800161c:	6138      	str	r0, [r7, #16]
	while(posnowT_ang == 0xFFFF && ++attempts < 3)
 800161e:	e004      	b.n	800162a <_ZN7RoboArm15GetLastPositionEv+0x22>
		posnowT_ang = GetPosEncoders(1);
 8001620:	2101      	movs	r1, #1
 8001622:	6878      	ldr	r0, [r7, #4]
 8001624:	f000 faa9 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001628:	6138      	str	r0, [r7, #16]
	while(posnowT_ang == 0xFFFF && ++attempts < 3)
 800162a:	693b      	ldr	r3, [r7, #16]
 800162c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001630:	4293      	cmp	r3, r2
 8001632:	d107      	bne.n	8001644 <_ZN7RoboArm15GetLastPositionEv+0x3c>
 8001634:	697b      	ldr	r3, [r7, #20]
 8001636:	3301      	adds	r3, #1
 8001638:	617b      	str	r3, [r7, #20]
 800163a:	697b      	ldr	r3, [r7, #20]
 800163c:	2b02      	cmp	r3, #2
 800163e:	dc01      	bgt.n	8001644 <_ZN7RoboArm15GetLastPositionEv+0x3c>
 8001640:	2301      	movs	r3, #1
 8001642:	e000      	b.n	8001646 <_ZN7RoboArm15GetLastPositionEv+0x3e>
 8001644:	2300      	movs	r3, #0
 8001646:	2b00      	cmp	r3, #0
 8001648:	d1ea      	bne.n	8001620 <_ZN7RoboArm15GetLastPositionEv+0x18>
	lastPosAngle = GetAngleEncoders(posnowT_ang);
 800164a:	6939      	ldr	r1, [r7, #16]
 800164c:	6878      	ldr	r0, [r7, #4]
 800164e:	f000 fa81 	bl	8001b54 <_ZN7RoboArm16GetAngleEncodersEm>
 8001652:	4602      	mov	r2, r0
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	f8c3 20fc 	str.w	r2, [r3, #252]	; 0xfc
	attempts = 0;
 800165a:	2300      	movs	r3, #0
 800165c:	617b      	str	r3, [r7, #20]
	uint32_t posnowT_lin = GetPosEncoders(2);
 800165e:	2102      	movs	r1, #2
 8001660:	6878      	ldr	r0, [r7, #4]
 8001662:	f000 fa8a 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001666:	60f8      	str	r0, [r7, #12]
	while(posnowT_lin == 0xFFFF && ++attempts < 3)
 8001668:	e004      	b.n	8001674 <_ZN7RoboArm15GetLastPositionEv+0x6c>
		posnowT_lin = GetPosEncoders(2);
 800166a:	2102      	movs	r1, #2
 800166c:	6878      	ldr	r0, [r7, #4]
 800166e:	f000 fa84 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001672:	60f8      	str	r0, [r7, #12]
	while(posnowT_lin == 0xFFFF && ++attempts < 3)
 8001674:	68fb      	ldr	r3, [r7, #12]
 8001676:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800167a:	4293      	cmp	r3, r2
 800167c:	d107      	bne.n	800168e <_ZN7RoboArm15GetLastPositionEv+0x86>
 800167e:	697b      	ldr	r3, [r7, #20]
 8001680:	3301      	adds	r3, #1
 8001682:	617b      	str	r3, [r7, #20]
 8001684:	697b      	ldr	r3, [r7, #20]
 8001686:	2b02      	cmp	r3, #2
 8001688:	dc01      	bgt.n	800168e <_ZN7RoboArm15GetLastPositionEv+0x86>
 800168a:	2301      	movs	r3, #1
 800168c:	e000      	b.n	8001690 <_ZN7RoboArm15GetLastPositionEv+0x88>
 800168e:	2300      	movs	r3, #0
 8001690:	2b00      	cmp	r3, #0
 8001692:	d1ea      	bne.n	800166a <_ZN7RoboArm15GetLastPositionEv+0x62>
	float pos = GetAngleEncoders(posnowT_lin);
 8001694:	68f9      	ldr	r1, [r7, #12]
 8001696:	6878      	ldr	r0, [r7, #4]
 8001698:	f000 fa5c 	bl	8001b54 <_ZN7RoboArm16GetAngleEncodersEm>
 800169c:	60b8      	str	r0, [r7, #8]
	lastPosLinear = pos*distMax/360.0;
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80016a2:	68b9      	ldr	r1, [r7, #8]
 80016a4:	4618      	mov	r0, r3
 80016a6:	f7ff fb6d 	bl	8000d84 <__aeabi_fmul>
 80016aa:	4603      	mov	r3, r0
 80016ac:	4618      	mov	r0, r3
 80016ae:	f7fe febb 	bl	8000428 <__aeabi_f2d>
 80016b2:	f04f 0200 	mov.w	r2, #0
 80016b6:	4b09      	ldr	r3, [pc, #36]	; (80016dc <_ZN7RoboArm15GetLastPositionEv+0xd4>)
 80016b8:	f7ff f838 	bl	800072c <__aeabi_ddiv>
 80016bc:	4602      	mov	r2, r0
 80016be:	460b      	mov	r3, r1
 80016c0:	4610      	mov	r0, r2
 80016c2:	4619      	mov	r1, r3
 80016c4:	f7ff f9e0 	bl	8000a88 <__aeabi_d2uiz>
 80016c8:	4603      	mov	r3, r0
 80016ca:	b29a      	uxth	r2, r3
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	f8a3 20f8 	strh.w	r2, [r3, #248]	; 0xf8

//	lastPosAngle = ShiftZeroOutputAng(lastPosAngle);
//	lastPosLinear = ShiftZeroOutputLin(lastPosLinear);
	return 0;
 80016d2:	2300      	movs	r3, #0
}
 80016d4:	4618      	mov	r0, r3
 80016d6:	3718      	adds	r7, #24
 80016d8:	46bd      	mov	sp, r7
 80016da:	bd80      	pop	{r7, pc}
 80016dc:	40768000 	.word	0x40768000

080016e0 <_ZN7RoboArm15Move2MotorsSimuEff>:

int RoboArm::Move2MotorsSimu(float angle, float distance) {
 80016e0:	b590      	push	{r4, r7, lr}
 80016e2:	b08d      	sub	sp, #52	; 0x34
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	60f8      	str	r0, [r7, #12]
 80016e8:	60b9      	str	r1, [r7, #8]
 80016ea:	607a      	str	r2, [r7, #4]

	// TIM1 Х  enc1 -  угол 360  -  8 оборотов движка на 1 оборот энкодера
	// TIM2  Y  enc2 - линейный -  6,4516129 оборотов движка (это целое линейное перемещение с запасом) на 1 оборот энкодера

	HAL_TIM_PWM_Stop(htim1M1, TIM_CHANNEL_1);      //остановили PWM таймера
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	685b      	ldr	r3, [r3, #4]
 80016f0:	2100      	movs	r1, #0
 80016f2:	4618      	mov	r0, r3
 80016f4:	f003 fae6 	bl	8004cc4 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(htim2M2, TIM_CHANNEL_2);
 80016f8:	68fb      	ldr	r3, [r7, #12]
 80016fa:	689b      	ldr	r3, [r3, #8]
 80016fc:	2104      	movs	r1, #4
 80016fe:	4618      	mov	r0, r3
 8001700:	f003 fae0 	bl	8004cc4 <HAL_TIM_PWM_Stop>
	HAL_TIM_Base_Stop_IT(htim1M1);				// остановили прерывание таймеров
 8001704:	68fb      	ldr	r3, [r7, #12]
 8001706:	685b      	ldr	r3, [r3, #4]
 8001708:	4618      	mov	r0, r3
 800170a:	f003 f9bb 	bl	8004a84 <HAL_TIM_Base_Stop_IT>
	HAL_TIM_Base_Stop_IT(htim2M2);
 800170e:	68fb      	ldr	r3, [r7, #12]
 8001710:	689b      	ldr	r3, [r3, #8]
 8001712:	4618      	mov	r0, r3
 8001714:	f003 f9b6 	bl	8004a84 <HAL_TIM_Base_Stop_IT>

	SetEnable(1, false);
 8001718:	2200      	movs	r2, #0
 800171a:	2101      	movs	r1, #1
 800171c:	68f8      	ldr	r0, [r7, #12]
 800171e:	f000 fb9b 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>
	SetEnable(2, false);
 8001722:	2200      	movs	r2, #0
 8001724:	2102      	movs	r1, #2
 8001726:	68f8      	ldr	r0, [r7, #12]
 8001728:	f000 fb96 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>

	GetLastPosition();
 800172c:	68f8      	ldr	r0, [r7, #12]
 800172e:	f7ff ff6b 	bl	8001608 <_ZN7RoboArm15GetLastPositionEv>

	float pos_ang = abs(lastPosAngle - angle);
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 8001738:	68b9      	ldr	r1, [r7, #8]
 800173a:	4618      	mov	r0, r3
 800173c:	f7ff fa18 	bl	8000b70 <__aeabi_fsub>
 8001740:	4603      	mov	r3, r0
 8001742:	4618      	mov	r0, r3
 8001744:	f7ff fea3 	bl	800148e <_ZSt3absf>
 8001748:	62b8      	str	r0, [r7, #40]	; 0x28
	float inverse_pos_ang = abs(360.0 - pos_ang);
 800174a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800174c:	f7fe fe6c 	bl	8000428 <__aeabi_f2d>
 8001750:	4602      	mov	r2, r0
 8001752:	460b      	mov	r3, r1
 8001754:	f04f 0000 	mov.w	r0, #0
 8001758:	4993      	ldr	r1, [pc, #588]	; (80019a8 <_ZN7RoboArm15Move2MotorsSimuEff+0x2c8>)
 800175a:	f7fe fd05 	bl	8000168 <__aeabi_dsub>
 800175e:	4602      	mov	r2, r0
 8001760:	460b      	mov	r3, r1
 8001762:	4610      	mov	r0, r2
 8001764:	4619      	mov	r1, r3
 8001766:	f7ff fe83 	bl	8001470 <_ZSt3absd>
 800176a:	4602      	mov	r2, r0
 800176c:	460b      	mov	r3, r1
 800176e:	4610      	mov	r0, r2
 8001770:	4619      	mov	r1, r3
 8001772:	f7ff f9a9 	bl	8000ac8 <__aeabi_d2f>
 8001776:	4603      	mov	r3, r0
 8001778:	627b      	str	r3, [r7, #36]	; 0x24
	float actualPosAngle;
	/* выставили в каку сторону ехать мотору*/
	if (inverse_pos_ang < pos_ang) {
 800177a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800177c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800177e:	f7ff fc9f 	bl	80010c0 <__aeabi_fcmplt>
 8001782:	4603      	mov	r3, r0
 8001784:	2b00      	cmp	r3, #0
 8001786:	d027      	beq.n	80017d8 <_ZN7RoboArm15Move2MotorsSimuEff+0xf8>
		actualPosAngle = inverse_pos_ang;
 8001788:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800178a:	62fb      	str	r3, [r7, #44]	; 0x2c
		if (lastPosAngle < angle) {
 800178c:	68fb      	ldr	r3, [r7, #12]
 800178e:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 8001792:	4619      	mov	r1, r3
 8001794:	68b8      	ldr	r0, [r7, #8]
 8001796:	f7ff fcb1 	bl	80010fc <__aeabi_fcmpgt>
 800179a:	4603      	mov	r3, r0
 800179c:	2b00      	cmp	r3, #0
 800179e:	d008      	beq.n	80017b2 <_ZN7RoboArm15Move2MotorsSimuEff+0xd2>
			HAL_GPIO_WritePin(Dir1_GPIO_Port_M1, Dir1_Pin_M1, GPIO_PIN_RESET);
 80017a0:	68fb      	ldr	r3, [r7, #12]
 80017a2:	6958      	ldr	r0, [r3, #20]
 80017a4:	68fb      	ldr	r3, [r7, #12]
 80017a6:	8b1b      	ldrh	r3, [r3, #24]
 80017a8:	2200      	movs	r2, #0
 80017aa:	4619      	mov	r1, r3
 80017ac:	f002 f852 	bl	8003854 <HAL_GPIO_WritePin>
 80017b0:	e039      	b.n	8001826 <_ZN7RoboArm15Move2MotorsSimuEff+0x146>
		} else if (lastPosAngle > angle) {
 80017b2:	68fb      	ldr	r3, [r7, #12]
 80017b4:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 80017b8:	4619      	mov	r1, r3
 80017ba:	68b8      	ldr	r0, [r7, #8]
 80017bc:	f7ff fc80 	bl	80010c0 <__aeabi_fcmplt>
 80017c0:	4603      	mov	r3, r0
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d02f      	beq.n	8001826 <_ZN7RoboArm15Move2MotorsSimuEff+0x146>
			HAL_GPIO_WritePin(Dir1_GPIO_Port_M1, Dir1_Pin_M1, GPIO_PIN_SET);
 80017c6:	68fb      	ldr	r3, [r7, #12]
 80017c8:	6958      	ldr	r0, [r3, #20]
 80017ca:	68fb      	ldr	r3, [r7, #12]
 80017cc:	8b1b      	ldrh	r3, [r3, #24]
 80017ce:	2201      	movs	r2, #1
 80017d0:	4619      	mov	r1, r3
 80017d2:	f002 f83f 	bl	8003854 <HAL_GPIO_WritePin>
 80017d6:	e026      	b.n	8001826 <_ZN7RoboArm15Move2MotorsSimuEff+0x146>
		}
	}
	else {
		actualPosAngle = pos_ang;
 80017d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80017da:	62fb      	str	r3, [r7, #44]	; 0x2c
		if (lastPosAngle < angle) {
 80017dc:	68fb      	ldr	r3, [r7, #12]
 80017de:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 80017e2:	4619      	mov	r1, r3
 80017e4:	68b8      	ldr	r0, [r7, #8]
 80017e6:	f7ff fc89 	bl	80010fc <__aeabi_fcmpgt>
 80017ea:	4603      	mov	r3, r0
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d008      	beq.n	8001802 <_ZN7RoboArm15Move2MotorsSimuEff+0x122>
			HAL_GPIO_WritePin(Dir1_GPIO_Port_M1, Dir1_Pin_M1, GPIO_PIN_SET);
 80017f0:	68fb      	ldr	r3, [r7, #12]
 80017f2:	6958      	ldr	r0, [r3, #20]
 80017f4:	68fb      	ldr	r3, [r7, #12]
 80017f6:	8b1b      	ldrh	r3, [r3, #24]
 80017f8:	2201      	movs	r2, #1
 80017fa:	4619      	mov	r1, r3
 80017fc:	f002 f82a 	bl	8003854 <HAL_GPIO_WritePin>
 8001800:	e011      	b.n	8001826 <_ZN7RoboArm15Move2MotorsSimuEff+0x146>
		} else if (lastPosAngle > angle) {
 8001802:	68fb      	ldr	r3, [r7, #12]
 8001804:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 8001808:	4619      	mov	r1, r3
 800180a:	68b8      	ldr	r0, [r7, #8]
 800180c:	f7ff fc58 	bl	80010c0 <__aeabi_fcmplt>
 8001810:	4603      	mov	r3, r0
 8001812:	2b00      	cmp	r3, #0
 8001814:	d007      	beq.n	8001826 <_ZN7RoboArm15Move2MotorsSimuEff+0x146>
			HAL_GPIO_WritePin(Dir1_GPIO_Port_M1, Dir1_Pin_M1, GPIO_PIN_RESET);
 8001816:	68fb      	ldr	r3, [r7, #12]
 8001818:	6958      	ldr	r0, [r3, #20]
 800181a:	68fb      	ldr	r3, [r7, #12]
 800181c:	8b1b      	ldrh	r3, [r3, #24]
 800181e:	2200      	movs	r2, #0
 8001820:	4619      	mov	r1, r3
 8001822:	f002 f817 	bl	8003854 <HAL_GPIO_WritePin>
//	if (lastPosLinear < distance) {
//		HAL_GPIO_WritePin(Dir2_GPIO_Port_M2, Dir2_Pin_M2, GPIO_PIN_SET);
//	} else if (lastPosLinear > distance) {
//		HAL_GPIO_WritePin(Dir2_GPIO_Port_M2, Dir2_Pin_M2, GPIO_PIN_RESET);
//	}
	if (lastPosLinear < distance) {
 8001826:	68fb      	ldr	r3, [r7, #12]
 8001828:	f8b3 30f8 	ldrh.w	r3, [r3, #248]	; 0xf8
 800182c:	4618      	mov	r0, r3
 800182e:	f7ff fa55 	bl	8000cdc <__aeabi_i2f>
 8001832:	4603      	mov	r3, r0
 8001834:	4619      	mov	r1, r3
 8001836:	6878      	ldr	r0, [r7, #4]
 8001838:	f7ff fc60 	bl	80010fc <__aeabi_fcmpgt>
 800183c:	4603      	mov	r3, r0
 800183e:	2b00      	cmp	r3, #0
 8001840:	d00d      	beq.n	800185e <_ZN7RoboArm15Move2MotorsSimuEff+0x17e>
			HAL_GPIO_WritePin(Dir2_GPIO_Port_M2, Dir2_Pin_M2, GPIO_PIN_RESET);
 8001842:	68fb      	ldr	r3, [r7, #12]
 8001844:	69d8      	ldr	r0, [r3, #28]
 8001846:	68fb      	ldr	r3, [r7, #12]
 8001848:	8c1b      	ldrh	r3, [r3, #32]
 800184a:	2200      	movs	r2, #0
 800184c:	4619      	mov	r1, r3
 800184e:	f002 f801 	bl	8003854 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8001852:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001856:	4855      	ldr	r0, [pc, #340]	; (80019ac <_ZN7RoboArm15Move2MotorsSimuEff+0x2cc>)
 8001858:	f002 f814 	bl	8003884 <HAL_GPIO_TogglePin>
 800185c:	e01a      	b.n	8001894 <_ZN7RoboArm15Move2MotorsSimuEff+0x1b4>
		} else if (lastPosLinear > distance) {
 800185e:	68fb      	ldr	r3, [r7, #12]
 8001860:	f8b3 30f8 	ldrh.w	r3, [r3, #248]	; 0xf8
 8001864:	4618      	mov	r0, r3
 8001866:	f7ff fa39 	bl	8000cdc <__aeabi_i2f>
 800186a:	4603      	mov	r3, r0
 800186c:	4619      	mov	r1, r3
 800186e:	6878      	ldr	r0, [r7, #4]
 8001870:	f7ff fc26 	bl	80010c0 <__aeabi_fcmplt>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d00c      	beq.n	8001894 <_ZN7RoboArm15Move2MotorsSimuEff+0x1b4>
			HAL_GPIO_WritePin(Dir2_GPIO_Port_M2, Dir2_Pin_M2, GPIO_PIN_SET);
 800187a:	68fb      	ldr	r3, [r7, #12]
 800187c:	69d8      	ldr	r0, [r3, #28]
 800187e:	68fb      	ldr	r3, [r7, #12]
 8001880:	8c1b      	ldrh	r3, [r3, #32]
 8001882:	2201      	movs	r2, #1
 8001884:	4619      	mov	r1, r3
 8001886:	f001 ffe5 	bl	8003854 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 800188a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800188e:	4847      	ldr	r0, [pc, #284]	; (80019ac <_ZN7RoboArm15Move2MotorsSimuEff+0x2cc>)
 8001890:	f001 fff8 	bl	8003884 <HAL_GPIO_TogglePin>
		}

//	actualPosAngle = abs(lastPosAngle - angle);
	float actualPosDistance = abs(lastPosLinear - distance);
 8001894:	68fb      	ldr	r3, [r7, #12]
 8001896:	f8b3 30f8 	ldrh.w	r3, [r3, #248]	; 0xf8
 800189a:	4618      	mov	r0, r3
 800189c:	f7ff fa1e 	bl	8000cdc <__aeabi_i2f>
 80018a0:	4603      	mov	r3, r0
 80018a2:	6879      	ldr	r1, [r7, #4]
 80018a4:	4618      	mov	r0, r3
 80018a6:	f7ff f963 	bl	8000b70 <__aeabi_fsub>
 80018aa:	4603      	mov	r3, r0
 80018ac:	4618      	mov	r0, r3
 80018ae:	f7ff fdee 	bl	800148e <_ZSt3absf>
 80018b2:	6238      	str	r0, [r7, #32]

	//set microstepping TODO
	anglePsteps = (actualPosAngle * (8 * motorStep * drvMicroSteps)) / 360; //angle to steps
 80018b4:	493e      	ldr	r1, [pc, #248]	; (80019b0 <_ZN7RoboArm15Move2MotorsSimuEff+0x2d0>)
 80018b6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80018b8:	f7ff fa64 	bl	8000d84 <__aeabi_fmul>
 80018bc:	4603      	mov	r3, r0
 80018be:	493d      	ldr	r1, [pc, #244]	; (80019b4 <_ZN7RoboArm15Move2MotorsSimuEff+0x2d4>)
 80018c0:	4618      	mov	r0, r3
 80018c2:	f7ff fb13 	bl	8000eec <__aeabi_fdiv>
 80018c6:	4603      	mov	r3, r0
 80018c8:	4618      	mov	r0, r3
 80018ca:	f7ff fc21 	bl	8001110 <__aeabi_f2uiz>
 80018ce:	4602      	mov	r2, r0
 80018d0:	68fb      	ldr	r3, [r7, #12]
 80018d2:	649a      	str	r2, [r3, #72]	; 0x48
	distPsteps = actualPosDistance * linearStepsMil; //steps to distanse
 80018d4:	68fb      	ldr	r3, [r7, #12]
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	6a39      	ldr	r1, [r7, #32]
 80018da:	4618      	mov	r0, r3
 80018dc:	f7ff fa52 	bl	8000d84 <__aeabi_fmul>
 80018e0:	4603      	mov	r3, r0
 80018e2:	4618      	mov	r0, r3
 80018e4:	f7ff fc14 	bl	8001110 <__aeabi_f2uiz>
 80018e8:	4602      	mov	r2, r0
 80018ea:	68fb      	ldr	r3, [r7, #12]
 80018ec:	645a      	str	r2, [r3, #68]	; 0x44
//	lastPosAngle = angle;
//	lastPosLinear = distance;

// 1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36 и 72 - Це можлива обрана максимальна швидкість для мотора з більшої кількістю кроків. Це дільник таймера

	float periodM1 = 1200;
 80018ee:	4b32      	ldr	r3, [pc, #200]	; (80019b8 <_ZN7RoboArm15Move2MotorsSimuEff+0x2d8>)
 80018f0:	61fb      	str	r3, [r7, #28]
	uint32_t psc = 72-1;
 80018f2:	2347      	movs	r3, #71	; 0x47
 80018f4:	61bb      	str	r3, [r7, #24]

	float delimiter=1;
 80018f6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80018fa:	617b      	str	r3, [r7, #20]
	float mnoj=1;
 80018fc:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001900:	613b      	str	r3, [r7, #16]

	if (anglePsteps > distPsteps) {
 8001902:	68fb      	ldr	r3, [r7, #12]
 8001904:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8001906:	68fb      	ldr	r3, [r7, #12]
 8001908:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800190a:	429a      	cmp	r2, r3
 800190c:	d956      	bls.n	80019bc <_ZN7RoboArm15Move2MotorsSimuEff+0x2dc>

		htim1M1->Instance->PSC = psc;
 800190e:	68fb      	ldr	r3, [r7, #12]
 8001910:	685b      	ldr	r3, [r3, #4]
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	69ba      	ldr	r2, [r7, #24]
 8001916:	629a      	str	r2, [r3, #40]	; 0x28
		htim1M1->Instance->ARR = periodM1;
 8001918:	68fb      	ldr	r3, [r7, #12]
 800191a:	685b      	ldr	r3, [r3, #4]
 800191c:	681c      	ldr	r4, [r3, #0]
 800191e:	69f8      	ldr	r0, [r7, #28]
 8001920:	f7ff fbf6 	bl	8001110 <__aeabi_f2uiz>
 8001924:	4603      	mov	r3, r0
 8001926:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim1M1->Instance->CCR1 = periodM1/2;
 8001928:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800192c:	69f8      	ldr	r0, [r7, #28]
 800192e:	f7ff fadd 	bl	8000eec <__aeabi_fdiv>
 8001932:	4603      	mov	r3, r0
 8001934:	461a      	mov	r2, r3
 8001936:	68fb      	ldr	r3, [r7, #12]
 8001938:	685b      	ldr	r3, [r3, #4]
 800193a:	681c      	ldr	r4, [r3, #0]
 800193c:	4610      	mov	r0, r2
 800193e:	f7ff fbe7 	bl	8001110 <__aeabi_f2uiz>
 8001942:	4603      	mov	r3, r0
 8001944:	6363      	str	r3, [r4, #52]	; 0x34

		delimiter = anglePsteps / distPsteps;
 8001946:	68fb      	ldr	r3, [r7, #12]
 8001948:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800194a:	68fb      	ldr	r3, [r7, #12]
 800194c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800194e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001952:	4618      	mov	r0, r3
 8001954:	f7ff f9be 	bl	8000cd4 <__aeabi_ui2f>
 8001958:	4603      	mov	r3, r0
 800195a:	617b      	str	r3, [r7, #20]
		mnoj = ceil(periodM1 * delimiter);
 800195c:	6979      	ldr	r1, [r7, #20]
 800195e:	69f8      	ldr	r0, [r7, #28]
 8001960:	f7ff fa10 	bl	8000d84 <__aeabi_fmul>
 8001964:	4603      	mov	r3, r0
 8001966:	4618      	mov	r0, r3
 8001968:	f7ff fd9d 	bl	80014a6 <_ZSt4ceilf>
 800196c:	6138      	str	r0, [r7, #16]

		htim2M2->Instance->PSC = psc;
 800196e:	68fb      	ldr	r3, [r7, #12]
 8001970:	689b      	ldr	r3, [r3, #8]
 8001972:	681b      	ldr	r3, [r3, #0]
 8001974:	69ba      	ldr	r2, [r7, #24]
 8001976:	629a      	str	r2, [r3, #40]	; 0x28
		htim2M2->Instance->ARR = mnoj;
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	689b      	ldr	r3, [r3, #8]
 800197c:	681c      	ldr	r4, [r3, #0]
 800197e:	6938      	ldr	r0, [r7, #16]
 8001980:	f7ff fbc6 	bl	8001110 <__aeabi_f2uiz>
 8001984:	4603      	mov	r3, r0
 8001986:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim2M2->Instance->CCR2 = mnoj / 2;
 8001988:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800198c:	6938      	ldr	r0, [r7, #16]
 800198e:	f7ff faad 	bl	8000eec <__aeabi_fdiv>
 8001992:	4603      	mov	r3, r0
 8001994:	461a      	mov	r2, r3
 8001996:	68fb      	ldr	r3, [r7, #12]
 8001998:	689b      	ldr	r3, [r3, #8]
 800199a:	681c      	ldr	r4, [r3, #0]
 800199c:	4610      	mov	r0, r2
 800199e:	f7ff fbb7 	bl	8001110 <__aeabi_f2uiz>
 80019a2:	4603      	mov	r3, r0
 80019a4:	63a3      	str	r3, [r4, #56]	; 0x38
 80019a6:	e05b      	b.n	8001a60 <_ZN7RoboArm15Move2MotorsSimuEff+0x380>
 80019a8:	40768000 	.word	0x40768000
 80019ac:	40011000 	.word	0x40011000
 80019b0:	46480000 	.word	0x46480000
 80019b4:	43b40000 	.word	0x43b40000
 80019b8:	44960000 	.word	0x44960000

	} else if (anglePsteps < distPsteps) {
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80019c0:	68fb      	ldr	r3, [r7, #12]
 80019c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80019c4:	429a      	cmp	r2, r3
 80019c6:	d24b      	bcs.n	8001a60 <_ZN7RoboArm15Move2MotorsSimuEff+0x380>

		htim2M2->Instance->PSC = psc;
 80019c8:	68fb      	ldr	r3, [r7, #12]
 80019ca:	689b      	ldr	r3, [r3, #8]
 80019cc:	681b      	ldr	r3, [r3, #0]
 80019ce:	69ba      	ldr	r2, [r7, #24]
 80019d0:	629a      	str	r2, [r3, #40]	; 0x28
		htim2M2->Instance->ARR = periodM1;
 80019d2:	68fb      	ldr	r3, [r7, #12]
 80019d4:	689b      	ldr	r3, [r3, #8]
 80019d6:	681c      	ldr	r4, [r3, #0]
 80019d8:	69f8      	ldr	r0, [r7, #28]
 80019da:	f7ff fb99 	bl	8001110 <__aeabi_f2uiz>
 80019de:	4603      	mov	r3, r0
 80019e0:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim2M2->Instance->CCR2 = periodM1 / 2;
 80019e2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80019e6:	69f8      	ldr	r0, [r7, #28]
 80019e8:	f7ff fa80 	bl	8000eec <__aeabi_fdiv>
 80019ec:	4603      	mov	r3, r0
 80019ee:	461a      	mov	r2, r3
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	689b      	ldr	r3, [r3, #8]
 80019f4:	681c      	ldr	r4, [r3, #0]
 80019f6:	4610      	mov	r0, r2
 80019f8:	f7ff fb8a 	bl	8001110 <__aeabi_f2uiz>
 80019fc:	4603      	mov	r3, r0
 80019fe:	63a3      	str	r3, [r4, #56]	; 0x38

		delimiter = distPsteps / anglePsteps;
 8001a00:	68fb      	ldr	r3, [r7, #12]
 8001a02:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a04:	68fb      	ldr	r3, [r7, #12]
 8001a06:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001a08:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a0c:	4618      	mov	r0, r3
 8001a0e:	f7ff f961 	bl	8000cd4 <__aeabi_ui2f>
 8001a12:	4603      	mov	r3, r0
 8001a14:	617b      	str	r3, [r7, #20]
		mnoj = ceil(periodM1 * delimiter);
 8001a16:	6979      	ldr	r1, [r7, #20]
 8001a18:	69f8      	ldr	r0, [r7, #28]
 8001a1a:	f7ff f9b3 	bl	8000d84 <__aeabi_fmul>
 8001a1e:	4603      	mov	r3, r0
 8001a20:	4618      	mov	r0, r3
 8001a22:	f7ff fd40 	bl	80014a6 <_ZSt4ceilf>
 8001a26:	6138      	str	r0, [r7, #16]

		htim1M1->Instance->PSC = psc;
 8001a28:	68fb      	ldr	r3, [r7, #12]
 8001a2a:	685b      	ldr	r3, [r3, #4]
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	69ba      	ldr	r2, [r7, #24]
 8001a30:	629a      	str	r2, [r3, #40]	; 0x28
		htim1M1->Instance->ARR = mnoj;
 8001a32:	68fb      	ldr	r3, [r7, #12]
 8001a34:	685b      	ldr	r3, [r3, #4]
 8001a36:	681c      	ldr	r4, [r3, #0]
 8001a38:	6938      	ldr	r0, [r7, #16]
 8001a3a:	f7ff fb69 	bl	8001110 <__aeabi_f2uiz>
 8001a3e:	4603      	mov	r3, r0
 8001a40:	62e3      	str	r3, [r4, #44]	; 0x2c
		htim1M1->Instance->CCR1 = mnoj / 2;
 8001a42:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001a46:	6938      	ldr	r0, [r7, #16]
 8001a48:	f7ff fa50 	bl	8000eec <__aeabi_fdiv>
 8001a4c:	4603      	mov	r3, r0
 8001a4e:	461a      	mov	r2, r3
 8001a50:	68fb      	ldr	r3, [r7, #12]
 8001a52:	685b      	ldr	r3, [r3, #4]
 8001a54:	681c      	ldr	r4, [r3, #0]
 8001a56:	4610      	mov	r0, r2
 8001a58:	f7ff fb5a 	bl	8001110 <__aeabi_f2uiz>
 8001a5c:	4603      	mov	r3, r0
 8001a5e:	6363      	str	r3, [r4, #52]	; 0x34
	}

	stateMoveM1 = true;
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	2201      	movs	r2, #1
 8001a64:	f883 20ee 	strb.w	r2, [r3, #238]	; 0xee
	stateMoveM2 = true;
 8001a68:	68fb      	ldr	r3, [r7, #12]
 8001a6a:	2201      	movs	r2, #1
 8001a6c:	f883 20ef 	strb.w	r2, [r3, #239]	; 0xef

	SetEnable(1, true);
 8001a70:	2201      	movs	r2, #1
 8001a72:	2101      	movs	r1, #1
 8001a74:	68f8      	ldr	r0, [r7, #12]
 8001a76:	f000 f9ef 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>
	SetEnable(2, true);
 8001a7a:	2201      	movs	r2, #1
 8001a7c:	2102      	movs	r1, #2
 8001a7e:	68f8      	ldr	r0, [r7, #12]
 8001a80:	f000 f9ea 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>

	HAL_TIM_PWM_Start(htim1M1, TIM_CHANNEL_1);
 8001a84:	68fb      	ldr	r3, [r7, #12]
 8001a86:	685b      	ldr	r3, [r3, #4]
 8001a88:	2100      	movs	r1, #0
 8001a8a:	4618      	mov	r0, r3
 8001a8c:	f003 f878 	bl	8004b80 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim2M2, TIM_CHANNEL_2);
 8001a90:	68fb      	ldr	r3, [r7, #12]
 8001a92:	689b      	ldr	r3, [r3, #8]
 8001a94:	2104      	movs	r1, #4
 8001a96:	4618      	mov	r0, r3
 8001a98:	f003 f872 	bl	8004b80 <HAL_TIM_PWM_Start>
	HAL_TIM_Base_Start_IT(htim1M1);
 8001a9c:	68fb      	ldr	r3, [r7, #12]
 8001a9e:	685b      	ldr	r3, [r3, #4]
 8001aa0:	4618      	mov	r0, r3
 8001aa2:	f002 ff9d 	bl	80049e0 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(htim2M2);
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	689b      	ldr	r3, [r3, #8]
 8001aaa:	4618      	mov	r0, r3
 8001aac:	f002 ff98 	bl	80049e0 <HAL_TIM_Base_Start_IT>

	return 0;
 8001ab0:	2300      	movs	r3, #0
}
 8001ab2:	4618      	mov	r0, r3
 8001ab4:	3734      	adds	r7, #52	; 0x34
 8001ab6:	46bd      	mov	sp, r7
 8001ab8:	bd90      	pop	{r4, r7, pc}
 8001aba:	bf00      	nop

08001abc <_ZN7RoboArm13setPrintStateEb>:

int RoboArm::OpenGripper() {
	return 0;
}

int RoboArm::setPrintState(bool state) {
 8001abc:	b480      	push	{r7}
 8001abe:	b083      	sub	sp, #12
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	6078      	str	r0, [r7, #4]
 8001ac4:	460b      	mov	r3, r1
 8001ac6:	70fb      	strb	r3, [r7, #3]
	if (state) {
 8001ac8:	78fb      	ldrb	r3, [r7, #3]
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d004      	beq.n	8001ad8 <_ZN7RoboArm13setPrintStateEb+0x1c>
		PrintAllState = true;
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	2201      	movs	r2, #1
 8001ad2:	f883 20f6 	strb.w	r2, [r3, #246]	; 0xf6
 8001ad6:	e003      	b.n	8001ae0 <_ZN7RoboArm13setPrintStateEb+0x24>
	} else {
		PrintAllState = false;
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	2200      	movs	r2, #0
 8001adc:	f883 20f6 	strb.w	r2, [r3, #246]	; 0xf6
	}
	return 0;
 8001ae0:	2300      	movs	r3, #0
}
 8001ae2:	4618      	mov	r0, r3
 8001ae4:	370c      	adds	r7, #12
 8001ae6:	46bd      	mov	sp, r7
 8001ae8:	bc80      	pop	{r7}
 8001aea:	4770      	bx	lr

08001aec <_ZN7RoboArm13getPrintStateEv>:

bool RoboArm::getPrintState() {
 8001aec:	b480      	push	{r7}
 8001aee:	b083      	sub	sp, #12
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	6078      	str	r0, [r7, #4]
	if (PrintAllState) {
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	f893 30f6 	ldrb.w	r3, [r3, #246]	; 0xf6
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d001      	beq.n	8001b02 <_ZN7RoboArm13getPrintStateEv+0x16>
		return true;
 8001afe:	2301      	movs	r3, #1
 8001b00:	e000      	b.n	8001b04 <_ZN7RoboArm13getPrintStateEv+0x18>
	} else {
		return false;
 8001b02:	2300      	movs	r3, #0
	}
}
 8001b04:	4618      	mov	r0, r3
 8001b06:	370c      	adds	r7, #12
 8001b08:	46bd      	mov	sp, r7
 8001b0a:	bc80      	pop	{r7}
 8001b0c:	4770      	bx	lr

08001b0e <_ZN7RoboArm15SetSettEncodersER19__SPI_HandleTypeDefP12GPIO_TypeDeftS3_th>:
}

int RoboArm::SetSettEncoders(SPI_HandleTypeDef &arm_hspi1T,
		GPIO_TypeDef *CS_GPIO_Port_Enc1T, uint16_t CS_Pin_Enc1T,
		GPIO_TypeDef *CS_GPIO_Port_Enc2T, uint16_t CS_Pin_Enc2T,
		uint8_t ResolutionEncodersT) {
 8001b0e:	b480      	push	{r7}
 8001b10:	b085      	sub	sp, #20
 8001b12:	af00      	add	r7, sp, #0
 8001b14:	60f8      	str	r0, [r7, #12]
 8001b16:	60b9      	str	r1, [r7, #8]
 8001b18:	607a      	str	r2, [r7, #4]
 8001b1a:	807b      	strh	r3, [r7, #2]

	arm_hspi1 = &arm_hspi1T;
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	68ba      	ldr	r2, [r7, #8]
 8001b20:	655a      	str	r2, [r3, #84]	; 0x54
	CS_GPIO_Port_Enc1 = CS_GPIO_Port_Enc1T;
 8001b22:	68fb      	ldr	r3, [r7, #12]
 8001b24:	687a      	ldr	r2, [r7, #4]
 8001b26:	65da      	str	r2, [r3, #92]	; 0x5c
	CS_Pin_Enc1 = CS_Pin_Enc1T;
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	887a      	ldrh	r2, [r7, #2]
 8001b2c:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
	CS_Pin_Enc2 = CS_Pin_Enc2T;
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	8bba      	ldrh	r2, [r7, #28]
 8001b34:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
	CS_GPIO_Port_Enc2 = CS_GPIO_Port_Enc2T;
 8001b38:	68fb      	ldr	r3, [r7, #12]
 8001b3a:	69ba      	ldr	r2, [r7, #24]
 8001b3c:	665a      	str	r2, [r3, #100]	; 0x64
	ResolutionEncoders = ResolutionEncodersT;
 8001b3e:	68fb      	ldr	r3, [r7, #12]
 8001b40:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001b44:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
	return 0;
 8001b48:	2300      	movs	r3, #0
}
 8001b4a:	4618      	mov	r0, r3
 8001b4c:	3714      	adds	r7, #20
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	bc80      	pop	{r7}
 8001b52:	4770      	bx	lr

08001b54 <_ZN7RoboArm16GetAngleEncodersEm>:

float RoboArm::GetAngleEncoders(uint32_t encoderValue) {
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b082      	sub	sp, #8
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
 8001b5c:	6039      	str	r1, [r7, #0]
	//	https://www.cuidevices.com/product/resource/amt22.pdf
	return calculateAngle(encoderValue, ResolutionEncoders);
 8001b5e:	683b      	ldr	r3, [r7, #0]
 8001b60:	b29a      	uxth	r2, r3
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8001b68:	4619      	mov	r1, r3
 8001b6a:	4610      	mov	r0, r2
 8001b6c:	f7ff fbbc 	bl	80012e8 <calculateAngle>
 8001b70:	4603      	mov	r3, r0
}
 8001b72:	4618      	mov	r0, r3
 8001b74:	3708      	adds	r7, #8
 8001b76:	46bd      	mov	sp, r7
 8001b78:	bd80      	pop	{r7, pc}

08001b7a <_ZN7RoboArm14GetPosEncodersEh>:

uint32_t RoboArm::GetPosEncoders(uint8_t numEnc) {
 8001b7a:	b580      	push	{r7, lr}
 8001b7c:	b082      	sub	sp, #8
 8001b7e:	af00      	add	r7, sp, #0
 8001b80:	6078      	str	r0, [r7, #4]
 8001b82:	460b      	mov	r3, r1
 8001b84:	70fb      	strb	r3, [r7, #3]
	switch (numEnc) {
 8001b86:	78fb      	ldrb	r3, [r7, #3]
 8001b88:	2b01      	cmp	r3, #1
 8001b8a:	d002      	beq.n	8001b92 <_ZN7RoboArm14GetPosEncodersEh+0x18>
 8001b8c:	2b02      	cmp	r3, #2
 8001b8e:	d013      	beq.n	8001bb8 <_ZN7RoboArm14GetPosEncodersEh+0x3e>
 8001b90:	e025      	b.n	8001bde <_ZN7RoboArm14GetPosEncodersEh+0x64>
	case 1:
		posNowEnc1 = getPositionSPI(arm_hspi1, CS_GPIO_Port_Enc1, CS_Pin_Enc1,
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8001ba6:	f7ff fb11 	bl	80011cc <getPositionSPI>
 8001baa:	4603      	mov	r3, r0
 8001bac:	461a      	mov	r2, r3
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	669a      	str	r2, [r3, #104]	; 0x68
				ResolutionEncoders);
		return posNowEnc1;
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8001bb6:	e013      	b.n	8001be0 <_ZN7RoboArm14GetPosEncodersEh+0x66>
		break;
	case 2:
		posNowEnc2 = getPositionSPI(arm_hspi1, CS_GPIO_Port_Enc2, CS_Pin_Enc2,
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	6e59      	ldr	r1, [r3, #100]	; 0x64
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	f8b3 2060 	ldrh.w	r2, [r3, #96]	; 0x60
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8001bcc:	f7ff fafe 	bl	80011cc <getPositionSPI>
 8001bd0:	4603      	mov	r3, r0
 8001bd2:	461a      	mov	r2, r3
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	66da      	str	r2, [r3, #108]	; 0x6c
				ResolutionEncoders);
		return posNowEnc2;
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8001bdc:	e000      	b.n	8001be0 <_ZN7RoboArm14GetPosEncodersEh+0x66>
		break;
	default:
		return 1;
 8001bde:	2301      	movs	r3, #1
		break;
	}
	return 0;
}
 8001be0:	4618      	mov	r0, r3
 8001be2:	3708      	adds	r7, #8
 8001be4:	46bd      	mov	sp, r7
 8001be6:	bd80      	pop	{r7, pc}

08001be8 <_ZN7RoboArm15SetSoftwareZeroEv>:
	setZeroSPI(arm_hspi1, CS_GPIO_Port_Enc2, CS_Pin_Enc2);
	HAL_Delay(250);
	return 0;
}

int RoboArm::SetSoftwareZero() {
 8001be8:	b580      	push	{r7, lr}
 8001bea:	b086      	sub	sp, #24
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	6078      	str	r0, [r7, #4]
//	ang_zero = GetPosEncoders(1);
//	lin_zero = GetPosEncoders(2);

	int attempts = 0;
 8001bf0:	2300      	movs	r3, #0
 8001bf2:	617b      	str	r3, [r7, #20]
	uint32_t posnowT_1 = GetPosEncoders(1);
 8001bf4:	2101      	movs	r1, #1
 8001bf6:	6878      	ldr	r0, [r7, #4]
 8001bf8:	f7ff ffbf 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001bfc:	6138      	str	r0, [r7, #16]

	while(posnowT_1 == 0xFFFF && ++attempts < 3)
 8001bfe:	e004      	b.n	8001c0a <_ZN7RoboArm15SetSoftwareZeroEv+0x22>
		posnowT_1 = GetPosEncoders(1); //try again
 8001c00:	2101      	movs	r1, #1
 8001c02:	6878      	ldr	r0, [r7, #4]
 8001c04:	f7ff ffb9 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001c08:	6138      	str	r0, [r7, #16]
	while(posnowT_1 == 0xFFFF && ++attempts < 3)
 8001c0a:	693b      	ldr	r3, [r7, #16]
 8001c0c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c10:	4293      	cmp	r3, r2
 8001c12:	d107      	bne.n	8001c24 <_ZN7RoboArm15SetSoftwareZeroEv+0x3c>
 8001c14:	697b      	ldr	r3, [r7, #20]
 8001c16:	3301      	adds	r3, #1
 8001c18:	617b      	str	r3, [r7, #20]
 8001c1a:	697b      	ldr	r3, [r7, #20]
 8001c1c:	2b02      	cmp	r3, #2
 8001c1e:	dc01      	bgt.n	8001c24 <_ZN7RoboArm15SetSoftwareZeroEv+0x3c>
 8001c20:	2301      	movs	r3, #1
 8001c22:	e000      	b.n	8001c26 <_ZN7RoboArm15SetSoftwareZeroEv+0x3e>
 8001c24:	2300      	movs	r3, #0
 8001c26:	2b00      	cmp	r3, #0
 8001c28:	d1ea      	bne.n	8001c00 <_ZN7RoboArm15SetSoftwareZeroEv+0x18>

	attempts = 0;
 8001c2a:	2300      	movs	r3, #0
 8001c2c:	617b      	str	r3, [r7, #20]

	//			float ang = posnowT*360/16384;
	ang_zero = GetAngleEncoders(posnowT_1);// - defaultAngle; //0, 120, 240
 8001c2e:	6939      	ldr	r1, [r7, #16]
 8001c30:	6878      	ldr	r0, [r7, #4]
 8001c32:	f7ff ff8f 	bl	8001b54 <_ZN7RoboArm16GetAngleEncodersEm>
 8001c36:	4602      	mov	r2, r0
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	//			un_send.params.ang = angleT;

	uint32_t posnowT_2 = GetPosEncoders(2);
 8001c3e:	2102      	movs	r1, #2
 8001c40:	6878      	ldr	r0, [r7, #4]
 8001c42:	f7ff ff9a 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001c46:	60f8      	str	r0, [r7, #12]
	while(posnowT_2 == 0xFFFF && ++attempts < 3)
 8001c48:	e004      	b.n	8001c54 <_ZN7RoboArm15SetSoftwareZeroEv+0x6c>
		posnowT_2 = GetPosEncoders(2); //try again
 8001c4a:	2102      	movs	r1, #2
 8001c4c:	6878      	ldr	r0, [r7, #4]
 8001c4e:	f7ff ff94 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8001c52:	60f8      	str	r0, [r7, #12]
	while(posnowT_2 == 0xFFFF && ++attempts < 3)
 8001c54:	68fb      	ldr	r3, [r7, #12]
 8001c56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c5a:	4293      	cmp	r3, r2
 8001c5c:	d107      	bne.n	8001c6e <_ZN7RoboArm15SetSoftwareZeroEv+0x86>
 8001c5e:	697b      	ldr	r3, [r7, #20]
 8001c60:	3301      	adds	r3, #1
 8001c62:	617b      	str	r3, [r7, #20]
 8001c64:	697b      	ldr	r3, [r7, #20]
 8001c66:	2b02      	cmp	r3, #2
 8001c68:	dc01      	bgt.n	8001c6e <_ZN7RoboArm15SetSoftwareZeroEv+0x86>
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	e000      	b.n	8001c70 <_ZN7RoboArm15SetSoftwareZeroEv+0x88>
 8001c6e:	2300      	movs	r3, #0
 8001c70:	2b00      	cmp	r3, #0
 8001c72:	d1ea      	bne.n	8001c4a <_ZN7RoboArm15SetSoftwareZeroEv+0x62>
	float ang_pos = GetAngleEncoders(posnowT_2);
 8001c74:	68f9      	ldr	r1, [r7, #12]
 8001c76:	6878      	ldr	r0, [r7, #4]
 8001c78:	f7ff ff6c 	bl	8001b54 <_ZN7RoboArm16GetAngleEncodersEm>
 8001c7c:	60b8      	str	r0, [r7, #8]
	lin_zero = ang_pos*distMax/360.0;
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001c82:	68b9      	ldr	r1, [r7, #8]
 8001c84:	4618      	mov	r0, r3
 8001c86:	f7ff f87d 	bl	8000d84 <__aeabi_fmul>
 8001c8a:	4603      	mov	r3, r0
 8001c8c:	4906      	ldr	r1, [pc, #24]	; (8001ca8 <_ZN7RoboArm15SetSoftwareZeroEv+0xc0>)
 8001c8e:	4618      	mov	r0, r3
 8001c90:	f7ff f92c 	bl	8000eec <__aeabi_fdiv>
 8001c94:	4603      	mov	r3, r0
 8001c96:	461a      	mov	r2, r3
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

	return 0;
 8001c9e:	2300      	movs	r3, #0
}
 8001ca0:	4618      	mov	r0, r3
 8001ca2:	3718      	adds	r7, #24
 8001ca4:	46bd      	mov	sp, r7
 8001ca6:	bd80      	pop	{r7, pc}
 8001ca8:	43b40000 	.word	0x43b40000

08001cac <_ZN7RoboArm17ShiftZeroInputAngEf>:

float RoboArm::ShiftZeroInputAng(float angle){
 8001cac:	b580      	push	{r7, lr}
 8001cae:	b084      	sub	sp, #16
 8001cb0:	af00      	add	r7, sp, #0
 8001cb2:	6078      	str	r0, [r7, #4]
 8001cb4:	6039      	str	r1, [r7, #0]
	float ang_actual = ang_zero + angle;
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8001cbc:	4619      	mov	r1, r3
 8001cbe:	6838      	ldr	r0, [r7, #0]
 8001cc0:	f7fe ff58 	bl	8000b74 <__addsf3>
 8001cc4:	4603      	mov	r3, r0
 8001cc6:	60fb      	str	r3, [r7, #12]
	if (ang_actual > 360.0)
 8001cc8:	4908      	ldr	r1, [pc, #32]	; (8001cec <_ZN7RoboArm17ShiftZeroInputAngEf+0x40>)
 8001cca:	68f8      	ldr	r0, [r7, #12]
 8001ccc:	f7ff fa16 	bl	80010fc <__aeabi_fcmpgt>
 8001cd0:	4603      	mov	r3, r0
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d005      	beq.n	8001ce2 <_ZN7RoboArm17ShiftZeroInputAngEf+0x36>
		ang_actual -= 360.0;
 8001cd6:	4905      	ldr	r1, [pc, #20]	; (8001cec <_ZN7RoboArm17ShiftZeroInputAngEf+0x40>)
 8001cd8:	68f8      	ldr	r0, [r7, #12]
 8001cda:	f7fe ff49 	bl	8000b70 <__aeabi_fsub>
 8001cde:	4603      	mov	r3, r0
 8001ce0:	60fb      	str	r3, [r7, #12]
	return ang_actual;
 8001ce2:	68fb      	ldr	r3, [r7, #12]
}
 8001ce4:	4618      	mov	r0, r3
 8001ce6:	3710      	adds	r7, #16
 8001ce8:	46bd      	mov	sp, r7
 8001cea:	bd80      	pop	{r7, pc}
 8001cec:	43b40000 	.word	0x43b40000

08001cf0 <_ZN7RoboArm17ShiftZeroInputLinEf>:

float RoboArm::ShiftZeroInputLin(float distance){
 8001cf0:	b580      	push	{r7, lr}
 8001cf2:	b084      	sub	sp, #16
 8001cf4:	af00      	add	r7, sp, #0
 8001cf6:	6078      	str	r0, [r7, #4]
 8001cf8:	6039      	str	r1, [r7, #0]
	float lin_actual = lin_zero + distance;
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8001d00:	4619      	mov	r1, r3
 8001d02:	6838      	ldr	r0, [r7, #0]
 8001d04:	f7fe ff36 	bl	8000b74 <__addsf3>
 8001d08:	4603      	mov	r3, r0
 8001d0a:	60fb      	str	r3, [r7, #12]
	if (lin_actual > distMax)
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001d10:	4619      	mov	r1, r3
 8001d12:	68f8      	ldr	r0, [r7, #12]
 8001d14:	f7ff f9f2 	bl	80010fc <__aeabi_fcmpgt>
 8001d18:	4603      	mov	r3, r0
 8001d1a:	2b00      	cmp	r3, #0
 8001d1c:	d007      	beq.n	8001d2e <_ZN7RoboArm17ShiftZeroInputLinEf+0x3e>
		lin_actual -= distMax;
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001d22:	4619      	mov	r1, r3
 8001d24:	68f8      	ldr	r0, [r7, #12]
 8001d26:	f7fe ff23 	bl	8000b70 <__aeabi_fsub>
 8001d2a:	4603      	mov	r3, r0
 8001d2c:	60fb      	str	r3, [r7, #12]
	return lin_actual;
 8001d2e:	68fb      	ldr	r3, [r7, #12]
}
 8001d30:	4618      	mov	r0, r3
 8001d32:	3710      	adds	r7, #16
 8001d34:	46bd      	mov	sp, r7
 8001d36:	bd80      	pop	{r7, pc}

08001d38 <_ZN7RoboArm18ShiftZeroOutputAngEf>:

float RoboArm::ShiftZeroOutputAng(float ang_actual){
 8001d38:	b580      	push	{r7, lr}
 8001d3a:	b084      	sub	sp, #16
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
 8001d40:	6039      	str	r1, [r7, #0]
	float ang = ang_actual - ang_zero;
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8001d48:	4619      	mov	r1, r3
 8001d4a:	6838      	ldr	r0, [r7, #0]
 8001d4c:	f7fe ff10 	bl	8000b70 <__aeabi_fsub>
 8001d50:	4603      	mov	r3, r0
 8001d52:	60fb      	str	r3, [r7, #12]
	if (ang < 0.0)
 8001d54:	f04f 0100 	mov.w	r1, #0
 8001d58:	68f8      	ldr	r0, [r7, #12]
 8001d5a:	f7ff f9b1 	bl	80010c0 <__aeabi_fcmplt>
 8001d5e:	4603      	mov	r3, r0
 8001d60:	2b00      	cmp	r3, #0
 8001d62:	d005      	beq.n	8001d70 <_ZN7RoboArm18ShiftZeroOutputAngEf+0x38>
		ang = 360.0 + ang;
 8001d64:	4905      	ldr	r1, [pc, #20]	; (8001d7c <_ZN7RoboArm18ShiftZeroOutputAngEf+0x44>)
 8001d66:	68f8      	ldr	r0, [r7, #12]
 8001d68:	f7fe ff04 	bl	8000b74 <__addsf3>
 8001d6c:	4603      	mov	r3, r0
 8001d6e:	60fb      	str	r3, [r7, #12]
	return ang;
 8001d70:	68fb      	ldr	r3, [r7, #12]
}
 8001d72:	4618      	mov	r0, r3
 8001d74:	3710      	adds	r7, #16
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd80      	pop	{r7, pc}
 8001d7a:	bf00      	nop
 8001d7c:	43b40000 	.word	0x43b40000

08001d80 <_ZN7RoboArm18ShiftZeroOutputLinEf>:

float RoboArm::ShiftZeroOutputLin(float lin_actual){
 8001d80:	b580      	push	{r7, lr}
 8001d82:	b084      	sub	sp, #16
 8001d84:	af00      	add	r7, sp, #0
 8001d86:	6078      	str	r0, [r7, #4]
 8001d88:	6039      	str	r1, [r7, #0]
	float lin = lin_actual - lin_zero;
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8001d90:	4619      	mov	r1, r3
 8001d92:	6838      	ldr	r0, [r7, #0]
 8001d94:	f7fe feec 	bl	8000b70 <__aeabi_fsub>
 8001d98:	4603      	mov	r3, r0
 8001d9a:	60fb      	str	r3, [r7, #12]
	if (lin < 0.0)
 8001d9c:	f04f 0100 	mov.w	r1, #0
 8001da0:	68f8      	ldr	r0, [r7, #12]
 8001da2:	f7ff f98d 	bl	80010c0 <__aeabi_fcmplt>
 8001da6:	4603      	mov	r3, r0
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d007      	beq.n	8001dbc <_ZN7RoboArm18ShiftZeroOutputLinEf+0x3c>
		lin = distMax + lin;
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001db0:	4619      	mov	r1, r3
 8001db2:	68f8      	ldr	r0, [r7, #12]
 8001db4:	f7fe fede 	bl	8000b74 <__addsf3>
 8001db8:	4603      	mov	r3, r0
 8001dba:	60fb      	str	r3, [r7, #12]
	return lin;
 8001dbc:	68fb      	ldr	r3, [r7, #12]
}
 8001dbe:	4618      	mov	r0, r3
 8001dc0:	3710      	adds	r7, #16
 8001dc2:	46bd      	mov	sp, r7
 8001dc4:	bd80      	pop	{r7, pc}

08001dc6 <_ZN7RoboArm13SetSettMotorsER20__UART_HandleTypeDefR17TIM_HandleTypeDefS3_S3_P12GPIO_TypeDeftS5_tS5_tS5_tS5_tS5_t>:
		GPIO_TypeDef *Dir1_GPIO_Port_M1T, uint16_t Dir1_Pin_M1T,
		GPIO_TypeDef *Dir2_GPIO_Port_M2T, uint16_t Dir2_Pin_M2T,
		GPIO_TypeDef *Dir3_GPIO_Port_M3T, uint16_t Dir3_Pin_M3T,
		GPIO_TypeDef *En1_GPIO_Port_M1T, uint16_t En1_Pin_M1T,
		GPIO_TypeDef *En2_GPIO_Port_M2T, uint16_t En2_Pin_M2T,
		GPIO_TypeDef *En3_GPIO_Port_M3T, uint16_t En3_Pin_M3T){
 8001dc6:	b580      	push	{r7, lr}
 8001dc8:	b084      	sub	sp, #16
 8001dca:	af00      	add	r7, sp, #0
 8001dcc:	60f8      	str	r0, [r7, #12]
 8001dce:	60b9      	str	r1, [r7, #8]
 8001dd0:	607a      	str	r2, [r7, #4]
 8001dd2:	603b      	str	r3, [r7, #0]
//		UART_HandleTypeDef &huart_tmcT) {
	htim1M1 = &htim1;
 8001dd4:	68fb      	ldr	r3, [r7, #12]
 8001dd6:	687a      	ldr	r2, [r7, #4]
 8001dd8:	605a      	str	r2, [r3, #4]
	htim2M2 = &htim2;
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	683a      	ldr	r2, [r7, #0]
 8001dde:	609a      	str	r2, [r3, #8]
	htim3M3 = &htim3;
 8001de0:	68fb      	ldr	r3, [r7, #12]
 8001de2:	69ba      	ldr	r2, [r7, #24]
 8001de4:	60da      	str	r2, [r3, #12]

	Dir1_GPIO_Port_M1 = Dir1_GPIO_Port_M1T;
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	69fa      	ldr	r2, [r7, #28]
 8001dea:	615a      	str	r2, [r3, #20]
	Dir1_Pin_M1 = Dir1_Pin_M1T;
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	8c3a      	ldrh	r2, [r7, #32]
 8001df0:	831a      	strh	r2, [r3, #24]
	Dir2_GPIO_Port_M2 = Dir2_GPIO_Port_M2T;
 8001df2:	68fb      	ldr	r3, [r7, #12]
 8001df4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001df6:	61da      	str	r2, [r3, #28]
	Dir2_Pin_M2 = Dir2_Pin_M2T;
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8001dfc:	841a      	strh	r2, [r3, #32]
	Dir3_GPIO_Port_M3 = Dir3_GPIO_Port_M3T;
 8001dfe:	68fb      	ldr	r3, [r7, #12]
 8001e00:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001e02:	625a      	str	r2, [r3, #36]	; 0x24
	Dir3_Pin_M3 = Dir3_Pin_M3T;
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 8001e08:	851a      	strh	r2, [r3, #40]	; 0x28

	En1_GPIO_Port_M1 = En1_GPIO_Port_M1T;
 8001e0a:	68fb      	ldr	r3, [r7, #12]
 8001e0c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8001e0e:	62da      	str	r2, [r3, #44]	; 0x2c
	En1_Pin_M1 = En1_Pin_M1T;
 8001e10:	68fb      	ldr	r3, [r7, #12]
 8001e12:	8f3a      	ldrh	r2, [r7, #56]	; 0x38
 8001e14:	861a      	strh	r2, [r3, #48]	; 0x30
	En2_GPIO_Port_M2 = En2_GPIO_Port_M2T;
 8001e16:	68fb      	ldr	r3, [r7, #12]
 8001e18:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001e1a:	635a      	str	r2, [r3, #52]	; 0x34
	En2_Pin_M2 = En2_Pin_M2T;
 8001e1c:	68fb      	ldr	r3, [r7, #12]
 8001e1e:	f8b7 2040 	ldrh.w	r2, [r7, #64]	; 0x40
 8001e22:	871a      	strh	r2, [r3, #56]	; 0x38
	En3_GPIO_Port_M3 = En3_GPIO_Port_M3T;
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8001e28:	63da      	str	r2, [r3, #60]	; 0x3c
	En3_Pin_M3 = En3_Pin_M3T;
 8001e2a:	68fb      	ldr	r3, [r7, #12]
 8001e2c:	f8b7 2048 	ldrh.w	r2, [r7, #72]	; 0x48
 8001e30:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40

	huartTmc = &huartTmcT;
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	68ba      	ldr	r2, [r7, #8]
 8001e38:	611a      	str	r2, [r3, #16]
//	tmcd_ang.setup(huart_tmc, 115200, tmcd_ang.SERIAL_ADDRESS_1);
//	HAL_Delay(1000);
//	tmcd_ang.enable();


	SetEnable(1, false);
 8001e3a:	2200      	movs	r2, #0
 8001e3c:	2101      	movs	r1, #1
 8001e3e:	68f8      	ldr	r0, [r7, #12]
 8001e40:	f000 f80a 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>
	SetEnable(2, false);
 8001e44:	2200      	movs	r2, #0
 8001e46:	2102      	movs	r1, #2
 8001e48:	68f8      	ldr	r0, [r7, #12]
 8001e4a:	f000 f805 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>

	return 0;
 8001e4e:	2300      	movs	r3, #0
}
 8001e50:	4618      	mov	r0, r3
 8001e52:	3710      	adds	r7, #16
 8001e54:	46bd      	mov	sp, r7
 8001e56:	bd80      	pop	{r7, pc}

08001e58 <_ZN7RoboArm9SetEnableEtb>:

int RoboArm::SetEnable(uint16_t numMotor, bool state) {
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	b084      	sub	sp, #16
 8001e5c:	af00      	add	r7, sp, #0
 8001e5e:	6078      	str	r0, [r7, #4]
 8001e60:	460b      	mov	r3, r1
 8001e62:	807b      	strh	r3, [r7, #2]
 8001e64:	4613      	mov	r3, r2
 8001e66:	707b      	strb	r3, [r7, #1]

	GPIO_PinState pinSet;

	if (state) {
 8001e68:	787b      	ldrb	r3, [r7, #1]
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d002      	beq.n	8001e74 <_ZN7RoboArm9SetEnableEtb+0x1c>
		pinSet = GPIO_PIN_RESET;
 8001e6e:	2300      	movs	r3, #0
 8001e70:	73fb      	strb	r3, [r7, #15]
 8001e72:	e001      	b.n	8001e78 <_ZN7RoboArm9SetEnableEtb+0x20>
	} else {
		pinSet = GPIO_PIN_SET;
 8001e74:	2301      	movs	r3, #1
 8001e76:	73fb      	strb	r3, [r7, #15]
	}

	if (numMotor == 1) {
 8001e78:	887b      	ldrh	r3, [r7, #2]
 8001e7a:	2b01      	cmp	r3, #1
 8001e7c:	d108      	bne.n	8001e90 <_ZN7RoboArm9SetEnableEtb+0x38>
		HAL_GPIO_WritePin(En1_GPIO_Port_M1, En1_Pin_M1, pinSet);
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 8001e86:	7bfa      	ldrb	r2, [r7, #15]
 8001e88:	4619      	mov	r1, r3
 8001e8a:	f001 fce3 	bl	8003854 <HAL_GPIO_WritePin>
 8001e8e:	e017      	b.n	8001ec0 <_ZN7RoboArm9SetEnableEtb+0x68>
	} else if (numMotor == 2) {
 8001e90:	887b      	ldrh	r3, [r7, #2]
 8001e92:	2b02      	cmp	r3, #2
 8001e94:	d108      	bne.n	8001ea8 <_ZN7RoboArm9SetEnableEtb+0x50>
		HAL_GPIO_WritePin(En2_GPIO_Port_M2, En2_Pin_M2, pinSet);
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 8001e9e:	7bfa      	ldrb	r2, [r7, #15]
 8001ea0:	4619      	mov	r1, r3
 8001ea2:	f001 fcd7 	bl	8003854 <HAL_GPIO_WritePin>
 8001ea6:	e00b      	b.n	8001ec0 <_ZN7RoboArm9SetEnableEtb+0x68>
	} else if (numMotor == 3) {
 8001ea8:	887b      	ldrh	r3, [r7, #2]
 8001eaa:	2b03      	cmp	r3, #3
 8001eac:	d108      	bne.n	8001ec0 <_ZN7RoboArm9SetEnableEtb+0x68>
		HAL_GPIO_WritePin(En3_GPIO_Port_M3, En3_Pin_M3, pinSet);
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8001eb8:	7bfa      	ldrb	r2, [r7, #15]
 8001eba:	4619      	mov	r1, r3
 8001ebc:	f001 fcca 	bl	8003854 <HAL_GPIO_WritePin>
	}

	return 0;
 8001ec0:	2300      	movs	r3, #0
}
 8001ec2:	4618      	mov	r0, r3
 8001ec4:	3710      	adds	r7, #16
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	bd80      	pop	{r7, pc}

08001eca <_ZN7TMC2209C1Ev>:
//
// ----------------------------------------------------------------------------
#include "TMC2209.h"
#include "main.h"

TMC2209::TMC2209() {
 8001eca:	b480      	push	{r7}
 8001ecc:	b083      	sub	sp, #12
 8001ece:	af00      	add	r7, sp, #0
 8001ed0:	6078      	str	r0, [r7, #4]
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	2203      	movs	r2, #3
 8001ed6:	f883 2020 	strb.w	r2, [r3, #32]
	serial_baud_rate_ = 115200;
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001ee0:	601a      	str	r2, [r3, #0]
	serial_address_ = SERIAL_ADDRESS_3;
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	2203      	movs	r2, #3
 8001ee6:	711a      	strb	r2, [r3, #4]
	hardware_enable_pin_ = -1;
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001eee:	80da      	strh	r2, [r3, #6]
	cool_step_enabled_ = false;
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	761a      	strb	r2, [r3, #24]
}
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	4618      	mov	r0, r3
 8001efa:	370c      	adds	r7, #12
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bc80      	pop	{r7}
 8001f00:	4770      	bx	lr
	...

08001f04 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8001f04:	b480      	push	{r7}
 8001f06:	b085      	sub	sp, #20
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	60f8      	str	r0, [r7, #12]
 8001f0c:	60b9      	str	r1, [r7, #8]
 8001f0e:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 8001f10:	68fb      	ldr	r3, [r7, #12]
 8001f12:	4a06      	ldr	r2, [pc, #24]	; (8001f2c <vApplicationGetIdleTaskMemory+0x28>)
 8001f14:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 8001f16:	68bb      	ldr	r3, [r7, #8]
 8001f18:	4a05      	ldr	r2, [pc, #20]	; (8001f30 <vApplicationGetIdleTaskMemory+0x2c>)
 8001f1a:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	2280      	movs	r2, #128	; 0x80
 8001f20:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 8001f22:	bf00      	nop
 8001f24:	3714      	adds	r7, #20
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bc80      	pop	{r7}
 8001f2a:	4770      	bx	lr
 8001f2c:	200001f4 	.word	0x200001f4
 8001f30:	20000294 	.word	0x20000294

08001f34 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001f34:	b5b0      	push	{r4, r5, r7, lr}
 8001f36:	b0a4      	sub	sp, #144	; 0x90
 8001f38:	af0e      	add	r7, sp, #56	; 0x38
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001f3a:	f001 f943 	bl	80031c4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001f3e:	f000 f899 	bl	8002074 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001f42:	f000 fae9 	bl	8002518 <_ZL12MX_GPIO_Initv>
  MX_TIM1_Init();
 8001f46:	f000 f923 	bl	8002190 <_ZL12MX_TIM1_Initv>
  MX_TIM2_Init();
 8001f4a:	f000 f9b9 	bl	80022c0 <_ZL12MX_TIM2_Initv>
  MX_SPI1_Init();
 8001f4e:	f000 f8e3 	bl	8002118 <_ZL12MX_SPI1_Initv>
  MX_USART1_UART_Init();
 8001f52:	f000 fa85 	bl	8002460 <_ZL19MX_USART1_UART_Initv>
  MX_USART2_UART_Init();
 8001f56:	f000 fab1 	bl	80024bc <_ZL19MX_USART2_UART_Initv>
  MX_TIM3_Init();
 8001f5a:	f000 fa19 	bl	8002390 <_ZL12MX_TIM3_Initv>
  /* USER CODE BEGIN 2 */

	HAL_TIM_Base_Init(&htim1);
 8001f5e:	4837      	ldr	r0, [pc, #220]	; (800203c <main+0x108>)
 8001f60:	f002 fce6 	bl	8004930 <HAL_TIM_Base_Init>
	HAL_TIM_Base_Init(&htim2);
 8001f64:	4836      	ldr	r0, [pc, #216]	; (8002040 <main+0x10c>)
 8001f66:	f002 fce3 	bl	8004930 <HAL_TIM_Base_Init>

	arm.SetSettMotors(huart2,htim1, htim2, htim3, Dir1_GPIO_Port, Dir1_Pin,
 8001f6a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001f6e:	930c      	str	r3, [sp, #48]	; 0x30
 8001f70:	4b34      	ldr	r3, [pc, #208]	; (8002044 <main+0x110>)
 8001f72:	930b      	str	r3, [sp, #44]	; 0x2c
 8001f74:	2301      	movs	r3, #1
 8001f76:	930a      	str	r3, [sp, #40]	; 0x28
 8001f78:	4b33      	ldr	r3, [pc, #204]	; (8002048 <main+0x114>)
 8001f7a:	9309      	str	r3, [sp, #36]	; 0x24
 8001f7c:	2320      	movs	r3, #32
 8001f7e:	9308      	str	r3, [sp, #32]
 8001f80:	4b31      	ldr	r3, [pc, #196]	; (8002048 <main+0x114>)
 8001f82:	9307      	str	r3, [sp, #28]
 8001f84:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001f88:	9306      	str	r3, [sp, #24]
 8001f8a:	4b2e      	ldr	r3, [pc, #184]	; (8002044 <main+0x110>)
 8001f8c:	9305      	str	r3, [sp, #20]
 8001f8e:	2308      	movs	r3, #8
 8001f90:	9304      	str	r3, [sp, #16]
 8001f92:	4b2d      	ldr	r3, [pc, #180]	; (8002048 <main+0x114>)
 8001f94:	9303      	str	r3, [sp, #12]
 8001f96:	2340      	movs	r3, #64	; 0x40
 8001f98:	9302      	str	r3, [sp, #8]
 8001f9a:	4b2b      	ldr	r3, [pc, #172]	; (8002048 <main+0x114>)
 8001f9c:	9301      	str	r3, [sp, #4]
 8001f9e:	4b2b      	ldr	r3, [pc, #172]	; (800204c <main+0x118>)
 8001fa0:	9300      	str	r3, [sp, #0]
 8001fa2:	4b27      	ldr	r3, [pc, #156]	; (8002040 <main+0x10c>)
 8001fa4:	4a25      	ldr	r2, [pc, #148]	; (800203c <main+0x108>)
 8001fa6:	492a      	ldr	r1, [pc, #168]	; (8002050 <main+0x11c>)
 8001fa8:	482a      	ldr	r0, [pc, #168]	; (8002054 <main+0x120>)
 8001faa:	f7ff ff0c 	bl	8001dc6 <_ZN7RoboArm13SetSettMotorsER20__UART_HandleTypeDefR17TIM_HandleTypeDefS3_S3_P12GPIO_TypeDeftS5_tS5_tS5_tS5_tS5_t>
			Dir2_GPIO_Port, Dir2_Pin, Dir3_GPIO_Port, Dir3_Pin, En1_GPIO_Port,
			En1_Pin, En2_GPIO_Port, En2_Pin, En3_GPIO_Port, En3_Pin);

	arm.SetSettEncoders(hspi1, CS1_GPIO_Port, CS1_Pin, CS2_GPIO_Port, CS2_Pin,
 8001fae:	230e      	movs	r3, #14
 8001fb0:	9302      	str	r3, [sp, #8]
 8001fb2:	2302      	movs	r3, #2
 8001fb4:	9301      	str	r3, [sp, #4]
 8001fb6:	4b23      	ldr	r3, [pc, #140]	; (8002044 <main+0x110>)
 8001fb8:	9300      	str	r3, [sp, #0]
 8001fba:	2301      	movs	r3, #1
 8001fbc:	4a21      	ldr	r2, [pc, #132]	; (8002044 <main+0x110>)
 8001fbe:	4926      	ldr	r1, [pc, #152]	; (8002058 <main+0x124>)
 8001fc0:	4824      	ldr	r0, [pc, #144]	; (8002054 <main+0x120>)
 8001fc2:	f7ff fda4 	bl	8001b0e <_ZN7RoboArm15SetSettEncodersER19__SPI_HandleTypeDefP12GPIO_TypeDeftS3_th>
	/* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 8001fc6:	4b25      	ldr	r3, [pc, #148]	; (800205c <main+0x128>)
 8001fc8:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 8001fcc:	461d      	mov	r5, r3
 8001fce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001fd0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001fd2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001fd6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001fda:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001fde:	2100      	movs	r1, #0
 8001fe0:	4618      	mov	r0, r3
 8001fe2:	f004 fa7f 	bl	80064e4 <osThreadCreate>
 8001fe6:	4603      	mov	r3, r0
 8001fe8:	4a1d      	ldr	r2, [pc, #116]	; (8002060 <main+0x12c>)
 8001fea:	6013      	str	r3, [r2, #0]

  /* definition and creation of myAMT22Task */
  osThreadDef(myAMT22Task, StartAMT22Data, osPriorityIdle, 0, 128);
 8001fec:	4b1d      	ldr	r3, [pc, #116]	; (8002064 <main+0x130>)
 8001fee:	f107 0420 	add.w	r4, r7, #32
 8001ff2:	461d      	mov	r5, r3
 8001ff4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ff6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001ff8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001ffc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  myAMT22TaskHandle = osThreadCreate(osThread(myAMT22Task), NULL);
 8002000:	f107 0320 	add.w	r3, r7, #32
 8002004:	2100      	movs	r1, #0
 8002006:	4618      	mov	r0, r3
 8002008:	f004 fa6c 	bl	80064e4 <osThreadCreate>
 800200c:	4603      	mov	r3, r0
 800200e:	4a16      	ldr	r2, [pc, #88]	; (8002068 <main+0x134>)
 8002010:	6013      	str	r3, [r2, #0]

  /* definition and creation of myUARTTask */
  osThreadDef(myUARTTask, StartUARTData, osPriorityIdle, 0, 128);
 8002012:	4b16      	ldr	r3, [pc, #88]	; (800206c <main+0x138>)
 8002014:	1d3c      	adds	r4, r7, #4
 8002016:	461d      	mov	r5, r3
 8002018:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800201a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800201c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002020:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  myUARTTaskHandle = osThreadCreate(osThread(myUARTTask), NULL);
 8002024:	1d3b      	adds	r3, r7, #4
 8002026:	2100      	movs	r1, #0
 8002028:	4618      	mov	r0, r3
 800202a:	f004 fa5b 	bl	80064e4 <osThreadCreate>
 800202e:	4603      	mov	r3, r0
 8002030:	4a0f      	ldr	r2, [pc, #60]	; (8002070 <main+0x13c>)
 8002032:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
	/* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8002034:	f004 fa4f 	bl	80064d6 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

	while (1) {
 8002038:	e7fe      	b.n	8002038 <main+0x104>
 800203a:	bf00      	nop
 800203c:	200004ec 	.word	0x200004ec
 8002040:	20000534 	.word	0x20000534
 8002044:	40010c00 	.word	0x40010c00
 8002048:	40010800 	.word	0x40010800
 800204c:	2000057c 	.word	0x2000057c
 8002050:	2000060c 	.word	0x2000060c
 8002054:	20000694 	.word	0x20000694
 8002058:	20000494 	.word	0x20000494
 800205c:	0800a34c 	.word	0x0800a34c
 8002060:	20000654 	.word	0x20000654
 8002064:	0800a374 	.word	0x0800a374
 8002068:	20000658 	.word	0x20000658
 800206c:	0800a39c 	.word	0x0800a39c
 8002070:	2000065c 	.word	0x2000065c

08002074 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002074:	b580      	push	{r7, lr}
 8002076:	b090      	sub	sp, #64	; 0x40
 8002078:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800207a:	f107 0318 	add.w	r3, r7, #24
 800207e:	2228      	movs	r2, #40	; 0x28
 8002080:	2100      	movs	r1, #0
 8002082:	4618      	mov	r0, r3
 8002084:	f006 f9b7 	bl	80083f6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002088:	1d3b      	adds	r3, r7, #4
 800208a:	2200      	movs	r2, #0
 800208c:	601a      	str	r2, [r3, #0]
 800208e:	605a      	str	r2, [r3, #4]
 8002090:	609a      	str	r2, [r3, #8]
 8002092:	60da      	str	r2, [r3, #12]
 8002094:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002096:	2301      	movs	r3, #1
 8002098:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800209a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800209e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80020a0:	2300      	movs	r3, #0
 80020a2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80020a4:	2301      	movs	r3, #1
 80020a6:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80020a8:	2302      	movs	r3, #2
 80020aa:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80020ac:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80020b0:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80020b2:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80020b6:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80020b8:	f107 0318 	add.w	r3, r7, #24
 80020bc:	4618      	mov	r0, r3
 80020be:	f001 fbfb 	bl	80038b8 <HAL_RCC_OscConfig>
 80020c2:	4603      	mov	r3, r0
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	bf14      	ite	ne
 80020c8:	2301      	movne	r3, #1
 80020ca:	2300      	moveq	r3, #0
 80020cc:	b2db      	uxtb	r3, r3
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d001      	beq.n	80020d6 <_Z18SystemClock_Configv+0x62>
  {
    Error_Handler();
 80020d2:	f000 fc8b 	bl	80029ec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80020d6:	230f      	movs	r3, #15
 80020d8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80020da:	2302      	movs	r3, #2
 80020dc:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80020de:	2300      	movs	r3, #0
 80020e0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80020e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80020e6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80020e8:	2300      	movs	r3, #0
 80020ea:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80020ec:	1d3b      	adds	r3, r7, #4
 80020ee:	2102      	movs	r1, #2
 80020f0:	4618      	mov	r0, r3
 80020f2:	f001 fe63 	bl	8003dbc <HAL_RCC_ClockConfig>
 80020f6:	4603      	mov	r3, r0
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	bf14      	ite	ne
 80020fc:	2301      	movne	r3, #1
 80020fe:	2300      	moveq	r3, #0
 8002100:	b2db      	uxtb	r3, r3
 8002102:	2b00      	cmp	r3, #0
 8002104:	d001      	beq.n	800210a <_Z18SystemClock_Configv+0x96>
  {
    Error_Handler();
 8002106:	f000 fc71 	bl	80029ec <Error_Handler>
  }

  /** Enables the Clock Security System
  */
  HAL_RCC_EnableCSS();
 800210a:	f001 ff41 	bl	8003f90 <HAL_RCC_EnableCSS>
}
 800210e:	bf00      	nop
 8002110:	3740      	adds	r7, #64	; 0x40
 8002112:	46bd      	mov	sp, r7
 8002114:	bd80      	pop	{r7, pc}
	...

08002118 <_ZL12MX_SPI1_Initv>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8002118:	b580      	push	{r7, lr}
 800211a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 800211c:	4b1a      	ldr	r3, [pc, #104]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 800211e:	4a1b      	ldr	r2, [pc, #108]	; (800218c <_ZL12MX_SPI1_Initv+0x74>)
 8002120:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002122:	4b19      	ldr	r3, [pc, #100]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002124:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002128:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800212a:	4b17      	ldr	r3, [pc, #92]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 800212c:	2200      	movs	r2, #0
 800212e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002130:	4b15      	ldr	r3, [pc, #84]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002132:	2200      	movs	r2, #0
 8002134:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002136:	4b14      	ldr	r3, [pc, #80]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002138:	2200      	movs	r2, #0
 800213a:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800213c:	4b12      	ldr	r3, [pc, #72]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 800213e:	2200      	movs	r2, #0
 8002140:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002142:	4b11      	ldr	r3, [pc, #68]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002144:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002148:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800214a:	4b0f      	ldr	r3, [pc, #60]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 800214c:	2218      	movs	r2, #24
 800214e:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002150:	4b0d      	ldr	r3, [pc, #52]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002152:	2200      	movs	r2, #0
 8002154:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002156:	4b0c      	ldr	r3, [pc, #48]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002158:	2200      	movs	r2, #0
 800215a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800215c:	4b0a      	ldr	r3, [pc, #40]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 800215e:	2200      	movs	r2, #0
 8002160:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8002162:	4b09      	ldr	r3, [pc, #36]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 8002164:	220a      	movs	r2, #10
 8002166:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002168:	4807      	ldr	r0, [pc, #28]	; (8002188 <_ZL12MX_SPI1_Initv+0x70>)
 800216a:	f002 f80b 	bl	8004184 <HAL_SPI_Init>
 800216e:	4603      	mov	r3, r0
 8002170:	2b00      	cmp	r3, #0
 8002172:	bf14      	ite	ne
 8002174:	2301      	movne	r3, #1
 8002176:	2300      	moveq	r3, #0
 8002178:	b2db      	uxtb	r3, r3
 800217a:	2b00      	cmp	r3, #0
 800217c:	d001      	beq.n	8002182 <_ZL12MX_SPI1_Initv+0x6a>
  {
    Error_Handler();
 800217e:	f000 fc35 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002182:	bf00      	nop
 8002184:	bd80      	pop	{r7, pc}
 8002186:	bf00      	nop
 8002188:	20000494 	.word	0x20000494
 800218c:	40013000 	.word	0x40013000

08002190 <_ZL12MX_TIM1_Initv>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8002190:	b580      	push	{r7, lr}
 8002192:	b092      	sub	sp, #72	; 0x48
 8002194:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002196:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800219a:	2200      	movs	r2, #0
 800219c:	601a      	str	r2, [r3, #0]
 800219e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80021a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021a4:	2200      	movs	r2, #0
 80021a6:	601a      	str	r2, [r3, #0]
 80021a8:	605a      	str	r2, [r3, #4]
 80021aa:	609a      	str	r2, [r3, #8]
 80021ac:	60da      	str	r2, [r3, #12]
 80021ae:	611a      	str	r2, [r3, #16]
 80021b0:	615a      	str	r2, [r3, #20]
 80021b2:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80021b4:	1d3b      	adds	r3, r7, #4
 80021b6:	2220      	movs	r2, #32
 80021b8:	2100      	movs	r1, #0
 80021ba:	4618      	mov	r0, r3
 80021bc:	f006 f91b 	bl	80083f6 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80021c0:	4b3d      	ldr	r3, [pc, #244]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021c2:	4a3e      	ldr	r2, [pc, #248]	; (80022bc <_ZL12MX_TIM1_Initv+0x12c>)
 80021c4:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 72;
 80021c6:	4b3c      	ldr	r3, [pc, #240]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021c8:	2248      	movs	r2, #72	; 0x48
 80021ca:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021cc:	4b3a      	ldr	r3, [pc, #232]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021ce:	2200      	movs	r2, #0
 80021d0:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 1000-1;
 80021d2:	4b39      	ldr	r3, [pc, #228]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021d4:	f240 32e7 	movw	r2, #999	; 0x3e7
 80021d8:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80021da:	4b37      	ldr	r3, [pc, #220]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021dc:	2200      	movs	r2, #0
 80021de:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80021e0:	4b35      	ldr	r3, [pc, #212]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021e2:	2200      	movs	r2, #0
 80021e4:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80021e6:	4b34      	ldr	r3, [pc, #208]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021e8:	2200      	movs	r2, #0
 80021ea:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80021ec:	4832      	ldr	r0, [pc, #200]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80021ee:	f002 fc77 	bl	8004ae0 <HAL_TIM_PWM_Init>
 80021f2:	4603      	mov	r3, r0
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	bf14      	ite	ne
 80021f8:	2301      	movne	r3, #1
 80021fa:	2300      	moveq	r3, #0
 80021fc:	b2db      	uxtb	r3, r3
 80021fe:	2b00      	cmp	r3, #0
 8002200:	d001      	beq.n	8002206 <_ZL12MX_TIM1_Initv+0x76>
  {
    Error_Handler();
 8002202:	f000 fbf3 	bl	80029ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002206:	2300      	movs	r3, #0
 8002208:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800220a:	2300      	movs	r3, #0
 800220c:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800220e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8002212:	4619      	mov	r1, r3
 8002214:	4828      	ldr	r0, [pc, #160]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 8002216:	f003 f9b5 	bl	8005584 <HAL_TIMEx_MasterConfigSynchronization>
 800221a:	4603      	mov	r3, r0
 800221c:	2b00      	cmp	r3, #0
 800221e:	bf14      	ite	ne
 8002220:	2301      	movne	r3, #1
 8002222:	2300      	moveq	r3, #0
 8002224:	b2db      	uxtb	r3, r3
 8002226:	2b00      	cmp	r3, #0
 8002228:	d001      	beq.n	800222e <_ZL12MX_TIM1_Initv+0x9e>
  {
    Error_Handler();
 800222a:	f000 fbdf 	bl	80029ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800222e:	2360      	movs	r3, #96	; 0x60
 8002230:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 8002232:	2300      	movs	r3, #0
 8002234:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002236:	2300      	movs	r3, #0
 8002238:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800223a:	2300      	movs	r3, #0
 800223c:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800223e:	2300      	movs	r3, #0
 8002240:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8002242:	2300      	movs	r3, #0
 8002244:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8002246:	2300      	movs	r3, #0
 8002248:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800224a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800224e:	2200      	movs	r2, #0
 8002250:	4619      	mov	r1, r3
 8002252:	4819      	ldr	r0, [pc, #100]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 8002254:	f002 fea2 	bl	8004f9c <HAL_TIM_PWM_ConfigChannel>
 8002258:	4603      	mov	r3, r0
 800225a:	2b00      	cmp	r3, #0
 800225c:	bf14      	ite	ne
 800225e:	2301      	movne	r3, #1
 8002260:	2300      	moveq	r3, #0
 8002262:	b2db      	uxtb	r3, r3
 8002264:	2b00      	cmp	r3, #0
 8002266:	d001      	beq.n	800226c <_ZL12MX_TIM1_Initv+0xdc>
  {
    Error_Handler();
 8002268:	f000 fbc0 	bl	80029ec <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800226c:	2300      	movs	r3, #0
 800226e:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8002270:	2300      	movs	r3, #0
 8002272:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8002274:	2300      	movs	r3, #0
 8002276:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8002278:	2300      	movs	r3, #0
 800227a:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800227c:	2300      	movs	r3, #0
 800227e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8002280:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002284:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8002286:	2300      	movs	r3, #0
 8002288:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800228a:	1d3b      	adds	r3, r7, #4
 800228c:	4619      	mov	r1, r3
 800228e:	480a      	ldr	r0, [pc, #40]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 8002290:	f003 f9d6 	bl	8005640 <HAL_TIMEx_ConfigBreakDeadTime>
 8002294:	4603      	mov	r3, r0
 8002296:	2b00      	cmp	r3, #0
 8002298:	bf14      	ite	ne
 800229a:	2301      	movne	r3, #1
 800229c:	2300      	moveq	r3, #0
 800229e:	b2db      	uxtb	r3, r3
 80022a0:	2b00      	cmp	r3, #0
 80022a2:	d001      	beq.n	80022a8 <_ZL12MX_TIM1_Initv+0x118>
  {
    Error_Handler();
 80022a4:	f000 fba2 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80022a8:	4803      	ldr	r0, [pc, #12]	; (80022b8 <_ZL12MX_TIM1_Initv+0x128>)
 80022aa:	f000 fcc3 	bl	8002c34 <HAL_TIM_MspPostInit>

}
 80022ae:	bf00      	nop
 80022b0:	3748      	adds	r7, #72	; 0x48
 80022b2:	46bd      	mov	sp, r7
 80022b4:	bd80      	pop	{r7, pc}
 80022b6:	bf00      	nop
 80022b8:	200004ec 	.word	0x200004ec
 80022bc:	40012c00 	.word	0x40012c00

080022c0 <_ZL12MX_TIM2_Initv>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80022c0:	b580      	push	{r7, lr}
 80022c2:	b08a      	sub	sp, #40	; 0x28
 80022c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80022c6:	f107 0320 	add.w	r3, r7, #32
 80022ca:	2200      	movs	r2, #0
 80022cc:	601a      	str	r2, [r3, #0]
 80022ce:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80022d0:	1d3b      	adds	r3, r7, #4
 80022d2:	2200      	movs	r2, #0
 80022d4:	601a      	str	r2, [r3, #0]
 80022d6:	605a      	str	r2, [r3, #4]
 80022d8:	609a      	str	r2, [r3, #8]
 80022da:	60da      	str	r2, [r3, #12]
 80022dc:	611a      	str	r2, [r3, #16]
 80022de:	615a      	str	r2, [r3, #20]
 80022e0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80022e2:	4b2a      	ldr	r3, [pc, #168]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 80022e4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80022e8:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 72;
 80022ea:	4b28      	ldr	r3, [pc, #160]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 80022ec:	2248      	movs	r2, #72	; 0x48
 80022ee:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80022f0:	4b26      	ldr	r3, [pc, #152]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 80022f2:	2200      	movs	r2, #0
 80022f4:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1000-1;
 80022f6:	4b25      	ldr	r3, [pc, #148]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 80022f8:	f240 32e7 	movw	r2, #999	; 0x3e7
 80022fc:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80022fe:	4b23      	ldr	r3, [pc, #140]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 8002300:	2200      	movs	r2, #0
 8002302:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002304:	4b21      	ldr	r3, [pc, #132]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 8002306:	2200      	movs	r2, #0
 8002308:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800230a:	4820      	ldr	r0, [pc, #128]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 800230c:	f002 fbe8 	bl	8004ae0 <HAL_TIM_PWM_Init>
 8002310:	4603      	mov	r3, r0
 8002312:	2b00      	cmp	r3, #0
 8002314:	bf14      	ite	ne
 8002316:	2301      	movne	r3, #1
 8002318:	2300      	moveq	r3, #0
 800231a:	b2db      	uxtb	r3, r3
 800231c:	2b00      	cmp	r3, #0
 800231e:	d001      	beq.n	8002324 <_ZL12MX_TIM2_Initv+0x64>
  {
    Error_Handler();
 8002320:	f000 fb64 	bl	80029ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002324:	2300      	movs	r3, #0
 8002326:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002328:	2300      	movs	r3, #0
 800232a:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800232c:	f107 0320 	add.w	r3, r7, #32
 8002330:	4619      	mov	r1, r3
 8002332:	4816      	ldr	r0, [pc, #88]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 8002334:	f003 f926 	bl	8005584 <HAL_TIMEx_MasterConfigSynchronization>
 8002338:	4603      	mov	r3, r0
 800233a:	2b00      	cmp	r3, #0
 800233c:	bf14      	ite	ne
 800233e:	2301      	movne	r3, #1
 8002340:	2300      	moveq	r3, #0
 8002342:	b2db      	uxtb	r3, r3
 8002344:	2b00      	cmp	r3, #0
 8002346:	d001      	beq.n	800234c <_ZL12MX_TIM2_Initv+0x8c>
  {
    Error_Handler();
 8002348:	f000 fb50 	bl	80029ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800234c:	2360      	movs	r3, #96	; 0x60
 800234e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002350:	2300      	movs	r3, #0
 8002352:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002354:	2300      	movs	r3, #0
 8002356:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002358:	2300      	movs	r3, #0
 800235a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800235c:	1d3b      	adds	r3, r7, #4
 800235e:	2204      	movs	r2, #4
 8002360:	4619      	mov	r1, r3
 8002362:	480a      	ldr	r0, [pc, #40]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 8002364:	f002 fe1a 	bl	8004f9c <HAL_TIM_PWM_ConfigChannel>
 8002368:	4603      	mov	r3, r0
 800236a:	2b00      	cmp	r3, #0
 800236c:	bf14      	ite	ne
 800236e:	2301      	movne	r3, #1
 8002370:	2300      	moveq	r3, #0
 8002372:	b2db      	uxtb	r3, r3
 8002374:	2b00      	cmp	r3, #0
 8002376:	d001      	beq.n	800237c <_ZL12MX_TIM2_Initv+0xbc>
  {
    Error_Handler();
 8002378:	f000 fb38 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800237c:	4803      	ldr	r0, [pc, #12]	; (800238c <_ZL12MX_TIM2_Initv+0xcc>)
 800237e:	f000 fc59 	bl	8002c34 <HAL_TIM_MspPostInit>

}
 8002382:	bf00      	nop
 8002384:	3728      	adds	r7, #40	; 0x28
 8002386:	46bd      	mov	sp, r7
 8002388:	bd80      	pop	{r7, pc}
 800238a:	bf00      	nop
 800238c:	20000534 	.word	0x20000534

08002390 <_ZL12MX_TIM3_Initv>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002390:	b580      	push	{r7, lr}
 8002392:	b08a      	sub	sp, #40	; 0x28
 8002394:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002396:	f107 0320 	add.w	r3, r7, #32
 800239a:	2200      	movs	r2, #0
 800239c:	601a      	str	r2, [r3, #0]
 800239e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023a0:	1d3b      	adds	r3, r7, #4
 80023a2:	2200      	movs	r2, #0
 80023a4:	601a      	str	r2, [r3, #0]
 80023a6:	605a      	str	r2, [r3, #4]
 80023a8:	609a      	str	r2, [r3, #8]
 80023aa:	60da      	str	r2, [r3, #12]
 80023ac:	611a      	str	r2, [r3, #16]
 80023ae:	615a      	str	r2, [r3, #20]
 80023b0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80023b2:	4b29      	ldr	r3, [pc, #164]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023b4:	4a29      	ldr	r2, [pc, #164]	; (800245c <_ZL12MX_TIM3_Initv+0xcc>)
 80023b6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 72;
 80023b8:	4b27      	ldr	r3, [pc, #156]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023ba:	2248      	movs	r2, #72	; 0x48
 80023bc:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023be:	4b26      	ldr	r3, [pc, #152]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023c0:	2200      	movs	r2, #0
 80023c2:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 80023c4:	4b24      	ldr	r3, [pc, #144]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023c6:	f240 32e7 	movw	r2, #999	; 0x3e7
 80023ca:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023cc:	4b22      	ldr	r3, [pc, #136]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023ce:	2200      	movs	r2, #0
 80023d0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023d2:	4b21      	ldr	r3, [pc, #132]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023d4:	2200      	movs	r2, #0
 80023d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80023d8:	481f      	ldr	r0, [pc, #124]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 80023da:	f002 fb81 	bl	8004ae0 <HAL_TIM_PWM_Init>
 80023de:	4603      	mov	r3, r0
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	bf14      	ite	ne
 80023e4:	2301      	movne	r3, #1
 80023e6:	2300      	moveq	r3, #0
 80023e8:	b2db      	uxtb	r3, r3
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d001      	beq.n	80023f2 <_ZL12MX_TIM3_Initv+0x62>
  {
    Error_Handler();
 80023ee:	f000 fafd 	bl	80029ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80023f2:	2300      	movs	r3, #0
 80023f4:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80023f6:	2300      	movs	r3, #0
 80023f8:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80023fa:	f107 0320 	add.w	r3, r7, #32
 80023fe:	4619      	mov	r1, r3
 8002400:	4815      	ldr	r0, [pc, #84]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 8002402:	f003 f8bf 	bl	8005584 <HAL_TIMEx_MasterConfigSynchronization>
 8002406:	4603      	mov	r3, r0
 8002408:	2b00      	cmp	r3, #0
 800240a:	bf14      	ite	ne
 800240c:	2301      	movne	r3, #1
 800240e:	2300      	moveq	r3, #0
 8002410:	b2db      	uxtb	r3, r3
 8002412:	2b00      	cmp	r3, #0
 8002414:	d001      	beq.n	800241a <_ZL12MX_TIM3_Initv+0x8a>
  {
    Error_Handler();
 8002416:	f000 fae9 	bl	80029ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800241a:	2360      	movs	r3, #96	; 0x60
 800241c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800241e:	2300      	movs	r3, #0
 8002420:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002422:	2300      	movs	r3, #0
 8002424:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002426:	2300      	movs	r3, #0
 8002428:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800242a:	1d3b      	adds	r3, r7, #4
 800242c:	2204      	movs	r2, #4
 800242e:	4619      	mov	r1, r3
 8002430:	4809      	ldr	r0, [pc, #36]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 8002432:	f002 fdb3 	bl	8004f9c <HAL_TIM_PWM_ConfigChannel>
 8002436:	4603      	mov	r3, r0
 8002438:	2b00      	cmp	r3, #0
 800243a:	bf14      	ite	ne
 800243c:	2301      	movne	r3, #1
 800243e:	2300      	moveq	r3, #0
 8002440:	b2db      	uxtb	r3, r3
 8002442:	2b00      	cmp	r3, #0
 8002444:	d001      	beq.n	800244a <_ZL12MX_TIM3_Initv+0xba>
  {
    Error_Handler();
 8002446:	f000 fad1 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800244a:	4803      	ldr	r0, [pc, #12]	; (8002458 <_ZL12MX_TIM3_Initv+0xc8>)
 800244c:	f000 fbf2 	bl	8002c34 <HAL_TIM_MspPostInit>

}
 8002450:	bf00      	nop
 8002452:	3728      	adds	r7, #40	; 0x28
 8002454:	46bd      	mov	sp, r7
 8002456:	bd80      	pop	{r7, pc}
 8002458:	2000057c 	.word	0x2000057c
 800245c:	40000400 	.word	0x40000400

08002460 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8002460:	b580      	push	{r7, lr}
 8002462:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002464:	4b13      	ldr	r3, [pc, #76]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 8002466:	4a14      	ldr	r2, [pc, #80]	; (80024b8 <_ZL19MX_USART1_UART_Initv+0x58>)
 8002468:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800246a:	4b12      	ldr	r3, [pc, #72]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 800246c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002470:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002472:	4b10      	ldr	r3, [pc, #64]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 8002474:	2200      	movs	r2, #0
 8002476:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002478:	4b0e      	ldr	r3, [pc, #56]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 800247a:	2200      	movs	r2, #0
 800247c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800247e:	4b0d      	ldr	r3, [pc, #52]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 8002480:	2200      	movs	r2, #0
 8002482:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002484:	4b0b      	ldr	r3, [pc, #44]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 8002486:	220c      	movs	r2, #12
 8002488:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800248a:	4b0a      	ldr	r3, [pc, #40]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 800248c:	2200      	movs	r2, #0
 800248e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002490:	4b08      	ldr	r3, [pc, #32]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 8002492:	2200      	movs	r2, #0
 8002494:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002496:	4807      	ldr	r0, [pc, #28]	; (80024b4 <_ZL19MX_USART1_UART_Initv+0x54>)
 8002498:	f003 f935 	bl	8005706 <HAL_UART_Init>
 800249c:	4603      	mov	r3, r0
 800249e:	2b00      	cmp	r3, #0
 80024a0:	bf14      	ite	ne
 80024a2:	2301      	movne	r3, #1
 80024a4:	2300      	moveq	r3, #0
 80024a6:	b2db      	uxtb	r3, r3
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d001      	beq.n	80024b0 <_ZL19MX_USART1_UART_Initv+0x50>
  {
    Error_Handler();
 80024ac:	f000 fa9e 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80024b0:	bf00      	nop
 80024b2:	bd80      	pop	{r7, pc}
 80024b4:	200005c4 	.word	0x200005c4
 80024b8:	40013800 	.word	0x40013800

080024bc <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80024bc:	b580      	push	{r7, lr}
 80024be:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */
//
  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80024c0:	4b13      	ldr	r3, [pc, #76]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024c2:	4a14      	ldr	r2, [pc, #80]	; (8002514 <_ZL19MX_USART2_UART_Initv+0x58>)
 80024c4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80024c6:	4b12      	ldr	r3, [pc, #72]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024c8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80024cc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80024ce:	4b10      	ldr	r3, [pc, #64]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024d0:	2200      	movs	r2, #0
 80024d2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80024d4:	4b0e      	ldr	r3, [pc, #56]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024d6:	2200      	movs	r2, #0
 80024d8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80024da:	4b0d      	ldr	r3, [pc, #52]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024dc:	2200      	movs	r2, #0
 80024de:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80024e0:	4b0b      	ldr	r3, [pc, #44]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024e2:	220c      	movs	r2, #12
 80024e4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80024e6:	4b0a      	ldr	r3, [pc, #40]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024e8:	2200      	movs	r2, #0
 80024ea:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80024ec:	4b08      	ldr	r3, [pc, #32]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024ee:	2200      	movs	r2, #0
 80024f0:	61da      	str	r2, [r3, #28]
  if (HAL_HalfDuplex_Init(&huart2) != HAL_OK)
 80024f2:	4807      	ldr	r0, [pc, #28]	; (8002510 <_ZL19MX_USART2_UART_Initv+0x54>)
 80024f4:	f003 f957 	bl	80057a6 <HAL_HalfDuplex_Init>
 80024f8:	4603      	mov	r3, r0
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	bf14      	ite	ne
 80024fe:	2301      	movne	r3, #1
 8002500:	2300      	moveq	r3, #0
 8002502:	b2db      	uxtb	r3, r3
 8002504:	2b00      	cmp	r3, #0
 8002506:	d001      	beq.n	800250c <_ZL19MX_USART2_UART_Initv+0x50>
  {
    Error_Handler();
 8002508:	f000 fa70 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */
//
  /* USER CODE END USART2_Init 2 */

}
 800250c:	bf00      	nop
 800250e:	bd80      	pop	{r7, pc}
 8002510:	2000060c 	.word	0x2000060c
 8002514:	40004400 	.word	0x40004400

08002518 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002518:	b580      	push	{r7, lr}
 800251a:	b088      	sub	sp, #32
 800251c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800251e:	f107 0310 	add.w	r3, r7, #16
 8002522:	2200      	movs	r2, #0
 8002524:	601a      	str	r2, [r3, #0]
 8002526:	605a      	str	r2, [r3, #4]
 8002528:	609a      	str	r2, [r3, #8]
 800252a:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800252c:	4b3f      	ldr	r3, [pc, #252]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 800252e:	699b      	ldr	r3, [r3, #24]
 8002530:	4a3e      	ldr	r2, [pc, #248]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 8002532:	f043 0310 	orr.w	r3, r3, #16
 8002536:	6193      	str	r3, [r2, #24]
 8002538:	4b3c      	ldr	r3, [pc, #240]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 800253a:	699b      	ldr	r3, [r3, #24]
 800253c:	f003 0310 	and.w	r3, r3, #16
 8002540:	60fb      	str	r3, [r7, #12]
 8002542:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002544:	4b39      	ldr	r3, [pc, #228]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 8002546:	699b      	ldr	r3, [r3, #24]
 8002548:	4a38      	ldr	r2, [pc, #224]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 800254a:	f043 0320 	orr.w	r3, r3, #32
 800254e:	6193      	str	r3, [r2, #24]
 8002550:	4b36      	ldr	r3, [pc, #216]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 8002552:	699b      	ldr	r3, [r3, #24]
 8002554:	f003 0320 	and.w	r3, r3, #32
 8002558:	60bb      	str	r3, [r7, #8]
 800255a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800255c:	4b33      	ldr	r3, [pc, #204]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 800255e:	699b      	ldr	r3, [r3, #24]
 8002560:	4a32      	ldr	r2, [pc, #200]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 8002562:	f043 0304 	orr.w	r3, r3, #4
 8002566:	6193      	str	r3, [r2, #24]
 8002568:	4b30      	ldr	r3, [pc, #192]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 800256a:	699b      	ldr	r3, [r3, #24]
 800256c:	f003 0304 	and.w	r3, r3, #4
 8002570:	607b      	str	r3, [r7, #4]
 8002572:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002574:	4b2d      	ldr	r3, [pc, #180]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 8002576:	699b      	ldr	r3, [r3, #24]
 8002578:	4a2c      	ldr	r2, [pc, #176]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 800257a:	f043 0308 	orr.w	r3, r3, #8
 800257e:	6193      	str	r3, [r2, #24]
 8002580:	4b2a      	ldr	r3, [pc, #168]	; (800262c <_ZL12MX_GPIO_Initv+0x114>)
 8002582:	699b      	ldr	r3, [r3, #24]
 8002584:	f003 0308 	and.w	r3, r3, #8
 8002588:	603b      	str	r3, [r7, #0]
 800258a:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Led_GPIO_Port, Led_Pin, GPIO_PIN_RESET);
 800258c:	2200      	movs	r2, #0
 800258e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002592:	4827      	ldr	r0, [pc, #156]	; (8002630 <_ZL12MX_GPIO_Initv+0x118>)
 8002594:	f001 f95e 	bl	8003854 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, En2_Pin|En1_Pin|Dir1_Pin|EndCap4_Pin
 8002598:	2200      	movs	r2, #0
 800259a:	f649 0161 	movw	r1, #39009	; 0x9861
 800259e:	4825      	ldr	r0, [pc, #148]	; (8002634 <_ZL12MX_GPIO_Initv+0x11c>)
 80025a0:	f001 f958 	bl	8003854 <HAL_GPIO_WritePin>
                          |Buser_Pin|Reserved_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, CS1_Pin|CS2_Pin|Dir2_Pin|Led1_Pin
 80025a4:	2200      	movs	r2, #0
 80025a6:	f64d 31cb 	movw	r1, #56267	; 0xdbcb
 80025aa:	4823      	ldr	r0, [pc, #140]	; (8002638 <_ZL12MX_GPIO_Initv+0x120>)
 80025ac:	f001 f952 	bl	8003854 <HAL_GPIO_WritePin>
                          |EndCap1_Pin|EndCap2_Pin|S1_Pin|S2_Pin
                          |EndCap3_Pin|En3_Pin|Dir3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : Led_Pin */
  GPIO_InitStruct.Pin = Led_Pin;
 80025b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80025b4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80025b6:	2301      	movs	r3, #1
 80025b8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025ba:	2300      	movs	r3, #0
 80025bc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80025be:	2302      	movs	r3, #2
 80025c0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Led_GPIO_Port, &GPIO_InitStruct);
 80025c2:	f107 0310 	add.w	r3, r7, #16
 80025c6:	4619      	mov	r1, r3
 80025c8:	4819      	ldr	r0, [pc, #100]	; (8002630 <_ZL12MX_GPIO_Initv+0x118>)
 80025ca:	f000 ffbf 	bl	800354c <HAL_GPIO_Init>

  /*Configure GPIO pins : En2_Pin En1_Pin Dir1_Pin EndCap4_Pin
                           Buser_Pin Reserved_Pin */
  GPIO_InitStruct.Pin = En2_Pin|En1_Pin|Dir1_Pin|EndCap4_Pin
 80025ce:	f649 0361 	movw	r3, #39009	; 0x9861
 80025d2:	613b      	str	r3, [r7, #16]
                          |Buser_Pin|Reserved_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80025d4:	2301      	movs	r3, #1
 80025d6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025d8:	2300      	movs	r3, #0
 80025da:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80025dc:	2302      	movs	r3, #2
 80025de:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025e0:	f107 0310 	add.w	r3, r7, #16
 80025e4:	4619      	mov	r1, r3
 80025e6:	4813      	ldr	r0, [pc, #76]	; (8002634 <_ZL12MX_GPIO_Initv+0x11c>)
 80025e8:	f000 ffb0 	bl	800354c <HAL_GPIO_Init>

  /*Configure GPIO pin : Button_Pin */
  GPIO_InitStruct.Pin = Button_Pin;
 80025ec:	2310      	movs	r3, #16
 80025ee:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80025f0:	2300      	movs	r3, #0
 80025f2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025f4:	2300      	movs	r3, #0
 80025f6:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Button_GPIO_Port, &GPIO_InitStruct);
 80025f8:	f107 0310 	add.w	r3, r7, #16
 80025fc:	4619      	mov	r1, r3
 80025fe:	480d      	ldr	r0, [pc, #52]	; (8002634 <_ZL12MX_GPIO_Initv+0x11c>)
 8002600:	f000 ffa4 	bl	800354c <HAL_GPIO_Init>

  /*Configure GPIO pins : CS1_Pin CS2_Pin Dir2_Pin Led1_Pin
                           EndCap1_Pin EndCap2_Pin S1_Pin S2_Pin
                           EndCap3_Pin En3_Pin Dir3_Pin */
  GPIO_InitStruct.Pin = CS1_Pin|CS2_Pin|Dir2_Pin|Led1_Pin
 8002604:	f64d 33cb 	movw	r3, #56267	; 0xdbcb
 8002608:	613b      	str	r3, [r7, #16]
                          |EndCap1_Pin|EndCap2_Pin|S1_Pin|S2_Pin
                          |EndCap3_Pin|En3_Pin|Dir3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800260a:	2301      	movs	r3, #1
 800260c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800260e:	2300      	movs	r3, #0
 8002610:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002612:	2302      	movs	r3, #2
 8002614:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002616:	f107 0310 	add.w	r3, r7, #16
 800261a:	4619      	mov	r1, r3
 800261c:	4806      	ldr	r0, [pc, #24]	; (8002638 <_ZL12MX_GPIO_Initv+0x120>)
 800261e:	f000 ff95 	bl	800354c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002622:	bf00      	nop
 8002624:	3720      	adds	r7, #32
 8002626:	46bd      	mov	sp, r7
 8002628:	bd80      	pop	{r7, pc}
 800262a:	bf00      	nop
 800262c:	40021000 	.word	0x40021000
 8002630:	40011000 	.word	0x40011000
 8002634:	40010800 	.word	0x40010800
 8002638:	40010c00 	.word	0x40010c00

0800263c <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 800263c:	b580      	push	{r7, lr}
 800263e:	b082      	sub	sp, #8
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
	//UNUSED(huart);
	if (huart == &huart1) {
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	4a1b      	ldr	r2, [pc, #108]	; (80026b4 <HAL_UART_RxCpltCallback+0x78>)
 8002648:	4293      	cmp	r3, r2
 800264a:	d129      	bne.n	80026a0 <HAL_UART_RxCpltCallback+0x64>
//		if(!strcmp(rx_buffer,"TEXT")) {
//		}

//		uint8_t data[] = { '\\', 0x8f, 0xf8, 'B', 'q', '}', 0x16, 'C', 1, 1, 0, 0 };
		memcpy(un.bytes, rx_buffer, sizeof(rx_buffer));
 800264c:	4b1a      	ldr	r3, [pc, #104]	; (80026b8 <HAL_UART_RxCpltCallback+0x7c>)
 800264e:	4a1b      	ldr	r2, [pc, #108]	; (80026bc <HAL_UART_RxCpltCallback+0x80>)
 8002650:	ca07      	ldmia	r2, {r0, r1, r2}
 8002652:	e883 0007 	stmia.w	r3, {r0, r1, r2}
		switch (un.params.hold) {
 8002656:	4b18      	ldr	r3, [pc, #96]	; (80026b8 <HAL_UART_RxCpltCallback+0x7c>)
 8002658:	689b      	ldr	r3, [r3, #8]
 800265a:	2b4b      	cmp	r3, #75	; 0x4b
 800265c:	d018      	beq.n	8002690 <HAL_UART_RxCpltCallback+0x54>
 800265e:	2b4b      	cmp	r3, #75	; 0x4b
 8002660:	dc19      	bgt.n	8002696 <HAL_UART_RxCpltCallback+0x5a>
 8002662:	2b32      	cmp	r3, #50	; 0x32
 8002664:	d010      	beq.n	8002688 <HAL_UART_RxCpltCallback+0x4c>
 8002666:	2b32      	cmp	r3, #50	; 0x32
 8002668:	dc15      	bgt.n	8002696 <HAL_UART_RxCpltCallback+0x5a>
 800266a:	2b01      	cmp	r3, #1
 800266c:	dc02      	bgt.n	8002674 <HAL_UART_RxCpltCallback+0x38>
 800266e:	2b00      	cmp	r3, #0
 8002670:	da03      	bge.n	800267a <HAL_UART_RxCpltCallback+0x3e>
 8002672:	e010      	b.n	8002696 <HAL_UART_RxCpltCallback+0x5a>
 8002674:	2b19      	cmp	r3, #25
 8002676:	d004      	beq.n	8002682 <HAL_UART_RxCpltCallback+0x46>
 8002678:	e00d      	b.n	8002696 <HAL_UART_RxCpltCallback+0x5a>
		case 0:
		case 1:
			startFirstMove = true;
 800267a:	4b11      	ldr	r3, [pc, #68]	; (80026c0 <HAL_UART_RxCpltCallback+0x84>)
 800267c:	2201      	movs	r2, #1
 800267e:	701a      	strb	r2, [r3, #0]
			break;
 8002680:	e009      	b.n	8002696 <HAL_UART_RxCpltCallback+0x5a>
		case 25:
			stopBeforeReboot = true;
 8002682:	4b10      	ldr	r3, [pc, #64]	; (80026c4 <HAL_UART_RxCpltCallback+0x88>)
 8002684:	2201      	movs	r2, #1
 8002686:	701a      	strb	r2, [r3, #0]
		case 50:
			sendDataFlag = true;
 8002688:	4b0f      	ldr	r3, [pc, #60]	; (80026c8 <HAL_UART_RxCpltCallback+0x8c>)
 800268a:	2201      	movs	r2, #1
 800268c:	701a      	strb	r2, [r3, #0]
			break;
 800268e:	e002      	b.n	8002696 <HAL_UART_RxCpltCallback+0x5a>
		case 75:
			setZeroFlag = true;
 8002690:	4b0e      	ldr	r3, [pc, #56]	; (80026cc <HAL_UART_RxCpltCallback+0x90>)
 8002692:	2201      	movs	r2, #1
 8002694:	701a      	strb	r2, [r3, #0]
		}
		memset(rx_buffer, 0, sizeof(rx_buffer));
 8002696:	220c      	movs	r2, #12
 8002698:	2100      	movs	r1, #0
 800269a:	4808      	ldr	r0, [pc, #32]	; (80026bc <HAL_UART_RxCpltCallback+0x80>)
 800269c:	f005 feab 	bl	80083f6 <memset>
//		HAL_GPIO_TogglePin(Led_GPIO_Port, Led_Pin);
//		HAL_GPIO_TogglePin(Dir2_GPIO_Port, Dir2_Pin);
	}
	HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 80026a0:	220c      	movs	r2, #12
 80026a2:	4906      	ldr	r1, [pc, #24]	; (80026bc <HAL_UART_RxCpltCallback+0x80>)
 80026a4:	4803      	ldr	r0, [pc, #12]	; (80026b4 <HAL_UART_RxCpltCallback+0x78>)
 80026a6:	f003 f959 	bl	800595c <HAL_UART_Receive_IT>
}
 80026aa:	bf00      	nop
 80026ac:	3708      	adds	r7, #8
 80026ae:	46bd      	mov	sp, r7
 80026b0:	bd80      	pop	{r7, pc}
 80026b2:	bf00      	nop
 80026b4:	200005c4 	.word	0x200005c4
 80026b8:	20000674 	.word	0x20000674
 80026bc:	20000660 	.word	0x20000660
 80026c0:	2000066c 	.word	0x2000066c
 80026c4:	2000066e 	.word	0x2000066e
 80026c8:	2000066d 	.word	0x2000066d
 80026cc:	2000066f 	.word	0x2000066f

080026d0 <_Z16StartDefaultTaskPKv>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 80026d0:	b580      	push	{r7, lr}
 80026d2:	b084      	sub	sp, #16
 80026d4:	af00      	add	r7, sp, #0
 80026d6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
	arm.setPrintState(false);
 80026d8:	2100      	movs	r1, #0
 80026da:	4815      	ldr	r0, [pc, #84]	; (8002730 <_Z16StartDefaultTaskPKv+0x60>)
 80026dc:	f7ff f9ee 	bl	8001abc <_ZN7RoboArm13setPrintStateEb>
	/* Infinite loop */
	for (;;) {

		if (startFirstMove) {
 80026e0:	4b14      	ldr	r3, [pc, #80]	; (8002734 <_Z16StartDefaultTaskPKv+0x64>)
 80026e2:	781b      	ldrb	r3, [r3, #0]
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d01f      	beq.n	8002728 <_Z16StartDefaultTaskPKv+0x58>
			startFirstMove = false;
 80026e8:	4b12      	ldr	r3, [pc, #72]	; (8002734 <_Z16StartDefaultTaskPKv+0x64>)
 80026ea:	2200      	movs	r2, #0
 80026ec:	701a      	strb	r2, [r3, #0]
			float angle = arm.ShiftZeroInputAng(un.params.ang);
 80026ee:	4b12      	ldr	r3, [pc, #72]	; (8002738 <_Z16StartDefaultTaskPKv+0x68>)
 80026f0:	685b      	ldr	r3, [r3, #4]
 80026f2:	4619      	mov	r1, r3
 80026f4:	480e      	ldr	r0, [pc, #56]	; (8002730 <_Z16StartDefaultTaskPKv+0x60>)
 80026f6:	f7ff fad9 	bl	8001cac <_ZN7RoboArm17ShiftZeroInputAngEf>
 80026fa:	60f8      	str	r0, [r7, #12]
			uint16_t distance = arm.ShiftZeroInputLin(un.params.lin);
 80026fc:	4b0e      	ldr	r3, [pc, #56]	; (8002738 <_Z16StartDefaultTaskPKv+0x68>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	4619      	mov	r1, r3
 8002702:	480b      	ldr	r0, [pc, #44]	; (8002730 <_Z16StartDefaultTaskPKv+0x60>)
 8002704:	f7ff faf4 	bl	8001cf0 <_ZN7RoboArm17ShiftZeroInputLinEf>
 8002708:	4603      	mov	r3, r0
 800270a:	4618      	mov	r0, r3
 800270c:	f7fe fd00 	bl	8001110 <__aeabi_f2uiz>
 8002710:	4603      	mov	r3, r0
 8002712:	817b      	strh	r3, [r7, #10]
			arm.Move2MotorsSimu(angle, distance);
 8002714:	897b      	ldrh	r3, [r7, #10]
 8002716:	4618      	mov	r0, r3
 8002718:	f7fe fadc 	bl	8000cd4 <__aeabi_ui2f>
 800271c:	4603      	mov	r3, r0
 800271e:	461a      	mov	r2, r3
 8002720:	68f9      	ldr	r1, [r7, #12]
 8002722:	4803      	ldr	r0, [pc, #12]	; (8002730 <_Z16StartDefaultTaskPKv+0x60>)
 8002724:	f7fe ffdc 	bl	80016e0 <_ZN7RoboArm15Move2MotorsSimuEff>
//			correctPosFlag = false;
//			arm.correctPosition();
//
//		}

		osDelay(1);
 8002728:	2001      	movs	r0, #1
 800272a:	f003 ff27 	bl	800657c <osDelay>
	}
 800272e:	e7d7      	b.n	80026e0 <_Z16StartDefaultTaskPKv+0x10>
 8002730:	20000694 	.word	0x20000694
 8002734:	2000066c 	.word	0x2000066c
 8002738:	20000674 	.word	0x20000674

0800273c <_Z14StartAMT22DataPKv>:
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartAMT22Data */
void StartAMT22Data(void const * argument)
{
 800273c:	b580      	push	{r7, lr}
 800273e:	b082      	sub	sp, #8
 8002740:	af00      	add	r7, sp, #0
 8002742:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartAMT22Data */

	/* Infinite loop */
	for (;;) {

		osDelay(50);
 8002744:	2032      	movs	r0, #50	; 0x32
 8002746:	f003 ff19 	bl	800657c <osDelay>
 800274a:	e7fb      	b.n	8002744 <_Z14StartAMT22DataPKv+0x8>

0800274c <_Z13StartUARTDataPKv>:
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartUARTData */
void StartUARTData(void const * argument)
{
 800274c:	b580      	push	{r7, lr}
 800274e:	b08a      	sub	sp, #40	; 0x28
 8002750:	af00      	add	r7, sp, #0
 8002752:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartUARTData */
	HAL_UART_Receive_IT(&huart1, rx_buffer, sizeof(rx_buffer));
 8002754:	220c      	movs	r2, #12
 8002756:	4965      	ldr	r1, [pc, #404]	; (80028ec <_Z13StartUARTDataPKv+0x1a0>)
 8002758:	4865      	ldr	r0, [pc, #404]	; (80028f0 <_Z13StartUARTDataPKv+0x1a4>)
 800275a:	f003 f8ff 	bl	800595c <HAL_UART_Receive_IT>
	uint32_t posnowT_1, posnowT_2;
//	float angleT = 0;
//	uint32_t linearDist = 0;
//	flagReadEnc = 1;
//	uint32_t distPmm = 0;
	arm.setPrintState(true);
 800275e:	2101      	movs	r1, #1
 8002760:	4864      	ldr	r0, [pc, #400]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 8002762:	f7ff f9ab 	bl	8001abc <_ZN7RoboArm13setPrintStateEb>

	/* Infinite loop */
	for (;;) {

		if (arm.getPrintState() && sendDataFlag) {
 8002766:	4863      	ldr	r0, [pc, #396]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 8002768:	f7ff f9c0 	bl	8001aec <_ZN7RoboArm13getPrintStateEv>
 800276c:	4603      	mov	r3, r0
 800276e:	2b00      	cmp	r3, #0
 8002770:	d005      	beq.n	800277e <_Z13StartUARTDataPKv+0x32>
 8002772:	4b61      	ldr	r3, [pc, #388]	; (80028f8 <_Z13StartUARTDataPKv+0x1ac>)
 8002774:	781b      	ldrb	r3, [r3, #0]
 8002776:	2b00      	cmp	r3, #0
 8002778:	d001      	beq.n	800277e <_Z13StartUARTDataPKv+0x32>
 800277a:	2301      	movs	r3, #1
 800277c:	e000      	b.n	8002780 <_Z13StartUARTDataPKv+0x34>
 800277e:	2300      	movs	r3, #0
 8002780:	2b00      	cmp	r3, #0
 8002782:	d078      	beq.n	8002876 <_Z13StartUARTDataPKv+0x12a>
			sendDataFlag = false;
 8002784:	4b5c      	ldr	r3, [pc, #368]	; (80028f8 <_Z13StartUARTDataPKv+0x1ac>)
 8002786:	2200      	movs	r2, #0
 8002788:	701a      	strb	r2, [r3, #0]

			int attempts = 0;
 800278a:	2300      	movs	r3, #0
 800278c:	61fb      	str	r3, [r7, #28]

			posnowT_1 = arm.GetPosEncoders(1);
 800278e:	2101      	movs	r1, #1
 8002790:	4858      	ldr	r0, [pc, #352]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 8002792:	f7ff f9f2 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 8002796:	6278      	str	r0, [r7, #36]	; 0x24
//			//if the position returned was 0xFFFF we know that there was an error calculating the checksum
			//make 3 attempts for position. we will pre-increment attempts because we'll use the number later and want an accurate count
			while (posnowT_1 == 0xFFFF && ++attempts < 3)
 8002798:	e004      	b.n	80027a4 <_Z13StartUARTDataPKv+0x58>
				posnowT_1 = arm.GetPosEncoders(1); //try again
 800279a:	2101      	movs	r1, #1
 800279c:	4855      	ldr	r0, [pc, #340]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 800279e:	f7ff f9ec 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 80027a2:	6278      	str	r0, [r7, #36]	; 0x24
			while (posnowT_1 == 0xFFFF && ++attempts < 3)
 80027a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80027aa:	4293      	cmp	r3, r2
 80027ac:	d107      	bne.n	80027be <_Z13StartUARTDataPKv+0x72>
 80027ae:	69fb      	ldr	r3, [r7, #28]
 80027b0:	3301      	adds	r3, #1
 80027b2:	61fb      	str	r3, [r7, #28]
 80027b4:	69fb      	ldr	r3, [r7, #28]
 80027b6:	2b02      	cmp	r3, #2
 80027b8:	dc01      	bgt.n	80027be <_Z13StartUARTDataPKv+0x72>
 80027ba:	2301      	movs	r3, #1
 80027bc:	e000      	b.n	80027c0 <_Z13StartUARTDataPKv+0x74>
 80027be:	2300      	movs	r3, #0
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	d1ea      	bne.n	800279a <_Z13StartUARTDataPKv+0x4e>

//			float ang = posnowT_1*360/16384;
			float ang_actual = arm.GetAngleEncoders(posnowT_1);
 80027c4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80027c6:	484b      	ldr	r0, [pc, #300]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 80027c8:	f7ff f9c4 	bl	8001b54 <_ZN7RoboArm16GetAngleEncodersEm>
 80027cc:	61b8      	str	r0, [r7, #24]
			float ang = arm.ShiftZeroOutputAng(ang_actual);
 80027ce:	69b9      	ldr	r1, [r7, #24]
 80027d0:	4848      	ldr	r0, [pc, #288]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 80027d2:	f7ff fab1 	bl	8001d38 <_ZN7RoboArm18ShiftZeroOutputAngEf>
 80027d6:	6178      	str	r0, [r7, #20]

			attempts = 0;
 80027d8:	2300      	movs	r3, #0
 80027da:	61fb      	str	r3, [r7, #28]
//			un_send.params.ang = angleT;

			posnowT_2 = arm.GetPosEncoders(2);
 80027dc:	2102      	movs	r1, #2
 80027de:	4845      	ldr	r0, [pc, #276]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 80027e0:	f7ff f9cb 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 80027e4:	6238      	str	r0, [r7, #32]
			while (posnowT_2 == 0xFFFF && ++attempts < 3)
 80027e6:	e004      	b.n	80027f2 <_Z13StartUARTDataPKv+0xa6>
				posnowT_2 = arm.GetPosEncoders(2); //try again
 80027e8:	2102      	movs	r1, #2
 80027ea:	4842      	ldr	r0, [pc, #264]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 80027ec:	f7ff f9c5 	bl	8001b7a <_ZN7RoboArm14GetPosEncodersEh>
 80027f0:	6238      	str	r0, [r7, #32]
			while (posnowT_2 == 0xFFFF && ++attempts < 3)
 80027f2:	6a3b      	ldr	r3, [r7, #32]
 80027f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80027f8:	4293      	cmp	r3, r2
 80027fa:	d107      	bne.n	800280c <_Z13StartUARTDataPKv+0xc0>
 80027fc:	69fb      	ldr	r3, [r7, #28]
 80027fe:	3301      	adds	r3, #1
 8002800:	61fb      	str	r3, [r7, #28]
 8002802:	69fb      	ldr	r3, [r7, #28]
 8002804:	2b02      	cmp	r3, #2
 8002806:	dc01      	bgt.n	800280c <_Z13StartUARTDataPKv+0xc0>
 8002808:	2301      	movs	r3, #1
 800280a:	e000      	b.n	800280e <_Z13StartUARTDataPKv+0xc2>
 800280c:	2300      	movs	r3, #0
 800280e:	2b00      	cmp	r3, #0
 8002810:	d1ea      	bne.n	80027e8 <_Z13StartUARTDataPKv+0x9c>

			float ang_pos = arm.GetAngleEncoders(posnowT_2);
 8002812:	6a39      	ldr	r1, [r7, #32]
 8002814:	4837      	ldr	r0, [pc, #220]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 8002816:	f7ff f99d 	bl	8001b54 <_ZN7RoboArm16GetAngleEncodersEm>
 800281a:	6138      	str	r0, [r7, #16]
			float pos_actual = ang_pos * 250.0 / 360.0;
 800281c:	6938      	ldr	r0, [r7, #16]
 800281e:	f7fd fe03 	bl	8000428 <__aeabi_f2d>
 8002822:	f04f 0200 	mov.w	r2, #0
 8002826:	4b35      	ldr	r3, [pc, #212]	; (80028fc <_Z13StartUARTDataPKv+0x1b0>)
 8002828:	f7fd fe56 	bl	80004d8 <__aeabi_dmul>
 800282c:	4602      	mov	r2, r0
 800282e:	460b      	mov	r3, r1
 8002830:	4610      	mov	r0, r2
 8002832:	4619      	mov	r1, r3
 8002834:	f04f 0200 	mov.w	r2, #0
 8002838:	4b31      	ldr	r3, [pc, #196]	; (8002900 <_Z13StartUARTDataPKv+0x1b4>)
 800283a:	f7fd ff77 	bl	800072c <__aeabi_ddiv>
 800283e:	4602      	mov	r2, r0
 8002840:	460b      	mov	r3, r1
 8002842:	4610      	mov	r0, r2
 8002844:	4619      	mov	r1, r3
 8002846:	f7fe f93f 	bl	8000ac8 <__aeabi_d2f>
 800284a:	4603      	mov	r3, r0
 800284c:	60fb      	str	r3, [r7, #12]
			float pos = arm.ShiftZeroOutputLin(pos_actual);
 800284e:	68f9      	ldr	r1, [r7, #12]
 8002850:	4828      	ldr	r0, [pc, #160]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 8002852:	f7ff fa95 	bl	8001d80 <_ZN7RoboArm18ShiftZeroOutputLinEf>
 8002856:	60b8      	str	r0, [r7, #8]
//					* (6.45 / 360);
//			uint32_t mils = distPsteps / arm.linearStepsMil;
//
//			un_send.params.lin = mils;
//			un_send.params.hold = 0;
			un_send.params.lin = pos;
 8002858:	4a2a      	ldr	r2, [pc, #168]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 800285a:	68bb      	ldr	r3, [r7, #8]
 800285c:	6013      	str	r3, [r2, #0]
			un_send.params.ang = ang;
 800285e:	4a29      	ldr	r2, [pc, #164]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 8002860:	697b      	ldr	r3, [r7, #20]
 8002862:	6053      	str	r3, [r2, #4]
			un_send.params.hold = 0;
 8002864:	4b27      	ldr	r3, [pc, #156]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 8002866:	2200      	movs	r2, #0
 8002868:	609a      	str	r2, [r3, #8]
//					0x09,0x0a,0x0b,0x0c};
//
//			size_t s = sizeof(un_send);

//			sprintf(str, "%.2f:", un_send.params.ang);//, send_params.lin, 100);
			HAL_UART_Transmit(&huart1, un_send.bytes, sizeof(un_send.bytes),
 800286a:	230c      	movs	r3, #12
 800286c:	220c      	movs	r2, #12
 800286e:	4925      	ldr	r1, [pc, #148]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 8002870:	481f      	ldr	r0, [pc, #124]	; (80028f0 <_Z13StartUARTDataPKv+0x1a4>)
 8002872:	f002 fff0 	bl	8005856 <HAL_UART_Transmit>
//
//			HAL_UART_Transmit(&huart1, (uint8_t*) str, strlen(str),
//					HAL_MAX_DELAY);
		}

		if (stopBeforeReboot) {
 8002876:	4b24      	ldr	r3, [pc, #144]	; (8002908 <_Z13StartUARTDataPKv+0x1bc>)
 8002878:	781b      	ldrb	r3, [r3, #0]
 800287a:	2b00      	cmp	r3, #0
 800287c:	d016      	beq.n	80028ac <_Z13StartUARTDataPKv+0x160>
			stopBeforeReboot = false;
 800287e:	4b22      	ldr	r3, [pc, #136]	; (8002908 <_Z13StartUARTDataPKv+0x1bc>)
 8002880:	2200      	movs	r2, #0
 8002882:	701a      	strb	r2, [r3, #0]
			arm.EmergencyStop();
 8002884:	481b      	ldr	r0, [pc, #108]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 8002886:	f7fe fe7b 	bl	8001580 <_ZN7RoboArm13EmergencyStopEv>
			un_send.params.lin = 0;
 800288a:	4b1e      	ldr	r3, [pc, #120]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 800288c:	f04f 0200 	mov.w	r2, #0
 8002890:	601a      	str	r2, [r3, #0]
			un_send.params.ang = 0;
 8002892:	4b1c      	ldr	r3, [pc, #112]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 8002894:	f04f 0200 	mov.w	r2, #0
 8002898:	605a      	str	r2, [r3, #4]
			un_send.params.hold = 10;
 800289a:	4b1a      	ldr	r3, [pc, #104]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 800289c:	220a      	movs	r2, #10
 800289e:	609a      	str	r2, [r3, #8]
			HAL_UART_Transmit(&huart1, un_send.bytes, sizeof(un_send.bytes),
 80028a0:	230c      	movs	r3, #12
 80028a2:	220c      	movs	r2, #12
 80028a4:	4917      	ldr	r1, [pc, #92]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 80028a6:	4812      	ldr	r0, [pc, #72]	; (80028f0 <_Z13StartUARTDataPKv+0x1a4>)
 80028a8:	f002 ffd5 	bl	8005856 <HAL_UART_Transmit>
					12);
		}

		if (setZeroFlag) {
 80028ac:	4b17      	ldr	r3, [pc, #92]	; (800290c <_Z13StartUARTDataPKv+0x1c0>)
 80028ae:	781b      	ldrb	r3, [r3, #0]
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	d016      	beq.n	80028e2 <_Z13StartUARTDataPKv+0x196>
			setZeroFlag = false;
 80028b4:	4b15      	ldr	r3, [pc, #84]	; (800290c <_Z13StartUARTDataPKv+0x1c0>)
 80028b6:	2200      	movs	r2, #0
 80028b8:	701a      	strb	r2, [r3, #0]
//			arm.SetZeroEncoders();
			arm.SetSoftwareZero();
 80028ba:	480e      	ldr	r0, [pc, #56]	; (80028f4 <_Z13StartUARTDataPKv+0x1a8>)
 80028bc:	f7ff f994 	bl	8001be8 <_ZN7RoboArm15SetSoftwareZeroEv>
			un_send.params.lin = 0;
 80028c0:	4b10      	ldr	r3, [pc, #64]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 80028c2:	f04f 0200 	mov.w	r2, #0
 80028c6:	601a      	str	r2, [r3, #0]
			un_send.params.ang = 0;
 80028c8:	4b0e      	ldr	r3, [pc, #56]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 80028ca:	f04f 0200 	mov.w	r2, #0
 80028ce:	605a      	str	r2, [r3, #4]
			un_send.params.hold = 10;
 80028d0:	4b0c      	ldr	r3, [pc, #48]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 80028d2:	220a      	movs	r2, #10
 80028d4:	609a      	str	r2, [r3, #8]
			HAL_UART_Transmit(&huart1, un_send.bytes, sizeof(un_send.bytes),
 80028d6:	230c      	movs	r3, #12
 80028d8:	220c      	movs	r2, #12
 80028da:	490a      	ldr	r1, [pc, #40]	; (8002904 <_Z13StartUARTDataPKv+0x1b8>)
 80028dc:	4804      	ldr	r0, [pc, #16]	; (80028f0 <_Z13StartUARTDataPKv+0x1a4>)
 80028de:	f002 ffba 	bl	8005856 <HAL_UART_Transmit>
					12);
		}

		osDelay(500);
 80028e2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80028e6:	f003 fe49 	bl	800657c <osDelay>
	}
 80028ea:	e73c      	b.n	8002766 <_Z13StartUARTDataPKv+0x1a>
 80028ec:	20000660 	.word	0x20000660
 80028f0:	200005c4 	.word	0x200005c4
 80028f4:	20000694 	.word	0x20000694
 80028f8:	2000066d 	.word	0x2000066d
 80028fc:	406f4000 	.word	0x406f4000
 8002900:	40768000 	.word	0x40768000
 8002904:	20000680 	.word	0x20000680
 8002908:	2000066e 	.word	0x2000066e
 800290c:	2000066f 	.word	0x2000066f

08002910 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002910:	b580      	push	{r7, lr}
 8002912:	b082      	sub	sp, #8
 8002914:	af00      	add	r7, sp, #0
 8002916:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

	if (htim->Instance == TIM1)/*Проверяем от какого таймера пришёл CallBack тут надо проверить точность*/
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	4a2a      	ldr	r2, [pc, #168]	; (80029c8 <HAL_TIM_PeriodElapsedCallback+0xb8>)
 800291e:	4293      	cmp	r3, r2
 8002920:	d121      	bne.n	8002966 <HAL_TIM_PeriodElapsedCallback+0x56>
	{
		cntImpulse1++;
 8002922:	4b2a      	ldr	r3, [pc, #168]	; (80029cc <HAL_TIM_PeriodElapsedCallback+0xbc>)
 8002924:	681b      	ldr	r3, [r3, #0]
 8002926:	3301      	adds	r3, #1
 8002928:	4a28      	ldr	r2, [pc, #160]	; (80029cc <HAL_TIM_PeriodElapsedCallback+0xbc>)
 800292a:	6013      	str	r3, [r2, #0]
		if (cntImpulse1 >= arm.anglePsteps) {
 800292c:	4b28      	ldr	r3, [pc, #160]	; (80029d0 <HAL_TIM_PeriodElapsedCallback+0xc0>)
 800292e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8002930:	4b26      	ldr	r3, [pc, #152]	; (80029cc <HAL_TIM_PeriodElapsedCallback+0xbc>)
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	429a      	cmp	r2, r3
 8002936:	d83c      	bhi.n	80029b2 <HAL_TIM_PeriodElapsedCallback+0xa2>

			HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 8002938:	2100      	movs	r1, #0
 800293a:	4826      	ldr	r0, [pc, #152]	; (80029d4 <HAL_TIM_PeriodElapsedCallback+0xc4>)
 800293c:	f002 f9c2 	bl	8004cc4 <HAL_TIM_PWM_Stop>
			HAL_TIM_Base_Stop_IT(&htim1);
 8002940:	4824      	ldr	r0, [pc, #144]	; (80029d4 <HAL_TIM_PeriodElapsedCallback+0xc4>)
 8002942:	f002 f89f 	bl	8004a84 <HAL_TIM_Base_Stop_IT>
			arm.SetEnable(1, false);
 8002946:	2200      	movs	r2, #0
 8002948:	2101      	movs	r1, #1
 800294a:	4821      	ldr	r0, [pc, #132]	; (80029d0 <HAL_TIM_PeriodElapsedCallback+0xc0>)
 800294c:	f7ff fa84 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>
			cntImpulse1 = 0;
 8002950:	4b1e      	ldr	r3, [pc, #120]	; (80029cc <HAL_TIM_PeriodElapsedCallback+0xbc>)
 8002952:	2200      	movs	r2, #0
 8002954:	601a      	str	r2, [r3, #0]
			arm.stateMoveM1 = false;
 8002956:	4b1e      	ldr	r3, [pc, #120]	; (80029d0 <HAL_TIM_PeriodElapsedCallback+0xc0>)
 8002958:	2200      	movs	r2, #0
 800295a:	f883 20ee 	strb.w	r2, [r3, #238]	; 0xee
			timerFT1 = true;
 800295e:	4b1e      	ldr	r3, [pc, #120]	; (80029d8 <HAL_TIM_PeriodElapsedCallback+0xc8>)
 8002960:	2201      	movs	r2, #1
 8002962:	701a      	strb	r2, [r3, #0]
 8002964:	e025      	b.n	80029b2 <HAL_TIM_PeriodElapsedCallback+0xa2>
		}

	} else if (htim->Instance == TIM2) {
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800296e:	d120      	bne.n	80029b2 <HAL_TIM_PeriodElapsedCallback+0xa2>

		cntImpulse2++;
 8002970:	4b1a      	ldr	r3, [pc, #104]	; (80029dc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	3301      	adds	r3, #1
 8002976:	4a19      	ldr	r2, [pc, #100]	; (80029dc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8002978:	6013      	str	r3, [r2, #0]
		if (cntImpulse2 >= arm.distPsteps) {
 800297a:	4b15      	ldr	r3, [pc, #84]	; (80029d0 <HAL_TIM_PeriodElapsedCallback+0xc0>)
 800297c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800297e:	4b17      	ldr	r3, [pc, #92]	; (80029dc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	429a      	cmp	r2, r3
 8002984:	d815      	bhi.n	80029b2 <HAL_TIM_PeriodElapsedCallback+0xa2>
			HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_2);
 8002986:	2104      	movs	r1, #4
 8002988:	4815      	ldr	r0, [pc, #84]	; (80029e0 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 800298a:	f002 f99b 	bl	8004cc4 <HAL_TIM_PWM_Stop>
			HAL_TIM_Base_Stop_IT(&htim2);
 800298e:	4814      	ldr	r0, [pc, #80]	; (80029e0 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8002990:	f002 f878 	bl	8004a84 <HAL_TIM_Base_Stop_IT>
			arm.SetEnable(2, false);
 8002994:	2200      	movs	r2, #0
 8002996:	2102      	movs	r1, #2
 8002998:	480d      	ldr	r0, [pc, #52]	; (80029d0 <HAL_TIM_PeriodElapsedCallback+0xc0>)
 800299a:	f7ff fa5d 	bl	8001e58 <_ZN7RoboArm9SetEnableEtb>
			cntImpulse2 = 0;
 800299e:	4b0f      	ldr	r3, [pc, #60]	; (80029dc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 80029a0:	2200      	movs	r2, #0
 80029a2:	601a      	str	r2, [r3, #0]
			arm.stateMoveM2 = false;
 80029a4:	4b0a      	ldr	r3, [pc, #40]	; (80029d0 <HAL_TIM_PeriodElapsedCallback+0xc0>)
 80029a6:	2200      	movs	r2, #0
 80029a8:	f883 20ef 	strb.w	r2, [r3, #239]	; 0xef
			timerFT2 = true;
 80029ac:	4b0d      	ldr	r3, [pc, #52]	; (80029e4 <HAL_TIM_PeriodElapsedCallback+0xd4>)
 80029ae:	2201      	movs	r2, #1
 80029b0:	701a      	strb	r2, [r3, #0]
		}
	}
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM4) {
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	4a0c      	ldr	r2, [pc, #48]	; (80029e8 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 80029b8:	4293      	cmp	r3, r2
 80029ba:	d101      	bne.n	80029c0 <HAL_TIM_PeriodElapsedCallback+0xb0>
    HAL_IncTick();
 80029bc:	f000 fc18 	bl	80031f0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80029c0:	bf00      	nop
 80029c2:	3708      	adds	r7, #8
 80029c4:	46bd      	mov	sp, r7
 80029c6:	bd80      	pop	{r7, pc}
 80029c8:	40012c00 	.word	0x40012c00
 80029cc:	2000068c 	.word	0x2000068c
 80029d0:	20000694 	.word	0x20000694
 80029d4:	200004ec 	.word	0x200004ec
 80029d8:	20000670 	.word	0x20000670
 80029dc:	20000690 	.word	0x20000690
 80029e0:	20000534 	.word	0x20000534
 80029e4:	20000671 	.word	0x20000671
 80029e8:	40000800 	.word	0x40000800

080029ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80029ec:	b480      	push	{r7}
 80029ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80029f0:	b672      	cpsid	i
}
 80029f2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 80029f4:	e7fe      	b.n	80029f4 <Error_Handler+0x8>
	...

080029f8 <_Z41__static_initialization_and_destruction_0ii>:
	}
  /* USER CODE END Error_Handler_Debug */
}
 80029f8:	b580      	push	{r7, lr}
 80029fa:	b082      	sub	sp, #8
 80029fc:	af00      	add	r7, sp, #0
 80029fe:	6078      	str	r0, [r7, #4]
 8002a00:	6039      	str	r1, [r7, #0]
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	2b01      	cmp	r3, #1
 8002a06:	d109      	bne.n	8002a1c <_Z41__static_initialization_and_destruction_0ii+0x24>
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002a0e:	4293      	cmp	r3, r2
 8002a10:	d104      	bne.n	8002a1c <_Z41__static_initialization_and_destruction_0ii+0x24>
RoboArm arm(0, 124);
 8002a12:	227c      	movs	r2, #124	; 0x7c
 8002a14:	2100      	movs	r1, #0
 8002a16:	4803      	ldr	r0, [pc, #12]	; (8002a24 <_Z41__static_initialization_and_destruction_0ii+0x2c>)
 8002a18:	f7fe fd52 	bl	80014c0 <_ZN7RoboArmC1Ehh>
}
 8002a1c:	bf00      	nop
 8002a1e:	3708      	adds	r7, #8
 8002a20:	46bd      	mov	sp, r7
 8002a22:	bd80      	pop	{r7, pc}
 8002a24:	20000694 	.word	0x20000694

08002a28 <_GLOBAL__sub_I_hspi1>:
 8002a28:	b580      	push	{r7, lr}
 8002a2a:	af00      	add	r7, sp, #0
 8002a2c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002a30:	2001      	movs	r0, #1
 8002a32:	f7ff ffe1 	bl	80029f8 <_Z41__static_initialization_and_destruction_0ii>
 8002a36:	bd80      	pop	{r7, pc}

08002a38 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002a38:	b580      	push	{r7, lr}
 8002a3a:	b084      	sub	sp, #16
 8002a3c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8002a3e:	4b1c      	ldr	r3, [pc, #112]	; (8002ab0 <HAL_MspInit+0x78>)
 8002a40:	699b      	ldr	r3, [r3, #24]
 8002a42:	4a1b      	ldr	r2, [pc, #108]	; (8002ab0 <HAL_MspInit+0x78>)
 8002a44:	f043 0301 	orr.w	r3, r3, #1
 8002a48:	6193      	str	r3, [r2, #24]
 8002a4a:	4b19      	ldr	r3, [pc, #100]	; (8002ab0 <HAL_MspInit+0x78>)
 8002a4c:	699b      	ldr	r3, [r3, #24]
 8002a4e:	f003 0301 	and.w	r3, r3, #1
 8002a52:	60bb      	str	r3, [r7, #8]
 8002a54:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002a56:	4b16      	ldr	r3, [pc, #88]	; (8002ab0 <HAL_MspInit+0x78>)
 8002a58:	69db      	ldr	r3, [r3, #28]
 8002a5a:	4a15      	ldr	r2, [pc, #84]	; (8002ab0 <HAL_MspInit+0x78>)
 8002a5c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002a60:	61d3      	str	r3, [r2, #28]
 8002a62:	4b13      	ldr	r3, [pc, #76]	; (8002ab0 <HAL_MspInit+0x78>)
 8002a64:	69db      	ldr	r3, [r3, #28]
 8002a66:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002a6a:	607b      	str	r3, [r7, #4]
 8002a6c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002a6e:	2200      	movs	r2, #0
 8002a70:	210f      	movs	r1, #15
 8002a72:	f06f 0001 	mvn.w	r0, #1
 8002a76:	f000 fc8c 	bl	8003392 <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 5, 0);
 8002a7a:	2200      	movs	r2, #0
 8002a7c:	2105      	movs	r1, #5
 8002a7e:	2005      	movs	r0, #5
 8002a80:	f000 fc87 	bl	8003392 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8002a84:	2005      	movs	r0, #5
 8002a86:	f000 fca0 	bl	80033ca <HAL_NVIC_EnableIRQ>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8002a8a:	4b0a      	ldr	r3, [pc, #40]	; (8002ab4 <HAL_MspInit+0x7c>)
 8002a8c:	685b      	ldr	r3, [r3, #4]
 8002a8e:	60fb      	str	r3, [r7, #12]
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8002a96:	60fb      	str	r3, [r7, #12]
 8002a98:	68fb      	ldr	r3, [r7, #12]
 8002a9a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002a9e:	60fb      	str	r3, [r7, #12]
 8002aa0:	4a04      	ldr	r2, [pc, #16]	; (8002ab4 <HAL_MspInit+0x7c>)
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002aa6:	bf00      	nop
 8002aa8:	3710      	adds	r7, #16
 8002aaa:	46bd      	mov	sp, r7
 8002aac:	bd80      	pop	{r7, pc}
 8002aae:	bf00      	nop
 8002ab0:	40021000 	.word	0x40021000
 8002ab4:	40010000 	.word	0x40010000

08002ab8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002ab8:	b580      	push	{r7, lr}
 8002aba:	b08a      	sub	sp, #40	; 0x28
 8002abc:	af00      	add	r7, sp, #0
 8002abe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002ac0:	f107 0314 	add.w	r3, r7, #20
 8002ac4:	2200      	movs	r2, #0
 8002ac6:	601a      	str	r2, [r3, #0]
 8002ac8:	605a      	str	r2, [r3, #4]
 8002aca:	609a      	str	r2, [r3, #8]
 8002acc:	60da      	str	r2, [r3, #12]
  if(hspi->Instance==SPI1)
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	4a26      	ldr	r2, [pc, #152]	; (8002b6c <HAL_SPI_MspInit+0xb4>)
 8002ad4:	4293      	cmp	r3, r2
 8002ad6:	d145      	bne.n	8002b64 <HAL_SPI_MspInit+0xac>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002ad8:	4b25      	ldr	r3, [pc, #148]	; (8002b70 <HAL_SPI_MspInit+0xb8>)
 8002ada:	699b      	ldr	r3, [r3, #24]
 8002adc:	4a24      	ldr	r2, [pc, #144]	; (8002b70 <HAL_SPI_MspInit+0xb8>)
 8002ade:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002ae2:	6193      	str	r3, [r2, #24]
 8002ae4:	4b22      	ldr	r3, [pc, #136]	; (8002b70 <HAL_SPI_MspInit+0xb8>)
 8002ae6:	699b      	ldr	r3, [r3, #24]
 8002ae8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002aec:	613b      	str	r3, [r7, #16]
 8002aee:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002af0:	4b1f      	ldr	r3, [pc, #124]	; (8002b70 <HAL_SPI_MspInit+0xb8>)
 8002af2:	699b      	ldr	r3, [r3, #24]
 8002af4:	4a1e      	ldr	r2, [pc, #120]	; (8002b70 <HAL_SPI_MspInit+0xb8>)
 8002af6:	f043 0308 	orr.w	r3, r3, #8
 8002afa:	6193      	str	r3, [r2, #24]
 8002afc:	4b1c      	ldr	r3, [pc, #112]	; (8002b70 <HAL_SPI_MspInit+0xb8>)
 8002afe:	699b      	ldr	r3, [r3, #24]
 8002b00:	f003 0308 	and.w	r3, r3, #8
 8002b04:	60fb      	str	r3, [r7, #12]
 8002b06:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PB3     ------> SPI1_SCK
    PB4     ------> SPI1_MISO
    PB5     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_5;
 8002b08:	2328      	movs	r3, #40	; 0x28
 8002b0a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b0c:	2302      	movs	r3, #2
 8002b0e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b10:	2303      	movs	r3, #3
 8002b12:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b14:	f107 0314 	add.w	r3, r7, #20
 8002b18:	4619      	mov	r1, r3
 8002b1a:	4816      	ldr	r0, [pc, #88]	; (8002b74 <HAL_SPI_MspInit+0xbc>)
 8002b1c:	f000 fd16 	bl	800354c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8002b20:	2310      	movs	r3, #16
 8002b22:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002b24:	2300      	movs	r3, #0
 8002b26:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b28:	2300      	movs	r3, #0
 8002b2a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b2c:	f107 0314 	add.w	r3, r7, #20
 8002b30:	4619      	mov	r1, r3
 8002b32:	4810      	ldr	r0, [pc, #64]	; (8002b74 <HAL_SPI_MspInit+0xbc>)
 8002b34:	f000 fd0a 	bl	800354c <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_SPI1_ENABLE();
 8002b38:	4b0f      	ldr	r3, [pc, #60]	; (8002b78 <HAL_SPI_MspInit+0xc0>)
 8002b3a:	685b      	ldr	r3, [r3, #4]
 8002b3c:	627b      	str	r3, [r7, #36]	; 0x24
 8002b3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b40:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8002b44:	627b      	str	r3, [r7, #36]	; 0x24
 8002b46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b48:	f043 0301 	orr.w	r3, r3, #1
 8002b4c:	627b      	str	r3, [r7, #36]	; 0x24
 8002b4e:	4a0a      	ldr	r2, [pc, #40]	; (8002b78 <HAL_SPI_MspInit+0xc0>)
 8002b50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b52:	6053      	str	r3, [r2, #4]

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 5, 0);
 8002b54:	2200      	movs	r2, #0
 8002b56:	2105      	movs	r1, #5
 8002b58:	2023      	movs	r0, #35	; 0x23
 8002b5a:	f000 fc1a 	bl	8003392 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002b5e:	2023      	movs	r0, #35	; 0x23
 8002b60:	f000 fc33 	bl	80033ca <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8002b64:	bf00      	nop
 8002b66:	3728      	adds	r7, #40	; 0x28
 8002b68:	46bd      	mov	sp, r7
 8002b6a:	bd80      	pop	{r7, pc}
 8002b6c:	40013000 	.word	0x40013000
 8002b70:	40021000 	.word	0x40021000
 8002b74:	40010c00 	.word	0x40010c00
 8002b78:	40010000 	.word	0x40010000

08002b7c <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002b7c:	b580      	push	{r7, lr}
 8002b7e:	b086      	sub	sp, #24
 8002b80:	af00      	add	r7, sp, #0
 8002b82:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	4a27      	ldr	r2, [pc, #156]	; (8002c28 <HAL_TIM_PWM_MspInit+0xac>)
 8002b8a:	4293      	cmp	r3, r2
 8002b8c:	d114      	bne.n	8002bb8 <HAL_TIM_PWM_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002b8e:	4b27      	ldr	r3, [pc, #156]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002b90:	699b      	ldr	r3, [r3, #24]
 8002b92:	4a26      	ldr	r2, [pc, #152]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002b94:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002b98:	6193      	str	r3, [r2, #24]
 8002b9a:	4b24      	ldr	r3, [pc, #144]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002b9c:	699b      	ldr	r3, [r3, #24]
 8002b9e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002ba2:	617b      	str	r3, [r7, #20]
 8002ba4:	697b      	ldr	r3, [r7, #20]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_IRQn, 5, 0);
 8002ba6:	2200      	movs	r2, #0
 8002ba8:	2105      	movs	r1, #5
 8002baa:	2019      	movs	r0, #25
 8002bac:	f000 fbf1 	bl	8003392 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 8002bb0:	2019      	movs	r0, #25
 8002bb2:	f000 fc0a 	bl	80033ca <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002bb6:	e032      	b.n	8002c1e <HAL_TIM_PWM_MspInit+0xa2>
  else if(htim_pwm->Instance==TIM2)
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bc0:	d114      	bne.n	8002bec <HAL_TIM_PWM_MspInit+0x70>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002bc2:	4b1a      	ldr	r3, [pc, #104]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002bc4:	69db      	ldr	r3, [r3, #28]
 8002bc6:	4a19      	ldr	r2, [pc, #100]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002bc8:	f043 0301 	orr.w	r3, r3, #1
 8002bcc:	61d3      	str	r3, [r2, #28]
 8002bce:	4b17      	ldr	r3, [pc, #92]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002bd0:	69db      	ldr	r3, [r3, #28]
 8002bd2:	f003 0301 	and.w	r3, r3, #1
 8002bd6:	613b      	str	r3, [r7, #16]
 8002bd8:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002bda:	2200      	movs	r2, #0
 8002bdc:	2105      	movs	r1, #5
 8002bde:	201c      	movs	r0, #28
 8002be0:	f000 fbd7 	bl	8003392 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002be4:	201c      	movs	r0, #28
 8002be6:	f000 fbf0 	bl	80033ca <HAL_NVIC_EnableIRQ>
}
 8002bea:	e018      	b.n	8002c1e <HAL_TIM_PWM_MspInit+0xa2>
  else if(htim_pwm->Instance==TIM3)
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	4a0f      	ldr	r2, [pc, #60]	; (8002c30 <HAL_TIM_PWM_MspInit+0xb4>)
 8002bf2:	4293      	cmp	r3, r2
 8002bf4:	d113      	bne.n	8002c1e <HAL_TIM_PWM_MspInit+0xa2>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002bf6:	4b0d      	ldr	r3, [pc, #52]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002bf8:	69db      	ldr	r3, [r3, #28]
 8002bfa:	4a0c      	ldr	r2, [pc, #48]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002bfc:	f043 0302 	orr.w	r3, r3, #2
 8002c00:	61d3      	str	r3, [r2, #28]
 8002c02:	4b0a      	ldr	r3, [pc, #40]	; (8002c2c <HAL_TIM_PWM_MspInit+0xb0>)
 8002c04:	69db      	ldr	r3, [r3, #28]
 8002c06:	f003 0302 	and.w	r3, r3, #2
 8002c0a:	60fb      	str	r3, [r7, #12]
 8002c0c:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 5, 0);
 8002c0e:	2200      	movs	r2, #0
 8002c10:	2105      	movs	r1, #5
 8002c12:	201d      	movs	r0, #29
 8002c14:	f000 fbbd 	bl	8003392 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002c18:	201d      	movs	r0, #29
 8002c1a:	f000 fbd6 	bl	80033ca <HAL_NVIC_EnableIRQ>
}
 8002c1e:	bf00      	nop
 8002c20:	3718      	adds	r7, #24
 8002c22:	46bd      	mov	sp, r7
 8002c24:	bd80      	pop	{r7, pc}
 8002c26:	bf00      	nop
 8002c28:	40012c00 	.word	0x40012c00
 8002c2c:	40021000 	.word	0x40021000
 8002c30:	40000400 	.word	0x40000400

08002c34 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b08a      	sub	sp, #40	; 0x28
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002c3c:	f107 0318 	add.w	r3, r7, #24
 8002c40:	2200      	movs	r2, #0
 8002c42:	601a      	str	r2, [r3, #0]
 8002c44:	605a      	str	r2, [r3, #4]
 8002c46:	609a      	str	r2, [r3, #8]
 8002c48:	60da      	str	r2, [r3, #12]
  if(htim->Instance==TIM1)
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	4a2e      	ldr	r2, [pc, #184]	; (8002d08 <HAL_TIM_MspPostInit+0xd4>)
 8002c50:	4293      	cmp	r3, r2
 8002c52:	d119      	bne.n	8002c88 <HAL_TIM_MspPostInit+0x54>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002c54:	4b2d      	ldr	r3, [pc, #180]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002c56:	699b      	ldr	r3, [r3, #24]
 8002c58:	4a2c      	ldr	r2, [pc, #176]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002c5a:	f043 0304 	orr.w	r3, r3, #4
 8002c5e:	6193      	str	r3, [r2, #24]
 8002c60:	4b2a      	ldr	r3, [pc, #168]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002c62:	699b      	ldr	r3, [r3, #24]
 8002c64:	f003 0304 	and.w	r3, r3, #4
 8002c68:	617b      	str	r3, [r7, #20]
 8002c6a:	697b      	ldr	r3, [r7, #20]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002c6c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002c70:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c72:	2302      	movs	r3, #2
 8002c74:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c76:	2302      	movs	r3, #2
 8002c78:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c7a:	f107 0318 	add.w	r3, r7, #24
 8002c7e:	4619      	mov	r1, r3
 8002c80:	4823      	ldr	r0, [pc, #140]	; (8002d10 <HAL_TIM_MspPostInit+0xdc>)
 8002c82:	f000 fc63 	bl	800354c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8002c86:	e03a      	b.n	8002cfe <HAL_TIM_MspPostInit+0xca>
  else if(htim->Instance==TIM2)
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c90:	d118      	bne.n	8002cc4 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002c92:	4b1e      	ldr	r3, [pc, #120]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002c94:	699b      	ldr	r3, [r3, #24]
 8002c96:	4a1d      	ldr	r2, [pc, #116]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002c98:	f043 0304 	orr.w	r3, r3, #4
 8002c9c:	6193      	str	r3, [r2, #24]
 8002c9e:	4b1b      	ldr	r3, [pc, #108]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002ca0:	699b      	ldr	r3, [r3, #24]
 8002ca2:	f003 0304 	and.w	r3, r3, #4
 8002ca6:	613b      	str	r3, [r7, #16]
 8002ca8:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002caa:	2302      	movs	r3, #2
 8002cac:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cae:	2302      	movs	r3, #2
 8002cb0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002cb2:	2302      	movs	r3, #2
 8002cb4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002cb6:	f107 0318 	add.w	r3, r7, #24
 8002cba:	4619      	mov	r1, r3
 8002cbc:	4814      	ldr	r0, [pc, #80]	; (8002d10 <HAL_TIM_MspPostInit+0xdc>)
 8002cbe:	f000 fc45 	bl	800354c <HAL_GPIO_Init>
}
 8002cc2:	e01c      	b.n	8002cfe <HAL_TIM_MspPostInit+0xca>
  else if(htim->Instance==TIM3)
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	4a12      	ldr	r2, [pc, #72]	; (8002d14 <HAL_TIM_MspPostInit+0xe0>)
 8002cca:	4293      	cmp	r3, r2
 8002ccc:	d117      	bne.n	8002cfe <HAL_TIM_MspPostInit+0xca>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002cce:	4b0f      	ldr	r3, [pc, #60]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002cd0:	699b      	ldr	r3, [r3, #24]
 8002cd2:	4a0e      	ldr	r2, [pc, #56]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002cd4:	f043 0304 	orr.w	r3, r3, #4
 8002cd8:	6193      	str	r3, [r2, #24]
 8002cda:	4b0c      	ldr	r3, [pc, #48]	; (8002d0c <HAL_TIM_MspPostInit+0xd8>)
 8002cdc:	699b      	ldr	r3, [r3, #24]
 8002cde:	f003 0304 	and.w	r3, r3, #4
 8002ce2:	60fb      	str	r3, [r7, #12]
 8002ce4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8002ce6:	2380      	movs	r3, #128	; 0x80
 8002ce8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cea:	2302      	movs	r3, #2
 8002cec:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002cee:	2302      	movs	r3, #2
 8002cf0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002cf2:	f107 0318 	add.w	r3, r7, #24
 8002cf6:	4619      	mov	r1, r3
 8002cf8:	4805      	ldr	r0, [pc, #20]	; (8002d10 <HAL_TIM_MspPostInit+0xdc>)
 8002cfa:	f000 fc27 	bl	800354c <HAL_GPIO_Init>
}
 8002cfe:	bf00      	nop
 8002d00:	3728      	adds	r7, #40	; 0x28
 8002d02:	46bd      	mov	sp, r7
 8002d04:	bd80      	pop	{r7, pc}
 8002d06:	bf00      	nop
 8002d08:	40012c00 	.word	0x40012c00
 8002d0c:	40021000 	.word	0x40021000
 8002d10:	40010800 	.word	0x40010800
 8002d14:	40000400 	.word	0x40000400

08002d18 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002d18:	b580      	push	{r7, lr}
 8002d1a:	b08a      	sub	sp, #40	; 0x28
 8002d1c:	af00      	add	r7, sp, #0
 8002d1e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d20:	f107 0318 	add.w	r3, r7, #24
 8002d24:	2200      	movs	r2, #0
 8002d26:	601a      	str	r2, [r3, #0]
 8002d28:	605a      	str	r2, [r3, #4]
 8002d2a:	609a      	str	r2, [r3, #8]
 8002d2c:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	4a39      	ldr	r2, [pc, #228]	; (8002e18 <HAL_UART_MspInit+0x100>)
 8002d34:	4293      	cmp	r3, r2
 8002d36:	d13a      	bne.n	8002dae <HAL_UART_MspInit+0x96>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002d38:	4b38      	ldr	r3, [pc, #224]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002d3a:	699b      	ldr	r3, [r3, #24]
 8002d3c:	4a37      	ldr	r2, [pc, #220]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002d3e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002d42:	6193      	str	r3, [r2, #24]
 8002d44:	4b35      	ldr	r3, [pc, #212]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002d46:	699b      	ldr	r3, [r3, #24]
 8002d48:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002d4c:	617b      	str	r3, [r7, #20]
 8002d4e:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d50:	4b32      	ldr	r3, [pc, #200]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002d52:	699b      	ldr	r3, [r3, #24]
 8002d54:	4a31      	ldr	r2, [pc, #196]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002d56:	f043 0304 	orr.w	r3, r3, #4
 8002d5a:	6193      	str	r3, [r2, #24]
 8002d5c:	4b2f      	ldr	r3, [pc, #188]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002d5e:	699b      	ldr	r3, [r3, #24]
 8002d60:	f003 0304 	and.w	r3, r3, #4
 8002d64:	613b      	str	r3, [r7, #16]
 8002d66:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002d68:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002d6c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d6e:	2302      	movs	r3, #2
 8002d70:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d72:	2303      	movs	r3, #3
 8002d74:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d76:	f107 0318 	add.w	r3, r7, #24
 8002d7a:	4619      	mov	r1, r3
 8002d7c:	4828      	ldr	r0, [pc, #160]	; (8002e20 <HAL_UART_MspInit+0x108>)
 8002d7e:	f000 fbe5 	bl	800354c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002d82:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002d86:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002d88:	2300      	movs	r3, #0
 8002d8a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d90:	f107 0318 	add.w	r3, r7, #24
 8002d94:	4619      	mov	r1, r3
 8002d96:	4822      	ldr	r0, [pc, #136]	; (8002e20 <HAL_UART_MspInit+0x108>)
 8002d98:	f000 fbd8 	bl	800354c <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	2105      	movs	r1, #5
 8002da0:	2025      	movs	r0, #37	; 0x25
 8002da2:	f000 faf6 	bl	8003392 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002da6:	2025      	movs	r0, #37	; 0x25
 8002da8:	f000 fb0f 	bl	80033ca <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002dac:	e030      	b.n	8002e10 <HAL_UART_MspInit+0xf8>
  else if(huart->Instance==USART2)
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	4a1c      	ldr	r2, [pc, #112]	; (8002e24 <HAL_UART_MspInit+0x10c>)
 8002db4:	4293      	cmp	r3, r2
 8002db6:	d12b      	bne.n	8002e10 <HAL_UART_MspInit+0xf8>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002db8:	4b18      	ldr	r3, [pc, #96]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002dba:	69db      	ldr	r3, [r3, #28]
 8002dbc:	4a17      	ldr	r2, [pc, #92]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002dbe:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002dc2:	61d3      	str	r3, [r2, #28]
 8002dc4:	4b15      	ldr	r3, [pc, #84]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002dc6:	69db      	ldr	r3, [r3, #28]
 8002dc8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002dcc:	60fb      	str	r3, [r7, #12]
 8002dce:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002dd0:	4b12      	ldr	r3, [pc, #72]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002dd2:	699b      	ldr	r3, [r3, #24]
 8002dd4:	4a11      	ldr	r2, [pc, #68]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002dd6:	f043 0304 	orr.w	r3, r3, #4
 8002dda:	6193      	str	r3, [r2, #24]
 8002ddc:	4b0f      	ldr	r3, [pc, #60]	; (8002e1c <HAL_UART_MspInit+0x104>)
 8002dde:	699b      	ldr	r3, [r3, #24]
 8002de0:	f003 0304 	and.w	r3, r3, #4
 8002de4:	60bb      	str	r3, [r7, #8]
 8002de6:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002de8:	2304      	movs	r3, #4
 8002dea:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002dec:	2312      	movs	r3, #18
 8002dee:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002df0:	2303      	movs	r3, #3
 8002df2:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002df4:	f107 0318 	add.w	r3, r7, #24
 8002df8:	4619      	mov	r1, r3
 8002dfa:	4809      	ldr	r0, [pc, #36]	; (8002e20 <HAL_UART_MspInit+0x108>)
 8002dfc:	f000 fba6 	bl	800354c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 8002e00:	2200      	movs	r2, #0
 8002e02:	2105      	movs	r1, #5
 8002e04:	2026      	movs	r0, #38	; 0x26
 8002e06:	f000 fac4 	bl	8003392 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002e0a:	2026      	movs	r0, #38	; 0x26
 8002e0c:	f000 fadd 	bl	80033ca <HAL_NVIC_EnableIRQ>
}
 8002e10:	bf00      	nop
 8002e12:	3728      	adds	r7, #40	; 0x28
 8002e14:	46bd      	mov	sp, r7
 8002e16:	bd80      	pop	{r7, pc}
 8002e18:	40013800 	.word	0x40013800
 8002e1c:	40021000 	.word	0x40021000
 8002e20:	40010800 	.word	0x40010800
 8002e24:	40004400 	.word	0x40004400

08002e28 <HAL_InitTick>:
 8002e28:	b580      	push	{r7, lr}
 8002e2a:	b08e      	sub	sp, #56	; 0x38
 8002e2c:	af00      	add	r7, sp, #0
 8002e2e:	6078      	str	r0, [r7, #4]
 8002e30:	2300      	movs	r3, #0
 8002e32:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002e34:	2300      	movs	r3, #0
 8002e36:	62bb      	str	r3, [r7, #40]	; 0x28
 8002e38:	2300      	movs	r3, #0
 8002e3a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002e3e:	4b34      	ldr	r3, [pc, #208]	; (8002f10 <HAL_InitTick+0xe8>)
 8002e40:	69db      	ldr	r3, [r3, #28]
 8002e42:	4a33      	ldr	r2, [pc, #204]	; (8002f10 <HAL_InitTick+0xe8>)
 8002e44:	f043 0304 	orr.w	r3, r3, #4
 8002e48:	61d3      	str	r3, [r2, #28]
 8002e4a:	4b31      	ldr	r3, [pc, #196]	; (8002f10 <HAL_InitTick+0xe8>)
 8002e4c:	69db      	ldr	r3, [r3, #28]
 8002e4e:	f003 0304 	and.w	r3, r3, #4
 8002e52:	60fb      	str	r3, [r7, #12]
 8002e54:	68fb      	ldr	r3, [r7, #12]
 8002e56:	f107 0210 	add.w	r2, r7, #16
 8002e5a:	f107 0314 	add.w	r3, r7, #20
 8002e5e:	4611      	mov	r1, r2
 8002e60:	4618      	mov	r0, r3
 8002e62:	f001 f927 	bl	80040b4 <HAL_RCC_GetClockConfig>
 8002e66:	6a3b      	ldr	r3, [r7, #32]
 8002e68:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002e6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e6c:	2b00      	cmp	r3, #0
 8002e6e:	d103      	bne.n	8002e78 <HAL_InitTick+0x50>
 8002e70:	f001 f8f8 	bl	8004064 <HAL_RCC_GetPCLK1Freq>
 8002e74:	6378      	str	r0, [r7, #52]	; 0x34
 8002e76:	e004      	b.n	8002e82 <HAL_InitTick+0x5a>
 8002e78:	f001 f8f4 	bl	8004064 <HAL_RCC_GetPCLK1Freq>
 8002e7c:	4603      	mov	r3, r0
 8002e7e:	005b      	lsls	r3, r3, #1
 8002e80:	637b      	str	r3, [r7, #52]	; 0x34
 8002e82:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002e84:	4a23      	ldr	r2, [pc, #140]	; (8002f14 <HAL_InitTick+0xec>)
 8002e86:	fba2 2303 	umull	r2, r3, r2, r3
 8002e8a:	0c9b      	lsrs	r3, r3, #18
 8002e8c:	3b01      	subs	r3, #1
 8002e8e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002e90:	4b21      	ldr	r3, [pc, #132]	; (8002f18 <HAL_InitTick+0xf0>)
 8002e92:	4a22      	ldr	r2, [pc, #136]	; (8002f1c <HAL_InitTick+0xf4>)
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	4b20      	ldr	r3, [pc, #128]	; (8002f18 <HAL_InitTick+0xf0>)
 8002e98:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002e9c:	60da      	str	r2, [r3, #12]
 8002e9e:	4a1e      	ldr	r2, [pc, #120]	; (8002f18 <HAL_InitTick+0xf0>)
 8002ea0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002ea2:	6053      	str	r3, [r2, #4]
 8002ea4:	4b1c      	ldr	r3, [pc, #112]	; (8002f18 <HAL_InitTick+0xf0>)
 8002ea6:	2200      	movs	r2, #0
 8002ea8:	611a      	str	r2, [r3, #16]
 8002eaa:	4b1b      	ldr	r3, [pc, #108]	; (8002f18 <HAL_InitTick+0xf0>)
 8002eac:	2200      	movs	r2, #0
 8002eae:	609a      	str	r2, [r3, #8]
 8002eb0:	4b19      	ldr	r3, [pc, #100]	; (8002f18 <HAL_InitTick+0xf0>)
 8002eb2:	2200      	movs	r2, #0
 8002eb4:	619a      	str	r2, [r3, #24]
 8002eb6:	4818      	ldr	r0, [pc, #96]	; (8002f18 <HAL_InitTick+0xf0>)
 8002eb8:	f001 fd3a 	bl	8004930 <HAL_TIM_Base_Init>
 8002ebc:	4603      	mov	r3, r0
 8002ebe:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002ec2:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	d11b      	bne.n	8002f02 <HAL_InitTick+0xda>
 8002eca:	4813      	ldr	r0, [pc, #76]	; (8002f18 <HAL_InitTick+0xf0>)
 8002ecc:	f001 fd88 	bl	80049e0 <HAL_TIM_Base_Start_IT>
 8002ed0:	4603      	mov	r3, r0
 8002ed2:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002ed6:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d111      	bne.n	8002f02 <HAL_InitTick+0xda>
 8002ede:	201e      	movs	r0, #30
 8002ee0:	f000 fa73 	bl	80033ca <HAL_NVIC_EnableIRQ>
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	2b0f      	cmp	r3, #15
 8002ee8:	d808      	bhi.n	8002efc <HAL_InitTick+0xd4>
 8002eea:	2200      	movs	r2, #0
 8002eec:	6879      	ldr	r1, [r7, #4]
 8002eee:	201e      	movs	r0, #30
 8002ef0:	f000 fa4f 	bl	8003392 <HAL_NVIC_SetPriority>
 8002ef4:	4a0a      	ldr	r2, [pc, #40]	; (8002f20 <HAL_InitTick+0xf8>)
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	6013      	str	r3, [r2, #0]
 8002efa:	e002      	b.n	8002f02 <HAL_InitTick+0xda>
 8002efc:	2301      	movs	r3, #1
 8002efe:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002f02:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002f06:	4618      	mov	r0, r3
 8002f08:	3738      	adds	r7, #56	; 0x38
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	bd80      	pop	{r7, pc}
 8002f0e:	bf00      	nop
 8002f10:	40021000 	.word	0x40021000
 8002f14:	431bde83 	.word	0x431bde83
 8002f18:	200007a0 	.word	0x200007a0
 8002f1c:	40000800 	.word	0x40000800
 8002f20:	20000004 	.word	0x20000004

08002f24 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002f24:	b580      	push	{r7, lr}
 8002f26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 8002f28:	f001 f8f4 	bl	8004114 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002f2c:	e7fe      	b.n	8002f2c <NMI_Handler+0x8>

08002f2e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002f2e:	b480      	push	{r7}
 8002f30:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002f32:	e7fe      	b.n	8002f32 <HardFault_Handler+0x4>

08002f34 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002f34:	b480      	push	{r7}
 8002f36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002f38:	e7fe      	b.n	8002f38 <MemManage_Handler+0x4>

08002f3a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002f3a:	b480      	push	{r7}
 8002f3c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002f3e:	e7fe      	b.n	8002f3e <BusFault_Handler+0x4>

08002f40 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002f40:	b480      	push	{r7}
 8002f42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002f44:	e7fe      	b.n	8002f44 <UsageFault_Handler+0x4>

08002f46 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002f46:	b480      	push	{r7}
 8002f48:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002f4a:	bf00      	nop
 8002f4c:	46bd      	mov	sp, r7
 8002f4e:	bc80      	pop	{r7}
 8002f50:	4770      	bx	lr

08002f52 <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 8002f52:	b480      	push	{r7}
 8002f54:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 8002f56:	bf00      	nop
 8002f58:	46bd      	mov	sp, r7
 8002f5a:	bc80      	pop	{r7}
 8002f5c:	4770      	bx	lr
	...

08002f60 <TIM1_UP_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt.
  */
void TIM1_UP_IRQHandler(void)
{
 8002f60:	b580      	push	{r7, lr}
 8002f62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8002f64:	4802      	ldr	r0, [pc, #8]	; (8002f70 <TIM1_UP_IRQHandler+0x10>)
 8002f66:	f001 ff11 	bl	8004d8c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_IRQn 1 */

  /* USER CODE END TIM1_UP_IRQn 1 */
}
 8002f6a:	bf00      	nop
 8002f6c:	bd80      	pop	{r7, pc}
 8002f6e:	bf00      	nop
 8002f70:	200004ec 	.word	0x200004ec

08002f74 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002f74:	b580      	push	{r7, lr}
 8002f76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002f78:	4802      	ldr	r0, [pc, #8]	; (8002f84 <TIM2_IRQHandler+0x10>)
 8002f7a:	f001 ff07 	bl	8004d8c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002f7e:	bf00      	nop
 8002f80:	bd80      	pop	{r7, pc}
 8002f82:	bf00      	nop
 8002f84:	20000534 	.word	0x20000534

08002f88 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002f88:	b580      	push	{r7, lr}
 8002f8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002f8c:	4802      	ldr	r0, [pc, #8]	; (8002f98 <TIM3_IRQHandler+0x10>)
 8002f8e:	f001 fefd 	bl	8004d8c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8002f92:	bf00      	nop
 8002f94:	bd80      	pop	{r7, pc}
 8002f96:	bf00      	nop
 8002f98:	2000057c 	.word	0x2000057c

08002f9c <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8002fa0:	4802      	ldr	r0, [pc, #8]	; (8002fac <TIM4_IRQHandler+0x10>)
 8002fa2:	f001 fef3 	bl	8004d8c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8002fa6:	bf00      	nop
 8002fa8:	bd80      	pop	{r7, pc}
 8002faa:	bf00      	nop
 8002fac:	200007a0 	.word	0x200007a0

08002fb0 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8002fb0:	b580      	push	{r7, lr}
 8002fb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8002fb4:	4802      	ldr	r0, [pc, #8]	; (8002fc0 <SPI1_IRQHandler+0x10>)
 8002fb6:	f001 fb19 	bl	80045ec <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8002fba:	bf00      	nop
 8002fbc:	bd80      	pop	{r7, pc}
 8002fbe:	bf00      	nop
 8002fc0:	20000494 	.word	0x20000494

08002fc4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002fc4:	b580      	push	{r7, lr}
 8002fc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002fc8:	4802      	ldr	r0, [pc, #8]	; (8002fd4 <USART1_IRQHandler+0x10>)
 8002fca:	f002 fced 	bl	80059a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002fce:	bf00      	nop
 8002fd0:	bd80      	pop	{r7, pc}
 8002fd2:	bf00      	nop
 8002fd4:	200005c4 	.word	0x200005c4

08002fd8 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8002fd8:	b580      	push	{r7, lr}
 8002fda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002fdc:	4802      	ldr	r0, [pc, #8]	; (8002fe8 <USART2_IRQHandler+0x10>)
 8002fde:	f002 fce3 	bl	80059a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002fe2:	bf00      	nop
 8002fe4:	bd80      	pop	{r7, pc}
 8002fe6:	bf00      	nop
 8002fe8:	2000060c 	.word	0x2000060c

08002fec <_getpid>:
 8002fec:	b480      	push	{r7}
 8002fee:	af00      	add	r7, sp, #0
 8002ff0:	2301      	movs	r3, #1
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	46bd      	mov	sp, r7
 8002ff6:	bc80      	pop	{r7}
 8002ff8:	4770      	bx	lr

08002ffa <_kill>:
 8002ffa:	b580      	push	{r7, lr}
 8002ffc:	b082      	sub	sp, #8
 8002ffe:	af00      	add	r7, sp, #0
 8003000:	6078      	str	r0, [r7, #4]
 8003002:	6039      	str	r1, [r7, #0]
 8003004:	f005 faa0 	bl	8008548 <__errno>
 8003008:	4603      	mov	r3, r0
 800300a:	2216      	movs	r2, #22
 800300c:	601a      	str	r2, [r3, #0]
 800300e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003012:	4618      	mov	r0, r3
 8003014:	3708      	adds	r7, #8
 8003016:	46bd      	mov	sp, r7
 8003018:	bd80      	pop	{r7, pc}

0800301a <_exit>:
 800301a:	b580      	push	{r7, lr}
 800301c:	b082      	sub	sp, #8
 800301e:	af00      	add	r7, sp, #0
 8003020:	6078      	str	r0, [r7, #4]
 8003022:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003026:	6878      	ldr	r0, [r7, #4]
 8003028:	f7ff ffe7 	bl	8002ffa <_kill>
 800302c:	e7fe      	b.n	800302c <_exit+0x12>

0800302e <_read>:
 800302e:	b580      	push	{r7, lr}
 8003030:	b086      	sub	sp, #24
 8003032:	af00      	add	r7, sp, #0
 8003034:	60f8      	str	r0, [r7, #12]
 8003036:	60b9      	str	r1, [r7, #8]
 8003038:	607a      	str	r2, [r7, #4]
 800303a:	2300      	movs	r3, #0
 800303c:	617b      	str	r3, [r7, #20]
 800303e:	e00a      	b.n	8003056 <_read+0x28>
 8003040:	f3af 8000 	nop.w
 8003044:	4601      	mov	r1, r0
 8003046:	68bb      	ldr	r3, [r7, #8]
 8003048:	1c5a      	adds	r2, r3, #1
 800304a:	60ba      	str	r2, [r7, #8]
 800304c:	b2ca      	uxtb	r2, r1
 800304e:	701a      	strb	r2, [r3, #0]
 8003050:	697b      	ldr	r3, [r7, #20]
 8003052:	3301      	adds	r3, #1
 8003054:	617b      	str	r3, [r7, #20]
 8003056:	697a      	ldr	r2, [r7, #20]
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	429a      	cmp	r2, r3
 800305c:	dbf0      	blt.n	8003040 <_read+0x12>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	4618      	mov	r0, r3
 8003062:	3718      	adds	r7, #24
 8003064:	46bd      	mov	sp, r7
 8003066:	bd80      	pop	{r7, pc}

08003068 <_write>:
 8003068:	b580      	push	{r7, lr}
 800306a:	b086      	sub	sp, #24
 800306c:	af00      	add	r7, sp, #0
 800306e:	60f8      	str	r0, [r7, #12]
 8003070:	60b9      	str	r1, [r7, #8]
 8003072:	607a      	str	r2, [r7, #4]
 8003074:	2300      	movs	r3, #0
 8003076:	617b      	str	r3, [r7, #20]
 8003078:	e009      	b.n	800308e <_write+0x26>
 800307a:	68bb      	ldr	r3, [r7, #8]
 800307c:	1c5a      	adds	r2, r3, #1
 800307e:	60ba      	str	r2, [r7, #8]
 8003080:	781b      	ldrb	r3, [r3, #0]
 8003082:	4618      	mov	r0, r3
 8003084:	f3af 8000 	nop.w
 8003088:	697b      	ldr	r3, [r7, #20]
 800308a:	3301      	adds	r3, #1
 800308c:	617b      	str	r3, [r7, #20]
 800308e:	697a      	ldr	r2, [r7, #20]
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	429a      	cmp	r2, r3
 8003094:	dbf1      	blt.n	800307a <_write+0x12>
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	4618      	mov	r0, r3
 800309a:	3718      	adds	r7, #24
 800309c:	46bd      	mov	sp, r7
 800309e:	bd80      	pop	{r7, pc}

080030a0 <_close>:
 80030a0:	b480      	push	{r7}
 80030a2:	b083      	sub	sp, #12
 80030a4:	af00      	add	r7, sp, #0
 80030a6:	6078      	str	r0, [r7, #4]
 80030a8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80030ac:	4618      	mov	r0, r3
 80030ae:	370c      	adds	r7, #12
 80030b0:	46bd      	mov	sp, r7
 80030b2:	bc80      	pop	{r7}
 80030b4:	4770      	bx	lr

080030b6 <_fstat>:
 80030b6:	b480      	push	{r7}
 80030b8:	b083      	sub	sp, #12
 80030ba:	af00      	add	r7, sp, #0
 80030bc:	6078      	str	r0, [r7, #4]
 80030be:	6039      	str	r1, [r7, #0]
 80030c0:	683b      	ldr	r3, [r7, #0]
 80030c2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80030c6:	605a      	str	r2, [r3, #4]
 80030c8:	2300      	movs	r3, #0
 80030ca:	4618      	mov	r0, r3
 80030cc:	370c      	adds	r7, #12
 80030ce:	46bd      	mov	sp, r7
 80030d0:	bc80      	pop	{r7}
 80030d2:	4770      	bx	lr

080030d4 <_isatty>:
 80030d4:	b480      	push	{r7}
 80030d6:	b083      	sub	sp, #12
 80030d8:	af00      	add	r7, sp, #0
 80030da:	6078      	str	r0, [r7, #4]
 80030dc:	2301      	movs	r3, #1
 80030de:	4618      	mov	r0, r3
 80030e0:	370c      	adds	r7, #12
 80030e2:	46bd      	mov	sp, r7
 80030e4:	bc80      	pop	{r7}
 80030e6:	4770      	bx	lr

080030e8 <_lseek>:
 80030e8:	b480      	push	{r7}
 80030ea:	b085      	sub	sp, #20
 80030ec:	af00      	add	r7, sp, #0
 80030ee:	60f8      	str	r0, [r7, #12]
 80030f0:	60b9      	str	r1, [r7, #8]
 80030f2:	607a      	str	r2, [r7, #4]
 80030f4:	2300      	movs	r3, #0
 80030f6:	4618      	mov	r0, r3
 80030f8:	3714      	adds	r7, #20
 80030fa:	46bd      	mov	sp, r7
 80030fc:	bc80      	pop	{r7}
 80030fe:	4770      	bx	lr

08003100 <_sbrk>:
 8003100:	b580      	push	{r7, lr}
 8003102:	b086      	sub	sp, #24
 8003104:	af00      	add	r7, sp, #0
 8003106:	6078      	str	r0, [r7, #4]
 8003108:	4a14      	ldr	r2, [pc, #80]	; (800315c <_sbrk+0x5c>)
 800310a:	4b15      	ldr	r3, [pc, #84]	; (8003160 <_sbrk+0x60>)
 800310c:	1ad3      	subs	r3, r2, r3
 800310e:	617b      	str	r3, [r7, #20]
 8003110:	697b      	ldr	r3, [r7, #20]
 8003112:	613b      	str	r3, [r7, #16]
 8003114:	4b13      	ldr	r3, [pc, #76]	; (8003164 <_sbrk+0x64>)
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	2b00      	cmp	r3, #0
 800311a:	d102      	bne.n	8003122 <_sbrk+0x22>
 800311c:	4b11      	ldr	r3, [pc, #68]	; (8003164 <_sbrk+0x64>)
 800311e:	4a12      	ldr	r2, [pc, #72]	; (8003168 <_sbrk+0x68>)
 8003120:	601a      	str	r2, [r3, #0]
 8003122:	4b10      	ldr	r3, [pc, #64]	; (8003164 <_sbrk+0x64>)
 8003124:	681a      	ldr	r2, [r3, #0]
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	4413      	add	r3, r2
 800312a:	693a      	ldr	r2, [r7, #16]
 800312c:	429a      	cmp	r2, r3
 800312e:	d207      	bcs.n	8003140 <_sbrk+0x40>
 8003130:	f005 fa0a 	bl	8008548 <__errno>
 8003134:	4603      	mov	r3, r0
 8003136:	220c      	movs	r2, #12
 8003138:	601a      	str	r2, [r3, #0]
 800313a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800313e:	e009      	b.n	8003154 <_sbrk+0x54>
 8003140:	4b08      	ldr	r3, [pc, #32]	; (8003164 <_sbrk+0x64>)
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	60fb      	str	r3, [r7, #12]
 8003146:	4b07      	ldr	r3, [pc, #28]	; (8003164 <_sbrk+0x64>)
 8003148:	681a      	ldr	r2, [r3, #0]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	4413      	add	r3, r2
 800314e:	4a05      	ldr	r2, [pc, #20]	; (8003164 <_sbrk+0x64>)
 8003150:	6013      	str	r3, [r2, #0]
 8003152:	68fb      	ldr	r3, [r7, #12]
 8003154:	4618      	mov	r0, r3
 8003156:	3718      	adds	r7, #24
 8003158:	46bd      	mov	sp, r7
 800315a:	bd80      	pop	{r7, pc}
 800315c:	20005000 	.word	0x20005000
 8003160:	00000400 	.word	0x00000400
 8003164:	200007e8 	.word	0x200007e8
 8003168:	20001688 	.word	0x20001688

0800316c <SystemInit>:
 800316c:	b480      	push	{r7}
 800316e:	af00      	add	r7, sp, #0
 8003170:	bf00      	nop
 8003172:	46bd      	mov	sp, r7
 8003174:	bc80      	pop	{r7}
 8003176:	4770      	bx	lr

08003178 <Reset_Handler>:
 8003178:	f7ff fff8 	bl	800316c <SystemInit>
 800317c:	480b      	ldr	r0, [pc, #44]	; (80031ac <LoopFillZerobss+0xe>)
 800317e:	490c      	ldr	r1, [pc, #48]	; (80031b0 <LoopFillZerobss+0x12>)
 8003180:	4a0c      	ldr	r2, [pc, #48]	; (80031b4 <LoopFillZerobss+0x16>)
 8003182:	2300      	movs	r3, #0
 8003184:	e002      	b.n	800318c <LoopCopyDataInit>

08003186 <CopyDataInit>:
 8003186:	58d4      	ldr	r4, [r2, r3]
 8003188:	50c4      	str	r4, [r0, r3]
 800318a:	3304      	adds	r3, #4

0800318c <LoopCopyDataInit>:
 800318c:	18c4      	adds	r4, r0, r3
 800318e:	428c      	cmp	r4, r1
 8003190:	d3f9      	bcc.n	8003186 <CopyDataInit>
 8003192:	4a09      	ldr	r2, [pc, #36]	; (80031b8 <LoopFillZerobss+0x1a>)
 8003194:	4c09      	ldr	r4, [pc, #36]	; (80031bc <LoopFillZerobss+0x1e>)
 8003196:	2300      	movs	r3, #0
 8003198:	e001      	b.n	800319e <LoopFillZerobss>

0800319a <FillZerobss>:
 800319a:	6013      	str	r3, [r2, #0]
 800319c:	3204      	adds	r2, #4

0800319e <LoopFillZerobss>:
 800319e:	42a2      	cmp	r2, r4
 80031a0:	d3fb      	bcc.n	800319a <FillZerobss>
 80031a2:	f005 f9d7 	bl	8008554 <__libc_init_array>
 80031a6:	f7fe fec5 	bl	8001f34 <main>
 80031aa:	4770      	bx	lr
 80031ac:	20000000 	.word	0x20000000
 80031b0:	200001d8 	.word	0x200001d8
 80031b4:	0800a768 	.word	0x0800a768
 80031b8:	200001d8 	.word	0x200001d8
 80031bc:	20001688 	.word	0x20001688

080031c0 <ADC1_2_IRQHandler>:
 80031c0:	e7fe      	b.n	80031c0 <ADC1_2_IRQHandler>
	...

080031c4 <HAL_Init>:
 80031c4:	b580      	push	{r7, lr}
 80031c6:	af00      	add	r7, sp, #0
 80031c8:	4b08      	ldr	r3, [pc, #32]	; (80031ec <HAL_Init+0x28>)
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	4a07      	ldr	r2, [pc, #28]	; (80031ec <HAL_Init+0x28>)
 80031ce:	f043 0310 	orr.w	r3, r3, #16
 80031d2:	6013      	str	r3, [r2, #0]
 80031d4:	2003      	movs	r0, #3
 80031d6:	f000 f8d1 	bl	800337c <HAL_NVIC_SetPriorityGrouping>
 80031da:	200f      	movs	r0, #15
 80031dc:	f7ff fe24 	bl	8002e28 <HAL_InitTick>
 80031e0:	f7ff fc2a 	bl	8002a38 <HAL_MspInit>
 80031e4:	2300      	movs	r3, #0
 80031e6:	4618      	mov	r0, r3
 80031e8:	bd80      	pop	{r7, pc}
 80031ea:	bf00      	nop
 80031ec:	40022000 	.word	0x40022000

080031f0 <HAL_IncTick>:
 80031f0:	b480      	push	{r7}
 80031f2:	af00      	add	r7, sp, #0
 80031f4:	4b05      	ldr	r3, [pc, #20]	; (800320c <HAL_IncTick+0x1c>)
 80031f6:	781b      	ldrb	r3, [r3, #0]
 80031f8:	461a      	mov	r2, r3
 80031fa:	4b05      	ldr	r3, [pc, #20]	; (8003210 <HAL_IncTick+0x20>)
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	4413      	add	r3, r2
 8003200:	4a03      	ldr	r2, [pc, #12]	; (8003210 <HAL_IncTick+0x20>)
 8003202:	6013      	str	r3, [r2, #0]
 8003204:	bf00      	nop
 8003206:	46bd      	mov	sp, r7
 8003208:	bc80      	pop	{r7}
 800320a:	4770      	bx	lr
 800320c:	20000008 	.word	0x20000008
 8003210:	200007ec 	.word	0x200007ec

08003214 <HAL_GetTick>:
 8003214:	b480      	push	{r7}
 8003216:	af00      	add	r7, sp, #0
 8003218:	4b02      	ldr	r3, [pc, #8]	; (8003224 <HAL_GetTick+0x10>)
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	4618      	mov	r0, r3
 800321e:	46bd      	mov	sp, r7
 8003220:	bc80      	pop	{r7}
 8003222:	4770      	bx	lr
 8003224:	200007ec 	.word	0x200007ec

08003228 <__NVIC_SetPriorityGrouping>:
 8003228:	b480      	push	{r7}
 800322a:	b085      	sub	sp, #20
 800322c:	af00      	add	r7, sp, #0
 800322e:	6078      	str	r0, [r7, #4]
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	f003 0307 	and.w	r3, r3, #7
 8003236:	60fb      	str	r3, [r7, #12]
 8003238:	4b0c      	ldr	r3, [pc, #48]	; (800326c <__NVIC_SetPriorityGrouping+0x44>)
 800323a:	68db      	ldr	r3, [r3, #12]
 800323c:	60bb      	str	r3, [r7, #8]
 800323e:	68ba      	ldr	r2, [r7, #8]
 8003240:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003244:	4013      	ands	r3, r2
 8003246:	60bb      	str	r3, [r7, #8]
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	021a      	lsls	r2, r3, #8
 800324c:	68bb      	ldr	r3, [r7, #8]
 800324e:	4313      	orrs	r3, r2
 8003250:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003254:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003258:	60bb      	str	r3, [r7, #8]
 800325a:	4a04      	ldr	r2, [pc, #16]	; (800326c <__NVIC_SetPriorityGrouping+0x44>)
 800325c:	68bb      	ldr	r3, [r7, #8]
 800325e:	60d3      	str	r3, [r2, #12]
 8003260:	bf00      	nop
 8003262:	3714      	adds	r7, #20
 8003264:	46bd      	mov	sp, r7
 8003266:	bc80      	pop	{r7}
 8003268:	4770      	bx	lr
 800326a:	bf00      	nop
 800326c:	e000ed00 	.word	0xe000ed00

08003270 <__NVIC_GetPriorityGrouping>:
 8003270:	b480      	push	{r7}
 8003272:	af00      	add	r7, sp, #0
 8003274:	4b04      	ldr	r3, [pc, #16]	; (8003288 <__NVIC_GetPriorityGrouping+0x18>)
 8003276:	68db      	ldr	r3, [r3, #12]
 8003278:	0a1b      	lsrs	r3, r3, #8
 800327a:	f003 0307 	and.w	r3, r3, #7
 800327e:	4618      	mov	r0, r3
 8003280:	46bd      	mov	sp, r7
 8003282:	bc80      	pop	{r7}
 8003284:	4770      	bx	lr
 8003286:	bf00      	nop
 8003288:	e000ed00 	.word	0xe000ed00

0800328c <__NVIC_EnableIRQ>:
 800328c:	b480      	push	{r7}
 800328e:	b083      	sub	sp, #12
 8003290:	af00      	add	r7, sp, #0
 8003292:	4603      	mov	r3, r0
 8003294:	71fb      	strb	r3, [r7, #7]
 8003296:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800329a:	2b00      	cmp	r3, #0
 800329c:	db0b      	blt.n	80032b6 <__NVIC_EnableIRQ+0x2a>
 800329e:	79fb      	ldrb	r3, [r7, #7]
 80032a0:	f003 021f 	and.w	r2, r3, #31
 80032a4:	4906      	ldr	r1, [pc, #24]	; (80032c0 <__NVIC_EnableIRQ+0x34>)
 80032a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032aa:	095b      	lsrs	r3, r3, #5
 80032ac:	2001      	movs	r0, #1
 80032ae:	fa00 f202 	lsl.w	r2, r0, r2
 80032b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80032b6:	bf00      	nop
 80032b8:	370c      	adds	r7, #12
 80032ba:	46bd      	mov	sp, r7
 80032bc:	bc80      	pop	{r7}
 80032be:	4770      	bx	lr
 80032c0:	e000e100 	.word	0xe000e100

080032c4 <__NVIC_SetPriority>:
 80032c4:	b480      	push	{r7}
 80032c6:	b083      	sub	sp, #12
 80032c8:	af00      	add	r7, sp, #0
 80032ca:	4603      	mov	r3, r0
 80032cc:	6039      	str	r1, [r7, #0]
 80032ce:	71fb      	strb	r3, [r7, #7]
 80032d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	db0a      	blt.n	80032ee <__NVIC_SetPriority+0x2a>
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	b2da      	uxtb	r2, r3
 80032dc:	490c      	ldr	r1, [pc, #48]	; (8003310 <__NVIC_SetPriority+0x4c>)
 80032de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032e2:	0112      	lsls	r2, r2, #4
 80032e4:	b2d2      	uxtb	r2, r2
 80032e6:	440b      	add	r3, r1
 80032e8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80032ec:	e00a      	b.n	8003304 <__NVIC_SetPriority+0x40>
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	b2da      	uxtb	r2, r3
 80032f2:	4908      	ldr	r1, [pc, #32]	; (8003314 <__NVIC_SetPriority+0x50>)
 80032f4:	79fb      	ldrb	r3, [r7, #7]
 80032f6:	f003 030f 	and.w	r3, r3, #15
 80032fa:	3b04      	subs	r3, #4
 80032fc:	0112      	lsls	r2, r2, #4
 80032fe:	b2d2      	uxtb	r2, r2
 8003300:	440b      	add	r3, r1
 8003302:	761a      	strb	r2, [r3, #24]
 8003304:	bf00      	nop
 8003306:	370c      	adds	r7, #12
 8003308:	46bd      	mov	sp, r7
 800330a:	bc80      	pop	{r7}
 800330c:	4770      	bx	lr
 800330e:	bf00      	nop
 8003310:	e000e100 	.word	0xe000e100
 8003314:	e000ed00 	.word	0xe000ed00

08003318 <NVIC_EncodePriority>:
 8003318:	b480      	push	{r7}
 800331a:	b089      	sub	sp, #36	; 0x24
 800331c:	af00      	add	r7, sp, #0
 800331e:	60f8      	str	r0, [r7, #12]
 8003320:	60b9      	str	r1, [r7, #8]
 8003322:	607a      	str	r2, [r7, #4]
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	f003 0307 	and.w	r3, r3, #7
 800332a:	61fb      	str	r3, [r7, #28]
 800332c:	69fb      	ldr	r3, [r7, #28]
 800332e:	f1c3 0307 	rsb	r3, r3, #7
 8003332:	2b04      	cmp	r3, #4
 8003334:	bf28      	it	cs
 8003336:	2304      	movcs	r3, #4
 8003338:	61bb      	str	r3, [r7, #24]
 800333a:	69fb      	ldr	r3, [r7, #28]
 800333c:	3304      	adds	r3, #4
 800333e:	2b06      	cmp	r3, #6
 8003340:	d902      	bls.n	8003348 <NVIC_EncodePriority+0x30>
 8003342:	69fb      	ldr	r3, [r7, #28]
 8003344:	3b03      	subs	r3, #3
 8003346:	e000      	b.n	800334a <NVIC_EncodePriority+0x32>
 8003348:	2300      	movs	r3, #0
 800334a:	617b      	str	r3, [r7, #20]
 800334c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003350:	69bb      	ldr	r3, [r7, #24]
 8003352:	fa02 f303 	lsl.w	r3, r2, r3
 8003356:	43da      	mvns	r2, r3
 8003358:	68bb      	ldr	r3, [r7, #8]
 800335a:	401a      	ands	r2, r3
 800335c:	697b      	ldr	r3, [r7, #20]
 800335e:	409a      	lsls	r2, r3
 8003360:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003364:	697b      	ldr	r3, [r7, #20]
 8003366:	fa01 f303 	lsl.w	r3, r1, r3
 800336a:	43d9      	mvns	r1, r3
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	400b      	ands	r3, r1
 8003370:	4313      	orrs	r3, r2
 8003372:	4618      	mov	r0, r3
 8003374:	3724      	adds	r7, #36	; 0x24
 8003376:	46bd      	mov	sp, r7
 8003378:	bc80      	pop	{r7}
 800337a:	4770      	bx	lr

0800337c <HAL_NVIC_SetPriorityGrouping>:
 800337c:	b580      	push	{r7, lr}
 800337e:	b082      	sub	sp, #8
 8003380:	af00      	add	r7, sp, #0
 8003382:	6078      	str	r0, [r7, #4]
 8003384:	6878      	ldr	r0, [r7, #4]
 8003386:	f7ff ff4f 	bl	8003228 <__NVIC_SetPriorityGrouping>
 800338a:	bf00      	nop
 800338c:	3708      	adds	r7, #8
 800338e:	46bd      	mov	sp, r7
 8003390:	bd80      	pop	{r7, pc}

08003392 <HAL_NVIC_SetPriority>:
 8003392:	b580      	push	{r7, lr}
 8003394:	b086      	sub	sp, #24
 8003396:	af00      	add	r7, sp, #0
 8003398:	4603      	mov	r3, r0
 800339a:	60b9      	str	r1, [r7, #8]
 800339c:	607a      	str	r2, [r7, #4]
 800339e:	73fb      	strb	r3, [r7, #15]
 80033a0:	2300      	movs	r3, #0
 80033a2:	617b      	str	r3, [r7, #20]
 80033a4:	f7ff ff64 	bl	8003270 <__NVIC_GetPriorityGrouping>
 80033a8:	6178      	str	r0, [r7, #20]
 80033aa:	687a      	ldr	r2, [r7, #4]
 80033ac:	68b9      	ldr	r1, [r7, #8]
 80033ae:	6978      	ldr	r0, [r7, #20]
 80033b0:	f7ff ffb2 	bl	8003318 <NVIC_EncodePriority>
 80033b4:	4602      	mov	r2, r0
 80033b6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80033ba:	4611      	mov	r1, r2
 80033bc:	4618      	mov	r0, r3
 80033be:	f7ff ff81 	bl	80032c4 <__NVIC_SetPriority>
 80033c2:	bf00      	nop
 80033c4:	3718      	adds	r7, #24
 80033c6:	46bd      	mov	sp, r7
 80033c8:	bd80      	pop	{r7, pc}

080033ca <HAL_NVIC_EnableIRQ>:
 80033ca:	b580      	push	{r7, lr}
 80033cc:	b082      	sub	sp, #8
 80033ce:	af00      	add	r7, sp, #0
 80033d0:	4603      	mov	r3, r0
 80033d2:	71fb      	strb	r3, [r7, #7]
 80033d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033d8:	4618      	mov	r0, r3
 80033da:	f7ff ff57 	bl	800328c <__NVIC_EnableIRQ>
 80033de:	bf00      	nop
 80033e0:	3708      	adds	r7, #8
 80033e2:	46bd      	mov	sp, r7
 80033e4:	bd80      	pop	{r7, pc}

080033e6 <HAL_DMA_Abort>:
 80033e6:	b480      	push	{r7}
 80033e8:	b085      	sub	sp, #20
 80033ea:	af00      	add	r7, sp, #0
 80033ec:	6078      	str	r0, [r7, #4]
 80033ee:	2300      	movs	r3, #0
 80033f0:	73fb      	strb	r3, [r7, #15]
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80033f8:	b2db      	uxtb	r3, r3
 80033fa:	2b02      	cmp	r3, #2
 80033fc:	d008      	beq.n	8003410 <HAL_DMA_Abort+0x2a>
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	2204      	movs	r2, #4
 8003402:	639a      	str	r2, [r3, #56]	; 0x38
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	2200      	movs	r2, #0
 8003408:	f883 2020 	strb.w	r2, [r3, #32]
 800340c:	2301      	movs	r3, #1
 800340e:	e020      	b.n	8003452 <HAL_DMA_Abort+0x6c>
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	681a      	ldr	r2, [r3, #0]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	f022 020e 	bic.w	r2, r2, #14
 800341e:	601a      	str	r2, [r3, #0]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	681a      	ldr	r2, [r3, #0]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	f022 0201 	bic.w	r2, r2, #1
 800342e:	601a      	str	r2, [r3, #0]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003438:	2101      	movs	r1, #1
 800343a:	fa01 f202 	lsl.w	r2, r1, r2
 800343e:	605a      	str	r2, [r3, #4]
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	2201      	movs	r2, #1
 8003444:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	2200      	movs	r2, #0
 800344c:	f883 2020 	strb.w	r2, [r3, #32]
 8003450:	7bfb      	ldrb	r3, [r7, #15]
 8003452:	4618      	mov	r0, r3
 8003454:	3714      	adds	r7, #20
 8003456:	46bd      	mov	sp, r7
 8003458:	bc80      	pop	{r7}
 800345a:	4770      	bx	lr

0800345c <HAL_DMA_Abort_IT>:
 800345c:	b580      	push	{r7, lr}
 800345e:	b084      	sub	sp, #16
 8003460:	af00      	add	r7, sp, #0
 8003462:	6078      	str	r0, [r7, #4]
 8003464:	2300      	movs	r3, #0
 8003466:	73fb      	strb	r3, [r7, #15]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800346e:	b2db      	uxtb	r3, r3
 8003470:	2b02      	cmp	r3, #2
 8003472:	d005      	beq.n	8003480 <HAL_DMA_Abort_IT+0x24>
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	2204      	movs	r2, #4
 8003478:	639a      	str	r2, [r3, #56]	; 0x38
 800347a:	2301      	movs	r3, #1
 800347c:	73fb      	strb	r3, [r7, #15]
 800347e:	e051      	b.n	8003524 <HAL_DMA_Abort_IT+0xc8>
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	681a      	ldr	r2, [r3, #0]
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	f022 020e 	bic.w	r2, r2, #14
 800348e:	601a      	str	r2, [r3, #0]
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	681a      	ldr	r2, [r3, #0]
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	f022 0201 	bic.w	r2, r2, #1
 800349e:	601a      	str	r2, [r3, #0]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	4a22      	ldr	r2, [pc, #136]	; (8003530 <HAL_DMA_Abort_IT+0xd4>)
 80034a6:	4293      	cmp	r3, r2
 80034a8:	d029      	beq.n	80034fe <HAL_DMA_Abort_IT+0xa2>
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	4a21      	ldr	r2, [pc, #132]	; (8003534 <HAL_DMA_Abort_IT+0xd8>)
 80034b0:	4293      	cmp	r3, r2
 80034b2:	d022      	beq.n	80034fa <HAL_DMA_Abort_IT+0x9e>
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	4a1f      	ldr	r2, [pc, #124]	; (8003538 <HAL_DMA_Abort_IT+0xdc>)
 80034ba:	4293      	cmp	r3, r2
 80034bc:	d01a      	beq.n	80034f4 <HAL_DMA_Abort_IT+0x98>
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	4a1e      	ldr	r2, [pc, #120]	; (800353c <HAL_DMA_Abort_IT+0xe0>)
 80034c4:	4293      	cmp	r3, r2
 80034c6:	d012      	beq.n	80034ee <HAL_DMA_Abort_IT+0x92>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	4a1c      	ldr	r2, [pc, #112]	; (8003540 <HAL_DMA_Abort_IT+0xe4>)
 80034ce:	4293      	cmp	r3, r2
 80034d0:	d00a      	beq.n	80034e8 <HAL_DMA_Abort_IT+0x8c>
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	4a1b      	ldr	r2, [pc, #108]	; (8003544 <HAL_DMA_Abort_IT+0xe8>)
 80034d8:	4293      	cmp	r3, r2
 80034da:	d102      	bne.n	80034e2 <HAL_DMA_Abort_IT+0x86>
 80034dc:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80034e0:	e00e      	b.n	8003500 <HAL_DMA_Abort_IT+0xa4>
 80034e2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80034e6:	e00b      	b.n	8003500 <HAL_DMA_Abort_IT+0xa4>
 80034e8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80034ec:	e008      	b.n	8003500 <HAL_DMA_Abort_IT+0xa4>
 80034ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80034f2:	e005      	b.n	8003500 <HAL_DMA_Abort_IT+0xa4>
 80034f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80034f8:	e002      	b.n	8003500 <HAL_DMA_Abort_IT+0xa4>
 80034fa:	2310      	movs	r3, #16
 80034fc:	e000      	b.n	8003500 <HAL_DMA_Abort_IT+0xa4>
 80034fe:	2301      	movs	r3, #1
 8003500:	4a11      	ldr	r2, [pc, #68]	; (8003548 <HAL_DMA_Abort_IT+0xec>)
 8003502:	6053      	str	r3, [r2, #4]
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	2201      	movs	r2, #1
 8003508:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	2200      	movs	r2, #0
 8003510:	f883 2020 	strb.w	r2, [r3, #32]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003518:	2b00      	cmp	r3, #0
 800351a:	d003      	beq.n	8003524 <HAL_DMA_Abort_IT+0xc8>
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003520:	6878      	ldr	r0, [r7, #4]
 8003522:	4798      	blx	r3
 8003524:	7bfb      	ldrb	r3, [r7, #15]
 8003526:	4618      	mov	r0, r3
 8003528:	3710      	adds	r7, #16
 800352a:	46bd      	mov	sp, r7
 800352c:	bd80      	pop	{r7, pc}
 800352e:	bf00      	nop
 8003530:	40020008 	.word	0x40020008
 8003534:	4002001c 	.word	0x4002001c
 8003538:	40020030 	.word	0x40020030
 800353c:	40020044 	.word	0x40020044
 8003540:	40020058 	.word	0x40020058
 8003544:	4002006c 	.word	0x4002006c
 8003548:	40020000 	.word	0x40020000

0800354c <HAL_GPIO_Init>:
 800354c:	b480      	push	{r7}
 800354e:	b08b      	sub	sp, #44	; 0x2c
 8003550:	af00      	add	r7, sp, #0
 8003552:	6078      	str	r0, [r7, #4]
 8003554:	6039      	str	r1, [r7, #0]
 8003556:	2300      	movs	r3, #0
 8003558:	627b      	str	r3, [r7, #36]	; 0x24
 800355a:	2300      	movs	r3, #0
 800355c:	623b      	str	r3, [r7, #32]
 800355e:	e169      	b.n	8003834 <HAL_GPIO_Init+0x2e8>
 8003560:	2201      	movs	r2, #1
 8003562:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003564:	fa02 f303 	lsl.w	r3, r2, r3
 8003568:	61fb      	str	r3, [r7, #28]
 800356a:	683b      	ldr	r3, [r7, #0]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	69fa      	ldr	r2, [r7, #28]
 8003570:	4013      	ands	r3, r2
 8003572:	61bb      	str	r3, [r7, #24]
 8003574:	69ba      	ldr	r2, [r7, #24]
 8003576:	69fb      	ldr	r3, [r7, #28]
 8003578:	429a      	cmp	r2, r3
 800357a:	f040 8158 	bne.w	800382e <HAL_GPIO_Init+0x2e2>
 800357e:	683b      	ldr	r3, [r7, #0]
 8003580:	685b      	ldr	r3, [r3, #4]
 8003582:	4a9a      	ldr	r2, [pc, #616]	; (80037ec <HAL_GPIO_Init+0x2a0>)
 8003584:	4293      	cmp	r3, r2
 8003586:	d05e      	beq.n	8003646 <HAL_GPIO_Init+0xfa>
 8003588:	4a98      	ldr	r2, [pc, #608]	; (80037ec <HAL_GPIO_Init+0x2a0>)
 800358a:	4293      	cmp	r3, r2
 800358c:	d875      	bhi.n	800367a <HAL_GPIO_Init+0x12e>
 800358e:	4a98      	ldr	r2, [pc, #608]	; (80037f0 <HAL_GPIO_Init+0x2a4>)
 8003590:	4293      	cmp	r3, r2
 8003592:	d058      	beq.n	8003646 <HAL_GPIO_Init+0xfa>
 8003594:	4a96      	ldr	r2, [pc, #600]	; (80037f0 <HAL_GPIO_Init+0x2a4>)
 8003596:	4293      	cmp	r3, r2
 8003598:	d86f      	bhi.n	800367a <HAL_GPIO_Init+0x12e>
 800359a:	4a96      	ldr	r2, [pc, #600]	; (80037f4 <HAL_GPIO_Init+0x2a8>)
 800359c:	4293      	cmp	r3, r2
 800359e:	d052      	beq.n	8003646 <HAL_GPIO_Init+0xfa>
 80035a0:	4a94      	ldr	r2, [pc, #592]	; (80037f4 <HAL_GPIO_Init+0x2a8>)
 80035a2:	4293      	cmp	r3, r2
 80035a4:	d869      	bhi.n	800367a <HAL_GPIO_Init+0x12e>
 80035a6:	4a94      	ldr	r2, [pc, #592]	; (80037f8 <HAL_GPIO_Init+0x2ac>)
 80035a8:	4293      	cmp	r3, r2
 80035aa:	d04c      	beq.n	8003646 <HAL_GPIO_Init+0xfa>
 80035ac:	4a92      	ldr	r2, [pc, #584]	; (80037f8 <HAL_GPIO_Init+0x2ac>)
 80035ae:	4293      	cmp	r3, r2
 80035b0:	d863      	bhi.n	800367a <HAL_GPIO_Init+0x12e>
 80035b2:	4a92      	ldr	r2, [pc, #584]	; (80037fc <HAL_GPIO_Init+0x2b0>)
 80035b4:	4293      	cmp	r3, r2
 80035b6:	d046      	beq.n	8003646 <HAL_GPIO_Init+0xfa>
 80035b8:	4a90      	ldr	r2, [pc, #576]	; (80037fc <HAL_GPIO_Init+0x2b0>)
 80035ba:	4293      	cmp	r3, r2
 80035bc:	d85d      	bhi.n	800367a <HAL_GPIO_Init+0x12e>
 80035be:	2b12      	cmp	r3, #18
 80035c0:	d82a      	bhi.n	8003618 <HAL_GPIO_Init+0xcc>
 80035c2:	2b12      	cmp	r3, #18
 80035c4:	d859      	bhi.n	800367a <HAL_GPIO_Init+0x12e>
 80035c6:	a201      	add	r2, pc, #4	; (adr r2, 80035cc <HAL_GPIO_Init+0x80>)
 80035c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80035cc:	08003647 	.word	0x08003647
 80035d0:	08003621 	.word	0x08003621
 80035d4:	08003633 	.word	0x08003633
 80035d8:	08003675 	.word	0x08003675
 80035dc:	0800367b 	.word	0x0800367b
 80035e0:	0800367b 	.word	0x0800367b
 80035e4:	0800367b 	.word	0x0800367b
 80035e8:	0800367b 	.word	0x0800367b
 80035ec:	0800367b 	.word	0x0800367b
 80035f0:	0800367b 	.word	0x0800367b
 80035f4:	0800367b 	.word	0x0800367b
 80035f8:	0800367b 	.word	0x0800367b
 80035fc:	0800367b 	.word	0x0800367b
 8003600:	0800367b 	.word	0x0800367b
 8003604:	0800367b 	.word	0x0800367b
 8003608:	0800367b 	.word	0x0800367b
 800360c:	0800367b 	.word	0x0800367b
 8003610:	08003629 	.word	0x08003629
 8003614:	0800363d 	.word	0x0800363d
 8003618:	4a79      	ldr	r2, [pc, #484]	; (8003800 <HAL_GPIO_Init+0x2b4>)
 800361a:	4293      	cmp	r3, r2
 800361c:	d013      	beq.n	8003646 <HAL_GPIO_Init+0xfa>
 800361e:	e02c      	b.n	800367a <HAL_GPIO_Init+0x12e>
 8003620:	683b      	ldr	r3, [r7, #0]
 8003622:	68db      	ldr	r3, [r3, #12]
 8003624:	623b      	str	r3, [r7, #32]
 8003626:	e029      	b.n	800367c <HAL_GPIO_Init+0x130>
 8003628:	683b      	ldr	r3, [r7, #0]
 800362a:	68db      	ldr	r3, [r3, #12]
 800362c:	3304      	adds	r3, #4
 800362e:	623b      	str	r3, [r7, #32]
 8003630:	e024      	b.n	800367c <HAL_GPIO_Init+0x130>
 8003632:	683b      	ldr	r3, [r7, #0]
 8003634:	68db      	ldr	r3, [r3, #12]
 8003636:	3308      	adds	r3, #8
 8003638:	623b      	str	r3, [r7, #32]
 800363a:	e01f      	b.n	800367c <HAL_GPIO_Init+0x130>
 800363c:	683b      	ldr	r3, [r7, #0]
 800363e:	68db      	ldr	r3, [r3, #12]
 8003640:	330c      	adds	r3, #12
 8003642:	623b      	str	r3, [r7, #32]
 8003644:	e01a      	b.n	800367c <HAL_GPIO_Init+0x130>
 8003646:	683b      	ldr	r3, [r7, #0]
 8003648:	689b      	ldr	r3, [r3, #8]
 800364a:	2b00      	cmp	r3, #0
 800364c:	d102      	bne.n	8003654 <HAL_GPIO_Init+0x108>
 800364e:	2304      	movs	r3, #4
 8003650:	623b      	str	r3, [r7, #32]
 8003652:	e013      	b.n	800367c <HAL_GPIO_Init+0x130>
 8003654:	683b      	ldr	r3, [r7, #0]
 8003656:	689b      	ldr	r3, [r3, #8]
 8003658:	2b01      	cmp	r3, #1
 800365a:	d105      	bne.n	8003668 <HAL_GPIO_Init+0x11c>
 800365c:	2308      	movs	r3, #8
 800365e:	623b      	str	r3, [r7, #32]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	69fa      	ldr	r2, [r7, #28]
 8003664:	611a      	str	r2, [r3, #16]
 8003666:	e009      	b.n	800367c <HAL_GPIO_Init+0x130>
 8003668:	2308      	movs	r3, #8
 800366a:	623b      	str	r3, [r7, #32]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	69fa      	ldr	r2, [r7, #28]
 8003670:	615a      	str	r2, [r3, #20]
 8003672:	e003      	b.n	800367c <HAL_GPIO_Init+0x130>
 8003674:	2300      	movs	r3, #0
 8003676:	623b      	str	r3, [r7, #32]
 8003678:	e000      	b.n	800367c <HAL_GPIO_Init+0x130>
 800367a:	bf00      	nop
 800367c:	69bb      	ldr	r3, [r7, #24]
 800367e:	2bff      	cmp	r3, #255	; 0xff
 8003680:	d801      	bhi.n	8003686 <HAL_GPIO_Init+0x13a>
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	e001      	b.n	800368a <HAL_GPIO_Init+0x13e>
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	3304      	adds	r3, #4
 800368a:	617b      	str	r3, [r7, #20]
 800368c:	69bb      	ldr	r3, [r7, #24]
 800368e:	2bff      	cmp	r3, #255	; 0xff
 8003690:	d802      	bhi.n	8003698 <HAL_GPIO_Init+0x14c>
 8003692:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003694:	009b      	lsls	r3, r3, #2
 8003696:	e002      	b.n	800369e <HAL_GPIO_Init+0x152>
 8003698:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800369a:	3b08      	subs	r3, #8
 800369c:	009b      	lsls	r3, r3, #2
 800369e:	613b      	str	r3, [r7, #16]
 80036a0:	697b      	ldr	r3, [r7, #20]
 80036a2:	681a      	ldr	r2, [r3, #0]
 80036a4:	210f      	movs	r1, #15
 80036a6:	693b      	ldr	r3, [r7, #16]
 80036a8:	fa01 f303 	lsl.w	r3, r1, r3
 80036ac:	43db      	mvns	r3, r3
 80036ae:	401a      	ands	r2, r3
 80036b0:	6a39      	ldr	r1, [r7, #32]
 80036b2:	693b      	ldr	r3, [r7, #16]
 80036b4:	fa01 f303 	lsl.w	r3, r1, r3
 80036b8:	431a      	orrs	r2, r3
 80036ba:	697b      	ldr	r3, [r7, #20]
 80036bc:	601a      	str	r2, [r3, #0]
 80036be:	683b      	ldr	r3, [r7, #0]
 80036c0:	685b      	ldr	r3, [r3, #4]
 80036c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	f000 80b1 	beq.w	800382e <HAL_GPIO_Init+0x2e2>
 80036cc:	4b4d      	ldr	r3, [pc, #308]	; (8003804 <HAL_GPIO_Init+0x2b8>)
 80036ce:	699b      	ldr	r3, [r3, #24]
 80036d0:	4a4c      	ldr	r2, [pc, #304]	; (8003804 <HAL_GPIO_Init+0x2b8>)
 80036d2:	f043 0301 	orr.w	r3, r3, #1
 80036d6:	6193      	str	r3, [r2, #24]
 80036d8:	4b4a      	ldr	r3, [pc, #296]	; (8003804 <HAL_GPIO_Init+0x2b8>)
 80036da:	699b      	ldr	r3, [r3, #24]
 80036dc:	f003 0301 	and.w	r3, r3, #1
 80036e0:	60bb      	str	r3, [r7, #8]
 80036e2:	68bb      	ldr	r3, [r7, #8]
 80036e4:	4a48      	ldr	r2, [pc, #288]	; (8003808 <HAL_GPIO_Init+0x2bc>)
 80036e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036e8:	089b      	lsrs	r3, r3, #2
 80036ea:	3302      	adds	r3, #2
 80036ec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80036f0:	60fb      	str	r3, [r7, #12]
 80036f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036f4:	f003 0303 	and.w	r3, r3, #3
 80036f8:	009b      	lsls	r3, r3, #2
 80036fa:	220f      	movs	r2, #15
 80036fc:	fa02 f303 	lsl.w	r3, r2, r3
 8003700:	43db      	mvns	r3, r3
 8003702:	68fa      	ldr	r2, [r7, #12]
 8003704:	4013      	ands	r3, r2
 8003706:	60fb      	str	r3, [r7, #12]
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	4a40      	ldr	r2, [pc, #256]	; (800380c <HAL_GPIO_Init+0x2c0>)
 800370c:	4293      	cmp	r3, r2
 800370e:	d013      	beq.n	8003738 <HAL_GPIO_Init+0x1ec>
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	4a3f      	ldr	r2, [pc, #252]	; (8003810 <HAL_GPIO_Init+0x2c4>)
 8003714:	4293      	cmp	r3, r2
 8003716:	d00d      	beq.n	8003734 <HAL_GPIO_Init+0x1e8>
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	4a3e      	ldr	r2, [pc, #248]	; (8003814 <HAL_GPIO_Init+0x2c8>)
 800371c:	4293      	cmp	r3, r2
 800371e:	d007      	beq.n	8003730 <HAL_GPIO_Init+0x1e4>
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	4a3d      	ldr	r2, [pc, #244]	; (8003818 <HAL_GPIO_Init+0x2cc>)
 8003724:	4293      	cmp	r3, r2
 8003726:	d101      	bne.n	800372c <HAL_GPIO_Init+0x1e0>
 8003728:	2303      	movs	r3, #3
 800372a:	e006      	b.n	800373a <HAL_GPIO_Init+0x1ee>
 800372c:	2304      	movs	r3, #4
 800372e:	e004      	b.n	800373a <HAL_GPIO_Init+0x1ee>
 8003730:	2302      	movs	r3, #2
 8003732:	e002      	b.n	800373a <HAL_GPIO_Init+0x1ee>
 8003734:	2301      	movs	r3, #1
 8003736:	e000      	b.n	800373a <HAL_GPIO_Init+0x1ee>
 8003738:	2300      	movs	r3, #0
 800373a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800373c:	f002 0203 	and.w	r2, r2, #3
 8003740:	0092      	lsls	r2, r2, #2
 8003742:	4093      	lsls	r3, r2
 8003744:	68fa      	ldr	r2, [r7, #12]
 8003746:	4313      	orrs	r3, r2
 8003748:	60fb      	str	r3, [r7, #12]
 800374a:	492f      	ldr	r1, [pc, #188]	; (8003808 <HAL_GPIO_Init+0x2bc>)
 800374c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800374e:	089b      	lsrs	r3, r3, #2
 8003750:	3302      	adds	r3, #2
 8003752:	68fa      	ldr	r2, [r7, #12]
 8003754:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003758:	683b      	ldr	r3, [r7, #0]
 800375a:	685b      	ldr	r3, [r3, #4]
 800375c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003760:	2b00      	cmp	r3, #0
 8003762:	d006      	beq.n	8003772 <HAL_GPIO_Init+0x226>
 8003764:	4b2d      	ldr	r3, [pc, #180]	; (800381c <HAL_GPIO_Init+0x2d0>)
 8003766:	689a      	ldr	r2, [r3, #8]
 8003768:	492c      	ldr	r1, [pc, #176]	; (800381c <HAL_GPIO_Init+0x2d0>)
 800376a:	69bb      	ldr	r3, [r7, #24]
 800376c:	4313      	orrs	r3, r2
 800376e:	608b      	str	r3, [r1, #8]
 8003770:	e006      	b.n	8003780 <HAL_GPIO_Init+0x234>
 8003772:	4b2a      	ldr	r3, [pc, #168]	; (800381c <HAL_GPIO_Init+0x2d0>)
 8003774:	689a      	ldr	r2, [r3, #8]
 8003776:	69bb      	ldr	r3, [r7, #24]
 8003778:	43db      	mvns	r3, r3
 800377a:	4928      	ldr	r1, [pc, #160]	; (800381c <HAL_GPIO_Init+0x2d0>)
 800377c:	4013      	ands	r3, r2
 800377e:	608b      	str	r3, [r1, #8]
 8003780:	683b      	ldr	r3, [r7, #0]
 8003782:	685b      	ldr	r3, [r3, #4]
 8003784:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003788:	2b00      	cmp	r3, #0
 800378a:	d006      	beq.n	800379a <HAL_GPIO_Init+0x24e>
 800378c:	4b23      	ldr	r3, [pc, #140]	; (800381c <HAL_GPIO_Init+0x2d0>)
 800378e:	68da      	ldr	r2, [r3, #12]
 8003790:	4922      	ldr	r1, [pc, #136]	; (800381c <HAL_GPIO_Init+0x2d0>)
 8003792:	69bb      	ldr	r3, [r7, #24]
 8003794:	4313      	orrs	r3, r2
 8003796:	60cb      	str	r3, [r1, #12]
 8003798:	e006      	b.n	80037a8 <HAL_GPIO_Init+0x25c>
 800379a:	4b20      	ldr	r3, [pc, #128]	; (800381c <HAL_GPIO_Init+0x2d0>)
 800379c:	68da      	ldr	r2, [r3, #12]
 800379e:	69bb      	ldr	r3, [r7, #24]
 80037a0:	43db      	mvns	r3, r3
 80037a2:	491e      	ldr	r1, [pc, #120]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037a4:	4013      	ands	r3, r2
 80037a6:	60cb      	str	r3, [r1, #12]
 80037a8:	683b      	ldr	r3, [r7, #0]
 80037aa:	685b      	ldr	r3, [r3, #4]
 80037ac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d006      	beq.n	80037c2 <HAL_GPIO_Init+0x276>
 80037b4:	4b19      	ldr	r3, [pc, #100]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037b6:	685a      	ldr	r2, [r3, #4]
 80037b8:	4918      	ldr	r1, [pc, #96]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037ba:	69bb      	ldr	r3, [r7, #24]
 80037bc:	4313      	orrs	r3, r2
 80037be:	604b      	str	r3, [r1, #4]
 80037c0:	e006      	b.n	80037d0 <HAL_GPIO_Init+0x284>
 80037c2:	4b16      	ldr	r3, [pc, #88]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037c4:	685a      	ldr	r2, [r3, #4]
 80037c6:	69bb      	ldr	r3, [r7, #24]
 80037c8:	43db      	mvns	r3, r3
 80037ca:	4914      	ldr	r1, [pc, #80]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037cc:	4013      	ands	r3, r2
 80037ce:	604b      	str	r3, [r1, #4]
 80037d0:	683b      	ldr	r3, [r7, #0]
 80037d2:	685b      	ldr	r3, [r3, #4]
 80037d4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80037d8:	2b00      	cmp	r3, #0
 80037da:	d021      	beq.n	8003820 <HAL_GPIO_Init+0x2d4>
 80037dc:	4b0f      	ldr	r3, [pc, #60]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037de:	681a      	ldr	r2, [r3, #0]
 80037e0:	490e      	ldr	r1, [pc, #56]	; (800381c <HAL_GPIO_Init+0x2d0>)
 80037e2:	69bb      	ldr	r3, [r7, #24]
 80037e4:	4313      	orrs	r3, r2
 80037e6:	600b      	str	r3, [r1, #0]
 80037e8:	e021      	b.n	800382e <HAL_GPIO_Init+0x2e2>
 80037ea:	bf00      	nop
 80037ec:	10320000 	.word	0x10320000
 80037f0:	10310000 	.word	0x10310000
 80037f4:	10220000 	.word	0x10220000
 80037f8:	10210000 	.word	0x10210000
 80037fc:	10120000 	.word	0x10120000
 8003800:	10110000 	.word	0x10110000
 8003804:	40021000 	.word	0x40021000
 8003808:	40010000 	.word	0x40010000
 800380c:	40010800 	.word	0x40010800
 8003810:	40010c00 	.word	0x40010c00
 8003814:	40011000 	.word	0x40011000
 8003818:	40011400 	.word	0x40011400
 800381c:	40010400 	.word	0x40010400
 8003820:	4b0b      	ldr	r3, [pc, #44]	; (8003850 <HAL_GPIO_Init+0x304>)
 8003822:	681a      	ldr	r2, [r3, #0]
 8003824:	69bb      	ldr	r3, [r7, #24]
 8003826:	43db      	mvns	r3, r3
 8003828:	4909      	ldr	r1, [pc, #36]	; (8003850 <HAL_GPIO_Init+0x304>)
 800382a:	4013      	ands	r3, r2
 800382c:	600b      	str	r3, [r1, #0]
 800382e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003830:	3301      	adds	r3, #1
 8003832:	627b      	str	r3, [r7, #36]	; 0x24
 8003834:	683b      	ldr	r3, [r7, #0]
 8003836:	681a      	ldr	r2, [r3, #0]
 8003838:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800383a:	fa22 f303 	lsr.w	r3, r2, r3
 800383e:	2b00      	cmp	r3, #0
 8003840:	f47f ae8e 	bne.w	8003560 <HAL_GPIO_Init+0x14>
 8003844:	bf00      	nop
 8003846:	bf00      	nop
 8003848:	372c      	adds	r7, #44	; 0x2c
 800384a:	46bd      	mov	sp, r7
 800384c:	bc80      	pop	{r7}
 800384e:	4770      	bx	lr
 8003850:	40010400 	.word	0x40010400

08003854 <HAL_GPIO_WritePin>:
 8003854:	b480      	push	{r7}
 8003856:	b083      	sub	sp, #12
 8003858:	af00      	add	r7, sp, #0
 800385a:	6078      	str	r0, [r7, #4]
 800385c:	460b      	mov	r3, r1
 800385e:	807b      	strh	r3, [r7, #2]
 8003860:	4613      	mov	r3, r2
 8003862:	707b      	strb	r3, [r7, #1]
 8003864:	787b      	ldrb	r3, [r7, #1]
 8003866:	2b00      	cmp	r3, #0
 8003868:	d003      	beq.n	8003872 <HAL_GPIO_WritePin+0x1e>
 800386a:	887a      	ldrh	r2, [r7, #2]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	611a      	str	r2, [r3, #16]
 8003870:	e003      	b.n	800387a <HAL_GPIO_WritePin+0x26>
 8003872:	887b      	ldrh	r3, [r7, #2]
 8003874:	041a      	lsls	r2, r3, #16
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	611a      	str	r2, [r3, #16]
 800387a:	bf00      	nop
 800387c:	370c      	adds	r7, #12
 800387e:	46bd      	mov	sp, r7
 8003880:	bc80      	pop	{r7}
 8003882:	4770      	bx	lr

08003884 <HAL_GPIO_TogglePin>:
 8003884:	b480      	push	{r7}
 8003886:	b085      	sub	sp, #20
 8003888:	af00      	add	r7, sp, #0
 800388a:	6078      	str	r0, [r7, #4]
 800388c:	460b      	mov	r3, r1
 800388e:	807b      	strh	r3, [r7, #2]
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	68db      	ldr	r3, [r3, #12]
 8003894:	60fb      	str	r3, [r7, #12]
 8003896:	887a      	ldrh	r2, [r7, #2]
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	4013      	ands	r3, r2
 800389c:	041a      	lsls	r2, r3, #16
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	43d9      	mvns	r1, r3
 80038a2:	887b      	ldrh	r3, [r7, #2]
 80038a4:	400b      	ands	r3, r1
 80038a6:	431a      	orrs	r2, r3
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	611a      	str	r2, [r3, #16]
 80038ac:	bf00      	nop
 80038ae:	3714      	adds	r7, #20
 80038b0:	46bd      	mov	sp, r7
 80038b2:	bc80      	pop	{r7}
 80038b4:	4770      	bx	lr
	...

080038b8 <HAL_RCC_OscConfig>:
 80038b8:	b580      	push	{r7, lr}
 80038ba:	b086      	sub	sp, #24
 80038bc:	af00      	add	r7, sp, #0
 80038be:	6078      	str	r0, [r7, #4]
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d101      	bne.n	80038ca <HAL_RCC_OscConfig+0x12>
 80038c6:	2301      	movs	r3, #1
 80038c8:	e272      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	681b      	ldr	r3, [r3, #0]
 80038ce:	f003 0301 	and.w	r3, r3, #1
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	f000 8087 	beq.w	80039e6 <HAL_RCC_OscConfig+0x12e>
 80038d8:	4b92      	ldr	r3, [pc, #584]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 80038da:	685b      	ldr	r3, [r3, #4]
 80038dc:	f003 030c 	and.w	r3, r3, #12
 80038e0:	2b04      	cmp	r3, #4
 80038e2:	d00c      	beq.n	80038fe <HAL_RCC_OscConfig+0x46>
 80038e4:	4b8f      	ldr	r3, [pc, #572]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 80038e6:	685b      	ldr	r3, [r3, #4]
 80038e8:	f003 030c 	and.w	r3, r3, #12
 80038ec:	2b08      	cmp	r3, #8
 80038ee:	d112      	bne.n	8003916 <HAL_RCC_OscConfig+0x5e>
 80038f0:	4b8c      	ldr	r3, [pc, #560]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 80038f2:	685b      	ldr	r3, [r3, #4]
 80038f4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80038f8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80038fc:	d10b      	bne.n	8003916 <HAL_RCC_OscConfig+0x5e>
 80038fe:	4b89      	ldr	r3, [pc, #548]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003906:	2b00      	cmp	r3, #0
 8003908:	d06c      	beq.n	80039e4 <HAL_RCC_OscConfig+0x12c>
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	685b      	ldr	r3, [r3, #4]
 800390e:	2b00      	cmp	r3, #0
 8003910:	d168      	bne.n	80039e4 <HAL_RCC_OscConfig+0x12c>
 8003912:	2301      	movs	r3, #1
 8003914:	e24c      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	685b      	ldr	r3, [r3, #4]
 800391a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800391e:	d106      	bne.n	800392e <HAL_RCC_OscConfig+0x76>
 8003920:	4b80      	ldr	r3, [pc, #512]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	4a7f      	ldr	r2, [pc, #508]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003926:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800392a:	6013      	str	r3, [r2, #0]
 800392c:	e02e      	b.n	800398c <HAL_RCC_OscConfig+0xd4>
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	2b00      	cmp	r3, #0
 8003934:	d10c      	bne.n	8003950 <HAL_RCC_OscConfig+0x98>
 8003936:	4b7b      	ldr	r3, [pc, #492]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	4a7a      	ldr	r2, [pc, #488]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 800393c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003940:	6013      	str	r3, [r2, #0]
 8003942:	4b78      	ldr	r3, [pc, #480]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	4a77      	ldr	r2, [pc, #476]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003948:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800394c:	6013      	str	r3, [r2, #0]
 800394e:	e01d      	b.n	800398c <HAL_RCC_OscConfig+0xd4>
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	685b      	ldr	r3, [r3, #4]
 8003954:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003958:	d10c      	bne.n	8003974 <HAL_RCC_OscConfig+0xbc>
 800395a:	4b72      	ldr	r3, [pc, #456]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	4a71      	ldr	r2, [pc, #452]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003960:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003964:	6013      	str	r3, [r2, #0]
 8003966:	4b6f      	ldr	r3, [pc, #444]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	4a6e      	ldr	r2, [pc, #440]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 800396c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003970:	6013      	str	r3, [r2, #0]
 8003972:	e00b      	b.n	800398c <HAL_RCC_OscConfig+0xd4>
 8003974:	4b6b      	ldr	r3, [pc, #428]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	4a6a      	ldr	r2, [pc, #424]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 800397a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800397e:	6013      	str	r3, [r2, #0]
 8003980:	4b68      	ldr	r3, [pc, #416]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	4a67      	ldr	r2, [pc, #412]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003986:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800398a:	6013      	str	r3, [r2, #0]
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	685b      	ldr	r3, [r3, #4]
 8003990:	2b00      	cmp	r3, #0
 8003992:	d013      	beq.n	80039bc <HAL_RCC_OscConfig+0x104>
 8003994:	f7ff fc3e 	bl	8003214 <HAL_GetTick>
 8003998:	6138      	str	r0, [r7, #16]
 800399a:	e008      	b.n	80039ae <HAL_RCC_OscConfig+0xf6>
 800399c:	f7ff fc3a 	bl	8003214 <HAL_GetTick>
 80039a0:	4602      	mov	r2, r0
 80039a2:	693b      	ldr	r3, [r7, #16]
 80039a4:	1ad3      	subs	r3, r2, r3
 80039a6:	2b64      	cmp	r3, #100	; 0x64
 80039a8:	d901      	bls.n	80039ae <HAL_RCC_OscConfig+0xf6>
 80039aa:	2303      	movs	r3, #3
 80039ac:	e200      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 80039ae:	4b5d      	ldr	r3, [pc, #372]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d0f0      	beq.n	800399c <HAL_RCC_OscConfig+0xe4>
 80039ba:	e014      	b.n	80039e6 <HAL_RCC_OscConfig+0x12e>
 80039bc:	f7ff fc2a 	bl	8003214 <HAL_GetTick>
 80039c0:	6138      	str	r0, [r7, #16]
 80039c2:	e008      	b.n	80039d6 <HAL_RCC_OscConfig+0x11e>
 80039c4:	f7ff fc26 	bl	8003214 <HAL_GetTick>
 80039c8:	4602      	mov	r2, r0
 80039ca:	693b      	ldr	r3, [r7, #16]
 80039cc:	1ad3      	subs	r3, r2, r3
 80039ce:	2b64      	cmp	r3, #100	; 0x64
 80039d0:	d901      	bls.n	80039d6 <HAL_RCC_OscConfig+0x11e>
 80039d2:	2303      	movs	r3, #3
 80039d4:	e1ec      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 80039d6:	4b53      	ldr	r3, [pc, #332]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d1f0      	bne.n	80039c4 <HAL_RCC_OscConfig+0x10c>
 80039e2:	e000      	b.n	80039e6 <HAL_RCC_OscConfig+0x12e>
 80039e4:	bf00      	nop
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	f003 0302 	and.w	r3, r3, #2
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d063      	beq.n	8003aba <HAL_RCC_OscConfig+0x202>
 80039f2:	4b4c      	ldr	r3, [pc, #304]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 80039f4:	685b      	ldr	r3, [r3, #4]
 80039f6:	f003 030c 	and.w	r3, r3, #12
 80039fa:	2b00      	cmp	r3, #0
 80039fc:	d00b      	beq.n	8003a16 <HAL_RCC_OscConfig+0x15e>
 80039fe:	4b49      	ldr	r3, [pc, #292]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a00:	685b      	ldr	r3, [r3, #4]
 8003a02:	f003 030c 	and.w	r3, r3, #12
 8003a06:	2b08      	cmp	r3, #8
 8003a08:	d11c      	bne.n	8003a44 <HAL_RCC_OscConfig+0x18c>
 8003a0a:	4b46      	ldr	r3, [pc, #280]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a0c:	685b      	ldr	r3, [r3, #4]
 8003a0e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003a12:	2b00      	cmp	r3, #0
 8003a14:	d116      	bne.n	8003a44 <HAL_RCC_OscConfig+0x18c>
 8003a16:	4b43      	ldr	r3, [pc, #268]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	f003 0302 	and.w	r3, r3, #2
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d005      	beq.n	8003a2e <HAL_RCC_OscConfig+0x176>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	691b      	ldr	r3, [r3, #16]
 8003a26:	2b01      	cmp	r3, #1
 8003a28:	d001      	beq.n	8003a2e <HAL_RCC_OscConfig+0x176>
 8003a2a:	2301      	movs	r3, #1
 8003a2c:	e1c0      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003a2e:	4b3d      	ldr	r3, [pc, #244]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	695b      	ldr	r3, [r3, #20]
 8003a3a:	00db      	lsls	r3, r3, #3
 8003a3c:	4939      	ldr	r1, [pc, #228]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a3e:	4313      	orrs	r3, r2
 8003a40:	600b      	str	r3, [r1, #0]
 8003a42:	e03a      	b.n	8003aba <HAL_RCC_OscConfig+0x202>
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	691b      	ldr	r3, [r3, #16]
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	d020      	beq.n	8003a8e <HAL_RCC_OscConfig+0x1d6>
 8003a4c:	4b36      	ldr	r3, [pc, #216]	; (8003b28 <HAL_RCC_OscConfig+0x270>)
 8003a4e:	2201      	movs	r2, #1
 8003a50:	601a      	str	r2, [r3, #0]
 8003a52:	f7ff fbdf 	bl	8003214 <HAL_GetTick>
 8003a56:	6138      	str	r0, [r7, #16]
 8003a58:	e008      	b.n	8003a6c <HAL_RCC_OscConfig+0x1b4>
 8003a5a:	f7ff fbdb 	bl	8003214 <HAL_GetTick>
 8003a5e:	4602      	mov	r2, r0
 8003a60:	693b      	ldr	r3, [r7, #16]
 8003a62:	1ad3      	subs	r3, r2, r3
 8003a64:	2b02      	cmp	r3, #2
 8003a66:	d901      	bls.n	8003a6c <HAL_RCC_OscConfig+0x1b4>
 8003a68:	2303      	movs	r3, #3
 8003a6a:	e1a1      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003a6c:	4b2d      	ldr	r3, [pc, #180]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	f003 0302 	and.w	r3, r3, #2
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d0f0      	beq.n	8003a5a <HAL_RCC_OscConfig+0x1a2>
 8003a78:	4b2a      	ldr	r3, [pc, #168]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	695b      	ldr	r3, [r3, #20]
 8003a84:	00db      	lsls	r3, r3, #3
 8003a86:	4927      	ldr	r1, [pc, #156]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003a88:	4313      	orrs	r3, r2
 8003a8a:	600b      	str	r3, [r1, #0]
 8003a8c:	e015      	b.n	8003aba <HAL_RCC_OscConfig+0x202>
 8003a8e:	4b26      	ldr	r3, [pc, #152]	; (8003b28 <HAL_RCC_OscConfig+0x270>)
 8003a90:	2200      	movs	r2, #0
 8003a92:	601a      	str	r2, [r3, #0]
 8003a94:	f7ff fbbe 	bl	8003214 <HAL_GetTick>
 8003a98:	6138      	str	r0, [r7, #16]
 8003a9a:	e008      	b.n	8003aae <HAL_RCC_OscConfig+0x1f6>
 8003a9c:	f7ff fbba 	bl	8003214 <HAL_GetTick>
 8003aa0:	4602      	mov	r2, r0
 8003aa2:	693b      	ldr	r3, [r7, #16]
 8003aa4:	1ad3      	subs	r3, r2, r3
 8003aa6:	2b02      	cmp	r3, #2
 8003aa8:	d901      	bls.n	8003aae <HAL_RCC_OscConfig+0x1f6>
 8003aaa:	2303      	movs	r3, #3
 8003aac:	e180      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003aae:	4b1d      	ldr	r3, [pc, #116]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	f003 0302 	and.w	r3, r3, #2
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d1f0      	bne.n	8003a9c <HAL_RCC_OscConfig+0x1e4>
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	f003 0308 	and.w	r3, r3, #8
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d03a      	beq.n	8003b3c <HAL_RCC_OscConfig+0x284>
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	699b      	ldr	r3, [r3, #24]
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d019      	beq.n	8003b02 <HAL_RCC_OscConfig+0x24a>
 8003ace:	4b17      	ldr	r3, [pc, #92]	; (8003b2c <HAL_RCC_OscConfig+0x274>)
 8003ad0:	2201      	movs	r2, #1
 8003ad2:	601a      	str	r2, [r3, #0]
 8003ad4:	f7ff fb9e 	bl	8003214 <HAL_GetTick>
 8003ad8:	6138      	str	r0, [r7, #16]
 8003ada:	e008      	b.n	8003aee <HAL_RCC_OscConfig+0x236>
 8003adc:	f7ff fb9a 	bl	8003214 <HAL_GetTick>
 8003ae0:	4602      	mov	r2, r0
 8003ae2:	693b      	ldr	r3, [r7, #16]
 8003ae4:	1ad3      	subs	r3, r2, r3
 8003ae6:	2b02      	cmp	r3, #2
 8003ae8:	d901      	bls.n	8003aee <HAL_RCC_OscConfig+0x236>
 8003aea:	2303      	movs	r3, #3
 8003aec:	e160      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003aee:	4b0d      	ldr	r3, [pc, #52]	; (8003b24 <HAL_RCC_OscConfig+0x26c>)
 8003af0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003af2:	f003 0302 	and.w	r3, r3, #2
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d0f0      	beq.n	8003adc <HAL_RCC_OscConfig+0x224>
 8003afa:	2001      	movs	r0, #1
 8003afc:	f000 fb1e 	bl	800413c <RCC_Delay>
 8003b00:	e01c      	b.n	8003b3c <HAL_RCC_OscConfig+0x284>
 8003b02:	4b0a      	ldr	r3, [pc, #40]	; (8003b2c <HAL_RCC_OscConfig+0x274>)
 8003b04:	2200      	movs	r2, #0
 8003b06:	601a      	str	r2, [r3, #0]
 8003b08:	f7ff fb84 	bl	8003214 <HAL_GetTick>
 8003b0c:	6138      	str	r0, [r7, #16]
 8003b0e:	e00f      	b.n	8003b30 <HAL_RCC_OscConfig+0x278>
 8003b10:	f7ff fb80 	bl	8003214 <HAL_GetTick>
 8003b14:	4602      	mov	r2, r0
 8003b16:	693b      	ldr	r3, [r7, #16]
 8003b18:	1ad3      	subs	r3, r2, r3
 8003b1a:	2b02      	cmp	r3, #2
 8003b1c:	d908      	bls.n	8003b30 <HAL_RCC_OscConfig+0x278>
 8003b1e:	2303      	movs	r3, #3
 8003b20:	e146      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003b22:	bf00      	nop
 8003b24:	40021000 	.word	0x40021000
 8003b28:	42420000 	.word	0x42420000
 8003b2c:	42420480 	.word	0x42420480
 8003b30:	4b92      	ldr	r3, [pc, #584]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003b32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b34:	f003 0302 	and.w	r3, r3, #2
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d1e9      	bne.n	8003b10 <HAL_RCC_OscConfig+0x258>
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	f003 0304 	and.w	r3, r3, #4
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	f000 80a6 	beq.w	8003c96 <HAL_RCC_OscConfig+0x3de>
 8003b4a:	2300      	movs	r3, #0
 8003b4c:	75fb      	strb	r3, [r7, #23]
 8003b4e:	4b8b      	ldr	r3, [pc, #556]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003b50:	69db      	ldr	r3, [r3, #28]
 8003b52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b56:	2b00      	cmp	r3, #0
 8003b58:	d10d      	bne.n	8003b76 <HAL_RCC_OscConfig+0x2be>
 8003b5a:	4b88      	ldr	r3, [pc, #544]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003b5c:	69db      	ldr	r3, [r3, #28]
 8003b5e:	4a87      	ldr	r2, [pc, #540]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003b60:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003b64:	61d3      	str	r3, [r2, #28]
 8003b66:	4b85      	ldr	r3, [pc, #532]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003b68:	69db      	ldr	r3, [r3, #28]
 8003b6a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b6e:	60bb      	str	r3, [r7, #8]
 8003b70:	68bb      	ldr	r3, [r7, #8]
 8003b72:	2301      	movs	r3, #1
 8003b74:	75fb      	strb	r3, [r7, #23]
 8003b76:	4b82      	ldr	r3, [pc, #520]	; (8003d80 <HAL_RCC_OscConfig+0x4c8>)
 8003b78:	681b      	ldr	r3, [r3, #0]
 8003b7a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d118      	bne.n	8003bb4 <HAL_RCC_OscConfig+0x2fc>
 8003b82:	4b7f      	ldr	r3, [pc, #508]	; (8003d80 <HAL_RCC_OscConfig+0x4c8>)
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	4a7e      	ldr	r2, [pc, #504]	; (8003d80 <HAL_RCC_OscConfig+0x4c8>)
 8003b88:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003b8c:	6013      	str	r3, [r2, #0]
 8003b8e:	f7ff fb41 	bl	8003214 <HAL_GetTick>
 8003b92:	6138      	str	r0, [r7, #16]
 8003b94:	e008      	b.n	8003ba8 <HAL_RCC_OscConfig+0x2f0>
 8003b96:	f7ff fb3d 	bl	8003214 <HAL_GetTick>
 8003b9a:	4602      	mov	r2, r0
 8003b9c:	693b      	ldr	r3, [r7, #16]
 8003b9e:	1ad3      	subs	r3, r2, r3
 8003ba0:	2b64      	cmp	r3, #100	; 0x64
 8003ba2:	d901      	bls.n	8003ba8 <HAL_RCC_OscConfig+0x2f0>
 8003ba4:	2303      	movs	r3, #3
 8003ba6:	e103      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003ba8:	4b75      	ldr	r3, [pc, #468]	; (8003d80 <HAL_RCC_OscConfig+0x4c8>)
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	d0f0      	beq.n	8003b96 <HAL_RCC_OscConfig+0x2de>
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	68db      	ldr	r3, [r3, #12]
 8003bb8:	2b01      	cmp	r3, #1
 8003bba:	d106      	bne.n	8003bca <HAL_RCC_OscConfig+0x312>
 8003bbc:	4b6f      	ldr	r3, [pc, #444]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003bbe:	6a1b      	ldr	r3, [r3, #32]
 8003bc0:	4a6e      	ldr	r2, [pc, #440]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003bc2:	f043 0301 	orr.w	r3, r3, #1
 8003bc6:	6213      	str	r3, [r2, #32]
 8003bc8:	e02d      	b.n	8003c26 <HAL_RCC_OscConfig+0x36e>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	68db      	ldr	r3, [r3, #12]
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d10c      	bne.n	8003bec <HAL_RCC_OscConfig+0x334>
 8003bd2:	4b6a      	ldr	r3, [pc, #424]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003bd4:	6a1b      	ldr	r3, [r3, #32]
 8003bd6:	4a69      	ldr	r2, [pc, #420]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003bd8:	f023 0301 	bic.w	r3, r3, #1
 8003bdc:	6213      	str	r3, [r2, #32]
 8003bde:	4b67      	ldr	r3, [pc, #412]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003be0:	6a1b      	ldr	r3, [r3, #32]
 8003be2:	4a66      	ldr	r2, [pc, #408]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003be4:	f023 0304 	bic.w	r3, r3, #4
 8003be8:	6213      	str	r3, [r2, #32]
 8003bea:	e01c      	b.n	8003c26 <HAL_RCC_OscConfig+0x36e>
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	68db      	ldr	r3, [r3, #12]
 8003bf0:	2b05      	cmp	r3, #5
 8003bf2:	d10c      	bne.n	8003c0e <HAL_RCC_OscConfig+0x356>
 8003bf4:	4b61      	ldr	r3, [pc, #388]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003bf6:	6a1b      	ldr	r3, [r3, #32]
 8003bf8:	4a60      	ldr	r2, [pc, #384]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003bfa:	f043 0304 	orr.w	r3, r3, #4
 8003bfe:	6213      	str	r3, [r2, #32]
 8003c00:	4b5e      	ldr	r3, [pc, #376]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c02:	6a1b      	ldr	r3, [r3, #32]
 8003c04:	4a5d      	ldr	r2, [pc, #372]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c06:	f043 0301 	orr.w	r3, r3, #1
 8003c0a:	6213      	str	r3, [r2, #32]
 8003c0c:	e00b      	b.n	8003c26 <HAL_RCC_OscConfig+0x36e>
 8003c0e:	4b5b      	ldr	r3, [pc, #364]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c10:	6a1b      	ldr	r3, [r3, #32]
 8003c12:	4a5a      	ldr	r2, [pc, #360]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c14:	f023 0301 	bic.w	r3, r3, #1
 8003c18:	6213      	str	r3, [r2, #32]
 8003c1a:	4b58      	ldr	r3, [pc, #352]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c1c:	6a1b      	ldr	r3, [r3, #32]
 8003c1e:	4a57      	ldr	r2, [pc, #348]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c20:	f023 0304 	bic.w	r3, r3, #4
 8003c24:	6213      	str	r3, [r2, #32]
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	68db      	ldr	r3, [r3, #12]
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	d015      	beq.n	8003c5a <HAL_RCC_OscConfig+0x3a2>
 8003c2e:	f7ff faf1 	bl	8003214 <HAL_GetTick>
 8003c32:	6138      	str	r0, [r7, #16]
 8003c34:	e00a      	b.n	8003c4c <HAL_RCC_OscConfig+0x394>
 8003c36:	f7ff faed 	bl	8003214 <HAL_GetTick>
 8003c3a:	4602      	mov	r2, r0
 8003c3c:	693b      	ldr	r3, [r7, #16]
 8003c3e:	1ad3      	subs	r3, r2, r3
 8003c40:	f241 3288 	movw	r2, #5000	; 0x1388
 8003c44:	4293      	cmp	r3, r2
 8003c46:	d901      	bls.n	8003c4c <HAL_RCC_OscConfig+0x394>
 8003c48:	2303      	movs	r3, #3
 8003c4a:	e0b1      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003c4c:	4b4b      	ldr	r3, [pc, #300]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c4e:	6a1b      	ldr	r3, [r3, #32]
 8003c50:	f003 0302 	and.w	r3, r3, #2
 8003c54:	2b00      	cmp	r3, #0
 8003c56:	d0ee      	beq.n	8003c36 <HAL_RCC_OscConfig+0x37e>
 8003c58:	e014      	b.n	8003c84 <HAL_RCC_OscConfig+0x3cc>
 8003c5a:	f7ff fadb 	bl	8003214 <HAL_GetTick>
 8003c5e:	6138      	str	r0, [r7, #16]
 8003c60:	e00a      	b.n	8003c78 <HAL_RCC_OscConfig+0x3c0>
 8003c62:	f7ff fad7 	bl	8003214 <HAL_GetTick>
 8003c66:	4602      	mov	r2, r0
 8003c68:	693b      	ldr	r3, [r7, #16]
 8003c6a:	1ad3      	subs	r3, r2, r3
 8003c6c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003c70:	4293      	cmp	r3, r2
 8003c72:	d901      	bls.n	8003c78 <HAL_RCC_OscConfig+0x3c0>
 8003c74:	2303      	movs	r3, #3
 8003c76:	e09b      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003c78:	4b40      	ldr	r3, [pc, #256]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c7a:	6a1b      	ldr	r3, [r3, #32]
 8003c7c:	f003 0302 	and.w	r3, r3, #2
 8003c80:	2b00      	cmp	r3, #0
 8003c82:	d1ee      	bne.n	8003c62 <HAL_RCC_OscConfig+0x3aa>
 8003c84:	7dfb      	ldrb	r3, [r7, #23]
 8003c86:	2b01      	cmp	r3, #1
 8003c88:	d105      	bne.n	8003c96 <HAL_RCC_OscConfig+0x3de>
 8003c8a:	4b3c      	ldr	r3, [pc, #240]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c8c:	69db      	ldr	r3, [r3, #28]
 8003c8e:	4a3b      	ldr	r2, [pc, #236]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003c90:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003c94:	61d3      	str	r3, [r2, #28]
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	69db      	ldr	r3, [r3, #28]
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	f000 8087 	beq.w	8003dae <HAL_RCC_OscConfig+0x4f6>
 8003ca0:	4b36      	ldr	r3, [pc, #216]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003ca2:	685b      	ldr	r3, [r3, #4]
 8003ca4:	f003 030c 	and.w	r3, r3, #12
 8003ca8:	2b08      	cmp	r3, #8
 8003caa:	d061      	beq.n	8003d70 <HAL_RCC_OscConfig+0x4b8>
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	69db      	ldr	r3, [r3, #28]
 8003cb0:	2b02      	cmp	r3, #2
 8003cb2:	d146      	bne.n	8003d42 <HAL_RCC_OscConfig+0x48a>
 8003cb4:	4b33      	ldr	r3, [pc, #204]	; (8003d84 <HAL_RCC_OscConfig+0x4cc>)
 8003cb6:	2200      	movs	r2, #0
 8003cb8:	601a      	str	r2, [r3, #0]
 8003cba:	f7ff faab 	bl	8003214 <HAL_GetTick>
 8003cbe:	6138      	str	r0, [r7, #16]
 8003cc0:	e008      	b.n	8003cd4 <HAL_RCC_OscConfig+0x41c>
 8003cc2:	f7ff faa7 	bl	8003214 <HAL_GetTick>
 8003cc6:	4602      	mov	r2, r0
 8003cc8:	693b      	ldr	r3, [r7, #16]
 8003cca:	1ad3      	subs	r3, r2, r3
 8003ccc:	2b02      	cmp	r3, #2
 8003cce:	d901      	bls.n	8003cd4 <HAL_RCC_OscConfig+0x41c>
 8003cd0:	2303      	movs	r3, #3
 8003cd2:	e06d      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003cd4:	4b29      	ldr	r3, [pc, #164]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003cdc:	2b00      	cmp	r3, #0
 8003cde:	d1f0      	bne.n	8003cc2 <HAL_RCC_OscConfig+0x40a>
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	6a1b      	ldr	r3, [r3, #32]
 8003ce4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003ce8:	d108      	bne.n	8003cfc <HAL_RCC_OscConfig+0x444>
 8003cea:	4b24      	ldr	r3, [pc, #144]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003cec:	685b      	ldr	r3, [r3, #4]
 8003cee:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	689b      	ldr	r3, [r3, #8]
 8003cf6:	4921      	ldr	r1, [pc, #132]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003cf8:	4313      	orrs	r3, r2
 8003cfa:	604b      	str	r3, [r1, #4]
 8003cfc:	4b1f      	ldr	r3, [pc, #124]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003cfe:	685b      	ldr	r3, [r3, #4]
 8003d00:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	6a19      	ldr	r1, [r3, #32]
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d0c:	430b      	orrs	r3, r1
 8003d0e:	491b      	ldr	r1, [pc, #108]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003d10:	4313      	orrs	r3, r2
 8003d12:	604b      	str	r3, [r1, #4]
 8003d14:	4b1b      	ldr	r3, [pc, #108]	; (8003d84 <HAL_RCC_OscConfig+0x4cc>)
 8003d16:	2201      	movs	r2, #1
 8003d18:	601a      	str	r2, [r3, #0]
 8003d1a:	f7ff fa7b 	bl	8003214 <HAL_GetTick>
 8003d1e:	6138      	str	r0, [r7, #16]
 8003d20:	e008      	b.n	8003d34 <HAL_RCC_OscConfig+0x47c>
 8003d22:	f7ff fa77 	bl	8003214 <HAL_GetTick>
 8003d26:	4602      	mov	r2, r0
 8003d28:	693b      	ldr	r3, [r7, #16]
 8003d2a:	1ad3      	subs	r3, r2, r3
 8003d2c:	2b02      	cmp	r3, #2
 8003d2e:	d901      	bls.n	8003d34 <HAL_RCC_OscConfig+0x47c>
 8003d30:	2303      	movs	r3, #3
 8003d32:	e03d      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003d34:	4b11      	ldr	r3, [pc, #68]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	d0f0      	beq.n	8003d22 <HAL_RCC_OscConfig+0x46a>
 8003d40:	e035      	b.n	8003dae <HAL_RCC_OscConfig+0x4f6>
 8003d42:	4b10      	ldr	r3, [pc, #64]	; (8003d84 <HAL_RCC_OscConfig+0x4cc>)
 8003d44:	2200      	movs	r2, #0
 8003d46:	601a      	str	r2, [r3, #0]
 8003d48:	f7ff fa64 	bl	8003214 <HAL_GetTick>
 8003d4c:	6138      	str	r0, [r7, #16]
 8003d4e:	e008      	b.n	8003d62 <HAL_RCC_OscConfig+0x4aa>
 8003d50:	f7ff fa60 	bl	8003214 <HAL_GetTick>
 8003d54:	4602      	mov	r2, r0
 8003d56:	693b      	ldr	r3, [r7, #16]
 8003d58:	1ad3      	subs	r3, r2, r3
 8003d5a:	2b02      	cmp	r3, #2
 8003d5c:	d901      	bls.n	8003d62 <HAL_RCC_OscConfig+0x4aa>
 8003d5e:	2303      	movs	r3, #3
 8003d60:	e026      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003d62:	4b06      	ldr	r3, [pc, #24]	; (8003d7c <HAL_RCC_OscConfig+0x4c4>)
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d1f0      	bne.n	8003d50 <HAL_RCC_OscConfig+0x498>
 8003d6e:	e01e      	b.n	8003dae <HAL_RCC_OscConfig+0x4f6>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	69db      	ldr	r3, [r3, #28]
 8003d74:	2b01      	cmp	r3, #1
 8003d76:	d107      	bne.n	8003d88 <HAL_RCC_OscConfig+0x4d0>
 8003d78:	2301      	movs	r3, #1
 8003d7a:	e019      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003d7c:	40021000 	.word	0x40021000
 8003d80:	40007000 	.word	0x40007000
 8003d84:	42420060 	.word	0x42420060
 8003d88:	4b0b      	ldr	r3, [pc, #44]	; (8003db8 <HAL_RCC_OscConfig+0x500>)
 8003d8a:	685b      	ldr	r3, [r3, #4]
 8003d8c:	60fb      	str	r3, [r7, #12]
 8003d8e:	68fb      	ldr	r3, [r7, #12]
 8003d90:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	6a1b      	ldr	r3, [r3, #32]
 8003d98:	429a      	cmp	r2, r3
 8003d9a:	d106      	bne.n	8003daa <HAL_RCC_OscConfig+0x4f2>
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003da6:	429a      	cmp	r2, r3
 8003da8:	d001      	beq.n	8003dae <HAL_RCC_OscConfig+0x4f6>
 8003daa:	2301      	movs	r3, #1
 8003dac:	e000      	b.n	8003db0 <HAL_RCC_OscConfig+0x4f8>
 8003dae:	2300      	movs	r3, #0
 8003db0:	4618      	mov	r0, r3
 8003db2:	3718      	adds	r7, #24
 8003db4:	46bd      	mov	sp, r7
 8003db6:	bd80      	pop	{r7, pc}
 8003db8:	40021000 	.word	0x40021000

08003dbc <HAL_RCC_ClockConfig>:
 8003dbc:	b580      	push	{r7, lr}
 8003dbe:	b084      	sub	sp, #16
 8003dc0:	af00      	add	r7, sp, #0
 8003dc2:	6078      	str	r0, [r7, #4]
 8003dc4:	6039      	str	r1, [r7, #0]
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	2b00      	cmp	r3, #0
 8003dca:	d101      	bne.n	8003dd0 <HAL_RCC_ClockConfig+0x14>
 8003dcc:	2301      	movs	r3, #1
 8003dce:	e0d0      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003dd0:	4b6a      	ldr	r3, [pc, #424]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	f003 0307 	and.w	r3, r3, #7
 8003dd8:	683a      	ldr	r2, [r7, #0]
 8003dda:	429a      	cmp	r2, r3
 8003ddc:	d910      	bls.n	8003e00 <HAL_RCC_ClockConfig+0x44>
 8003dde:	4b67      	ldr	r3, [pc, #412]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	f023 0207 	bic.w	r2, r3, #7
 8003de6:	4965      	ldr	r1, [pc, #404]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003de8:	683b      	ldr	r3, [r7, #0]
 8003dea:	4313      	orrs	r3, r2
 8003dec:	600b      	str	r3, [r1, #0]
 8003dee:	4b63      	ldr	r3, [pc, #396]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	f003 0307 	and.w	r3, r3, #7
 8003df6:	683a      	ldr	r2, [r7, #0]
 8003df8:	429a      	cmp	r2, r3
 8003dfa:	d001      	beq.n	8003e00 <HAL_RCC_ClockConfig+0x44>
 8003dfc:	2301      	movs	r3, #1
 8003dfe:	e0b8      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	f003 0302 	and.w	r3, r3, #2
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	d020      	beq.n	8003e4e <HAL_RCC_ClockConfig+0x92>
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	f003 0304 	and.w	r3, r3, #4
 8003e14:	2b00      	cmp	r3, #0
 8003e16:	d005      	beq.n	8003e24 <HAL_RCC_ClockConfig+0x68>
 8003e18:	4b59      	ldr	r3, [pc, #356]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e1a:	685b      	ldr	r3, [r3, #4]
 8003e1c:	4a58      	ldr	r2, [pc, #352]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e1e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8003e22:	6053      	str	r3, [r2, #4]
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	f003 0308 	and.w	r3, r3, #8
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	d005      	beq.n	8003e3c <HAL_RCC_ClockConfig+0x80>
 8003e30:	4b53      	ldr	r3, [pc, #332]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e32:	685b      	ldr	r3, [r3, #4]
 8003e34:	4a52      	ldr	r2, [pc, #328]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e36:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8003e3a:	6053      	str	r3, [r2, #4]
 8003e3c:	4b50      	ldr	r3, [pc, #320]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e3e:	685b      	ldr	r3, [r3, #4]
 8003e40:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	689b      	ldr	r3, [r3, #8]
 8003e48:	494d      	ldr	r1, [pc, #308]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e4a:	4313      	orrs	r3, r2
 8003e4c:	604b      	str	r3, [r1, #4]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	f003 0301 	and.w	r3, r3, #1
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d040      	beq.n	8003edc <HAL_RCC_ClockConfig+0x120>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	685b      	ldr	r3, [r3, #4]
 8003e5e:	2b01      	cmp	r3, #1
 8003e60:	d107      	bne.n	8003e72 <HAL_RCC_ClockConfig+0xb6>
 8003e62:	4b47      	ldr	r3, [pc, #284]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d115      	bne.n	8003e9a <HAL_RCC_ClockConfig+0xde>
 8003e6e:	2301      	movs	r3, #1
 8003e70:	e07f      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	685b      	ldr	r3, [r3, #4]
 8003e76:	2b02      	cmp	r3, #2
 8003e78:	d107      	bne.n	8003e8a <HAL_RCC_ClockConfig+0xce>
 8003e7a:	4b41      	ldr	r3, [pc, #260]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d109      	bne.n	8003e9a <HAL_RCC_ClockConfig+0xde>
 8003e86:	2301      	movs	r3, #1
 8003e88:	e073      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003e8a:	4b3d      	ldr	r3, [pc, #244]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	f003 0302 	and.w	r3, r3, #2
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d101      	bne.n	8003e9a <HAL_RCC_ClockConfig+0xde>
 8003e96:	2301      	movs	r3, #1
 8003e98:	e06b      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003e9a:	4b39      	ldr	r3, [pc, #228]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003e9c:	685b      	ldr	r3, [r3, #4]
 8003e9e:	f023 0203 	bic.w	r2, r3, #3
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	685b      	ldr	r3, [r3, #4]
 8003ea6:	4936      	ldr	r1, [pc, #216]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003ea8:	4313      	orrs	r3, r2
 8003eaa:	604b      	str	r3, [r1, #4]
 8003eac:	f7ff f9b2 	bl	8003214 <HAL_GetTick>
 8003eb0:	60f8      	str	r0, [r7, #12]
 8003eb2:	e00a      	b.n	8003eca <HAL_RCC_ClockConfig+0x10e>
 8003eb4:	f7ff f9ae 	bl	8003214 <HAL_GetTick>
 8003eb8:	4602      	mov	r2, r0
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	1ad3      	subs	r3, r2, r3
 8003ebe:	f241 3288 	movw	r2, #5000	; 0x1388
 8003ec2:	4293      	cmp	r3, r2
 8003ec4:	d901      	bls.n	8003eca <HAL_RCC_ClockConfig+0x10e>
 8003ec6:	2303      	movs	r3, #3
 8003ec8:	e053      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003eca:	4b2d      	ldr	r3, [pc, #180]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003ecc:	685b      	ldr	r3, [r3, #4]
 8003ece:	f003 020c 	and.w	r2, r3, #12
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	685b      	ldr	r3, [r3, #4]
 8003ed6:	009b      	lsls	r3, r3, #2
 8003ed8:	429a      	cmp	r2, r3
 8003eda:	d1eb      	bne.n	8003eb4 <HAL_RCC_ClockConfig+0xf8>
 8003edc:	4b27      	ldr	r3, [pc, #156]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	f003 0307 	and.w	r3, r3, #7
 8003ee4:	683a      	ldr	r2, [r7, #0]
 8003ee6:	429a      	cmp	r2, r3
 8003ee8:	d210      	bcs.n	8003f0c <HAL_RCC_ClockConfig+0x150>
 8003eea:	4b24      	ldr	r3, [pc, #144]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	f023 0207 	bic.w	r2, r3, #7
 8003ef2:	4922      	ldr	r1, [pc, #136]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003ef4:	683b      	ldr	r3, [r7, #0]
 8003ef6:	4313      	orrs	r3, r2
 8003ef8:	600b      	str	r3, [r1, #0]
 8003efa:	4b20      	ldr	r3, [pc, #128]	; (8003f7c <HAL_RCC_ClockConfig+0x1c0>)
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	f003 0307 	and.w	r3, r3, #7
 8003f02:	683a      	ldr	r2, [r7, #0]
 8003f04:	429a      	cmp	r2, r3
 8003f06:	d001      	beq.n	8003f0c <HAL_RCC_ClockConfig+0x150>
 8003f08:	2301      	movs	r3, #1
 8003f0a:	e032      	b.n	8003f72 <HAL_RCC_ClockConfig+0x1b6>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	f003 0304 	and.w	r3, r3, #4
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	d008      	beq.n	8003f2a <HAL_RCC_ClockConfig+0x16e>
 8003f18:	4b19      	ldr	r3, [pc, #100]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003f1a:	685b      	ldr	r3, [r3, #4]
 8003f1c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	68db      	ldr	r3, [r3, #12]
 8003f24:	4916      	ldr	r1, [pc, #88]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003f26:	4313      	orrs	r3, r2
 8003f28:	604b      	str	r3, [r1, #4]
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	f003 0308 	and.w	r3, r3, #8
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d009      	beq.n	8003f4a <HAL_RCC_ClockConfig+0x18e>
 8003f36:	4b12      	ldr	r3, [pc, #72]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003f38:	685b      	ldr	r3, [r3, #4]
 8003f3a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	691b      	ldr	r3, [r3, #16]
 8003f42:	00db      	lsls	r3, r3, #3
 8003f44:	490e      	ldr	r1, [pc, #56]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003f46:	4313      	orrs	r3, r2
 8003f48:	604b      	str	r3, [r1, #4]
 8003f4a:	f000 f82d 	bl	8003fa8 <HAL_RCC_GetSysClockFreq>
 8003f4e:	4602      	mov	r2, r0
 8003f50:	4b0b      	ldr	r3, [pc, #44]	; (8003f80 <HAL_RCC_ClockConfig+0x1c4>)
 8003f52:	685b      	ldr	r3, [r3, #4]
 8003f54:	091b      	lsrs	r3, r3, #4
 8003f56:	f003 030f 	and.w	r3, r3, #15
 8003f5a:	490a      	ldr	r1, [pc, #40]	; (8003f84 <HAL_RCC_ClockConfig+0x1c8>)
 8003f5c:	5ccb      	ldrb	r3, [r1, r3]
 8003f5e:	fa22 f303 	lsr.w	r3, r2, r3
 8003f62:	4a09      	ldr	r2, [pc, #36]	; (8003f88 <HAL_RCC_ClockConfig+0x1cc>)
 8003f64:	6013      	str	r3, [r2, #0]
 8003f66:	4b09      	ldr	r3, [pc, #36]	; (8003f8c <HAL_RCC_ClockConfig+0x1d0>)
 8003f68:	681b      	ldr	r3, [r3, #0]
 8003f6a:	4618      	mov	r0, r3
 8003f6c:	f7fe ff5c 	bl	8002e28 <HAL_InitTick>
 8003f70:	2300      	movs	r3, #0
 8003f72:	4618      	mov	r0, r3
 8003f74:	3710      	adds	r7, #16
 8003f76:	46bd      	mov	sp, r7
 8003f78:	bd80      	pop	{r7, pc}
 8003f7a:	bf00      	nop
 8003f7c:	40022000 	.word	0x40022000
 8003f80:	40021000 	.word	0x40021000
 8003f84:	0800a3c0 	.word	0x0800a3c0
 8003f88:	20000000 	.word	0x20000000
 8003f8c:	20000004 	.word	0x20000004

08003f90 <HAL_RCC_EnableCSS>:
 8003f90:	b480      	push	{r7}
 8003f92:	af00      	add	r7, sp, #0
 8003f94:	4b03      	ldr	r3, [pc, #12]	; (8003fa4 <HAL_RCC_EnableCSS+0x14>)
 8003f96:	2201      	movs	r2, #1
 8003f98:	601a      	str	r2, [r3, #0]
 8003f9a:	bf00      	nop
 8003f9c:	46bd      	mov	sp, r7
 8003f9e:	bc80      	pop	{r7}
 8003fa0:	4770      	bx	lr
 8003fa2:	bf00      	nop
 8003fa4:	4242004c 	.word	0x4242004c

08003fa8 <HAL_RCC_GetSysClockFreq>:
 8003fa8:	b480      	push	{r7}
 8003faa:	b087      	sub	sp, #28
 8003fac:	af00      	add	r7, sp, #0
 8003fae:	2300      	movs	r3, #0
 8003fb0:	60fb      	str	r3, [r7, #12]
 8003fb2:	2300      	movs	r3, #0
 8003fb4:	60bb      	str	r3, [r7, #8]
 8003fb6:	2300      	movs	r3, #0
 8003fb8:	617b      	str	r3, [r7, #20]
 8003fba:	2300      	movs	r3, #0
 8003fbc:	607b      	str	r3, [r7, #4]
 8003fbe:	2300      	movs	r3, #0
 8003fc0:	613b      	str	r3, [r7, #16]
 8003fc2:	4b1e      	ldr	r3, [pc, #120]	; (800403c <HAL_RCC_GetSysClockFreq+0x94>)
 8003fc4:	685b      	ldr	r3, [r3, #4]
 8003fc6:	60fb      	str	r3, [r7, #12]
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	f003 030c 	and.w	r3, r3, #12
 8003fce:	2b04      	cmp	r3, #4
 8003fd0:	d002      	beq.n	8003fd8 <HAL_RCC_GetSysClockFreq+0x30>
 8003fd2:	2b08      	cmp	r3, #8
 8003fd4:	d003      	beq.n	8003fde <HAL_RCC_GetSysClockFreq+0x36>
 8003fd6:	e027      	b.n	8004028 <HAL_RCC_GetSysClockFreq+0x80>
 8003fd8:	4b19      	ldr	r3, [pc, #100]	; (8004040 <HAL_RCC_GetSysClockFreq+0x98>)
 8003fda:	613b      	str	r3, [r7, #16]
 8003fdc:	e027      	b.n	800402e <HAL_RCC_GetSysClockFreq+0x86>
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	0c9b      	lsrs	r3, r3, #18
 8003fe2:	f003 030f 	and.w	r3, r3, #15
 8003fe6:	4a17      	ldr	r2, [pc, #92]	; (8004044 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003fe8:	5cd3      	ldrb	r3, [r2, r3]
 8003fea:	607b      	str	r3, [r7, #4]
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d010      	beq.n	8004018 <HAL_RCC_GetSysClockFreq+0x70>
 8003ff6:	4b11      	ldr	r3, [pc, #68]	; (800403c <HAL_RCC_GetSysClockFreq+0x94>)
 8003ff8:	685b      	ldr	r3, [r3, #4]
 8003ffa:	0c5b      	lsrs	r3, r3, #17
 8003ffc:	f003 0301 	and.w	r3, r3, #1
 8004000:	4a11      	ldr	r2, [pc, #68]	; (8004048 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004002:	5cd3      	ldrb	r3, [r2, r3]
 8004004:	60bb      	str	r3, [r7, #8]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	4a0d      	ldr	r2, [pc, #52]	; (8004040 <HAL_RCC_GetSysClockFreq+0x98>)
 800400a:	fb03 f202 	mul.w	r2, r3, r2
 800400e:	68bb      	ldr	r3, [r7, #8]
 8004010:	fbb2 f3f3 	udiv	r3, r2, r3
 8004014:	617b      	str	r3, [r7, #20]
 8004016:	e004      	b.n	8004022 <HAL_RCC_GetSysClockFreq+0x7a>
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	4a0c      	ldr	r2, [pc, #48]	; (800404c <HAL_RCC_GetSysClockFreq+0xa4>)
 800401c:	fb02 f303 	mul.w	r3, r2, r3
 8004020:	617b      	str	r3, [r7, #20]
 8004022:	697b      	ldr	r3, [r7, #20]
 8004024:	613b      	str	r3, [r7, #16]
 8004026:	e002      	b.n	800402e <HAL_RCC_GetSysClockFreq+0x86>
 8004028:	4b05      	ldr	r3, [pc, #20]	; (8004040 <HAL_RCC_GetSysClockFreq+0x98>)
 800402a:	613b      	str	r3, [r7, #16]
 800402c:	bf00      	nop
 800402e:	693b      	ldr	r3, [r7, #16]
 8004030:	4618      	mov	r0, r3
 8004032:	371c      	adds	r7, #28
 8004034:	46bd      	mov	sp, r7
 8004036:	bc80      	pop	{r7}
 8004038:	4770      	bx	lr
 800403a:	bf00      	nop
 800403c:	40021000 	.word	0x40021000
 8004040:	007a1200 	.word	0x007a1200
 8004044:	0800a3d8 	.word	0x0800a3d8
 8004048:	0800a3e8 	.word	0x0800a3e8
 800404c:	003d0900 	.word	0x003d0900

08004050 <HAL_RCC_GetHCLKFreq>:
 8004050:	b480      	push	{r7}
 8004052:	af00      	add	r7, sp, #0
 8004054:	4b02      	ldr	r3, [pc, #8]	; (8004060 <HAL_RCC_GetHCLKFreq+0x10>)
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	4618      	mov	r0, r3
 800405a:	46bd      	mov	sp, r7
 800405c:	bc80      	pop	{r7}
 800405e:	4770      	bx	lr
 8004060:	20000000 	.word	0x20000000

08004064 <HAL_RCC_GetPCLK1Freq>:
 8004064:	b580      	push	{r7, lr}
 8004066:	af00      	add	r7, sp, #0
 8004068:	f7ff fff2 	bl	8004050 <HAL_RCC_GetHCLKFreq>
 800406c:	4602      	mov	r2, r0
 800406e:	4b05      	ldr	r3, [pc, #20]	; (8004084 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004070:	685b      	ldr	r3, [r3, #4]
 8004072:	0a1b      	lsrs	r3, r3, #8
 8004074:	f003 0307 	and.w	r3, r3, #7
 8004078:	4903      	ldr	r1, [pc, #12]	; (8004088 <HAL_RCC_GetPCLK1Freq+0x24>)
 800407a:	5ccb      	ldrb	r3, [r1, r3]
 800407c:	fa22 f303 	lsr.w	r3, r2, r3
 8004080:	4618      	mov	r0, r3
 8004082:	bd80      	pop	{r7, pc}
 8004084:	40021000 	.word	0x40021000
 8004088:	0800a3d0 	.word	0x0800a3d0

0800408c <HAL_RCC_GetPCLK2Freq>:
 800408c:	b580      	push	{r7, lr}
 800408e:	af00      	add	r7, sp, #0
 8004090:	f7ff ffde 	bl	8004050 <HAL_RCC_GetHCLKFreq>
 8004094:	4602      	mov	r2, r0
 8004096:	4b05      	ldr	r3, [pc, #20]	; (80040ac <HAL_RCC_GetPCLK2Freq+0x20>)
 8004098:	685b      	ldr	r3, [r3, #4]
 800409a:	0adb      	lsrs	r3, r3, #11
 800409c:	f003 0307 	and.w	r3, r3, #7
 80040a0:	4903      	ldr	r1, [pc, #12]	; (80040b0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80040a2:	5ccb      	ldrb	r3, [r1, r3]
 80040a4:	fa22 f303 	lsr.w	r3, r2, r3
 80040a8:	4618      	mov	r0, r3
 80040aa:	bd80      	pop	{r7, pc}
 80040ac:	40021000 	.word	0x40021000
 80040b0:	0800a3d0 	.word	0x0800a3d0

080040b4 <HAL_RCC_GetClockConfig>:
 80040b4:	b480      	push	{r7}
 80040b6:	b083      	sub	sp, #12
 80040b8:	af00      	add	r7, sp, #0
 80040ba:	6078      	str	r0, [r7, #4]
 80040bc:	6039      	str	r1, [r7, #0]
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	220f      	movs	r2, #15
 80040c2:	601a      	str	r2, [r3, #0]
 80040c4:	4b11      	ldr	r3, [pc, #68]	; (800410c <HAL_RCC_GetClockConfig+0x58>)
 80040c6:	685b      	ldr	r3, [r3, #4]
 80040c8:	f003 0203 	and.w	r2, r3, #3
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	605a      	str	r2, [r3, #4]
 80040d0:	4b0e      	ldr	r3, [pc, #56]	; (800410c <HAL_RCC_GetClockConfig+0x58>)
 80040d2:	685b      	ldr	r3, [r3, #4]
 80040d4:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	609a      	str	r2, [r3, #8]
 80040dc:	4b0b      	ldr	r3, [pc, #44]	; (800410c <HAL_RCC_GetClockConfig+0x58>)
 80040de:	685b      	ldr	r3, [r3, #4]
 80040e0:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	60da      	str	r2, [r3, #12]
 80040e8:	4b08      	ldr	r3, [pc, #32]	; (800410c <HAL_RCC_GetClockConfig+0x58>)
 80040ea:	685b      	ldr	r3, [r3, #4]
 80040ec:	08db      	lsrs	r3, r3, #3
 80040ee:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	611a      	str	r2, [r3, #16]
 80040f6:	4b06      	ldr	r3, [pc, #24]	; (8004110 <HAL_RCC_GetClockConfig+0x5c>)
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	f003 0207 	and.w	r2, r3, #7
 80040fe:	683b      	ldr	r3, [r7, #0]
 8004100:	601a      	str	r2, [r3, #0]
 8004102:	bf00      	nop
 8004104:	370c      	adds	r7, #12
 8004106:	46bd      	mov	sp, r7
 8004108:	bc80      	pop	{r7}
 800410a:	4770      	bx	lr
 800410c:	40021000 	.word	0x40021000
 8004110:	40022000 	.word	0x40022000

08004114 <HAL_RCC_NMI_IRQHandler>:
 8004114:	b580      	push	{r7, lr}
 8004116:	af00      	add	r7, sp, #0
 8004118:	4b06      	ldr	r3, [pc, #24]	; (8004134 <HAL_RCC_NMI_IRQHandler+0x20>)
 800411a:	689b      	ldr	r3, [r3, #8]
 800411c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004120:	2b80      	cmp	r3, #128	; 0x80
 8004122:	d104      	bne.n	800412e <HAL_RCC_NMI_IRQHandler+0x1a>
 8004124:	f000 f828 	bl	8004178 <HAL_RCC_CSSCallback>
 8004128:	4b03      	ldr	r3, [pc, #12]	; (8004138 <HAL_RCC_NMI_IRQHandler+0x24>)
 800412a:	2280      	movs	r2, #128	; 0x80
 800412c:	701a      	strb	r2, [r3, #0]
 800412e:	bf00      	nop
 8004130:	bd80      	pop	{r7, pc}
 8004132:	bf00      	nop
 8004134:	40021000 	.word	0x40021000
 8004138:	4002100a 	.word	0x4002100a

0800413c <RCC_Delay>:
 800413c:	b480      	push	{r7}
 800413e:	b085      	sub	sp, #20
 8004140:	af00      	add	r7, sp, #0
 8004142:	6078      	str	r0, [r7, #4]
 8004144:	4b0a      	ldr	r3, [pc, #40]	; (8004170 <RCC_Delay+0x34>)
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	4a0a      	ldr	r2, [pc, #40]	; (8004174 <RCC_Delay+0x38>)
 800414a:	fba2 2303 	umull	r2, r3, r2, r3
 800414e:	0a5b      	lsrs	r3, r3, #9
 8004150:	687a      	ldr	r2, [r7, #4]
 8004152:	fb02 f303 	mul.w	r3, r2, r3
 8004156:	60fb      	str	r3, [r7, #12]
 8004158:	bf00      	nop
 800415a:	68fb      	ldr	r3, [r7, #12]
 800415c:	1e5a      	subs	r2, r3, #1
 800415e:	60fa      	str	r2, [r7, #12]
 8004160:	2b00      	cmp	r3, #0
 8004162:	d1f9      	bne.n	8004158 <RCC_Delay+0x1c>
 8004164:	bf00      	nop
 8004166:	bf00      	nop
 8004168:	3714      	adds	r7, #20
 800416a:	46bd      	mov	sp, r7
 800416c:	bc80      	pop	{r7}
 800416e:	4770      	bx	lr
 8004170:	20000000 	.word	0x20000000
 8004174:	10624dd3 	.word	0x10624dd3

08004178 <HAL_RCC_CSSCallback>:
 8004178:	b480      	push	{r7}
 800417a:	af00      	add	r7, sp, #0
 800417c:	bf00      	nop
 800417e:	46bd      	mov	sp, r7
 8004180:	bc80      	pop	{r7}
 8004182:	4770      	bx	lr

08004184 <HAL_SPI_Init>:
 8004184:	b580      	push	{r7, lr}
 8004186:	b082      	sub	sp, #8
 8004188:	af00      	add	r7, sp, #0
 800418a:	6078      	str	r0, [r7, #4]
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	2b00      	cmp	r3, #0
 8004190:	d101      	bne.n	8004196 <HAL_SPI_Init+0x12>
 8004192:	2301      	movs	r3, #1
 8004194:	e076      	b.n	8004284 <HAL_SPI_Init+0x100>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800419a:	2b00      	cmp	r3, #0
 800419c:	d108      	bne.n	80041b0 <HAL_SPI_Init+0x2c>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	685b      	ldr	r3, [r3, #4]
 80041a2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80041a6:	d009      	beq.n	80041bc <HAL_SPI_Init+0x38>
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	2200      	movs	r2, #0
 80041ac:	61da      	str	r2, [r3, #28]
 80041ae:	e005      	b.n	80041bc <HAL_SPI_Init+0x38>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	2200      	movs	r2, #0
 80041b4:	611a      	str	r2, [r3, #16]
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	2200      	movs	r2, #0
 80041ba:	615a      	str	r2, [r3, #20]
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	2200      	movs	r2, #0
 80041c0:	629a      	str	r2, [r3, #40]	; 0x28
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80041c8:	b2db      	uxtb	r3, r3
 80041ca:	2b00      	cmp	r3, #0
 80041cc:	d106      	bne.n	80041dc <HAL_SPI_Init+0x58>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	2200      	movs	r2, #0
 80041d2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80041d6:	6878      	ldr	r0, [r7, #4]
 80041d8:	f7fe fc6e 	bl	8002ab8 <HAL_SPI_MspInit>
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	2202      	movs	r2, #2
 80041e0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	681b      	ldr	r3, [r3, #0]
 80041e8:	681a      	ldr	r2, [r3, #0]
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80041f2:	601a      	str	r2, [r3, #0]
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	685b      	ldr	r3, [r3, #4]
 80041f8:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	689b      	ldr	r3, [r3, #8]
 8004200:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004204:	431a      	orrs	r2, r3
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	68db      	ldr	r3, [r3, #12]
 800420a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800420e:	431a      	orrs	r2, r3
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	691b      	ldr	r3, [r3, #16]
 8004214:	f003 0302 	and.w	r3, r3, #2
 8004218:	431a      	orrs	r2, r3
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	695b      	ldr	r3, [r3, #20]
 800421e:	f003 0301 	and.w	r3, r3, #1
 8004222:	431a      	orrs	r2, r3
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	699b      	ldr	r3, [r3, #24]
 8004228:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800422c:	431a      	orrs	r2, r3
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	69db      	ldr	r3, [r3, #28]
 8004232:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004236:	431a      	orrs	r2, r3
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	6a1b      	ldr	r3, [r3, #32]
 800423c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004240:	ea42 0103 	orr.w	r1, r2, r3
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004248:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	430a      	orrs	r2, r1
 8004252:	601a      	str	r2, [r3, #0]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	699b      	ldr	r3, [r3, #24]
 8004258:	0c1a      	lsrs	r2, r3, #16
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	f002 0204 	and.w	r2, r2, #4
 8004262:	605a      	str	r2, [r3, #4]
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	69da      	ldr	r2, [r3, #28]
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004272:	61da      	str	r2, [r3, #28]
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2200      	movs	r2, #0
 8004278:	655a      	str	r2, [r3, #84]	; 0x54
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	2201      	movs	r2, #1
 800427e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004282:	2300      	movs	r3, #0
 8004284:	4618      	mov	r0, r3
 8004286:	3708      	adds	r7, #8
 8004288:	46bd      	mov	sp, r7
 800428a:	bd80      	pop	{r7, pc}

0800428c <HAL_SPI_TransmitReceive>:
 800428c:	b580      	push	{r7, lr}
 800428e:	b08c      	sub	sp, #48	; 0x30
 8004290:	af00      	add	r7, sp, #0
 8004292:	60f8      	str	r0, [r7, #12]
 8004294:	60b9      	str	r1, [r7, #8]
 8004296:	607a      	str	r2, [r7, #4]
 8004298:	807b      	strh	r3, [r7, #2]
 800429a:	2301      	movs	r3, #1
 800429c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800429e:	2300      	movs	r3, #0
 80042a0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80042aa:	2b01      	cmp	r3, #1
 80042ac:	d101      	bne.n	80042b2 <HAL_SPI_TransmitReceive+0x26>
 80042ae:	2302      	movs	r3, #2
 80042b0:	e198      	b.n	80045e4 <HAL_SPI_TransmitReceive+0x358>
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	2201      	movs	r2, #1
 80042b6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80042ba:	f7fe ffab 	bl	8003214 <HAL_GetTick>
 80042be:	6278      	str	r0, [r7, #36]	; 0x24
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80042c6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	685b      	ldr	r3, [r3, #4]
 80042ce:	61fb      	str	r3, [r7, #28]
 80042d0:	887b      	ldrh	r3, [r7, #2]
 80042d2:	837b      	strh	r3, [r7, #26]
 80042d4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80042d8:	2b01      	cmp	r3, #1
 80042da:	d00f      	beq.n	80042fc <HAL_SPI_TransmitReceive+0x70>
 80042dc:	69fb      	ldr	r3, [r7, #28]
 80042de:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80042e2:	d107      	bne.n	80042f4 <HAL_SPI_TransmitReceive+0x68>
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	689b      	ldr	r3, [r3, #8]
 80042e8:	2b00      	cmp	r3, #0
 80042ea:	d103      	bne.n	80042f4 <HAL_SPI_TransmitReceive+0x68>
 80042ec:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80042f0:	2b04      	cmp	r3, #4
 80042f2:	d003      	beq.n	80042fc <HAL_SPI_TransmitReceive+0x70>
 80042f4:	2302      	movs	r3, #2
 80042f6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80042fa:	e16d      	b.n	80045d8 <HAL_SPI_TransmitReceive+0x34c>
 80042fc:	68bb      	ldr	r3, [r7, #8]
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d005      	beq.n	800430e <HAL_SPI_TransmitReceive+0x82>
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	2b00      	cmp	r3, #0
 8004306:	d002      	beq.n	800430e <HAL_SPI_TransmitReceive+0x82>
 8004308:	887b      	ldrh	r3, [r7, #2]
 800430a:	2b00      	cmp	r3, #0
 800430c:	d103      	bne.n	8004316 <HAL_SPI_TransmitReceive+0x8a>
 800430e:	2301      	movs	r3, #1
 8004310:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004314:	e160      	b.n	80045d8 <HAL_SPI_TransmitReceive+0x34c>
 8004316:	68fb      	ldr	r3, [r7, #12]
 8004318:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800431c:	b2db      	uxtb	r3, r3
 800431e:	2b04      	cmp	r3, #4
 8004320:	d003      	beq.n	800432a <HAL_SPI_TransmitReceive+0x9e>
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	2205      	movs	r2, #5
 8004326:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800432a:	68fb      	ldr	r3, [r7, #12]
 800432c:	2200      	movs	r2, #0
 800432e:	655a      	str	r2, [r3, #84]	; 0x54
 8004330:	68fb      	ldr	r3, [r7, #12]
 8004332:	687a      	ldr	r2, [r7, #4]
 8004334:	639a      	str	r2, [r3, #56]	; 0x38
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	887a      	ldrh	r2, [r7, #2]
 800433a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	887a      	ldrh	r2, [r7, #2]
 8004340:	879a      	strh	r2, [r3, #60]	; 0x3c
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	68ba      	ldr	r2, [r7, #8]
 8004346:	631a      	str	r2, [r3, #48]	; 0x30
 8004348:	68fb      	ldr	r3, [r7, #12]
 800434a:	887a      	ldrh	r2, [r7, #2]
 800434c:	86da      	strh	r2, [r3, #54]	; 0x36
 800434e:	68fb      	ldr	r3, [r7, #12]
 8004350:	887a      	ldrh	r2, [r7, #2]
 8004352:	869a      	strh	r2, [r3, #52]	; 0x34
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	2200      	movs	r2, #0
 8004358:	641a      	str	r2, [r3, #64]	; 0x40
 800435a:	68fb      	ldr	r3, [r7, #12]
 800435c:	2200      	movs	r2, #0
 800435e:	645a      	str	r2, [r3, #68]	; 0x44
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800436a:	2b40      	cmp	r3, #64	; 0x40
 800436c:	d007      	beq.n	800437e <HAL_SPI_TransmitReceive+0xf2>
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	681a      	ldr	r2, [r3, #0]
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800437c:	601a      	str	r2, [r3, #0]
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	68db      	ldr	r3, [r3, #12]
 8004382:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004386:	d17c      	bne.n	8004482 <HAL_SPI_TransmitReceive+0x1f6>
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	685b      	ldr	r3, [r3, #4]
 800438c:	2b00      	cmp	r3, #0
 800438e:	d002      	beq.n	8004396 <HAL_SPI_TransmitReceive+0x10a>
 8004390:	8b7b      	ldrh	r3, [r7, #26]
 8004392:	2b01      	cmp	r3, #1
 8004394:	d16a      	bne.n	800446c <HAL_SPI_TransmitReceive+0x1e0>
 8004396:	68fb      	ldr	r3, [r7, #12]
 8004398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800439a:	881a      	ldrh	r2, [r3, #0]
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	60da      	str	r2, [r3, #12]
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043a6:	1c9a      	adds	r2, r3, #2
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	631a      	str	r2, [r3, #48]	; 0x30
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043b0:	b29b      	uxth	r3, r3
 80043b2:	3b01      	subs	r3, #1
 80043b4:	b29a      	uxth	r2, r3
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	86da      	strh	r2, [r3, #54]	; 0x36
 80043ba:	e057      	b.n	800446c <HAL_SPI_TransmitReceive+0x1e0>
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	689b      	ldr	r3, [r3, #8]
 80043c2:	f003 0302 	and.w	r3, r3, #2
 80043c6:	2b02      	cmp	r3, #2
 80043c8:	d11b      	bne.n	8004402 <HAL_SPI_TransmitReceive+0x176>
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043ce:	b29b      	uxth	r3, r3
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	d016      	beq.n	8004402 <HAL_SPI_TransmitReceive+0x176>
 80043d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043d6:	2b01      	cmp	r3, #1
 80043d8:	d113      	bne.n	8004402 <HAL_SPI_TransmitReceive+0x176>
 80043da:	68fb      	ldr	r3, [r7, #12]
 80043dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043de:	881a      	ldrh	r2, [r3, #0]
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	60da      	str	r2, [r3, #12]
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043ea:	1c9a      	adds	r2, r3, #2
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	631a      	str	r2, [r3, #48]	; 0x30
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043f4:	b29b      	uxth	r3, r3
 80043f6:	3b01      	subs	r3, #1
 80043f8:	b29a      	uxth	r2, r3
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	86da      	strh	r2, [r3, #54]	; 0x36
 80043fe:	2300      	movs	r3, #0
 8004400:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	689b      	ldr	r3, [r3, #8]
 8004408:	f003 0301 	and.w	r3, r3, #1
 800440c:	2b01      	cmp	r3, #1
 800440e:	d119      	bne.n	8004444 <HAL_SPI_TransmitReceive+0x1b8>
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004414:	b29b      	uxth	r3, r3
 8004416:	2b00      	cmp	r3, #0
 8004418:	d014      	beq.n	8004444 <HAL_SPI_TransmitReceive+0x1b8>
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	68da      	ldr	r2, [r3, #12]
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004424:	b292      	uxth	r2, r2
 8004426:	801a      	strh	r2, [r3, #0]
 8004428:	68fb      	ldr	r3, [r7, #12]
 800442a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800442c:	1c9a      	adds	r2, r3, #2
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	639a      	str	r2, [r3, #56]	; 0x38
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004436:	b29b      	uxth	r3, r3
 8004438:	3b01      	subs	r3, #1
 800443a:	b29a      	uxth	r2, r3
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004440:	2301      	movs	r3, #1
 8004442:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004444:	f7fe fee6 	bl	8003214 <HAL_GetTick>
 8004448:	4602      	mov	r2, r0
 800444a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800444c:	1ad3      	subs	r3, r2, r3
 800444e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8004450:	429a      	cmp	r2, r3
 8004452:	d80b      	bhi.n	800446c <HAL_SPI_TransmitReceive+0x1e0>
 8004454:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004456:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800445a:	d007      	beq.n	800446c <HAL_SPI_TransmitReceive+0x1e0>
 800445c:	2303      	movs	r3, #3
 800445e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004462:	68fb      	ldr	r3, [r7, #12]
 8004464:	2201      	movs	r2, #1
 8004466:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800446a:	e0b5      	b.n	80045d8 <HAL_SPI_TransmitReceive+0x34c>
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004470:	b29b      	uxth	r3, r3
 8004472:	2b00      	cmp	r3, #0
 8004474:	d1a2      	bne.n	80043bc <HAL_SPI_TransmitReceive+0x130>
 8004476:	68fb      	ldr	r3, [r7, #12]
 8004478:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800447a:	b29b      	uxth	r3, r3
 800447c:	2b00      	cmp	r3, #0
 800447e:	d19d      	bne.n	80043bc <HAL_SPI_TransmitReceive+0x130>
 8004480:	e080      	b.n	8004584 <HAL_SPI_TransmitReceive+0x2f8>
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	685b      	ldr	r3, [r3, #4]
 8004486:	2b00      	cmp	r3, #0
 8004488:	d002      	beq.n	8004490 <HAL_SPI_TransmitReceive+0x204>
 800448a:	8b7b      	ldrh	r3, [r7, #26]
 800448c:	2b01      	cmp	r3, #1
 800448e:	d16f      	bne.n	8004570 <HAL_SPI_TransmitReceive+0x2e4>
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004494:	68fb      	ldr	r3, [r7, #12]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	330c      	adds	r3, #12
 800449a:	7812      	ldrb	r2, [r2, #0]
 800449c:	701a      	strb	r2, [r3, #0]
 800449e:	68fb      	ldr	r3, [r7, #12]
 80044a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044a2:	1c5a      	adds	r2, r3, #1
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	631a      	str	r2, [r3, #48]	; 0x30
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80044ac:	b29b      	uxth	r3, r3
 80044ae:	3b01      	subs	r3, #1
 80044b0:	b29a      	uxth	r2, r3
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	86da      	strh	r2, [r3, #54]	; 0x36
 80044b6:	e05b      	b.n	8004570 <HAL_SPI_TransmitReceive+0x2e4>
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	689b      	ldr	r3, [r3, #8]
 80044be:	f003 0302 	and.w	r3, r3, #2
 80044c2:	2b02      	cmp	r3, #2
 80044c4:	d11c      	bne.n	8004500 <HAL_SPI_TransmitReceive+0x274>
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80044ca:	b29b      	uxth	r3, r3
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	d017      	beq.n	8004500 <HAL_SPI_TransmitReceive+0x274>
 80044d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044d2:	2b01      	cmp	r3, #1
 80044d4:	d114      	bne.n	8004500 <HAL_SPI_TransmitReceive+0x274>
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	330c      	adds	r3, #12
 80044e0:	7812      	ldrb	r2, [r2, #0]
 80044e2:	701a      	strb	r2, [r3, #0]
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044e8:	1c5a      	adds	r2, r3, #1
 80044ea:	68fb      	ldr	r3, [r7, #12]
 80044ec:	631a      	str	r2, [r3, #48]	; 0x30
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80044f2:	b29b      	uxth	r3, r3
 80044f4:	3b01      	subs	r3, #1
 80044f6:	b29a      	uxth	r2, r3
 80044f8:	68fb      	ldr	r3, [r7, #12]
 80044fa:	86da      	strh	r2, [r3, #54]	; 0x36
 80044fc:	2300      	movs	r3, #0
 80044fe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	681b      	ldr	r3, [r3, #0]
 8004504:	689b      	ldr	r3, [r3, #8]
 8004506:	f003 0301 	and.w	r3, r3, #1
 800450a:	2b01      	cmp	r3, #1
 800450c:	d119      	bne.n	8004542 <HAL_SPI_TransmitReceive+0x2b6>
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004512:	b29b      	uxth	r3, r3
 8004514:	2b00      	cmp	r3, #0
 8004516:	d014      	beq.n	8004542 <HAL_SPI_TransmitReceive+0x2b6>
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	681b      	ldr	r3, [r3, #0]
 800451c:	68da      	ldr	r2, [r3, #12]
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004522:	b2d2      	uxtb	r2, r2
 8004524:	701a      	strb	r2, [r3, #0]
 8004526:	68fb      	ldr	r3, [r7, #12]
 8004528:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800452a:	1c5a      	adds	r2, r3, #1
 800452c:	68fb      	ldr	r3, [r7, #12]
 800452e:	639a      	str	r2, [r3, #56]	; 0x38
 8004530:	68fb      	ldr	r3, [r7, #12]
 8004532:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004534:	b29b      	uxth	r3, r3
 8004536:	3b01      	subs	r3, #1
 8004538:	b29a      	uxth	r2, r3
 800453a:	68fb      	ldr	r3, [r7, #12]
 800453c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800453e:	2301      	movs	r3, #1
 8004540:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004542:	f7fe fe67 	bl	8003214 <HAL_GetTick>
 8004546:	4602      	mov	r2, r0
 8004548:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800454a:	1ad3      	subs	r3, r2, r3
 800454c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800454e:	429a      	cmp	r2, r3
 8004550:	d803      	bhi.n	800455a <HAL_SPI_TransmitReceive+0x2ce>
 8004552:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004554:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8004558:	d102      	bne.n	8004560 <HAL_SPI_TransmitReceive+0x2d4>
 800455a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800455c:	2b00      	cmp	r3, #0
 800455e:	d107      	bne.n	8004570 <HAL_SPI_TransmitReceive+0x2e4>
 8004560:	2303      	movs	r3, #3
 8004562:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	2201      	movs	r2, #1
 800456a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800456e:	e033      	b.n	80045d8 <HAL_SPI_TransmitReceive+0x34c>
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004574:	b29b      	uxth	r3, r3
 8004576:	2b00      	cmp	r3, #0
 8004578:	d19e      	bne.n	80044b8 <HAL_SPI_TransmitReceive+0x22c>
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800457e:	b29b      	uxth	r3, r3
 8004580:	2b00      	cmp	r3, #0
 8004582:	d199      	bne.n	80044b8 <HAL_SPI_TransmitReceive+0x22c>
 8004584:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004586:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8004588:	68f8      	ldr	r0, [r7, #12]
 800458a:	f000 f9b3 	bl	80048f4 <SPI_EndRxTxTransaction>
 800458e:	4603      	mov	r3, r0
 8004590:	2b00      	cmp	r3, #0
 8004592:	d006      	beq.n	80045a2 <HAL_SPI_TransmitReceive+0x316>
 8004594:	2301      	movs	r3, #1
 8004596:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800459a:	68fb      	ldr	r3, [r7, #12]
 800459c:	2220      	movs	r2, #32
 800459e:	655a      	str	r2, [r3, #84]	; 0x54
 80045a0:	e01a      	b.n	80045d8 <HAL_SPI_TransmitReceive+0x34c>
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	689b      	ldr	r3, [r3, #8]
 80045a6:	2b00      	cmp	r3, #0
 80045a8:	d10a      	bne.n	80045c0 <HAL_SPI_TransmitReceive+0x334>
 80045aa:	2300      	movs	r3, #0
 80045ac:	617b      	str	r3, [r7, #20]
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	68db      	ldr	r3, [r3, #12]
 80045b4:	617b      	str	r3, [r7, #20]
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	689b      	ldr	r3, [r3, #8]
 80045bc:	617b      	str	r3, [r7, #20]
 80045be:	697b      	ldr	r3, [r7, #20]
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045c4:	2b00      	cmp	r3, #0
 80045c6:	d003      	beq.n	80045d0 <HAL_SPI_TransmitReceive+0x344>
 80045c8:	2301      	movs	r3, #1
 80045ca:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80045ce:	e003      	b.n	80045d8 <HAL_SPI_TransmitReceive+0x34c>
 80045d0:	68fb      	ldr	r3, [r7, #12]
 80045d2:	2201      	movs	r2, #1
 80045d4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	2200      	movs	r2, #0
 80045dc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80045e0:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80045e4:	4618      	mov	r0, r3
 80045e6:	3730      	adds	r7, #48	; 0x30
 80045e8:	46bd      	mov	sp, r7
 80045ea:	bd80      	pop	{r7, pc}

080045ec <HAL_SPI_IRQHandler>:
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b088      	sub	sp, #32
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	685b      	ldr	r3, [r3, #4]
 80045fa:	61fb      	str	r3, [r7, #28]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	689b      	ldr	r3, [r3, #8]
 8004602:	61bb      	str	r3, [r7, #24]
 8004604:	69bb      	ldr	r3, [r7, #24]
 8004606:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800460a:	2b00      	cmp	r3, #0
 800460c:	d10e      	bne.n	800462c <HAL_SPI_IRQHandler+0x40>
 800460e:	69bb      	ldr	r3, [r7, #24]
 8004610:	f003 0301 	and.w	r3, r3, #1
 8004614:	2b00      	cmp	r3, #0
 8004616:	d009      	beq.n	800462c <HAL_SPI_IRQHandler+0x40>
 8004618:	69fb      	ldr	r3, [r7, #28]
 800461a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800461e:	2b00      	cmp	r3, #0
 8004620:	d004      	beq.n	800462c <HAL_SPI_IRQHandler+0x40>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004626:	6878      	ldr	r0, [r7, #4]
 8004628:	4798      	blx	r3
 800462a:	e0b7      	b.n	800479c <HAL_SPI_IRQHandler+0x1b0>
 800462c:	69bb      	ldr	r3, [r7, #24]
 800462e:	f003 0302 	and.w	r3, r3, #2
 8004632:	2b00      	cmp	r3, #0
 8004634:	d009      	beq.n	800464a <HAL_SPI_IRQHandler+0x5e>
 8004636:	69fb      	ldr	r3, [r7, #28]
 8004638:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800463c:	2b00      	cmp	r3, #0
 800463e:	d004      	beq.n	800464a <HAL_SPI_IRQHandler+0x5e>
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004644:	6878      	ldr	r0, [r7, #4]
 8004646:	4798      	blx	r3
 8004648:	e0a8      	b.n	800479c <HAL_SPI_IRQHandler+0x1b0>
 800464a:	69bb      	ldr	r3, [r7, #24]
 800464c:	f003 0320 	and.w	r3, r3, #32
 8004650:	2b00      	cmp	r3, #0
 8004652:	d105      	bne.n	8004660 <HAL_SPI_IRQHandler+0x74>
 8004654:	69bb      	ldr	r3, [r7, #24]
 8004656:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800465a:	2b00      	cmp	r3, #0
 800465c:	f000 809e 	beq.w	800479c <HAL_SPI_IRQHandler+0x1b0>
 8004660:	69fb      	ldr	r3, [r7, #28]
 8004662:	f003 0320 	and.w	r3, r3, #32
 8004666:	2b00      	cmp	r3, #0
 8004668:	f000 8098 	beq.w	800479c <HAL_SPI_IRQHandler+0x1b0>
 800466c:	69bb      	ldr	r3, [r7, #24]
 800466e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004672:	2b00      	cmp	r3, #0
 8004674:	d023      	beq.n	80046be <HAL_SPI_IRQHandler+0xd2>
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800467c:	b2db      	uxtb	r3, r3
 800467e:	2b03      	cmp	r3, #3
 8004680:	d011      	beq.n	80046a6 <HAL_SPI_IRQHandler+0xba>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004686:	f043 0204 	orr.w	r2, r3, #4
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	655a      	str	r2, [r3, #84]	; 0x54
 800468e:	2300      	movs	r3, #0
 8004690:	617b      	str	r3, [r7, #20]
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	68db      	ldr	r3, [r3, #12]
 8004698:	617b      	str	r3, [r7, #20]
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	689b      	ldr	r3, [r3, #8]
 80046a0:	617b      	str	r3, [r7, #20]
 80046a2:	697b      	ldr	r3, [r7, #20]
 80046a4:	e00b      	b.n	80046be <HAL_SPI_IRQHandler+0xd2>
 80046a6:	2300      	movs	r3, #0
 80046a8:	613b      	str	r3, [r7, #16]
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	68db      	ldr	r3, [r3, #12]
 80046b0:	613b      	str	r3, [r7, #16]
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	689b      	ldr	r3, [r3, #8]
 80046b8:	613b      	str	r3, [r7, #16]
 80046ba:	693b      	ldr	r3, [r7, #16]
 80046bc:	e06e      	b.n	800479c <HAL_SPI_IRQHandler+0x1b0>
 80046be:	69bb      	ldr	r3, [r7, #24]
 80046c0:	f003 0320 	and.w	r3, r3, #32
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	d014      	beq.n	80046f2 <HAL_SPI_IRQHandler+0x106>
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80046cc:	f043 0201 	orr.w	r2, r3, #1
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	655a      	str	r2, [r3, #84]	; 0x54
 80046d4:	2300      	movs	r3, #0
 80046d6:	60fb      	str	r3, [r7, #12]
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	689b      	ldr	r3, [r3, #8]
 80046de:	60fb      	str	r3, [r7, #12]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	681a      	ldr	r2, [r3, #0]
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80046ee:	601a      	str	r2, [r3, #0]
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	d04f      	beq.n	800479a <HAL_SPI_IRQHandler+0x1ae>
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	685a      	ldr	r2, [r3, #4]
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004708:	605a      	str	r2, [r3, #4]
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	2201      	movs	r2, #1
 800470e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004712:	69fb      	ldr	r3, [r7, #28]
 8004714:	f003 0302 	and.w	r3, r3, #2
 8004718:	2b00      	cmp	r3, #0
 800471a:	d104      	bne.n	8004726 <HAL_SPI_IRQHandler+0x13a>
 800471c:	69fb      	ldr	r3, [r7, #28]
 800471e:	f003 0301 	and.w	r3, r3, #1
 8004722:	2b00      	cmp	r3, #0
 8004724:	d034      	beq.n	8004790 <HAL_SPI_IRQHandler+0x1a4>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	685a      	ldr	r2, [r3, #4]
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	f022 0203 	bic.w	r2, r2, #3
 8004734:	605a      	str	r2, [r3, #4]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800473a:	2b00      	cmp	r3, #0
 800473c:	d011      	beq.n	8004762 <HAL_SPI_IRQHandler+0x176>
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004742:	4a18      	ldr	r2, [pc, #96]	; (80047a4 <HAL_SPI_IRQHandler+0x1b8>)
 8004744:	635a      	str	r2, [r3, #52]	; 0x34
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800474a:	4618      	mov	r0, r3
 800474c:	f7fe fe86 	bl	800345c <HAL_DMA_Abort_IT>
 8004750:	4603      	mov	r3, r0
 8004752:	2b00      	cmp	r3, #0
 8004754:	d005      	beq.n	8004762 <HAL_SPI_IRQHandler+0x176>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800475a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	655a      	str	r2, [r3, #84]	; 0x54
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004766:	2b00      	cmp	r3, #0
 8004768:	d016      	beq.n	8004798 <HAL_SPI_IRQHandler+0x1ac>
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800476e:	4a0d      	ldr	r2, [pc, #52]	; (80047a4 <HAL_SPI_IRQHandler+0x1b8>)
 8004770:	635a      	str	r2, [r3, #52]	; 0x34
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004776:	4618      	mov	r0, r3
 8004778:	f7fe fe70 	bl	800345c <HAL_DMA_Abort_IT>
 800477c:	4603      	mov	r3, r0
 800477e:	2b00      	cmp	r3, #0
 8004780:	d00a      	beq.n	8004798 <HAL_SPI_IRQHandler+0x1ac>
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004786:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	655a      	str	r2, [r3, #84]	; 0x54
 800478e:	e003      	b.n	8004798 <HAL_SPI_IRQHandler+0x1ac>
 8004790:	6878      	ldr	r0, [r7, #4]
 8004792:	f000 f809 	bl	80047a8 <HAL_SPI_ErrorCallback>
 8004796:	e000      	b.n	800479a <HAL_SPI_IRQHandler+0x1ae>
 8004798:	bf00      	nop
 800479a:	bf00      	nop
 800479c:	3720      	adds	r7, #32
 800479e:	46bd      	mov	sp, r7
 80047a0:	bd80      	pop	{r7, pc}
 80047a2:	bf00      	nop
 80047a4:	080047bb 	.word	0x080047bb

080047a8 <HAL_SPI_ErrorCallback>:
 80047a8:	b480      	push	{r7}
 80047aa:	b083      	sub	sp, #12
 80047ac:	af00      	add	r7, sp, #0
 80047ae:	6078      	str	r0, [r7, #4]
 80047b0:	bf00      	nop
 80047b2:	370c      	adds	r7, #12
 80047b4:	46bd      	mov	sp, r7
 80047b6:	bc80      	pop	{r7}
 80047b8:	4770      	bx	lr

080047ba <SPI_DMAAbortOnError>:
 80047ba:	b580      	push	{r7, lr}
 80047bc:	b084      	sub	sp, #16
 80047be:	af00      	add	r7, sp, #0
 80047c0:	6078      	str	r0, [r7, #4]
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047c6:	60fb      	str	r3, [r7, #12]
 80047c8:	68fb      	ldr	r3, [r7, #12]
 80047ca:	2200      	movs	r2, #0
 80047cc:	87da      	strh	r2, [r3, #62]	; 0x3e
 80047ce:	68fb      	ldr	r3, [r7, #12]
 80047d0:	2200      	movs	r2, #0
 80047d2:	86da      	strh	r2, [r3, #54]	; 0x36
 80047d4:	68f8      	ldr	r0, [r7, #12]
 80047d6:	f7ff ffe7 	bl	80047a8 <HAL_SPI_ErrorCallback>
 80047da:	bf00      	nop
 80047dc:	3710      	adds	r7, #16
 80047de:	46bd      	mov	sp, r7
 80047e0:	bd80      	pop	{r7, pc}
	...

080047e4 <SPI_WaitFlagStateUntilTimeout>:
 80047e4:	b580      	push	{r7, lr}
 80047e6:	b088      	sub	sp, #32
 80047e8:	af00      	add	r7, sp, #0
 80047ea:	60f8      	str	r0, [r7, #12]
 80047ec:	60b9      	str	r1, [r7, #8]
 80047ee:	603b      	str	r3, [r7, #0]
 80047f0:	4613      	mov	r3, r2
 80047f2:	71fb      	strb	r3, [r7, #7]
 80047f4:	f7fe fd0e 	bl	8003214 <HAL_GetTick>
 80047f8:	4602      	mov	r2, r0
 80047fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80047fc:	1a9b      	subs	r3, r3, r2
 80047fe:	683a      	ldr	r2, [r7, #0]
 8004800:	4413      	add	r3, r2
 8004802:	61fb      	str	r3, [r7, #28]
 8004804:	f7fe fd06 	bl	8003214 <HAL_GetTick>
 8004808:	61b8      	str	r0, [r7, #24]
 800480a:	4b39      	ldr	r3, [pc, #228]	; (80048f0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	015b      	lsls	r3, r3, #5
 8004810:	0d1b      	lsrs	r3, r3, #20
 8004812:	69fa      	ldr	r2, [r7, #28]
 8004814:	fb02 f303 	mul.w	r3, r2, r3
 8004818:	617b      	str	r3, [r7, #20]
 800481a:	e054      	b.n	80048c6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800481c:	683b      	ldr	r3, [r7, #0]
 800481e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8004822:	d050      	beq.n	80048c6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8004824:	f7fe fcf6 	bl	8003214 <HAL_GetTick>
 8004828:	4602      	mov	r2, r0
 800482a:	69bb      	ldr	r3, [r7, #24]
 800482c:	1ad3      	subs	r3, r2, r3
 800482e:	69fa      	ldr	r2, [r7, #28]
 8004830:	429a      	cmp	r2, r3
 8004832:	d902      	bls.n	800483a <SPI_WaitFlagStateUntilTimeout+0x56>
 8004834:	69fb      	ldr	r3, [r7, #28]
 8004836:	2b00      	cmp	r3, #0
 8004838:	d13d      	bne.n	80048b6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800483a:	68fb      	ldr	r3, [r7, #12]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	685a      	ldr	r2, [r3, #4]
 8004840:	68fb      	ldr	r3, [r7, #12]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004848:	605a      	str	r2, [r3, #4]
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	685b      	ldr	r3, [r3, #4]
 800484e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004852:	d111      	bne.n	8004878 <SPI_WaitFlagStateUntilTimeout+0x94>
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	689b      	ldr	r3, [r3, #8]
 8004858:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800485c:	d004      	beq.n	8004868 <SPI_WaitFlagStateUntilTimeout+0x84>
 800485e:	68fb      	ldr	r3, [r7, #12]
 8004860:	689b      	ldr	r3, [r3, #8]
 8004862:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004866:	d107      	bne.n	8004878 <SPI_WaitFlagStateUntilTimeout+0x94>
 8004868:	68fb      	ldr	r3, [r7, #12]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004876:	601a      	str	r2, [r3, #0]
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800487c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004880:	d10f      	bne.n	80048a2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	681a      	ldr	r2, [r3, #0]
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004890:	601a      	str	r2, [r3, #0]
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	681a      	ldr	r2, [r3, #0]
 8004898:	68fb      	ldr	r3, [r7, #12]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80048a0:	601a      	str	r2, [r3, #0]
 80048a2:	68fb      	ldr	r3, [r7, #12]
 80048a4:	2201      	movs	r2, #1
 80048a6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80048aa:	68fb      	ldr	r3, [r7, #12]
 80048ac:	2200      	movs	r2, #0
 80048ae:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80048b2:	2303      	movs	r3, #3
 80048b4:	e017      	b.n	80048e6 <SPI_WaitFlagStateUntilTimeout+0x102>
 80048b6:	697b      	ldr	r3, [r7, #20]
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	d101      	bne.n	80048c0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80048bc:	2300      	movs	r3, #0
 80048be:	61fb      	str	r3, [r7, #28]
 80048c0:	697b      	ldr	r3, [r7, #20]
 80048c2:	3b01      	subs	r3, #1
 80048c4:	617b      	str	r3, [r7, #20]
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	689a      	ldr	r2, [r3, #8]
 80048cc:	68bb      	ldr	r3, [r7, #8]
 80048ce:	4013      	ands	r3, r2
 80048d0:	68ba      	ldr	r2, [r7, #8]
 80048d2:	429a      	cmp	r2, r3
 80048d4:	bf0c      	ite	eq
 80048d6:	2301      	moveq	r3, #1
 80048d8:	2300      	movne	r3, #0
 80048da:	b2db      	uxtb	r3, r3
 80048dc:	461a      	mov	r2, r3
 80048de:	79fb      	ldrb	r3, [r7, #7]
 80048e0:	429a      	cmp	r2, r3
 80048e2:	d19b      	bne.n	800481c <SPI_WaitFlagStateUntilTimeout+0x38>
 80048e4:	2300      	movs	r3, #0
 80048e6:	4618      	mov	r0, r3
 80048e8:	3720      	adds	r7, #32
 80048ea:	46bd      	mov	sp, r7
 80048ec:	bd80      	pop	{r7, pc}
 80048ee:	bf00      	nop
 80048f0:	20000000 	.word	0x20000000

080048f4 <SPI_EndRxTxTransaction>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	b086      	sub	sp, #24
 80048f8:	af02      	add	r7, sp, #8
 80048fa:	60f8      	str	r0, [r7, #12]
 80048fc:	60b9      	str	r1, [r7, #8]
 80048fe:	607a      	str	r2, [r7, #4]
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	9300      	str	r3, [sp, #0]
 8004904:	68bb      	ldr	r3, [r7, #8]
 8004906:	2200      	movs	r2, #0
 8004908:	2180      	movs	r1, #128	; 0x80
 800490a:	68f8      	ldr	r0, [r7, #12]
 800490c:	f7ff ff6a 	bl	80047e4 <SPI_WaitFlagStateUntilTimeout>
 8004910:	4603      	mov	r3, r0
 8004912:	2b00      	cmp	r3, #0
 8004914:	d007      	beq.n	8004926 <SPI_EndRxTxTransaction+0x32>
 8004916:	68fb      	ldr	r3, [r7, #12]
 8004918:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800491a:	f043 0220 	orr.w	r2, r3, #32
 800491e:	68fb      	ldr	r3, [r7, #12]
 8004920:	655a      	str	r2, [r3, #84]	; 0x54
 8004922:	2303      	movs	r3, #3
 8004924:	e000      	b.n	8004928 <SPI_EndRxTxTransaction+0x34>
 8004926:	2300      	movs	r3, #0
 8004928:	4618      	mov	r0, r3
 800492a:	3710      	adds	r7, #16
 800492c:	46bd      	mov	sp, r7
 800492e:	bd80      	pop	{r7, pc}

08004930 <HAL_TIM_Base_Init>:
 8004930:	b580      	push	{r7, lr}
 8004932:	b082      	sub	sp, #8
 8004934:	af00      	add	r7, sp, #0
 8004936:	6078      	str	r0, [r7, #4]
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	2b00      	cmp	r3, #0
 800493c:	d101      	bne.n	8004942 <HAL_TIM_Base_Init+0x12>
 800493e:	2301      	movs	r3, #1
 8004940:	e041      	b.n	80049c6 <HAL_TIM_Base_Init+0x96>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004948:	b2db      	uxtb	r3, r3
 800494a:	2b00      	cmp	r3, #0
 800494c:	d106      	bne.n	800495c <HAL_TIM_Base_Init+0x2c>
 800494e:	687b      	ldr	r3, [r7, #4]
 8004950:	2200      	movs	r2, #0
 8004952:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004956:	6878      	ldr	r0, [r7, #4]
 8004958:	f000 f839 	bl	80049ce <HAL_TIM_Base_MspInit>
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2202      	movs	r2, #2
 8004960:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	681a      	ldr	r2, [r3, #0]
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	3304      	adds	r3, #4
 800496c:	4619      	mov	r1, r3
 800496e:	4610      	mov	r0, r2
 8004970:	f000 fbfa 	bl	8005168 <TIM_Base_SetConfig>
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	2201      	movs	r2, #1
 8004978:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	2201      	movs	r2, #1
 8004980:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	2201      	movs	r2, #1
 8004988:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	2201      	movs	r2, #1
 8004990:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	2201      	movs	r2, #1
 8004998:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	2201      	movs	r2, #1
 80049a0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	2201      	movs	r2, #1
 80049a8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	2201      	movs	r2, #1
 80049b0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	2201      	movs	r2, #1
 80049b8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	2201      	movs	r2, #1
 80049c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80049c4:	2300      	movs	r3, #0
 80049c6:	4618      	mov	r0, r3
 80049c8:	3708      	adds	r7, #8
 80049ca:	46bd      	mov	sp, r7
 80049cc:	bd80      	pop	{r7, pc}

080049ce <HAL_TIM_Base_MspInit>:
 80049ce:	b480      	push	{r7}
 80049d0:	b083      	sub	sp, #12
 80049d2:	af00      	add	r7, sp, #0
 80049d4:	6078      	str	r0, [r7, #4]
 80049d6:	bf00      	nop
 80049d8:	370c      	adds	r7, #12
 80049da:	46bd      	mov	sp, r7
 80049dc:	bc80      	pop	{r7}
 80049de:	4770      	bx	lr

080049e0 <HAL_TIM_Base_Start_IT>:
 80049e0:	b480      	push	{r7}
 80049e2:	b085      	sub	sp, #20
 80049e4:	af00      	add	r7, sp, #0
 80049e6:	6078      	str	r0, [r7, #4]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80049ee:	b2db      	uxtb	r3, r3
 80049f0:	2b01      	cmp	r3, #1
 80049f2:	d001      	beq.n	80049f8 <HAL_TIM_Base_Start_IT+0x18>
 80049f4:	2301      	movs	r3, #1
 80049f6:	e03a      	b.n	8004a6e <HAL_TIM_Base_Start_IT+0x8e>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	2202      	movs	r2, #2
 80049fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	68da      	ldr	r2, [r3, #12]
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	f042 0201 	orr.w	r2, r2, #1
 8004a0e:	60da      	str	r2, [r3, #12]
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	4a18      	ldr	r2, [pc, #96]	; (8004a78 <HAL_TIM_Base_Start_IT+0x98>)
 8004a16:	4293      	cmp	r3, r2
 8004a18:	d00e      	beq.n	8004a38 <HAL_TIM_Base_Start_IT+0x58>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004a22:	d009      	beq.n	8004a38 <HAL_TIM_Base_Start_IT+0x58>
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	4a14      	ldr	r2, [pc, #80]	; (8004a7c <HAL_TIM_Base_Start_IT+0x9c>)
 8004a2a:	4293      	cmp	r3, r2
 8004a2c:	d004      	beq.n	8004a38 <HAL_TIM_Base_Start_IT+0x58>
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	4a13      	ldr	r2, [pc, #76]	; (8004a80 <HAL_TIM_Base_Start_IT+0xa0>)
 8004a34:	4293      	cmp	r3, r2
 8004a36:	d111      	bne.n	8004a5c <HAL_TIM_Base_Start_IT+0x7c>
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	689b      	ldr	r3, [r3, #8]
 8004a3e:	f003 0307 	and.w	r3, r3, #7
 8004a42:	60fb      	str	r3, [r7, #12]
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	2b06      	cmp	r3, #6
 8004a48:	d010      	beq.n	8004a6c <HAL_TIM_Base_Start_IT+0x8c>
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	681a      	ldr	r2, [r3, #0]
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	f042 0201 	orr.w	r2, r2, #1
 8004a58:	601a      	str	r2, [r3, #0]
 8004a5a:	e007      	b.n	8004a6c <HAL_TIM_Base_Start_IT+0x8c>
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	681a      	ldr	r2, [r3, #0]
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	f042 0201 	orr.w	r2, r2, #1
 8004a6a:	601a      	str	r2, [r3, #0]
 8004a6c:	2300      	movs	r3, #0
 8004a6e:	4618      	mov	r0, r3
 8004a70:	3714      	adds	r7, #20
 8004a72:	46bd      	mov	sp, r7
 8004a74:	bc80      	pop	{r7}
 8004a76:	4770      	bx	lr
 8004a78:	40012c00 	.word	0x40012c00
 8004a7c:	40000400 	.word	0x40000400
 8004a80:	40000800 	.word	0x40000800

08004a84 <HAL_TIM_Base_Stop_IT>:
 8004a84:	b480      	push	{r7}
 8004a86:	b083      	sub	sp, #12
 8004a88:	af00      	add	r7, sp, #0
 8004a8a:	6078      	str	r0, [r7, #4]
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	68da      	ldr	r2, [r3, #12]
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	f022 0201 	bic.w	r2, r2, #1
 8004a9a:	60da      	str	r2, [r3, #12]
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	681b      	ldr	r3, [r3, #0]
 8004aa0:	6a1a      	ldr	r2, [r3, #32]
 8004aa2:	f241 1311 	movw	r3, #4369	; 0x1111
 8004aa6:	4013      	ands	r3, r2
 8004aa8:	2b00      	cmp	r3, #0
 8004aaa:	d10f      	bne.n	8004acc <HAL_TIM_Base_Stop_IT+0x48>
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	681b      	ldr	r3, [r3, #0]
 8004ab0:	6a1a      	ldr	r2, [r3, #32]
 8004ab2:	f240 4344 	movw	r3, #1092	; 0x444
 8004ab6:	4013      	ands	r3, r2
 8004ab8:	2b00      	cmp	r3, #0
 8004aba:	d107      	bne.n	8004acc <HAL_TIM_Base_Stop_IT+0x48>
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	681a      	ldr	r2, [r3, #0]
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	f022 0201 	bic.w	r2, r2, #1
 8004aca:	601a      	str	r2, [r3, #0]
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	2201      	movs	r2, #1
 8004ad0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004ad4:	2300      	movs	r3, #0
 8004ad6:	4618      	mov	r0, r3
 8004ad8:	370c      	adds	r7, #12
 8004ada:	46bd      	mov	sp, r7
 8004adc:	bc80      	pop	{r7}
 8004ade:	4770      	bx	lr

08004ae0 <HAL_TIM_PWM_Init>:
 8004ae0:	b580      	push	{r7, lr}
 8004ae2:	b082      	sub	sp, #8
 8004ae4:	af00      	add	r7, sp, #0
 8004ae6:	6078      	str	r0, [r7, #4]
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d101      	bne.n	8004af2 <HAL_TIM_PWM_Init+0x12>
 8004aee:	2301      	movs	r3, #1
 8004af0:	e041      	b.n	8004b76 <HAL_TIM_PWM_Init+0x96>
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004af8:	b2db      	uxtb	r3, r3
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d106      	bne.n	8004b0c <HAL_TIM_PWM_Init+0x2c>
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	2200      	movs	r2, #0
 8004b02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b06:	6878      	ldr	r0, [r7, #4]
 8004b08:	f7fe f838 	bl	8002b7c <HAL_TIM_PWM_MspInit>
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	2202      	movs	r2, #2
 8004b10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	681a      	ldr	r2, [r3, #0]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	3304      	adds	r3, #4
 8004b1c:	4619      	mov	r1, r3
 8004b1e:	4610      	mov	r0, r2
 8004b20:	f000 fb22 	bl	8005168 <TIM_Base_SetConfig>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	2201      	movs	r2, #1
 8004b28:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	2201      	movs	r2, #1
 8004b30:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	2201      	movs	r2, #1
 8004b38:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	2201      	movs	r2, #1
 8004b40:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	2201      	movs	r2, #1
 8004b48:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	2201      	movs	r2, #1
 8004b50:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	2201      	movs	r2, #1
 8004b58:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	2201      	movs	r2, #1
 8004b60:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	2201      	movs	r2, #1
 8004b68:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2201      	movs	r2, #1
 8004b70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b74:	2300      	movs	r3, #0
 8004b76:	4618      	mov	r0, r3
 8004b78:	3708      	adds	r7, #8
 8004b7a:	46bd      	mov	sp, r7
 8004b7c:	bd80      	pop	{r7, pc}
	...

08004b80 <HAL_TIM_PWM_Start>:
 8004b80:	b580      	push	{r7, lr}
 8004b82:	b084      	sub	sp, #16
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	6078      	str	r0, [r7, #4]
 8004b88:	6039      	str	r1, [r7, #0]
 8004b8a:	683b      	ldr	r3, [r7, #0]
 8004b8c:	2b00      	cmp	r3, #0
 8004b8e:	d109      	bne.n	8004ba4 <HAL_TIM_PWM_Start+0x24>
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004b96:	b2db      	uxtb	r3, r3
 8004b98:	2b01      	cmp	r3, #1
 8004b9a:	bf14      	ite	ne
 8004b9c:	2301      	movne	r3, #1
 8004b9e:	2300      	moveq	r3, #0
 8004ba0:	b2db      	uxtb	r3, r3
 8004ba2:	e022      	b.n	8004bea <HAL_TIM_PWM_Start+0x6a>
 8004ba4:	683b      	ldr	r3, [r7, #0]
 8004ba6:	2b04      	cmp	r3, #4
 8004ba8:	d109      	bne.n	8004bbe <HAL_TIM_PWM_Start+0x3e>
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8004bb0:	b2db      	uxtb	r3, r3
 8004bb2:	2b01      	cmp	r3, #1
 8004bb4:	bf14      	ite	ne
 8004bb6:	2301      	movne	r3, #1
 8004bb8:	2300      	moveq	r3, #0
 8004bba:	b2db      	uxtb	r3, r3
 8004bbc:	e015      	b.n	8004bea <HAL_TIM_PWM_Start+0x6a>
 8004bbe:	683b      	ldr	r3, [r7, #0]
 8004bc0:	2b08      	cmp	r3, #8
 8004bc2:	d109      	bne.n	8004bd8 <HAL_TIM_PWM_Start+0x58>
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004bca:	b2db      	uxtb	r3, r3
 8004bcc:	2b01      	cmp	r3, #1
 8004bce:	bf14      	ite	ne
 8004bd0:	2301      	movne	r3, #1
 8004bd2:	2300      	moveq	r3, #0
 8004bd4:	b2db      	uxtb	r3, r3
 8004bd6:	e008      	b.n	8004bea <HAL_TIM_PWM_Start+0x6a>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004bde:	b2db      	uxtb	r3, r3
 8004be0:	2b01      	cmp	r3, #1
 8004be2:	bf14      	ite	ne
 8004be4:	2301      	movne	r3, #1
 8004be6:	2300      	moveq	r3, #0
 8004be8:	b2db      	uxtb	r3, r3
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d001      	beq.n	8004bf2 <HAL_TIM_PWM_Start+0x72>
 8004bee:	2301      	movs	r3, #1
 8004bf0:	e05e      	b.n	8004cb0 <HAL_TIM_PWM_Start+0x130>
 8004bf2:	683b      	ldr	r3, [r7, #0]
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	d104      	bne.n	8004c02 <HAL_TIM_PWM_Start+0x82>
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	2202      	movs	r2, #2
 8004bfc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004c00:	e013      	b.n	8004c2a <HAL_TIM_PWM_Start+0xaa>
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	2b04      	cmp	r3, #4
 8004c06:	d104      	bne.n	8004c12 <HAL_TIM_PWM_Start+0x92>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	2202      	movs	r2, #2
 8004c0c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004c10:	e00b      	b.n	8004c2a <HAL_TIM_PWM_Start+0xaa>
 8004c12:	683b      	ldr	r3, [r7, #0]
 8004c14:	2b08      	cmp	r3, #8
 8004c16:	d104      	bne.n	8004c22 <HAL_TIM_PWM_Start+0xa2>
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	2202      	movs	r2, #2
 8004c1c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004c20:	e003      	b.n	8004c2a <HAL_TIM_PWM_Start+0xaa>
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	2202      	movs	r2, #2
 8004c26:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	2201      	movs	r2, #1
 8004c30:	6839      	ldr	r1, [r7, #0]
 8004c32:	4618      	mov	r0, r3
 8004c34:	f000 fc82 	bl	800553c <TIM_CCxChannelCmd>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	4a1e      	ldr	r2, [pc, #120]	; (8004cb8 <HAL_TIM_PWM_Start+0x138>)
 8004c3e:	4293      	cmp	r3, r2
 8004c40:	d107      	bne.n	8004c52 <HAL_TIM_PWM_Start+0xd2>
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004c50:	645a      	str	r2, [r3, #68]	; 0x44
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	4a18      	ldr	r2, [pc, #96]	; (8004cb8 <HAL_TIM_PWM_Start+0x138>)
 8004c58:	4293      	cmp	r3, r2
 8004c5a:	d00e      	beq.n	8004c7a <HAL_TIM_PWM_Start+0xfa>
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004c64:	d009      	beq.n	8004c7a <HAL_TIM_PWM_Start+0xfa>
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	4a14      	ldr	r2, [pc, #80]	; (8004cbc <HAL_TIM_PWM_Start+0x13c>)
 8004c6c:	4293      	cmp	r3, r2
 8004c6e:	d004      	beq.n	8004c7a <HAL_TIM_PWM_Start+0xfa>
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	4a12      	ldr	r2, [pc, #72]	; (8004cc0 <HAL_TIM_PWM_Start+0x140>)
 8004c76:	4293      	cmp	r3, r2
 8004c78:	d111      	bne.n	8004c9e <HAL_TIM_PWM_Start+0x11e>
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	689b      	ldr	r3, [r3, #8]
 8004c80:	f003 0307 	and.w	r3, r3, #7
 8004c84:	60fb      	str	r3, [r7, #12]
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	2b06      	cmp	r3, #6
 8004c8a:	d010      	beq.n	8004cae <HAL_TIM_PWM_Start+0x12e>
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	681a      	ldr	r2, [r3, #0]
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	f042 0201 	orr.w	r2, r2, #1
 8004c9a:	601a      	str	r2, [r3, #0]
 8004c9c:	e007      	b.n	8004cae <HAL_TIM_PWM_Start+0x12e>
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	681a      	ldr	r2, [r3, #0]
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	f042 0201 	orr.w	r2, r2, #1
 8004cac:	601a      	str	r2, [r3, #0]
 8004cae:	2300      	movs	r3, #0
 8004cb0:	4618      	mov	r0, r3
 8004cb2:	3710      	adds	r7, #16
 8004cb4:	46bd      	mov	sp, r7
 8004cb6:	bd80      	pop	{r7, pc}
 8004cb8:	40012c00 	.word	0x40012c00
 8004cbc:	40000400 	.word	0x40000400
 8004cc0:	40000800 	.word	0x40000800

08004cc4 <HAL_TIM_PWM_Stop>:
 8004cc4:	b580      	push	{r7, lr}
 8004cc6:	b082      	sub	sp, #8
 8004cc8:	af00      	add	r7, sp, #0
 8004cca:	6078      	str	r0, [r7, #4]
 8004ccc:	6039      	str	r1, [r7, #0]
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	2200      	movs	r2, #0
 8004cd4:	6839      	ldr	r1, [r7, #0]
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	f000 fc30 	bl	800553c <TIM_CCxChannelCmd>
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	4a29      	ldr	r2, [pc, #164]	; (8004d88 <HAL_TIM_PWM_Stop+0xc4>)
 8004ce2:	4293      	cmp	r3, r2
 8004ce4:	d117      	bne.n	8004d16 <HAL_TIM_PWM_Stop+0x52>
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	6a1a      	ldr	r2, [r3, #32]
 8004cec:	f241 1311 	movw	r3, #4369	; 0x1111
 8004cf0:	4013      	ands	r3, r2
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	d10f      	bne.n	8004d16 <HAL_TIM_PWM_Stop+0x52>
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	681b      	ldr	r3, [r3, #0]
 8004cfa:	6a1a      	ldr	r2, [r3, #32]
 8004cfc:	f240 4344 	movw	r3, #1092	; 0x444
 8004d00:	4013      	ands	r3, r2
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d107      	bne.n	8004d16 <HAL_TIM_PWM_Stop+0x52>
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004d14:	645a      	str	r2, [r3, #68]	; 0x44
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	6a1a      	ldr	r2, [r3, #32]
 8004d1c:	f241 1311 	movw	r3, #4369	; 0x1111
 8004d20:	4013      	ands	r3, r2
 8004d22:	2b00      	cmp	r3, #0
 8004d24:	d10f      	bne.n	8004d46 <HAL_TIM_PWM_Stop+0x82>
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	6a1a      	ldr	r2, [r3, #32]
 8004d2c:	f240 4344 	movw	r3, #1092	; 0x444
 8004d30:	4013      	ands	r3, r2
 8004d32:	2b00      	cmp	r3, #0
 8004d34:	d107      	bne.n	8004d46 <HAL_TIM_PWM_Stop+0x82>
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	681a      	ldr	r2, [r3, #0]
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	f022 0201 	bic.w	r2, r2, #1
 8004d44:	601a      	str	r2, [r3, #0]
 8004d46:	683b      	ldr	r3, [r7, #0]
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d104      	bne.n	8004d56 <HAL_TIM_PWM_Stop+0x92>
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	2201      	movs	r2, #1
 8004d50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004d54:	e013      	b.n	8004d7e <HAL_TIM_PWM_Stop+0xba>
 8004d56:	683b      	ldr	r3, [r7, #0]
 8004d58:	2b04      	cmp	r3, #4
 8004d5a:	d104      	bne.n	8004d66 <HAL_TIM_PWM_Stop+0xa2>
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	2201      	movs	r2, #1
 8004d60:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004d64:	e00b      	b.n	8004d7e <HAL_TIM_PWM_Stop+0xba>
 8004d66:	683b      	ldr	r3, [r7, #0]
 8004d68:	2b08      	cmp	r3, #8
 8004d6a:	d104      	bne.n	8004d76 <HAL_TIM_PWM_Stop+0xb2>
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	2201      	movs	r2, #1
 8004d70:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004d74:	e003      	b.n	8004d7e <HAL_TIM_PWM_Stop+0xba>
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	2201      	movs	r2, #1
 8004d7a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004d7e:	2300      	movs	r3, #0
 8004d80:	4618      	mov	r0, r3
 8004d82:	3708      	adds	r7, #8
 8004d84:	46bd      	mov	sp, r7
 8004d86:	bd80      	pop	{r7, pc}
 8004d88:	40012c00 	.word	0x40012c00

08004d8c <HAL_TIM_IRQHandler>:
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	b082      	sub	sp, #8
 8004d90:	af00      	add	r7, sp, #0
 8004d92:	6078      	str	r0, [r7, #4]
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	681b      	ldr	r3, [r3, #0]
 8004d98:	691b      	ldr	r3, [r3, #16]
 8004d9a:	f003 0302 	and.w	r3, r3, #2
 8004d9e:	2b02      	cmp	r3, #2
 8004da0:	d122      	bne.n	8004de8 <HAL_TIM_IRQHandler+0x5c>
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	68db      	ldr	r3, [r3, #12]
 8004da8:	f003 0302 	and.w	r3, r3, #2
 8004dac:	2b02      	cmp	r3, #2
 8004dae:	d11b      	bne.n	8004de8 <HAL_TIM_IRQHandler+0x5c>
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	f06f 0202 	mvn.w	r2, #2
 8004db8:	611a      	str	r2, [r3, #16]
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	2201      	movs	r2, #1
 8004dbe:	771a      	strb	r2, [r3, #28]
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	681b      	ldr	r3, [r3, #0]
 8004dc4:	699b      	ldr	r3, [r3, #24]
 8004dc6:	f003 0303 	and.w	r3, r3, #3
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	d003      	beq.n	8004dd6 <HAL_TIM_IRQHandler+0x4a>
 8004dce:	6878      	ldr	r0, [r7, #4]
 8004dd0:	f000 f9af 	bl	8005132 <HAL_TIM_IC_CaptureCallback>
 8004dd4:	e005      	b.n	8004de2 <HAL_TIM_IRQHandler+0x56>
 8004dd6:	6878      	ldr	r0, [r7, #4]
 8004dd8:	f000 f9a2 	bl	8005120 <HAL_TIM_OC_DelayElapsedCallback>
 8004ddc:	6878      	ldr	r0, [r7, #4]
 8004dde:	f000 f9b1 	bl	8005144 <HAL_TIM_PWM_PulseFinishedCallback>
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	2200      	movs	r2, #0
 8004de6:	771a      	strb	r2, [r3, #28]
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	691b      	ldr	r3, [r3, #16]
 8004dee:	f003 0304 	and.w	r3, r3, #4
 8004df2:	2b04      	cmp	r3, #4
 8004df4:	d122      	bne.n	8004e3c <HAL_TIM_IRQHandler+0xb0>
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	68db      	ldr	r3, [r3, #12]
 8004dfc:	f003 0304 	and.w	r3, r3, #4
 8004e00:	2b04      	cmp	r3, #4
 8004e02:	d11b      	bne.n	8004e3c <HAL_TIM_IRQHandler+0xb0>
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	f06f 0204 	mvn.w	r2, #4
 8004e0c:	611a      	str	r2, [r3, #16]
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	2202      	movs	r2, #2
 8004e12:	771a      	strb	r2, [r3, #28]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	699b      	ldr	r3, [r3, #24]
 8004e1a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d003      	beq.n	8004e2a <HAL_TIM_IRQHandler+0x9e>
 8004e22:	6878      	ldr	r0, [r7, #4]
 8004e24:	f000 f985 	bl	8005132 <HAL_TIM_IC_CaptureCallback>
 8004e28:	e005      	b.n	8004e36 <HAL_TIM_IRQHandler+0xaa>
 8004e2a:	6878      	ldr	r0, [r7, #4]
 8004e2c:	f000 f978 	bl	8005120 <HAL_TIM_OC_DelayElapsedCallback>
 8004e30:	6878      	ldr	r0, [r7, #4]
 8004e32:	f000 f987 	bl	8005144 <HAL_TIM_PWM_PulseFinishedCallback>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	2200      	movs	r2, #0
 8004e3a:	771a      	strb	r2, [r3, #28]
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	691b      	ldr	r3, [r3, #16]
 8004e42:	f003 0308 	and.w	r3, r3, #8
 8004e46:	2b08      	cmp	r3, #8
 8004e48:	d122      	bne.n	8004e90 <HAL_TIM_IRQHandler+0x104>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	68db      	ldr	r3, [r3, #12]
 8004e50:	f003 0308 	and.w	r3, r3, #8
 8004e54:	2b08      	cmp	r3, #8
 8004e56:	d11b      	bne.n	8004e90 <HAL_TIM_IRQHandler+0x104>
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	f06f 0208 	mvn.w	r2, #8
 8004e60:	611a      	str	r2, [r3, #16]
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	2204      	movs	r2, #4
 8004e66:	771a      	strb	r2, [r3, #28]
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	69db      	ldr	r3, [r3, #28]
 8004e6e:	f003 0303 	and.w	r3, r3, #3
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d003      	beq.n	8004e7e <HAL_TIM_IRQHandler+0xf2>
 8004e76:	6878      	ldr	r0, [r7, #4]
 8004e78:	f000 f95b 	bl	8005132 <HAL_TIM_IC_CaptureCallback>
 8004e7c:	e005      	b.n	8004e8a <HAL_TIM_IRQHandler+0xfe>
 8004e7e:	6878      	ldr	r0, [r7, #4]
 8004e80:	f000 f94e 	bl	8005120 <HAL_TIM_OC_DelayElapsedCallback>
 8004e84:	6878      	ldr	r0, [r7, #4]
 8004e86:	f000 f95d 	bl	8005144 <HAL_TIM_PWM_PulseFinishedCallback>
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	2200      	movs	r2, #0
 8004e8e:	771a      	strb	r2, [r3, #28]
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	681b      	ldr	r3, [r3, #0]
 8004e94:	691b      	ldr	r3, [r3, #16]
 8004e96:	f003 0310 	and.w	r3, r3, #16
 8004e9a:	2b10      	cmp	r3, #16
 8004e9c:	d122      	bne.n	8004ee4 <HAL_TIM_IRQHandler+0x158>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	68db      	ldr	r3, [r3, #12]
 8004ea4:	f003 0310 	and.w	r3, r3, #16
 8004ea8:	2b10      	cmp	r3, #16
 8004eaa:	d11b      	bne.n	8004ee4 <HAL_TIM_IRQHandler+0x158>
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	f06f 0210 	mvn.w	r2, #16
 8004eb4:	611a      	str	r2, [r3, #16]
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	2208      	movs	r2, #8
 8004eba:	771a      	strb	r2, [r3, #28]
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	681b      	ldr	r3, [r3, #0]
 8004ec0:	69db      	ldr	r3, [r3, #28]
 8004ec2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d003      	beq.n	8004ed2 <HAL_TIM_IRQHandler+0x146>
 8004eca:	6878      	ldr	r0, [r7, #4]
 8004ecc:	f000 f931 	bl	8005132 <HAL_TIM_IC_CaptureCallback>
 8004ed0:	e005      	b.n	8004ede <HAL_TIM_IRQHandler+0x152>
 8004ed2:	6878      	ldr	r0, [r7, #4]
 8004ed4:	f000 f924 	bl	8005120 <HAL_TIM_OC_DelayElapsedCallback>
 8004ed8:	6878      	ldr	r0, [r7, #4]
 8004eda:	f000 f933 	bl	8005144 <HAL_TIM_PWM_PulseFinishedCallback>
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	2200      	movs	r2, #0
 8004ee2:	771a      	strb	r2, [r3, #28]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	691b      	ldr	r3, [r3, #16]
 8004eea:	f003 0301 	and.w	r3, r3, #1
 8004eee:	2b01      	cmp	r3, #1
 8004ef0:	d10e      	bne.n	8004f10 <HAL_TIM_IRQHandler+0x184>
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	68db      	ldr	r3, [r3, #12]
 8004ef8:	f003 0301 	and.w	r3, r3, #1
 8004efc:	2b01      	cmp	r3, #1
 8004efe:	d107      	bne.n	8004f10 <HAL_TIM_IRQHandler+0x184>
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	f06f 0201 	mvn.w	r2, #1
 8004f08:	611a      	str	r2, [r3, #16]
 8004f0a:	6878      	ldr	r0, [r7, #4]
 8004f0c:	f7fd fd00 	bl	8002910 <HAL_TIM_PeriodElapsedCallback>
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	681b      	ldr	r3, [r3, #0]
 8004f14:	691b      	ldr	r3, [r3, #16]
 8004f16:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f1a:	2b80      	cmp	r3, #128	; 0x80
 8004f1c:	d10e      	bne.n	8004f3c <HAL_TIM_IRQHandler+0x1b0>
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	68db      	ldr	r3, [r3, #12]
 8004f24:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f28:	2b80      	cmp	r3, #128	; 0x80
 8004f2a:	d107      	bne.n	8004f3c <HAL_TIM_IRQHandler+0x1b0>
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004f34:	611a      	str	r2, [r3, #16]
 8004f36:	6878      	ldr	r0, [r7, #4]
 8004f38:	f000 fbdc 	bl	80056f4 <HAL_TIMEx_BreakCallback>
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	691b      	ldr	r3, [r3, #16]
 8004f42:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f46:	2b40      	cmp	r3, #64	; 0x40
 8004f48:	d10e      	bne.n	8004f68 <HAL_TIM_IRQHandler+0x1dc>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	68db      	ldr	r3, [r3, #12]
 8004f50:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f54:	2b40      	cmp	r3, #64	; 0x40
 8004f56:	d107      	bne.n	8004f68 <HAL_TIM_IRQHandler+0x1dc>
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004f60:	611a      	str	r2, [r3, #16]
 8004f62:	6878      	ldr	r0, [r7, #4]
 8004f64:	f000 f8f7 	bl	8005156 <HAL_TIM_TriggerCallback>
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	691b      	ldr	r3, [r3, #16]
 8004f6e:	f003 0320 	and.w	r3, r3, #32
 8004f72:	2b20      	cmp	r3, #32
 8004f74:	d10e      	bne.n	8004f94 <HAL_TIM_IRQHandler+0x208>
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	68db      	ldr	r3, [r3, #12]
 8004f7c:	f003 0320 	and.w	r3, r3, #32
 8004f80:	2b20      	cmp	r3, #32
 8004f82:	d107      	bne.n	8004f94 <HAL_TIM_IRQHandler+0x208>
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	f06f 0220 	mvn.w	r2, #32
 8004f8c:	611a      	str	r2, [r3, #16]
 8004f8e:	6878      	ldr	r0, [r7, #4]
 8004f90:	f000 fba7 	bl	80056e2 <HAL_TIMEx_CommutCallback>
 8004f94:	bf00      	nop
 8004f96:	3708      	adds	r7, #8
 8004f98:	46bd      	mov	sp, r7
 8004f9a:	bd80      	pop	{r7, pc}

08004f9c <HAL_TIM_PWM_ConfigChannel>:
 8004f9c:	b580      	push	{r7, lr}
 8004f9e:	b086      	sub	sp, #24
 8004fa0:	af00      	add	r7, sp, #0
 8004fa2:	60f8      	str	r0, [r7, #12]
 8004fa4:	60b9      	str	r1, [r7, #8]
 8004fa6:	607a      	str	r2, [r7, #4]
 8004fa8:	2300      	movs	r3, #0
 8004faa:	75fb      	strb	r3, [r7, #23]
 8004fac:	68fb      	ldr	r3, [r7, #12]
 8004fae:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004fb2:	2b01      	cmp	r3, #1
 8004fb4:	d101      	bne.n	8004fba <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004fb6:	2302      	movs	r3, #2
 8004fb8:	e0ae      	b.n	8005118 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	2201      	movs	r2, #1
 8004fbe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	2b0c      	cmp	r3, #12
 8004fc6:	f200 809f 	bhi.w	8005108 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004fca:	a201      	add	r2, pc, #4	; (adr r2, 8004fd0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004fcc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004fd0:	08005005 	.word	0x08005005
 8004fd4:	08005109 	.word	0x08005109
 8004fd8:	08005109 	.word	0x08005109
 8004fdc:	08005109 	.word	0x08005109
 8004fe0:	08005045 	.word	0x08005045
 8004fe4:	08005109 	.word	0x08005109
 8004fe8:	08005109 	.word	0x08005109
 8004fec:	08005109 	.word	0x08005109
 8004ff0:	08005087 	.word	0x08005087
 8004ff4:	08005109 	.word	0x08005109
 8004ff8:	08005109 	.word	0x08005109
 8004ffc:	08005109 	.word	0x08005109
 8005000:	080050c7 	.word	0x080050c7
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	68b9      	ldr	r1, [r7, #8]
 800500a:	4618      	mov	r0, r3
 800500c:	f000 f90e 	bl	800522c <TIM_OC1_SetConfig>
 8005010:	68fb      	ldr	r3, [r7, #12]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	699a      	ldr	r2, [r3, #24]
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	f042 0208 	orr.w	r2, r2, #8
 800501e:	619a      	str	r2, [r3, #24]
 8005020:	68fb      	ldr	r3, [r7, #12]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	699a      	ldr	r2, [r3, #24]
 8005026:	68fb      	ldr	r3, [r7, #12]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	f022 0204 	bic.w	r2, r2, #4
 800502e:	619a      	str	r2, [r3, #24]
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	6999      	ldr	r1, [r3, #24]
 8005036:	68bb      	ldr	r3, [r7, #8]
 8005038:	691a      	ldr	r2, [r3, #16]
 800503a:	68fb      	ldr	r3, [r7, #12]
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	430a      	orrs	r2, r1
 8005040:	619a      	str	r2, [r3, #24]
 8005042:	e064      	b.n	800510e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005044:	68fb      	ldr	r3, [r7, #12]
 8005046:	681b      	ldr	r3, [r3, #0]
 8005048:	68b9      	ldr	r1, [r7, #8]
 800504a:	4618      	mov	r0, r3
 800504c:	f000 f954 	bl	80052f8 <TIM_OC2_SetConfig>
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	699a      	ldr	r2, [r3, #24]
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800505e:	619a      	str	r2, [r3, #24]
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	699a      	ldr	r2, [r3, #24]
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800506e:	619a      	str	r2, [r3, #24]
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	6999      	ldr	r1, [r3, #24]
 8005076:	68bb      	ldr	r3, [r7, #8]
 8005078:	691b      	ldr	r3, [r3, #16]
 800507a:	021a      	lsls	r2, r3, #8
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	430a      	orrs	r2, r1
 8005082:	619a      	str	r2, [r3, #24]
 8005084:	e043      	b.n	800510e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005086:	68fb      	ldr	r3, [r7, #12]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	68b9      	ldr	r1, [r7, #8]
 800508c:	4618      	mov	r0, r3
 800508e:	f000 f99d 	bl	80053cc <TIM_OC3_SetConfig>
 8005092:	68fb      	ldr	r3, [r7, #12]
 8005094:	681b      	ldr	r3, [r3, #0]
 8005096:	69da      	ldr	r2, [r3, #28]
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	f042 0208 	orr.w	r2, r2, #8
 80050a0:	61da      	str	r2, [r3, #28]
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	681b      	ldr	r3, [r3, #0]
 80050a6:	69da      	ldr	r2, [r3, #28]
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	f022 0204 	bic.w	r2, r2, #4
 80050b0:	61da      	str	r2, [r3, #28]
 80050b2:	68fb      	ldr	r3, [r7, #12]
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	69d9      	ldr	r1, [r3, #28]
 80050b8:	68bb      	ldr	r3, [r7, #8]
 80050ba:	691a      	ldr	r2, [r3, #16]
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	430a      	orrs	r2, r1
 80050c2:	61da      	str	r2, [r3, #28]
 80050c4:	e023      	b.n	800510e <HAL_TIM_PWM_ConfigChannel+0x172>
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	681b      	ldr	r3, [r3, #0]
 80050ca:	68b9      	ldr	r1, [r7, #8]
 80050cc:	4618      	mov	r0, r3
 80050ce:	f000 f9e7 	bl	80054a0 <TIM_OC4_SetConfig>
 80050d2:	68fb      	ldr	r3, [r7, #12]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	69da      	ldr	r2, [r3, #28]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80050e0:	61da      	str	r2, [r3, #28]
 80050e2:	68fb      	ldr	r3, [r7, #12]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	69da      	ldr	r2, [r3, #28]
 80050e8:	68fb      	ldr	r3, [r7, #12]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050f0:	61da      	str	r2, [r3, #28]
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	69d9      	ldr	r1, [r3, #28]
 80050f8:	68bb      	ldr	r3, [r7, #8]
 80050fa:	691b      	ldr	r3, [r3, #16]
 80050fc:	021a      	lsls	r2, r3, #8
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	430a      	orrs	r2, r1
 8005104:	61da      	str	r2, [r3, #28]
 8005106:	e002      	b.n	800510e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005108:	2301      	movs	r3, #1
 800510a:	75fb      	strb	r3, [r7, #23]
 800510c:	bf00      	nop
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	2200      	movs	r2, #0
 8005112:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005116:	7dfb      	ldrb	r3, [r7, #23]
 8005118:	4618      	mov	r0, r3
 800511a:	3718      	adds	r7, #24
 800511c:	46bd      	mov	sp, r7
 800511e:	bd80      	pop	{r7, pc}

08005120 <HAL_TIM_OC_DelayElapsedCallback>:
 8005120:	b480      	push	{r7}
 8005122:	b083      	sub	sp, #12
 8005124:	af00      	add	r7, sp, #0
 8005126:	6078      	str	r0, [r7, #4]
 8005128:	bf00      	nop
 800512a:	370c      	adds	r7, #12
 800512c:	46bd      	mov	sp, r7
 800512e:	bc80      	pop	{r7}
 8005130:	4770      	bx	lr

08005132 <HAL_TIM_IC_CaptureCallback>:
 8005132:	b480      	push	{r7}
 8005134:	b083      	sub	sp, #12
 8005136:	af00      	add	r7, sp, #0
 8005138:	6078      	str	r0, [r7, #4]
 800513a:	bf00      	nop
 800513c:	370c      	adds	r7, #12
 800513e:	46bd      	mov	sp, r7
 8005140:	bc80      	pop	{r7}
 8005142:	4770      	bx	lr

08005144 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005144:	b480      	push	{r7}
 8005146:	b083      	sub	sp, #12
 8005148:	af00      	add	r7, sp, #0
 800514a:	6078      	str	r0, [r7, #4]
 800514c:	bf00      	nop
 800514e:	370c      	adds	r7, #12
 8005150:	46bd      	mov	sp, r7
 8005152:	bc80      	pop	{r7}
 8005154:	4770      	bx	lr

08005156 <HAL_TIM_TriggerCallback>:
 8005156:	b480      	push	{r7}
 8005158:	b083      	sub	sp, #12
 800515a:	af00      	add	r7, sp, #0
 800515c:	6078      	str	r0, [r7, #4]
 800515e:	bf00      	nop
 8005160:	370c      	adds	r7, #12
 8005162:	46bd      	mov	sp, r7
 8005164:	bc80      	pop	{r7}
 8005166:	4770      	bx	lr

08005168 <TIM_Base_SetConfig>:
 8005168:	b480      	push	{r7}
 800516a:	b085      	sub	sp, #20
 800516c:	af00      	add	r7, sp, #0
 800516e:	6078      	str	r0, [r7, #4]
 8005170:	6039      	str	r1, [r7, #0]
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	60fb      	str	r3, [r7, #12]
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	4a29      	ldr	r2, [pc, #164]	; (8005220 <TIM_Base_SetConfig+0xb8>)
 800517c:	4293      	cmp	r3, r2
 800517e:	d00b      	beq.n	8005198 <TIM_Base_SetConfig+0x30>
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005186:	d007      	beq.n	8005198 <TIM_Base_SetConfig+0x30>
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	4a26      	ldr	r2, [pc, #152]	; (8005224 <TIM_Base_SetConfig+0xbc>)
 800518c:	4293      	cmp	r3, r2
 800518e:	d003      	beq.n	8005198 <TIM_Base_SetConfig+0x30>
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	4a25      	ldr	r2, [pc, #148]	; (8005228 <TIM_Base_SetConfig+0xc0>)
 8005194:	4293      	cmp	r3, r2
 8005196:	d108      	bne.n	80051aa <TIM_Base_SetConfig+0x42>
 8005198:	68fb      	ldr	r3, [r7, #12]
 800519a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800519e:	60fb      	str	r3, [r7, #12]
 80051a0:	683b      	ldr	r3, [r7, #0]
 80051a2:	685b      	ldr	r3, [r3, #4]
 80051a4:	68fa      	ldr	r2, [r7, #12]
 80051a6:	4313      	orrs	r3, r2
 80051a8:	60fb      	str	r3, [r7, #12]
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	4a1c      	ldr	r2, [pc, #112]	; (8005220 <TIM_Base_SetConfig+0xb8>)
 80051ae:	4293      	cmp	r3, r2
 80051b0:	d00b      	beq.n	80051ca <TIM_Base_SetConfig+0x62>
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80051b8:	d007      	beq.n	80051ca <TIM_Base_SetConfig+0x62>
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	4a19      	ldr	r2, [pc, #100]	; (8005224 <TIM_Base_SetConfig+0xbc>)
 80051be:	4293      	cmp	r3, r2
 80051c0:	d003      	beq.n	80051ca <TIM_Base_SetConfig+0x62>
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	4a18      	ldr	r2, [pc, #96]	; (8005228 <TIM_Base_SetConfig+0xc0>)
 80051c6:	4293      	cmp	r3, r2
 80051c8:	d108      	bne.n	80051dc <TIM_Base_SetConfig+0x74>
 80051ca:	68fb      	ldr	r3, [r7, #12]
 80051cc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80051d0:	60fb      	str	r3, [r7, #12]
 80051d2:	683b      	ldr	r3, [r7, #0]
 80051d4:	68db      	ldr	r3, [r3, #12]
 80051d6:	68fa      	ldr	r2, [r7, #12]
 80051d8:	4313      	orrs	r3, r2
 80051da:	60fb      	str	r3, [r7, #12]
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80051e2:	683b      	ldr	r3, [r7, #0]
 80051e4:	695b      	ldr	r3, [r3, #20]
 80051e6:	4313      	orrs	r3, r2
 80051e8:	60fb      	str	r3, [r7, #12]
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	68fa      	ldr	r2, [r7, #12]
 80051ee:	601a      	str	r2, [r3, #0]
 80051f0:	683b      	ldr	r3, [r7, #0]
 80051f2:	689a      	ldr	r2, [r3, #8]
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	62da      	str	r2, [r3, #44]	; 0x2c
 80051f8:	683b      	ldr	r3, [r7, #0]
 80051fa:	681a      	ldr	r2, [r3, #0]
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	629a      	str	r2, [r3, #40]	; 0x28
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	4a07      	ldr	r2, [pc, #28]	; (8005220 <TIM_Base_SetConfig+0xb8>)
 8005204:	4293      	cmp	r3, r2
 8005206:	d103      	bne.n	8005210 <TIM_Base_SetConfig+0xa8>
 8005208:	683b      	ldr	r3, [r7, #0]
 800520a:	691a      	ldr	r2, [r3, #16]
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	631a      	str	r2, [r3, #48]	; 0x30
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	2201      	movs	r2, #1
 8005214:	615a      	str	r2, [r3, #20]
 8005216:	bf00      	nop
 8005218:	3714      	adds	r7, #20
 800521a:	46bd      	mov	sp, r7
 800521c:	bc80      	pop	{r7}
 800521e:	4770      	bx	lr
 8005220:	40012c00 	.word	0x40012c00
 8005224:	40000400 	.word	0x40000400
 8005228:	40000800 	.word	0x40000800

0800522c <TIM_OC1_SetConfig>:
 800522c:	b480      	push	{r7}
 800522e:	b087      	sub	sp, #28
 8005230:	af00      	add	r7, sp, #0
 8005232:	6078      	str	r0, [r7, #4]
 8005234:	6039      	str	r1, [r7, #0]
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	6a1b      	ldr	r3, [r3, #32]
 800523a:	617b      	str	r3, [r7, #20]
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	6a1b      	ldr	r3, [r3, #32]
 8005240:	f023 0201 	bic.w	r2, r3, #1
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	621a      	str	r2, [r3, #32]
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	685b      	ldr	r3, [r3, #4]
 800524c:	613b      	str	r3, [r7, #16]
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	699b      	ldr	r3, [r3, #24]
 8005252:	60fb      	str	r3, [r7, #12]
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800525a:	60fb      	str	r3, [r7, #12]
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	f023 0303 	bic.w	r3, r3, #3
 8005262:	60fb      	str	r3, [r7, #12]
 8005264:	683b      	ldr	r3, [r7, #0]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	68fa      	ldr	r2, [r7, #12]
 800526a:	4313      	orrs	r3, r2
 800526c:	60fb      	str	r3, [r7, #12]
 800526e:	697b      	ldr	r3, [r7, #20]
 8005270:	f023 0302 	bic.w	r3, r3, #2
 8005274:	617b      	str	r3, [r7, #20]
 8005276:	683b      	ldr	r3, [r7, #0]
 8005278:	689b      	ldr	r3, [r3, #8]
 800527a:	697a      	ldr	r2, [r7, #20]
 800527c:	4313      	orrs	r3, r2
 800527e:	617b      	str	r3, [r7, #20]
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	4a1c      	ldr	r2, [pc, #112]	; (80052f4 <TIM_OC1_SetConfig+0xc8>)
 8005284:	4293      	cmp	r3, r2
 8005286:	d10c      	bne.n	80052a2 <TIM_OC1_SetConfig+0x76>
 8005288:	697b      	ldr	r3, [r7, #20]
 800528a:	f023 0308 	bic.w	r3, r3, #8
 800528e:	617b      	str	r3, [r7, #20]
 8005290:	683b      	ldr	r3, [r7, #0]
 8005292:	68db      	ldr	r3, [r3, #12]
 8005294:	697a      	ldr	r2, [r7, #20]
 8005296:	4313      	orrs	r3, r2
 8005298:	617b      	str	r3, [r7, #20]
 800529a:	697b      	ldr	r3, [r7, #20]
 800529c:	f023 0304 	bic.w	r3, r3, #4
 80052a0:	617b      	str	r3, [r7, #20]
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	4a13      	ldr	r2, [pc, #76]	; (80052f4 <TIM_OC1_SetConfig+0xc8>)
 80052a6:	4293      	cmp	r3, r2
 80052a8:	d111      	bne.n	80052ce <TIM_OC1_SetConfig+0xa2>
 80052aa:	693b      	ldr	r3, [r7, #16]
 80052ac:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80052b0:	613b      	str	r3, [r7, #16]
 80052b2:	693b      	ldr	r3, [r7, #16]
 80052b4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80052b8:	613b      	str	r3, [r7, #16]
 80052ba:	683b      	ldr	r3, [r7, #0]
 80052bc:	695b      	ldr	r3, [r3, #20]
 80052be:	693a      	ldr	r2, [r7, #16]
 80052c0:	4313      	orrs	r3, r2
 80052c2:	613b      	str	r3, [r7, #16]
 80052c4:	683b      	ldr	r3, [r7, #0]
 80052c6:	699b      	ldr	r3, [r3, #24]
 80052c8:	693a      	ldr	r2, [r7, #16]
 80052ca:	4313      	orrs	r3, r2
 80052cc:	613b      	str	r3, [r7, #16]
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	693a      	ldr	r2, [r7, #16]
 80052d2:	605a      	str	r2, [r3, #4]
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	68fa      	ldr	r2, [r7, #12]
 80052d8:	619a      	str	r2, [r3, #24]
 80052da:	683b      	ldr	r3, [r7, #0]
 80052dc:	685a      	ldr	r2, [r3, #4]
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	635a      	str	r2, [r3, #52]	; 0x34
 80052e2:	687b      	ldr	r3, [r7, #4]
 80052e4:	697a      	ldr	r2, [r7, #20]
 80052e6:	621a      	str	r2, [r3, #32]
 80052e8:	bf00      	nop
 80052ea:	371c      	adds	r7, #28
 80052ec:	46bd      	mov	sp, r7
 80052ee:	bc80      	pop	{r7}
 80052f0:	4770      	bx	lr
 80052f2:	bf00      	nop
 80052f4:	40012c00 	.word	0x40012c00

080052f8 <TIM_OC2_SetConfig>:
 80052f8:	b480      	push	{r7}
 80052fa:	b087      	sub	sp, #28
 80052fc:	af00      	add	r7, sp, #0
 80052fe:	6078      	str	r0, [r7, #4]
 8005300:	6039      	str	r1, [r7, #0]
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	6a1b      	ldr	r3, [r3, #32]
 8005306:	617b      	str	r3, [r7, #20]
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	6a1b      	ldr	r3, [r3, #32]
 800530c:	f023 0210 	bic.w	r2, r3, #16
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	621a      	str	r2, [r3, #32]
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	685b      	ldr	r3, [r3, #4]
 8005318:	613b      	str	r3, [r7, #16]
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	699b      	ldr	r3, [r3, #24]
 800531e:	60fb      	str	r3, [r7, #12]
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005326:	60fb      	str	r3, [r7, #12]
 8005328:	68fb      	ldr	r3, [r7, #12]
 800532a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800532e:	60fb      	str	r3, [r7, #12]
 8005330:	683b      	ldr	r3, [r7, #0]
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	021b      	lsls	r3, r3, #8
 8005336:	68fa      	ldr	r2, [r7, #12]
 8005338:	4313      	orrs	r3, r2
 800533a:	60fb      	str	r3, [r7, #12]
 800533c:	697b      	ldr	r3, [r7, #20]
 800533e:	f023 0320 	bic.w	r3, r3, #32
 8005342:	617b      	str	r3, [r7, #20]
 8005344:	683b      	ldr	r3, [r7, #0]
 8005346:	689b      	ldr	r3, [r3, #8]
 8005348:	011b      	lsls	r3, r3, #4
 800534a:	697a      	ldr	r2, [r7, #20]
 800534c:	4313      	orrs	r3, r2
 800534e:	617b      	str	r3, [r7, #20]
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	4a1d      	ldr	r2, [pc, #116]	; (80053c8 <TIM_OC2_SetConfig+0xd0>)
 8005354:	4293      	cmp	r3, r2
 8005356:	d10d      	bne.n	8005374 <TIM_OC2_SetConfig+0x7c>
 8005358:	697b      	ldr	r3, [r7, #20]
 800535a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800535e:	617b      	str	r3, [r7, #20]
 8005360:	683b      	ldr	r3, [r7, #0]
 8005362:	68db      	ldr	r3, [r3, #12]
 8005364:	011b      	lsls	r3, r3, #4
 8005366:	697a      	ldr	r2, [r7, #20]
 8005368:	4313      	orrs	r3, r2
 800536a:	617b      	str	r3, [r7, #20]
 800536c:	697b      	ldr	r3, [r7, #20]
 800536e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005372:	617b      	str	r3, [r7, #20]
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	4a14      	ldr	r2, [pc, #80]	; (80053c8 <TIM_OC2_SetConfig+0xd0>)
 8005378:	4293      	cmp	r3, r2
 800537a:	d113      	bne.n	80053a4 <TIM_OC2_SetConfig+0xac>
 800537c:	693b      	ldr	r3, [r7, #16]
 800537e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005382:	613b      	str	r3, [r7, #16]
 8005384:	693b      	ldr	r3, [r7, #16]
 8005386:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800538a:	613b      	str	r3, [r7, #16]
 800538c:	683b      	ldr	r3, [r7, #0]
 800538e:	695b      	ldr	r3, [r3, #20]
 8005390:	009b      	lsls	r3, r3, #2
 8005392:	693a      	ldr	r2, [r7, #16]
 8005394:	4313      	orrs	r3, r2
 8005396:	613b      	str	r3, [r7, #16]
 8005398:	683b      	ldr	r3, [r7, #0]
 800539a:	699b      	ldr	r3, [r3, #24]
 800539c:	009b      	lsls	r3, r3, #2
 800539e:	693a      	ldr	r2, [r7, #16]
 80053a0:	4313      	orrs	r3, r2
 80053a2:	613b      	str	r3, [r7, #16]
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	693a      	ldr	r2, [r7, #16]
 80053a8:	605a      	str	r2, [r3, #4]
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	68fa      	ldr	r2, [r7, #12]
 80053ae:	619a      	str	r2, [r3, #24]
 80053b0:	683b      	ldr	r3, [r7, #0]
 80053b2:	685a      	ldr	r2, [r3, #4]
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	639a      	str	r2, [r3, #56]	; 0x38
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	697a      	ldr	r2, [r7, #20]
 80053bc:	621a      	str	r2, [r3, #32]
 80053be:	bf00      	nop
 80053c0:	371c      	adds	r7, #28
 80053c2:	46bd      	mov	sp, r7
 80053c4:	bc80      	pop	{r7}
 80053c6:	4770      	bx	lr
 80053c8:	40012c00 	.word	0x40012c00

080053cc <TIM_OC3_SetConfig>:
 80053cc:	b480      	push	{r7}
 80053ce:	b087      	sub	sp, #28
 80053d0:	af00      	add	r7, sp, #0
 80053d2:	6078      	str	r0, [r7, #4]
 80053d4:	6039      	str	r1, [r7, #0]
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	6a1b      	ldr	r3, [r3, #32]
 80053da:	617b      	str	r3, [r7, #20]
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	6a1b      	ldr	r3, [r3, #32]
 80053e0:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	621a      	str	r2, [r3, #32]
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	685b      	ldr	r3, [r3, #4]
 80053ec:	613b      	str	r3, [r7, #16]
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	69db      	ldr	r3, [r3, #28]
 80053f2:	60fb      	str	r3, [r7, #12]
 80053f4:	68fb      	ldr	r3, [r7, #12]
 80053f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80053fa:	60fb      	str	r3, [r7, #12]
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	f023 0303 	bic.w	r3, r3, #3
 8005402:	60fb      	str	r3, [r7, #12]
 8005404:	683b      	ldr	r3, [r7, #0]
 8005406:	681b      	ldr	r3, [r3, #0]
 8005408:	68fa      	ldr	r2, [r7, #12]
 800540a:	4313      	orrs	r3, r2
 800540c:	60fb      	str	r3, [r7, #12]
 800540e:	697b      	ldr	r3, [r7, #20]
 8005410:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005414:	617b      	str	r3, [r7, #20]
 8005416:	683b      	ldr	r3, [r7, #0]
 8005418:	689b      	ldr	r3, [r3, #8]
 800541a:	021b      	lsls	r3, r3, #8
 800541c:	697a      	ldr	r2, [r7, #20]
 800541e:	4313      	orrs	r3, r2
 8005420:	617b      	str	r3, [r7, #20]
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	4a1d      	ldr	r2, [pc, #116]	; (800549c <TIM_OC3_SetConfig+0xd0>)
 8005426:	4293      	cmp	r3, r2
 8005428:	d10d      	bne.n	8005446 <TIM_OC3_SetConfig+0x7a>
 800542a:	697b      	ldr	r3, [r7, #20]
 800542c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005430:	617b      	str	r3, [r7, #20]
 8005432:	683b      	ldr	r3, [r7, #0]
 8005434:	68db      	ldr	r3, [r3, #12]
 8005436:	021b      	lsls	r3, r3, #8
 8005438:	697a      	ldr	r2, [r7, #20]
 800543a:	4313      	orrs	r3, r2
 800543c:	617b      	str	r3, [r7, #20]
 800543e:	697b      	ldr	r3, [r7, #20]
 8005440:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005444:	617b      	str	r3, [r7, #20]
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	4a14      	ldr	r2, [pc, #80]	; (800549c <TIM_OC3_SetConfig+0xd0>)
 800544a:	4293      	cmp	r3, r2
 800544c:	d113      	bne.n	8005476 <TIM_OC3_SetConfig+0xaa>
 800544e:	693b      	ldr	r3, [r7, #16]
 8005450:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005454:	613b      	str	r3, [r7, #16]
 8005456:	693b      	ldr	r3, [r7, #16]
 8005458:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800545c:	613b      	str	r3, [r7, #16]
 800545e:	683b      	ldr	r3, [r7, #0]
 8005460:	695b      	ldr	r3, [r3, #20]
 8005462:	011b      	lsls	r3, r3, #4
 8005464:	693a      	ldr	r2, [r7, #16]
 8005466:	4313      	orrs	r3, r2
 8005468:	613b      	str	r3, [r7, #16]
 800546a:	683b      	ldr	r3, [r7, #0]
 800546c:	699b      	ldr	r3, [r3, #24]
 800546e:	011b      	lsls	r3, r3, #4
 8005470:	693a      	ldr	r2, [r7, #16]
 8005472:	4313      	orrs	r3, r2
 8005474:	613b      	str	r3, [r7, #16]
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	693a      	ldr	r2, [r7, #16]
 800547a:	605a      	str	r2, [r3, #4]
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	68fa      	ldr	r2, [r7, #12]
 8005480:	61da      	str	r2, [r3, #28]
 8005482:	683b      	ldr	r3, [r7, #0]
 8005484:	685a      	ldr	r2, [r3, #4]
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	63da      	str	r2, [r3, #60]	; 0x3c
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	697a      	ldr	r2, [r7, #20]
 800548e:	621a      	str	r2, [r3, #32]
 8005490:	bf00      	nop
 8005492:	371c      	adds	r7, #28
 8005494:	46bd      	mov	sp, r7
 8005496:	bc80      	pop	{r7}
 8005498:	4770      	bx	lr
 800549a:	bf00      	nop
 800549c:	40012c00 	.word	0x40012c00

080054a0 <TIM_OC4_SetConfig>:
 80054a0:	b480      	push	{r7}
 80054a2:	b087      	sub	sp, #28
 80054a4:	af00      	add	r7, sp, #0
 80054a6:	6078      	str	r0, [r7, #4]
 80054a8:	6039      	str	r1, [r7, #0]
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	6a1b      	ldr	r3, [r3, #32]
 80054ae:	613b      	str	r3, [r7, #16]
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	6a1b      	ldr	r3, [r3, #32]
 80054b4:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	621a      	str	r2, [r3, #32]
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	685b      	ldr	r3, [r3, #4]
 80054c0:	617b      	str	r3, [r7, #20]
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	69db      	ldr	r3, [r3, #28]
 80054c6:	60fb      	str	r3, [r7, #12]
 80054c8:	68fb      	ldr	r3, [r7, #12]
 80054ca:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80054ce:	60fb      	str	r3, [r7, #12]
 80054d0:	68fb      	ldr	r3, [r7, #12]
 80054d2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80054d6:	60fb      	str	r3, [r7, #12]
 80054d8:	683b      	ldr	r3, [r7, #0]
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	021b      	lsls	r3, r3, #8
 80054de:	68fa      	ldr	r2, [r7, #12]
 80054e0:	4313      	orrs	r3, r2
 80054e2:	60fb      	str	r3, [r7, #12]
 80054e4:	693b      	ldr	r3, [r7, #16]
 80054e6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80054ea:	613b      	str	r3, [r7, #16]
 80054ec:	683b      	ldr	r3, [r7, #0]
 80054ee:	689b      	ldr	r3, [r3, #8]
 80054f0:	031b      	lsls	r3, r3, #12
 80054f2:	693a      	ldr	r2, [r7, #16]
 80054f4:	4313      	orrs	r3, r2
 80054f6:	613b      	str	r3, [r7, #16]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	4a0f      	ldr	r2, [pc, #60]	; (8005538 <TIM_OC4_SetConfig+0x98>)
 80054fc:	4293      	cmp	r3, r2
 80054fe:	d109      	bne.n	8005514 <TIM_OC4_SetConfig+0x74>
 8005500:	697b      	ldr	r3, [r7, #20]
 8005502:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005506:	617b      	str	r3, [r7, #20]
 8005508:	683b      	ldr	r3, [r7, #0]
 800550a:	695b      	ldr	r3, [r3, #20]
 800550c:	019b      	lsls	r3, r3, #6
 800550e:	697a      	ldr	r2, [r7, #20]
 8005510:	4313      	orrs	r3, r2
 8005512:	617b      	str	r3, [r7, #20]
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	697a      	ldr	r2, [r7, #20]
 8005518:	605a      	str	r2, [r3, #4]
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	68fa      	ldr	r2, [r7, #12]
 800551e:	61da      	str	r2, [r3, #28]
 8005520:	683b      	ldr	r3, [r7, #0]
 8005522:	685a      	ldr	r2, [r3, #4]
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	641a      	str	r2, [r3, #64]	; 0x40
 8005528:	687b      	ldr	r3, [r7, #4]
 800552a:	693a      	ldr	r2, [r7, #16]
 800552c:	621a      	str	r2, [r3, #32]
 800552e:	bf00      	nop
 8005530:	371c      	adds	r7, #28
 8005532:	46bd      	mov	sp, r7
 8005534:	bc80      	pop	{r7}
 8005536:	4770      	bx	lr
 8005538:	40012c00 	.word	0x40012c00

0800553c <TIM_CCxChannelCmd>:
 800553c:	b480      	push	{r7}
 800553e:	b087      	sub	sp, #28
 8005540:	af00      	add	r7, sp, #0
 8005542:	60f8      	str	r0, [r7, #12]
 8005544:	60b9      	str	r1, [r7, #8]
 8005546:	607a      	str	r2, [r7, #4]
 8005548:	68bb      	ldr	r3, [r7, #8]
 800554a:	f003 031f 	and.w	r3, r3, #31
 800554e:	2201      	movs	r2, #1
 8005550:	fa02 f303 	lsl.w	r3, r2, r3
 8005554:	617b      	str	r3, [r7, #20]
 8005556:	68fb      	ldr	r3, [r7, #12]
 8005558:	6a1a      	ldr	r2, [r3, #32]
 800555a:	697b      	ldr	r3, [r7, #20]
 800555c:	43db      	mvns	r3, r3
 800555e:	401a      	ands	r2, r3
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	621a      	str	r2, [r3, #32]
 8005564:	68fb      	ldr	r3, [r7, #12]
 8005566:	6a1a      	ldr	r2, [r3, #32]
 8005568:	68bb      	ldr	r3, [r7, #8]
 800556a:	f003 031f 	and.w	r3, r3, #31
 800556e:	6879      	ldr	r1, [r7, #4]
 8005570:	fa01 f303 	lsl.w	r3, r1, r3
 8005574:	431a      	orrs	r2, r3
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	621a      	str	r2, [r3, #32]
 800557a:	bf00      	nop
 800557c:	371c      	adds	r7, #28
 800557e:	46bd      	mov	sp, r7
 8005580:	bc80      	pop	{r7}
 8005582:	4770      	bx	lr

08005584 <HAL_TIMEx_MasterConfigSynchronization>:
 8005584:	b480      	push	{r7}
 8005586:	b085      	sub	sp, #20
 8005588:	af00      	add	r7, sp, #0
 800558a:	6078      	str	r0, [r7, #4]
 800558c:	6039      	str	r1, [r7, #0]
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005594:	2b01      	cmp	r3, #1
 8005596:	d101      	bne.n	800559c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005598:	2302      	movs	r3, #2
 800559a:	e046      	b.n	800562a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	2201      	movs	r2, #1
 80055a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	2202      	movs	r2, #2
 80055a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	685b      	ldr	r3, [r3, #4]
 80055b2:	60fb      	str	r3, [r7, #12]
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	689b      	ldr	r3, [r3, #8]
 80055ba:	60bb      	str	r3, [r7, #8]
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80055c2:	60fb      	str	r3, [r7, #12]
 80055c4:	683b      	ldr	r3, [r7, #0]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	68fa      	ldr	r2, [r7, #12]
 80055ca:	4313      	orrs	r3, r2
 80055cc:	60fb      	str	r3, [r7, #12]
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	68fa      	ldr	r2, [r7, #12]
 80055d4:	605a      	str	r2, [r3, #4]
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	681b      	ldr	r3, [r3, #0]
 80055da:	4a16      	ldr	r2, [pc, #88]	; (8005634 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80055dc:	4293      	cmp	r3, r2
 80055de:	d00e      	beq.n	80055fe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80055e8:	d009      	beq.n	80055fe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	4a12      	ldr	r2, [pc, #72]	; (8005638 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80055f0:	4293      	cmp	r3, r2
 80055f2:	d004      	beq.n	80055fe <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	4a10      	ldr	r2, [pc, #64]	; (800563c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80055fa:	4293      	cmp	r3, r2
 80055fc:	d10c      	bne.n	8005618 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80055fe:	68bb      	ldr	r3, [r7, #8]
 8005600:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005604:	60bb      	str	r3, [r7, #8]
 8005606:	683b      	ldr	r3, [r7, #0]
 8005608:	685b      	ldr	r3, [r3, #4]
 800560a:	68ba      	ldr	r2, [r7, #8]
 800560c:	4313      	orrs	r3, r2
 800560e:	60bb      	str	r3, [r7, #8]
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	68ba      	ldr	r2, [r7, #8]
 8005616:	609a      	str	r2, [r3, #8]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	2201      	movs	r2, #1
 800561c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	2200      	movs	r2, #0
 8005624:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005628:	2300      	movs	r3, #0
 800562a:	4618      	mov	r0, r3
 800562c:	3714      	adds	r7, #20
 800562e:	46bd      	mov	sp, r7
 8005630:	bc80      	pop	{r7}
 8005632:	4770      	bx	lr
 8005634:	40012c00 	.word	0x40012c00
 8005638:	40000400 	.word	0x40000400
 800563c:	40000800 	.word	0x40000800

08005640 <HAL_TIMEx_ConfigBreakDeadTime>:
 8005640:	b480      	push	{r7}
 8005642:	b085      	sub	sp, #20
 8005644:	af00      	add	r7, sp, #0
 8005646:	6078      	str	r0, [r7, #4]
 8005648:	6039      	str	r1, [r7, #0]
 800564a:	2300      	movs	r3, #0
 800564c:	60fb      	str	r3, [r7, #12]
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005654:	2b01      	cmp	r3, #1
 8005656:	d101      	bne.n	800565c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8005658:	2302      	movs	r3, #2
 800565a:	e03d      	b.n	80056d8 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800565c:	687b      	ldr	r3, [r7, #4]
 800565e:	2201      	movs	r2, #1
 8005660:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800566a:	683b      	ldr	r3, [r7, #0]
 800566c:	68db      	ldr	r3, [r3, #12]
 800566e:	4313      	orrs	r3, r2
 8005670:	60fb      	str	r3, [r7, #12]
 8005672:	68fb      	ldr	r3, [r7, #12]
 8005674:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005678:	683b      	ldr	r3, [r7, #0]
 800567a:	689b      	ldr	r3, [r3, #8]
 800567c:	4313      	orrs	r3, r2
 800567e:	60fb      	str	r3, [r7, #12]
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8005686:	683b      	ldr	r3, [r7, #0]
 8005688:	685b      	ldr	r3, [r3, #4]
 800568a:	4313      	orrs	r3, r2
 800568c:	60fb      	str	r3, [r7, #12]
 800568e:	68fb      	ldr	r3, [r7, #12]
 8005690:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8005694:	683b      	ldr	r3, [r7, #0]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	4313      	orrs	r3, r2
 800569a:	60fb      	str	r3, [r7, #12]
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80056a2:	683b      	ldr	r3, [r7, #0]
 80056a4:	691b      	ldr	r3, [r3, #16]
 80056a6:	4313      	orrs	r3, r2
 80056a8:	60fb      	str	r3, [r7, #12]
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80056b0:	683b      	ldr	r3, [r7, #0]
 80056b2:	695b      	ldr	r3, [r3, #20]
 80056b4:	4313      	orrs	r3, r2
 80056b6:	60fb      	str	r3, [r7, #12]
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 80056be:	683b      	ldr	r3, [r7, #0]
 80056c0:	69db      	ldr	r3, [r3, #28]
 80056c2:	4313      	orrs	r3, r2
 80056c4:	60fb      	str	r3, [r7, #12]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	68fa      	ldr	r2, [r7, #12]
 80056cc:	645a      	str	r2, [r3, #68]	; 0x44
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	2200      	movs	r2, #0
 80056d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80056d6:	2300      	movs	r3, #0
 80056d8:	4618      	mov	r0, r3
 80056da:	3714      	adds	r7, #20
 80056dc:	46bd      	mov	sp, r7
 80056de:	bc80      	pop	{r7}
 80056e0:	4770      	bx	lr

080056e2 <HAL_TIMEx_CommutCallback>:
 80056e2:	b480      	push	{r7}
 80056e4:	b083      	sub	sp, #12
 80056e6:	af00      	add	r7, sp, #0
 80056e8:	6078      	str	r0, [r7, #4]
 80056ea:	bf00      	nop
 80056ec:	370c      	adds	r7, #12
 80056ee:	46bd      	mov	sp, r7
 80056f0:	bc80      	pop	{r7}
 80056f2:	4770      	bx	lr

080056f4 <HAL_TIMEx_BreakCallback>:
 80056f4:	b480      	push	{r7}
 80056f6:	b083      	sub	sp, #12
 80056f8:	af00      	add	r7, sp, #0
 80056fa:	6078      	str	r0, [r7, #4]
 80056fc:	bf00      	nop
 80056fe:	370c      	adds	r7, #12
 8005700:	46bd      	mov	sp, r7
 8005702:	bc80      	pop	{r7}
 8005704:	4770      	bx	lr

08005706 <HAL_UART_Init>:
 8005706:	b580      	push	{r7, lr}
 8005708:	b082      	sub	sp, #8
 800570a:	af00      	add	r7, sp, #0
 800570c:	6078      	str	r0, [r7, #4]
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	2b00      	cmp	r3, #0
 8005712:	d101      	bne.n	8005718 <HAL_UART_Init+0x12>
 8005714:	2301      	movs	r3, #1
 8005716:	e042      	b.n	800579e <HAL_UART_Init+0x98>
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800571e:	b2db      	uxtb	r3, r3
 8005720:	2b00      	cmp	r3, #0
 8005722:	d106      	bne.n	8005732 <HAL_UART_Init+0x2c>
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	2200      	movs	r2, #0
 8005728:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800572c:	6878      	ldr	r0, [r7, #4]
 800572e:	f7fd faf3 	bl	8002d18 <HAL_UART_MspInit>
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	2224      	movs	r2, #36	; 0x24
 8005736:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800573a:	687b      	ldr	r3, [r7, #4]
 800573c:	681b      	ldr	r3, [r3, #0]
 800573e:	68da      	ldr	r2, [r3, #12]
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005748:	60da      	str	r2, [r3, #12]
 800574a:	6878      	ldr	r0, [r7, #4]
 800574c:	f000 fe1e 	bl	800638c <UART_SetConfig>
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	691a      	ldr	r2, [r3, #16]
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800575e:	611a      	str	r2, [r3, #16]
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	681b      	ldr	r3, [r3, #0]
 8005764:	695a      	ldr	r2, [r3, #20]
 8005766:	687b      	ldr	r3, [r7, #4]
 8005768:	681b      	ldr	r3, [r3, #0]
 800576a:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800576e:	615a      	str	r2, [r3, #20]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	68da      	ldr	r2, [r3, #12]
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800577e:	60da      	str	r2, [r3, #12]
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	2200      	movs	r2, #0
 8005784:	645a      	str	r2, [r3, #68]	; 0x44
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	2220      	movs	r2, #32
 800578a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	2220      	movs	r2, #32
 8005792:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	2200      	movs	r2, #0
 800579a:	635a      	str	r2, [r3, #52]	; 0x34
 800579c:	2300      	movs	r3, #0
 800579e:	4618      	mov	r0, r3
 80057a0:	3708      	adds	r7, #8
 80057a2:	46bd      	mov	sp, r7
 80057a4:	bd80      	pop	{r7, pc}

080057a6 <HAL_HalfDuplex_Init>:
 80057a6:	b580      	push	{r7, lr}
 80057a8:	b082      	sub	sp, #8
 80057aa:	af00      	add	r7, sp, #0
 80057ac:	6078      	str	r0, [r7, #4]
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d101      	bne.n	80057b8 <HAL_HalfDuplex_Init+0x12>
 80057b4:	2301      	movs	r3, #1
 80057b6:	e04a      	b.n	800584e <HAL_HalfDuplex_Init+0xa8>
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80057be:	b2db      	uxtb	r3, r3
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d106      	bne.n	80057d2 <HAL_HalfDuplex_Init+0x2c>
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	2200      	movs	r2, #0
 80057c8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80057cc:	6878      	ldr	r0, [r7, #4]
 80057ce:	f7fd faa3 	bl	8002d18 <HAL_UART_MspInit>
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	2224      	movs	r2, #36	; 0x24
 80057d6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80057da:	687b      	ldr	r3, [r7, #4]
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	68da      	ldr	r2, [r3, #12]
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80057e8:	60da      	str	r2, [r3, #12]
 80057ea:	6878      	ldr	r0, [r7, #4]
 80057ec:	f000 fdce 	bl	800638c <UART_SetConfig>
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	691a      	ldr	r2, [r3, #16]
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80057fe:	611a      	str	r2, [r3, #16]
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	695a      	ldr	r2, [r3, #20]
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	f022 0222 	bic.w	r2, r2, #34	; 0x22
 800580e:	615a      	str	r2, [r3, #20]
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	695a      	ldr	r2, [r3, #20]
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	f042 0208 	orr.w	r2, r2, #8
 800581e:	615a      	str	r2, [r3, #20]
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	681b      	ldr	r3, [r3, #0]
 8005824:	68da      	ldr	r2, [r3, #12]
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800582e:	60da      	str	r2, [r3, #12]
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	2200      	movs	r2, #0
 8005834:	645a      	str	r2, [r3, #68]	; 0x44
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	2220      	movs	r2, #32
 800583a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800583e:	687b      	ldr	r3, [r7, #4]
 8005840:	2220      	movs	r2, #32
 8005842:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	2200      	movs	r2, #0
 800584a:	635a      	str	r2, [r3, #52]	; 0x34
 800584c:	2300      	movs	r3, #0
 800584e:	4618      	mov	r0, r3
 8005850:	3708      	adds	r7, #8
 8005852:	46bd      	mov	sp, r7
 8005854:	bd80      	pop	{r7, pc}

08005856 <HAL_UART_Transmit>:
 8005856:	b580      	push	{r7, lr}
 8005858:	b08a      	sub	sp, #40	; 0x28
 800585a:	af02      	add	r7, sp, #8
 800585c:	60f8      	str	r0, [r7, #12]
 800585e:	60b9      	str	r1, [r7, #8]
 8005860:	603b      	str	r3, [r7, #0]
 8005862:	4613      	mov	r3, r2
 8005864:	80fb      	strh	r3, [r7, #6]
 8005866:	2300      	movs	r3, #0
 8005868:	617b      	str	r3, [r7, #20]
 800586a:	68fb      	ldr	r3, [r7, #12]
 800586c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005870:	b2db      	uxtb	r3, r3
 8005872:	2b20      	cmp	r3, #32
 8005874:	d16d      	bne.n	8005952 <HAL_UART_Transmit+0xfc>
 8005876:	68bb      	ldr	r3, [r7, #8]
 8005878:	2b00      	cmp	r3, #0
 800587a:	d002      	beq.n	8005882 <HAL_UART_Transmit+0x2c>
 800587c:	88fb      	ldrh	r3, [r7, #6]
 800587e:	2b00      	cmp	r3, #0
 8005880:	d101      	bne.n	8005886 <HAL_UART_Transmit+0x30>
 8005882:	2301      	movs	r3, #1
 8005884:	e066      	b.n	8005954 <HAL_UART_Transmit+0xfe>
 8005886:	68fb      	ldr	r3, [r7, #12]
 8005888:	2200      	movs	r2, #0
 800588a:	645a      	str	r2, [r3, #68]	; 0x44
 800588c:	68fb      	ldr	r3, [r7, #12]
 800588e:	2221      	movs	r2, #33	; 0x21
 8005890:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005894:	f7fd fcbe 	bl	8003214 <HAL_GetTick>
 8005898:	6178      	str	r0, [r7, #20]
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	88fa      	ldrh	r2, [r7, #6]
 800589e:	849a      	strh	r2, [r3, #36]	; 0x24
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	88fa      	ldrh	r2, [r7, #6]
 80058a4:	84da      	strh	r2, [r3, #38]	; 0x26
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	689b      	ldr	r3, [r3, #8]
 80058aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80058ae:	d108      	bne.n	80058c2 <HAL_UART_Transmit+0x6c>
 80058b0:	68fb      	ldr	r3, [r7, #12]
 80058b2:	691b      	ldr	r3, [r3, #16]
 80058b4:	2b00      	cmp	r3, #0
 80058b6:	d104      	bne.n	80058c2 <HAL_UART_Transmit+0x6c>
 80058b8:	2300      	movs	r3, #0
 80058ba:	61fb      	str	r3, [r7, #28]
 80058bc:	68bb      	ldr	r3, [r7, #8]
 80058be:	61bb      	str	r3, [r7, #24]
 80058c0:	e003      	b.n	80058ca <HAL_UART_Transmit+0x74>
 80058c2:	68bb      	ldr	r3, [r7, #8]
 80058c4:	61fb      	str	r3, [r7, #28]
 80058c6:	2300      	movs	r3, #0
 80058c8:	61bb      	str	r3, [r7, #24]
 80058ca:	e02a      	b.n	8005922 <HAL_UART_Transmit+0xcc>
 80058cc:	683b      	ldr	r3, [r7, #0]
 80058ce:	9300      	str	r3, [sp, #0]
 80058d0:	697b      	ldr	r3, [r7, #20]
 80058d2:	2200      	movs	r2, #0
 80058d4:	2180      	movs	r1, #128	; 0x80
 80058d6:	68f8      	ldr	r0, [r7, #12]
 80058d8:	f000 fb15 	bl	8005f06 <UART_WaitOnFlagUntilTimeout>
 80058dc:	4603      	mov	r3, r0
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d001      	beq.n	80058e6 <HAL_UART_Transmit+0x90>
 80058e2:	2303      	movs	r3, #3
 80058e4:	e036      	b.n	8005954 <HAL_UART_Transmit+0xfe>
 80058e6:	69fb      	ldr	r3, [r7, #28]
 80058e8:	2b00      	cmp	r3, #0
 80058ea:	d10b      	bne.n	8005904 <HAL_UART_Transmit+0xae>
 80058ec:	69bb      	ldr	r3, [r7, #24]
 80058ee:	881b      	ldrh	r3, [r3, #0]
 80058f0:	461a      	mov	r2, r3
 80058f2:	68fb      	ldr	r3, [r7, #12]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80058fa:	605a      	str	r2, [r3, #4]
 80058fc:	69bb      	ldr	r3, [r7, #24]
 80058fe:	3302      	adds	r3, #2
 8005900:	61bb      	str	r3, [r7, #24]
 8005902:	e007      	b.n	8005914 <HAL_UART_Transmit+0xbe>
 8005904:	69fb      	ldr	r3, [r7, #28]
 8005906:	781a      	ldrb	r2, [r3, #0]
 8005908:	68fb      	ldr	r3, [r7, #12]
 800590a:	681b      	ldr	r3, [r3, #0]
 800590c:	605a      	str	r2, [r3, #4]
 800590e:	69fb      	ldr	r3, [r7, #28]
 8005910:	3301      	adds	r3, #1
 8005912:	61fb      	str	r3, [r7, #28]
 8005914:	68fb      	ldr	r3, [r7, #12]
 8005916:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005918:	b29b      	uxth	r3, r3
 800591a:	3b01      	subs	r3, #1
 800591c:	b29a      	uxth	r2, r3
 800591e:	68fb      	ldr	r3, [r7, #12]
 8005920:	84da      	strh	r2, [r3, #38]	; 0x26
 8005922:	68fb      	ldr	r3, [r7, #12]
 8005924:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005926:	b29b      	uxth	r3, r3
 8005928:	2b00      	cmp	r3, #0
 800592a:	d1cf      	bne.n	80058cc <HAL_UART_Transmit+0x76>
 800592c:	683b      	ldr	r3, [r7, #0]
 800592e:	9300      	str	r3, [sp, #0]
 8005930:	697b      	ldr	r3, [r7, #20]
 8005932:	2200      	movs	r2, #0
 8005934:	2140      	movs	r1, #64	; 0x40
 8005936:	68f8      	ldr	r0, [r7, #12]
 8005938:	f000 fae5 	bl	8005f06 <UART_WaitOnFlagUntilTimeout>
 800593c:	4603      	mov	r3, r0
 800593e:	2b00      	cmp	r3, #0
 8005940:	d001      	beq.n	8005946 <HAL_UART_Transmit+0xf0>
 8005942:	2303      	movs	r3, #3
 8005944:	e006      	b.n	8005954 <HAL_UART_Transmit+0xfe>
 8005946:	68fb      	ldr	r3, [r7, #12]
 8005948:	2220      	movs	r2, #32
 800594a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800594e:	2300      	movs	r3, #0
 8005950:	e000      	b.n	8005954 <HAL_UART_Transmit+0xfe>
 8005952:	2302      	movs	r3, #2
 8005954:	4618      	mov	r0, r3
 8005956:	3720      	adds	r7, #32
 8005958:	46bd      	mov	sp, r7
 800595a:	bd80      	pop	{r7, pc}

0800595c <HAL_UART_Receive_IT>:
 800595c:	b580      	push	{r7, lr}
 800595e:	b084      	sub	sp, #16
 8005960:	af00      	add	r7, sp, #0
 8005962:	60f8      	str	r0, [r7, #12]
 8005964:	60b9      	str	r1, [r7, #8]
 8005966:	4613      	mov	r3, r2
 8005968:	80fb      	strh	r3, [r7, #6]
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8005970:	b2db      	uxtb	r3, r3
 8005972:	2b20      	cmp	r3, #32
 8005974:	d112      	bne.n	800599c <HAL_UART_Receive_IT+0x40>
 8005976:	68bb      	ldr	r3, [r7, #8]
 8005978:	2b00      	cmp	r3, #0
 800597a:	d002      	beq.n	8005982 <HAL_UART_Receive_IT+0x26>
 800597c:	88fb      	ldrh	r3, [r7, #6]
 800597e:	2b00      	cmp	r3, #0
 8005980:	d101      	bne.n	8005986 <HAL_UART_Receive_IT+0x2a>
 8005982:	2301      	movs	r3, #1
 8005984:	e00b      	b.n	800599e <HAL_UART_Receive_IT+0x42>
 8005986:	68fb      	ldr	r3, [r7, #12]
 8005988:	2200      	movs	r2, #0
 800598a:	631a      	str	r2, [r3, #48]	; 0x30
 800598c:	88fb      	ldrh	r3, [r7, #6]
 800598e:	461a      	mov	r2, r3
 8005990:	68b9      	ldr	r1, [r7, #8]
 8005992:	68f8      	ldr	r0, [r7, #12]
 8005994:	f000 fb25 	bl	8005fe2 <UART_Start_Receive_IT>
 8005998:	4603      	mov	r3, r0
 800599a:	e000      	b.n	800599e <HAL_UART_Receive_IT+0x42>
 800599c:	2302      	movs	r3, #2
 800599e:	4618      	mov	r0, r3
 80059a0:	3710      	adds	r7, #16
 80059a2:	46bd      	mov	sp, r7
 80059a4:	bd80      	pop	{r7, pc}
	...

080059a8 <HAL_UART_IRQHandler>:
 80059a8:	b580      	push	{r7, lr}
 80059aa:	b0ba      	sub	sp, #232	; 0xe8
 80059ac:	af00      	add	r7, sp, #0
 80059ae:	6078      	str	r0, [r7, #4]
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	681b      	ldr	r3, [r3, #0]
 80059be:	68db      	ldr	r3, [r3, #12]
 80059c0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	695b      	ldr	r3, [r3, #20]
 80059ca:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80059ce:	2300      	movs	r3, #0
 80059d0:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80059d4:	2300      	movs	r3, #0
 80059d6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80059da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80059de:	f003 030f 	and.w	r3, r3, #15
 80059e2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80059e6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	d10f      	bne.n	8005a0e <HAL_UART_IRQHandler+0x66>
 80059ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80059f2:	f003 0320 	and.w	r3, r3, #32
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d009      	beq.n	8005a0e <HAL_UART_IRQHandler+0x66>
 80059fa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80059fe:	f003 0320 	and.w	r3, r3, #32
 8005a02:	2b00      	cmp	r3, #0
 8005a04:	d003      	beq.n	8005a0e <HAL_UART_IRQHandler+0x66>
 8005a06:	6878      	ldr	r0, [r7, #4]
 8005a08:	f000 fc01 	bl	800620e <UART_Receive_IT>
 8005a0c:	e25b      	b.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005a0e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8005a12:	2b00      	cmp	r3, #0
 8005a14:	f000 80de 	beq.w	8005bd4 <HAL_UART_IRQHandler+0x22c>
 8005a18:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005a1c:	f003 0301 	and.w	r3, r3, #1
 8005a20:	2b00      	cmp	r3, #0
 8005a22:	d106      	bne.n	8005a32 <HAL_UART_IRQHandler+0x8a>
 8005a24:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005a28:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8005a2c:	2b00      	cmp	r3, #0
 8005a2e:	f000 80d1 	beq.w	8005bd4 <HAL_UART_IRQHandler+0x22c>
 8005a32:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005a36:	f003 0301 	and.w	r3, r3, #1
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	d00b      	beq.n	8005a56 <HAL_UART_IRQHandler+0xae>
 8005a3e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005a42:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	d005      	beq.n	8005a56 <HAL_UART_IRQHandler+0xae>
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a4e:	f043 0201 	orr.w	r2, r3, #1
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	645a      	str	r2, [r3, #68]	; 0x44
 8005a56:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005a5a:	f003 0304 	and.w	r3, r3, #4
 8005a5e:	2b00      	cmp	r3, #0
 8005a60:	d00b      	beq.n	8005a7a <HAL_UART_IRQHandler+0xd2>
 8005a62:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005a66:	f003 0301 	and.w	r3, r3, #1
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d005      	beq.n	8005a7a <HAL_UART_IRQHandler+0xd2>
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a72:	f043 0202 	orr.w	r2, r3, #2
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	645a      	str	r2, [r3, #68]	; 0x44
 8005a7a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005a7e:	f003 0302 	and.w	r3, r3, #2
 8005a82:	2b00      	cmp	r3, #0
 8005a84:	d00b      	beq.n	8005a9e <HAL_UART_IRQHandler+0xf6>
 8005a86:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005a8a:	f003 0301 	and.w	r3, r3, #1
 8005a8e:	2b00      	cmp	r3, #0
 8005a90:	d005      	beq.n	8005a9e <HAL_UART_IRQHandler+0xf6>
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a96:	f043 0204 	orr.w	r2, r3, #4
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	645a      	str	r2, [r3, #68]	; 0x44
 8005a9e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005aa2:	f003 0308 	and.w	r3, r3, #8
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d011      	beq.n	8005ace <HAL_UART_IRQHandler+0x126>
 8005aaa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005aae:	f003 0320 	and.w	r3, r3, #32
 8005ab2:	2b00      	cmp	r3, #0
 8005ab4:	d105      	bne.n	8005ac2 <HAL_UART_IRQHandler+0x11a>
 8005ab6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005aba:	f003 0301 	and.w	r3, r3, #1
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	d005      	beq.n	8005ace <HAL_UART_IRQHandler+0x126>
 8005ac2:	687b      	ldr	r3, [r7, #4]
 8005ac4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ac6:	f043 0208 	orr.w	r2, r3, #8
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	645a      	str	r2, [r3, #68]	; 0x44
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ad2:	2b00      	cmp	r3, #0
 8005ad4:	f000 81f2 	beq.w	8005ebc <HAL_UART_IRQHandler+0x514>
 8005ad8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005adc:	f003 0320 	and.w	r3, r3, #32
 8005ae0:	2b00      	cmp	r3, #0
 8005ae2:	d008      	beq.n	8005af6 <HAL_UART_IRQHandler+0x14e>
 8005ae4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005ae8:	f003 0320 	and.w	r3, r3, #32
 8005aec:	2b00      	cmp	r3, #0
 8005aee:	d002      	beq.n	8005af6 <HAL_UART_IRQHandler+0x14e>
 8005af0:	6878      	ldr	r0, [r7, #4]
 8005af2:	f000 fb8c 	bl	800620e <UART_Receive_IT>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	695b      	ldr	r3, [r3, #20]
 8005afc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005b00:	2b00      	cmp	r3, #0
 8005b02:	bf14      	ite	ne
 8005b04:	2301      	movne	r3, #1
 8005b06:	2300      	moveq	r3, #0
 8005b08:	b2db      	uxtb	r3, r3
 8005b0a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005b12:	f003 0308 	and.w	r3, r3, #8
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	d103      	bne.n	8005b22 <HAL_UART_IRQHandler+0x17a>
 8005b1a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	d04f      	beq.n	8005bc2 <HAL_UART_IRQHandler+0x21a>
 8005b22:	6878      	ldr	r0, [r7, #4]
 8005b24:	f000 fa96 	bl	8006054 <UART_EndRxTransfer>
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	695b      	ldr	r3, [r3, #20]
 8005b2e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d041      	beq.n	8005bba <HAL_UART_IRQHandler+0x212>
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	681b      	ldr	r3, [r3, #0]
 8005b3a:	3314      	adds	r3, #20
 8005b3c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8005b40:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8005b44:	e853 3f00 	ldrex	r3, [r3]
 8005b48:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8005b4c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8005b50:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005b54:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	3314      	adds	r3, #20
 8005b5e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8005b62:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8005b66:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8005b6a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8005b6e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8005b72:	e841 2300 	strex	r3, r2, [r1]
 8005b76:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8005b7a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d1d9      	bne.n	8005b36 <HAL_UART_IRQHandler+0x18e>
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005b86:	2b00      	cmp	r3, #0
 8005b88:	d013      	beq.n	8005bb2 <HAL_UART_IRQHandler+0x20a>
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005b8e:	4a7e      	ldr	r2, [pc, #504]	; (8005d88 <HAL_UART_IRQHandler+0x3e0>)
 8005b90:	635a      	str	r2, [r3, #52]	; 0x34
 8005b92:	687b      	ldr	r3, [r7, #4]
 8005b94:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005b96:	4618      	mov	r0, r3
 8005b98:	f7fd fc60 	bl	800345c <HAL_DMA_Abort_IT>
 8005b9c:	4603      	mov	r3, r0
 8005b9e:	2b00      	cmp	r3, #0
 8005ba0:	d016      	beq.n	8005bd0 <HAL_UART_IRQHandler+0x228>
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005ba6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ba8:	687a      	ldr	r2, [r7, #4]
 8005baa:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8005bac:	4610      	mov	r0, r2
 8005bae:	4798      	blx	r3
 8005bb0:	e00e      	b.n	8005bd0 <HAL_UART_IRQHandler+0x228>
 8005bb2:	6878      	ldr	r0, [r7, #4]
 8005bb4:	f000 f993 	bl	8005ede <HAL_UART_ErrorCallback>
 8005bb8:	e00a      	b.n	8005bd0 <HAL_UART_IRQHandler+0x228>
 8005bba:	6878      	ldr	r0, [r7, #4]
 8005bbc:	f000 f98f 	bl	8005ede <HAL_UART_ErrorCallback>
 8005bc0:	e006      	b.n	8005bd0 <HAL_UART_IRQHandler+0x228>
 8005bc2:	6878      	ldr	r0, [r7, #4]
 8005bc4:	f000 f98b 	bl	8005ede <HAL_UART_ErrorCallback>
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	2200      	movs	r2, #0
 8005bcc:	645a      	str	r2, [r3, #68]	; 0x44
 8005bce:	e175      	b.n	8005ebc <HAL_UART_IRQHandler+0x514>
 8005bd0:	bf00      	nop
 8005bd2:	e173      	b.n	8005ebc <HAL_UART_IRQHandler+0x514>
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005bd8:	2b01      	cmp	r3, #1
 8005bda:	f040 814f 	bne.w	8005e7c <HAL_UART_IRQHandler+0x4d4>
 8005bde:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005be2:	f003 0310 	and.w	r3, r3, #16
 8005be6:	2b00      	cmp	r3, #0
 8005be8:	f000 8148 	beq.w	8005e7c <HAL_UART_IRQHandler+0x4d4>
 8005bec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005bf0:	f003 0310 	and.w	r3, r3, #16
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	f000 8141 	beq.w	8005e7c <HAL_UART_IRQHandler+0x4d4>
 8005bfa:	2300      	movs	r3, #0
 8005bfc:	60bb      	str	r3, [r7, #8]
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	60bb      	str	r3, [r7, #8]
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	685b      	ldr	r3, [r3, #4]
 8005c0c:	60bb      	str	r3, [r7, #8]
 8005c0e:	68bb      	ldr	r3, [r7, #8]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	695b      	ldr	r3, [r3, #20]
 8005c16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005c1a:	2b00      	cmp	r3, #0
 8005c1c:	f000 80b6 	beq.w	8005d8c <HAL_UART_IRQHandler+0x3e4>
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	685b      	ldr	r3, [r3, #4]
 8005c28:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8005c2c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8005c30:	2b00      	cmp	r3, #0
 8005c32:	f000 8145 	beq.w	8005ec0 <HAL_UART_IRQHandler+0x518>
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005c3a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8005c3e:	429a      	cmp	r2, r3
 8005c40:	f080 813e 	bcs.w	8005ec0 <HAL_UART_IRQHandler+0x518>
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8005c4a:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005c50:	699b      	ldr	r3, [r3, #24]
 8005c52:	2b20      	cmp	r3, #32
 8005c54:	f000 8088 	beq.w	8005d68 <HAL_UART_IRQHandler+0x3c0>
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	330c      	adds	r3, #12
 8005c5e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8005c62:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8005c66:	e853 3f00 	ldrex	r3, [r3]
 8005c6a:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005c6e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8005c72:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005c76:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	330c      	adds	r3, #12
 8005c80:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8005c84:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8005c88:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8005c8c:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8005c90:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8005c94:	e841 2300 	strex	r3, r2, [r1]
 8005c98:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8005c9c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8005ca0:	2b00      	cmp	r3, #0
 8005ca2:	d1d9      	bne.n	8005c58 <HAL_UART_IRQHandler+0x2b0>
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	681b      	ldr	r3, [r3, #0]
 8005ca8:	3314      	adds	r3, #20
 8005caa:	677b      	str	r3, [r7, #116]	; 0x74
 8005cac:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005cae:	e853 3f00 	ldrex	r3, [r3]
 8005cb2:	673b      	str	r3, [r7, #112]	; 0x70
 8005cb4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005cb6:	f023 0301 	bic.w	r3, r3, #1
 8005cba:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8005cbe:	687b      	ldr	r3, [r7, #4]
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	3314      	adds	r3, #20
 8005cc4:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8005cc8:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8005ccc:	67fb      	str	r3, [r7, #124]	; 0x7c
 8005cce:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8005cd0:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8005cd4:	e841 2300 	strex	r3, r2, [r1]
 8005cd8:	67bb      	str	r3, [r7, #120]	; 0x78
 8005cda:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005cdc:	2b00      	cmp	r3, #0
 8005cde:	d1e1      	bne.n	8005ca4 <HAL_UART_IRQHandler+0x2fc>
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	3314      	adds	r3, #20
 8005ce6:	663b      	str	r3, [r7, #96]	; 0x60
 8005ce8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8005cea:	e853 3f00 	ldrex	r3, [r3]
 8005cee:	65fb      	str	r3, [r7, #92]	; 0x5c
 8005cf0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8005cf2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005cf6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	3314      	adds	r3, #20
 8005d00:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8005d04:	66fa      	str	r2, [r7, #108]	; 0x6c
 8005d06:	66bb      	str	r3, [r7, #104]	; 0x68
 8005d08:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8005d0a:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8005d0c:	e841 2300 	strex	r3, r2, [r1]
 8005d10:	667b      	str	r3, [r7, #100]	; 0x64
 8005d12:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005d14:	2b00      	cmp	r3, #0
 8005d16:	d1e3      	bne.n	8005ce0 <HAL_UART_IRQHandler+0x338>
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	2220      	movs	r2, #32
 8005d1c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	2200      	movs	r2, #0
 8005d24:	631a      	str	r2, [r3, #48]	; 0x30
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	330c      	adds	r3, #12
 8005d2c:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005d2e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005d30:	e853 3f00 	ldrex	r3, [r3]
 8005d34:	64bb      	str	r3, [r7, #72]	; 0x48
 8005d36:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005d38:	f023 0310 	bic.w	r3, r3, #16
 8005d3c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	330c      	adds	r3, #12
 8005d46:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8005d4a:	65ba      	str	r2, [r7, #88]	; 0x58
 8005d4c:	657b      	str	r3, [r7, #84]	; 0x54
 8005d4e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8005d50:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8005d52:	e841 2300 	strex	r3, r2, [r1]
 8005d56:	653b      	str	r3, [r7, #80]	; 0x50
 8005d58:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d1e3      	bne.n	8005d26 <HAL_UART_IRQHandler+0x37e>
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005d62:	4618      	mov	r0, r3
 8005d64:	f7fd fb3f 	bl	80033e6 <HAL_DMA_Abort>
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	2202      	movs	r2, #2
 8005d6c:	635a      	str	r2, [r3, #52]	; 0x34
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005d76:	b29b      	uxth	r3, r3
 8005d78:	1ad3      	subs	r3, r2, r3
 8005d7a:	b29b      	uxth	r3, r3
 8005d7c:	4619      	mov	r1, r3
 8005d7e:	6878      	ldr	r0, [r7, #4]
 8005d80:	f000 f8b6 	bl	8005ef0 <HAL_UARTEx_RxEventCallback>
 8005d84:	e09c      	b.n	8005ec0 <HAL_UART_IRQHandler+0x518>
 8005d86:	bf00      	nop
 8005d88:	08006119 	.word	0x08006119
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005d94:	b29b      	uxth	r3, r3
 8005d96:	1ad3      	subs	r3, r2, r3
 8005d98:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005da0:	b29b      	uxth	r3, r3
 8005da2:	2b00      	cmp	r3, #0
 8005da4:	f000 808e 	beq.w	8005ec4 <HAL_UART_IRQHandler+0x51c>
 8005da8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	f000 8089 	beq.w	8005ec4 <HAL_UART_IRQHandler+0x51c>
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	330c      	adds	r3, #12
 8005db8:	63bb      	str	r3, [r7, #56]	; 0x38
 8005dba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005dbc:	e853 3f00 	ldrex	r3, [r3]
 8005dc0:	637b      	str	r3, [r7, #52]	; 0x34
 8005dc2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005dc4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8005dc8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	330c      	adds	r3, #12
 8005dd2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8005dd6:	647a      	str	r2, [r7, #68]	; 0x44
 8005dd8:	643b      	str	r3, [r7, #64]	; 0x40
 8005dda:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8005ddc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8005dde:	e841 2300 	strex	r3, r2, [r1]
 8005de2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005de4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	d1e3      	bne.n	8005db2 <HAL_UART_IRQHandler+0x40a>
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	3314      	adds	r3, #20
 8005df0:	627b      	str	r3, [r7, #36]	; 0x24
 8005df2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005df4:	e853 3f00 	ldrex	r3, [r3]
 8005df8:	623b      	str	r3, [r7, #32]
 8005dfa:	6a3b      	ldr	r3, [r7, #32]
 8005dfc:	f023 0301 	bic.w	r3, r3, #1
 8005e00:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8005e04:	687b      	ldr	r3, [r7, #4]
 8005e06:	681b      	ldr	r3, [r3, #0]
 8005e08:	3314      	adds	r3, #20
 8005e0a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8005e0e:	633a      	str	r2, [r7, #48]	; 0x30
 8005e10:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005e12:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8005e14:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005e16:	e841 2300 	strex	r3, r2, [r1]
 8005e1a:	62bb      	str	r3, [r7, #40]	; 0x28
 8005e1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005e1e:	2b00      	cmp	r3, #0
 8005e20:	d1e3      	bne.n	8005dea <HAL_UART_IRQHandler+0x442>
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	2220      	movs	r2, #32
 8005e26:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005e2a:	687b      	ldr	r3, [r7, #4]
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	631a      	str	r2, [r3, #48]	; 0x30
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	330c      	adds	r3, #12
 8005e36:	613b      	str	r3, [r7, #16]
 8005e38:	693b      	ldr	r3, [r7, #16]
 8005e3a:	e853 3f00 	ldrex	r3, [r3]
 8005e3e:	60fb      	str	r3, [r7, #12]
 8005e40:	68fb      	ldr	r3, [r7, #12]
 8005e42:	f023 0310 	bic.w	r3, r3, #16
 8005e46:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8005e4a:	687b      	ldr	r3, [r7, #4]
 8005e4c:	681b      	ldr	r3, [r3, #0]
 8005e4e:	330c      	adds	r3, #12
 8005e50:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8005e54:	61fa      	str	r2, [r7, #28]
 8005e56:	61bb      	str	r3, [r7, #24]
 8005e58:	69b9      	ldr	r1, [r7, #24]
 8005e5a:	69fa      	ldr	r2, [r7, #28]
 8005e5c:	e841 2300 	strex	r3, r2, [r1]
 8005e60:	617b      	str	r3, [r7, #20]
 8005e62:	697b      	ldr	r3, [r7, #20]
 8005e64:	2b00      	cmp	r3, #0
 8005e66:	d1e3      	bne.n	8005e30 <HAL_UART_IRQHandler+0x488>
 8005e68:	687b      	ldr	r3, [r7, #4]
 8005e6a:	2202      	movs	r2, #2
 8005e6c:	635a      	str	r2, [r3, #52]	; 0x34
 8005e6e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8005e72:	4619      	mov	r1, r3
 8005e74:	6878      	ldr	r0, [r7, #4]
 8005e76:	f000 f83b 	bl	8005ef0 <HAL_UARTEx_RxEventCallback>
 8005e7a:	e023      	b.n	8005ec4 <HAL_UART_IRQHandler+0x51c>
 8005e7c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005e80:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d009      	beq.n	8005e9c <HAL_UART_IRQHandler+0x4f4>
 8005e88:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005e8c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e90:	2b00      	cmp	r3, #0
 8005e92:	d003      	beq.n	8005e9c <HAL_UART_IRQHandler+0x4f4>
 8005e94:	6878      	ldr	r0, [r7, #4]
 8005e96:	f000 f953 	bl	8006140 <UART_Transmit_IT>
 8005e9a:	e014      	b.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005e9c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005ea0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ea4:	2b00      	cmp	r3, #0
 8005ea6:	d00e      	beq.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005ea8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005eac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d008      	beq.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005eb4:	6878      	ldr	r0, [r7, #4]
 8005eb6:	f000 f992 	bl	80061de <UART_EndTransmit_IT>
 8005eba:	e004      	b.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005ebc:	bf00      	nop
 8005ebe:	e002      	b.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005ec0:	bf00      	nop
 8005ec2:	e000      	b.n	8005ec6 <HAL_UART_IRQHandler+0x51e>
 8005ec4:	bf00      	nop
 8005ec6:	37e8      	adds	r7, #232	; 0xe8
 8005ec8:	46bd      	mov	sp, r7
 8005eca:	bd80      	pop	{r7, pc}

08005ecc <HAL_UART_TxCpltCallback>:
 8005ecc:	b480      	push	{r7}
 8005ece:	b083      	sub	sp, #12
 8005ed0:	af00      	add	r7, sp, #0
 8005ed2:	6078      	str	r0, [r7, #4]
 8005ed4:	bf00      	nop
 8005ed6:	370c      	adds	r7, #12
 8005ed8:	46bd      	mov	sp, r7
 8005eda:	bc80      	pop	{r7}
 8005edc:	4770      	bx	lr

08005ede <HAL_UART_ErrorCallback>:
 8005ede:	b480      	push	{r7}
 8005ee0:	b083      	sub	sp, #12
 8005ee2:	af00      	add	r7, sp, #0
 8005ee4:	6078      	str	r0, [r7, #4]
 8005ee6:	bf00      	nop
 8005ee8:	370c      	adds	r7, #12
 8005eea:	46bd      	mov	sp, r7
 8005eec:	bc80      	pop	{r7}
 8005eee:	4770      	bx	lr

08005ef0 <HAL_UARTEx_RxEventCallback>:
 8005ef0:	b480      	push	{r7}
 8005ef2:	b083      	sub	sp, #12
 8005ef4:	af00      	add	r7, sp, #0
 8005ef6:	6078      	str	r0, [r7, #4]
 8005ef8:	460b      	mov	r3, r1
 8005efa:	807b      	strh	r3, [r7, #2]
 8005efc:	bf00      	nop
 8005efe:	370c      	adds	r7, #12
 8005f00:	46bd      	mov	sp, r7
 8005f02:	bc80      	pop	{r7}
 8005f04:	4770      	bx	lr

08005f06 <UART_WaitOnFlagUntilTimeout>:
 8005f06:	b580      	push	{r7, lr}
 8005f08:	b090      	sub	sp, #64	; 0x40
 8005f0a:	af00      	add	r7, sp, #0
 8005f0c:	60f8      	str	r0, [r7, #12]
 8005f0e:	60b9      	str	r1, [r7, #8]
 8005f10:	603b      	str	r3, [r7, #0]
 8005f12:	4613      	mov	r3, r2
 8005f14:	71fb      	strb	r3, [r7, #7]
 8005f16:	e050      	b.n	8005fba <UART_WaitOnFlagUntilTimeout+0xb4>
 8005f18:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005f1a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8005f1e:	d04c      	beq.n	8005fba <UART_WaitOnFlagUntilTimeout+0xb4>
 8005f20:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005f22:	2b00      	cmp	r3, #0
 8005f24:	d007      	beq.n	8005f36 <UART_WaitOnFlagUntilTimeout+0x30>
 8005f26:	f7fd f975 	bl	8003214 <HAL_GetTick>
 8005f2a:	4602      	mov	r2, r0
 8005f2c:	683b      	ldr	r3, [r7, #0]
 8005f2e:	1ad3      	subs	r3, r2, r3
 8005f30:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8005f32:	429a      	cmp	r2, r3
 8005f34:	d241      	bcs.n	8005fba <UART_WaitOnFlagUntilTimeout+0xb4>
 8005f36:	68fb      	ldr	r3, [r7, #12]
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	330c      	adds	r3, #12
 8005f3c:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f3e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f40:	e853 3f00 	ldrex	r3, [r3]
 8005f44:	627b      	str	r3, [r7, #36]	; 0x24
 8005f46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f48:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8005f4c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	330c      	adds	r3, #12
 8005f54:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8005f56:	637a      	str	r2, [r7, #52]	; 0x34
 8005f58:	633b      	str	r3, [r7, #48]	; 0x30
 8005f5a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005f5c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005f5e:	e841 2300 	strex	r3, r2, [r1]
 8005f62:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f64:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d1e5      	bne.n	8005f36 <UART_WaitOnFlagUntilTimeout+0x30>
 8005f6a:	68fb      	ldr	r3, [r7, #12]
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	3314      	adds	r3, #20
 8005f70:	617b      	str	r3, [r7, #20]
 8005f72:	697b      	ldr	r3, [r7, #20]
 8005f74:	e853 3f00 	ldrex	r3, [r3]
 8005f78:	613b      	str	r3, [r7, #16]
 8005f7a:	693b      	ldr	r3, [r7, #16]
 8005f7c:	f023 0301 	bic.w	r3, r3, #1
 8005f80:	63bb      	str	r3, [r7, #56]	; 0x38
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	3314      	adds	r3, #20
 8005f88:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8005f8a:	623a      	str	r2, [r7, #32]
 8005f8c:	61fb      	str	r3, [r7, #28]
 8005f8e:	69f9      	ldr	r1, [r7, #28]
 8005f90:	6a3a      	ldr	r2, [r7, #32]
 8005f92:	e841 2300 	strex	r3, r2, [r1]
 8005f96:	61bb      	str	r3, [r7, #24]
 8005f98:	69bb      	ldr	r3, [r7, #24]
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d1e5      	bne.n	8005f6a <UART_WaitOnFlagUntilTimeout+0x64>
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	2220      	movs	r2, #32
 8005fa2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	2220      	movs	r2, #32
 8005faa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005fae:	68fb      	ldr	r3, [r7, #12]
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005fb6:	2303      	movs	r3, #3
 8005fb8:	e00f      	b.n	8005fda <UART_WaitOnFlagUntilTimeout+0xd4>
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	681a      	ldr	r2, [r3, #0]
 8005fc0:	68bb      	ldr	r3, [r7, #8]
 8005fc2:	4013      	ands	r3, r2
 8005fc4:	68ba      	ldr	r2, [r7, #8]
 8005fc6:	429a      	cmp	r2, r3
 8005fc8:	bf0c      	ite	eq
 8005fca:	2301      	moveq	r3, #1
 8005fcc:	2300      	movne	r3, #0
 8005fce:	b2db      	uxtb	r3, r3
 8005fd0:	461a      	mov	r2, r3
 8005fd2:	79fb      	ldrb	r3, [r7, #7]
 8005fd4:	429a      	cmp	r2, r3
 8005fd6:	d09f      	beq.n	8005f18 <UART_WaitOnFlagUntilTimeout+0x12>
 8005fd8:	2300      	movs	r3, #0
 8005fda:	4618      	mov	r0, r3
 8005fdc:	3740      	adds	r7, #64	; 0x40
 8005fde:	46bd      	mov	sp, r7
 8005fe0:	bd80      	pop	{r7, pc}

08005fe2 <UART_Start_Receive_IT>:
 8005fe2:	b480      	push	{r7}
 8005fe4:	b085      	sub	sp, #20
 8005fe6:	af00      	add	r7, sp, #0
 8005fe8:	60f8      	str	r0, [r7, #12]
 8005fea:	60b9      	str	r1, [r7, #8]
 8005fec:	4613      	mov	r3, r2
 8005fee:	80fb      	strh	r3, [r7, #6]
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	68ba      	ldr	r2, [r7, #8]
 8005ff4:	629a      	str	r2, [r3, #40]	; 0x28
 8005ff6:	68fb      	ldr	r3, [r7, #12]
 8005ff8:	88fa      	ldrh	r2, [r7, #6]
 8005ffa:	859a      	strh	r2, [r3, #44]	; 0x2c
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	88fa      	ldrh	r2, [r7, #6]
 8006000:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	2200      	movs	r2, #0
 8006006:	645a      	str	r2, [r3, #68]	; 0x44
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	2222      	movs	r2, #34	; 0x22
 800600c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	691b      	ldr	r3, [r3, #16]
 8006014:	2b00      	cmp	r3, #0
 8006016:	d007      	beq.n	8006028 <UART_Start_Receive_IT+0x46>
 8006018:	68fb      	ldr	r3, [r7, #12]
 800601a:	681b      	ldr	r3, [r3, #0]
 800601c:	68da      	ldr	r2, [r3, #12]
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	681b      	ldr	r3, [r3, #0]
 8006022:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006026:	60da      	str	r2, [r3, #12]
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	695a      	ldr	r2, [r3, #20]
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	f042 0201 	orr.w	r2, r2, #1
 8006036:	615a      	str	r2, [r3, #20]
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	68da      	ldr	r2, [r3, #12]
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	f042 0220 	orr.w	r2, r2, #32
 8006046:	60da      	str	r2, [r3, #12]
 8006048:	2300      	movs	r3, #0
 800604a:	4618      	mov	r0, r3
 800604c:	3714      	adds	r7, #20
 800604e:	46bd      	mov	sp, r7
 8006050:	bc80      	pop	{r7}
 8006052:	4770      	bx	lr

08006054 <UART_EndRxTransfer>:
 8006054:	b480      	push	{r7}
 8006056:	b095      	sub	sp, #84	; 0x54
 8006058:	af00      	add	r7, sp, #0
 800605a:	6078      	str	r0, [r7, #4]
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	681b      	ldr	r3, [r3, #0]
 8006060:	330c      	adds	r3, #12
 8006062:	637b      	str	r3, [r7, #52]	; 0x34
 8006064:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006066:	e853 3f00 	ldrex	r3, [r3]
 800606a:	633b      	str	r3, [r7, #48]	; 0x30
 800606c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800606e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006072:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	330c      	adds	r3, #12
 800607a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800607c:	643a      	str	r2, [r7, #64]	; 0x40
 800607e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006080:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8006082:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006084:	e841 2300 	strex	r3, r2, [r1]
 8006088:	63bb      	str	r3, [r7, #56]	; 0x38
 800608a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800608c:	2b00      	cmp	r3, #0
 800608e:	d1e5      	bne.n	800605c <UART_EndRxTransfer+0x8>
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	3314      	adds	r3, #20
 8006096:	623b      	str	r3, [r7, #32]
 8006098:	6a3b      	ldr	r3, [r7, #32]
 800609a:	e853 3f00 	ldrex	r3, [r3]
 800609e:	61fb      	str	r3, [r7, #28]
 80060a0:	69fb      	ldr	r3, [r7, #28]
 80060a2:	f023 0301 	bic.w	r3, r3, #1
 80060a6:	64bb      	str	r3, [r7, #72]	; 0x48
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	3314      	adds	r3, #20
 80060ae:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80060b0:	62fa      	str	r2, [r7, #44]	; 0x2c
 80060b2:	62bb      	str	r3, [r7, #40]	; 0x28
 80060b4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80060b6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80060b8:	e841 2300 	strex	r3, r2, [r1]
 80060bc:	627b      	str	r3, [r7, #36]	; 0x24
 80060be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060c0:	2b00      	cmp	r3, #0
 80060c2:	d1e5      	bne.n	8006090 <UART_EndRxTransfer+0x3c>
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80060c8:	2b01      	cmp	r3, #1
 80060ca:	d119      	bne.n	8006100 <UART_EndRxTransfer+0xac>
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	330c      	adds	r3, #12
 80060d2:	60fb      	str	r3, [r7, #12]
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	e853 3f00 	ldrex	r3, [r3]
 80060da:	60bb      	str	r3, [r7, #8]
 80060dc:	68bb      	ldr	r3, [r7, #8]
 80060de:	f023 0310 	bic.w	r3, r3, #16
 80060e2:	647b      	str	r3, [r7, #68]	; 0x44
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	330c      	adds	r3, #12
 80060ea:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80060ec:	61ba      	str	r2, [r7, #24]
 80060ee:	617b      	str	r3, [r7, #20]
 80060f0:	6979      	ldr	r1, [r7, #20]
 80060f2:	69ba      	ldr	r2, [r7, #24]
 80060f4:	e841 2300 	strex	r3, r2, [r1]
 80060f8:	613b      	str	r3, [r7, #16]
 80060fa:	693b      	ldr	r3, [r7, #16]
 80060fc:	2b00      	cmp	r3, #0
 80060fe:	d1e5      	bne.n	80060cc <UART_EndRxTransfer+0x78>
 8006100:	687b      	ldr	r3, [r7, #4]
 8006102:	2220      	movs	r2, #32
 8006104:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	2200      	movs	r2, #0
 800610c:	631a      	str	r2, [r3, #48]	; 0x30
 800610e:	bf00      	nop
 8006110:	3754      	adds	r7, #84	; 0x54
 8006112:	46bd      	mov	sp, r7
 8006114:	bc80      	pop	{r7}
 8006116:	4770      	bx	lr

08006118 <UART_DMAAbortOnError>:
 8006118:	b580      	push	{r7, lr}
 800611a:	b084      	sub	sp, #16
 800611c:	af00      	add	r7, sp, #0
 800611e:	6078      	str	r0, [r7, #4]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006124:	60fb      	str	r3, [r7, #12]
 8006126:	68fb      	ldr	r3, [r7, #12]
 8006128:	2200      	movs	r2, #0
 800612a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	2200      	movs	r2, #0
 8006130:	84da      	strh	r2, [r3, #38]	; 0x26
 8006132:	68f8      	ldr	r0, [r7, #12]
 8006134:	f7ff fed3 	bl	8005ede <HAL_UART_ErrorCallback>
 8006138:	bf00      	nop
 800613a:	3710      	adds	r7, #16
 800613c:	46bd      	mov	sp, r7
 800613e:	bd80      	pop	{r7, pc}

08006140 <UART_Transmit_IT>:
 8006140:	b480      	push	{r7}
 8006142:	b085      	sub	sp, #20
 8006144:	af00      	add	r7, sp, #0
 8006146:	6078      	str	r0, [r7, #4]
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800614e:	b2db      	uxtb	r3, r3
 8006150:	2b21      	cmp	r3, #33	; 0x21
 8006152:	d13e      	bne.n	80061d2 <UART_Transmit_IT+0x92>
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	689b      	ldr	r3, [r3, #8]
 8006158:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800615c:	d114      	bne.n	8006188 <UART_Transmit_IT+0x48>
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	691b      	ldr	r3, [r3, #16]
 8006162:	2b00      	cmp	r3, #0
 8006164:	d110      	bne.n	8006188 <UART_Transmit_IT+0x48>
 8006166:	687b      	ldr	r3, [r7, #4]
 8006168:	6a1b      	ldr	r3, [r3, #32]
 800616a:	60fb      	str	r3, [r7, #12]
 800616c:	68fb      	ldr	r3, [r7, #12]
 800616e:	881b      	ldrh	r3, [r3, #0]
 8006170:	461a      	mov	r2, r3
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	681b      	ldr	r3, [r3, #0]
 8006176:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800617a:	605a      	str	r2, [r3, #4]
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	6a1b      	ldr	r3, [r3, #32]
 8006180:	1c9a      	adds	r2, r3, #2
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	621a      	str	r2, [r3, #32]
 8006186:	e008      	b.n	800619a <UART_Transmit_IT+0x5a>
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	6a1b      	ldr	r3, [r3, #32]
 800618c:	1c59      	adds	r1, r3, #1
 800618e:	687a      	ldr	r2, [r7, #4]
 8006190:	6211      	str	r1, [r2, #32]
 8006192:	781a      	ldrb	r2, [r3, #0]
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	681b      	ldr	r3, [r3, #0]
 8006198:	605a      	str	r2, [r3, #4]
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800619e:	b29b      	uxth	r3, r3
 80061a0:	3b01      	subs	r3, #1
 80061a2:	b29b      	uxth	r3, r3
 80061a4:	687a      	ldr	r2, [r7, #4]
 80061a6:	4619      	mov	r1, r3
 80061a8:	84d1      	strh	r1, [r2, #38]	; 0x26
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d10f      	bne.n	80061ce <UART_Transmit_IT+0x8e>
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	68da      	ldr	r2, [r3, #12]
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80061bc:	60da      	str	r2, [r3, #12]
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	68da      	ldr	r2, [r3, #12]
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	681b      	ldr	r3, [r3, #0]
 80061c8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80061cc:	60da      	str	r2, [r3, #12]
 80061ce:	2300      	movs	r3, #0
 80061d0:	e000      	b.n	80061d4 <UART_Transmit_IT+0x94>
 80061d2:	2302      	movs	r3, #2
 80061d4:	4618      	mov	r0, r3
 80061d6:	3714      	adds	r7, #20
 80061d8:	46bd      	mov	sp, r7
 80061da:	bc80      	pop	{r7}
 80061dc:	4770      	bx	lr

080061de <UART_EndTransmit_IT>:
 80061de:	b580      	push	{r7, lr}
 80061e0:	b082      	sub	sp, #8
 80061e2:	af00      	add	r7, sp, #0
 80061e4:	6078      	str	r0, [r7, #4]
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	68da      	ldr	r2, [r3, #12]
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	681b      	ldr	r3, [r3, #0]
 80061f0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80061f4:	60da      	str	r2, [r3, #12]
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	2220      	movs	r2, #32
 80061fa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80061fe:	6878      	ldr	r0, [r7, #4]
 8006200:	f7ff fe64 	bl	8005ecc <HAL_UART_TxCpltCallback>
 8006204:	2300      	movs	r3, #0
 8006206:	4618      	mov	r0, r3
 8006208:	3708      	adds	r7, #8
 800620a:	46bd      	mov	sp, r7
 800620c:	bd80      	pop	{r7, pc}

0800620e <UART_Receive_IT>:
 800620e:	b580      	push	{r7, lr}
 8006210:	b08c      	sub	sp, #48	; 0x30
 8006212:	af00      	add	r7, sp, #0
 8006214:	6078      	str	r0, [r7, #4]
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800621c:	b2db      	uxtb	r3, r3
 800621e:	2b22      	cmp	r3, #34	; 0x22
 8006220:	f040 80ae 	bne.w	8006380 <UART_Receive_IT+0x172>
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	689b      	ldr	r3, [r3, #8]
 8006228:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800622c:	d117      	bne.n	800625e <UART_Receive_IT+0x50>
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	691b      	ldr	r3, [r3, #16]
 8006232:	2b00      	cmp	r3, #0
 8006234:	d113      	bne.n	800625e <UART_Receive_IT+0x50>
 8006236:	2300      	movs	r3, #0
 8006238:	62fb      	str	r3, [r7, #44]	; 0x2c
 800623a:	687b      	ldr	r3, [r7, #4]
 800623c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800623e:	62bb      	str	r3, [r7, #40]	; 0x28
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	681b      	ldr	r3, [r3, #0]
 8006244:	685b      	ldr	r3, [r3, #4]
 8006246:	b29b      	uxth	r3, r3
 8006248:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800624c:	b29a      	uxth	r2, r3
 800624e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006250:	801a      	strh	r2, [r3, #0]
 8006252:	687b      	ldr	r3, [r7, #4]
 8006254:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006256:	1c9a      	adds	r2, r3, #2
 8006258:	687b      	ldr	r3, [r7, #4]
 800625a:	629a      	str	r2, [r3, #40]	; 0x28
 800625c:	e026      	b.n	80062ac <UART_Receive_IT+0x9e>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006262:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006264:	2300      	movs	r3, #0
 8006266:	62bb      	str	r3, [r7, #40]	; 0x28
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	689b      	ldr	r3, [r3, #8]
 800626c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006270:	d007      	beq.n	8006282 <UART_Receive_IT+0x74>
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	689b      	ldr	r3, [r3, #8]
 8006276:	2b00      	cmp	r3, #0
 8006278:	d10a      	bne.n	8006290 <UART_Receive_IT+0x82>
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	691b      	ldr	r3, [r3, #16]
 800627e:	2b00      	cmp	r3, #0
 8006280:	d106      	bne.n	8006290 <UART_Receive_IT+0x82>
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	685b      	ldr	r3, [r3, #4]
 8006288:	b2da      	uxtb	r2, r3
 800628a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800628c:	701a      	strb	r2, [r3, #0]
 800628e:	e008      	b.n	80062a2 <UART_Receive_IT+0x94>
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	685b      	ldr	r3, [r3, #4]
 8006296:	b2db      	uxtb	r3, r3
 8006298:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800629c:	b2da      	uxtb	r2, r3
 800629e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80062a0:	701a      	strb	r2, [r3, #0]
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062a6:	1c5a      	adds	r2, r3, #1
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	629a      	str	r2, [r3, #40]	; 0x28
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80062b0:	b29b      	uxth	r3, r3
 80062b2:	3b01      	subs	r3, #1
 80062b4:	b29b      	uxth	r3, r3
 80062b6:	687a      	ldr	r2, [r7, #4]
 80062b8:	4619      	mov	r1, r3
 80062ba:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d15d      	bne.n	800637c <UART_Receive_IT+0x16e>
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	68da      	ldr	r2, [r3, #12]
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	f022 0220 	bic.w	r2, r2, #32
 80062ce:	60da      	str	r2, [r3, #12]
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	68da      	ldr	r2, [r3, #12]
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80062de:	60da      	str	r2, [r3, #12]
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	695a      	ldr	r2, [r3, #20]
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	f022 0201 	bic.w	r2, r2, #1
 80062ee:	615a      	str	r2, [r3, #20]
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	2220      	movs	r2, #32
 80062f4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80062f8:	687b      	ldr	r3, [r7, #4]
 80062fa:	2200      	movs	r2, #0
 80062fc:	635a      	str	r2, [r3, #52]	; 0x34
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006302:	2b01      	cmp	r3, #1
 8006304:	d135      	bne.n	8006372 <UART_Receive_IT+0x164>
 8006306:	687b      	ldr	r3, [r7, #4]
 8006308:	2200      	movs	r2, #0
 800630a:	631a      	str	r2, [r3, #48]	; 0x30
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	330c      	adds	r3, #12
 8006312:	617b      	str	r3, [r7, #20]
 8006314:	697b      	ldr	r3, [r7, #20]
 8006316:	e853 3f00 	ldrex	r3, [r3]
 800631a:	613b      	str	r3, [r7, #16]
 800631c:	693b      	ldr	r3, [r7, #16]
 800631e:	f023 0310 	bic.w	r3, r3, #16
 8006322:	627b      	str	r3, [r7, #36]	; 0x24
 8006324:	687b      	ldr	r3, [r7, #4]
 8006326:	681b      	ldr	r3, [r3, #0]
 8006328:	330c      	adds	r3, #12
 800632a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800632c:	623a      	str	r2, [r7, #32]
 800632e:	61fb      	str	r3, [r7, #28]
 8006330:	69f9      	ldr	r1, [r7, #28]
 8006332:	6a3a      	ldr	r2, [r7, #32]
 8006334:	e841 2300 	strex	r3, r2, [r1]
 8006338:	61bb      	str	r3, [r7, #24]
 800633a:	69bb      	ldr	r3, [r7, #24]
 800633c:	2b00      	cmp	r3, #0
 800633e:	d1e5      	bne.n	800630c <UART_Receive_IT+0xfe>
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	681b      	ldr	r3, [r3, #0]
 8006346:	f003 0310 	and.w	r3, r3, #16
 800634a:	2b10      	cmp	r3, #16
 800634c:	d10a      	bne.n	8006364 <UART_Receive_IT+0x156>
 800634e:	2300      	movs	r3, #0
 8006350:	60fb      	str	r3, [r7, #12]
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	681b      	ldr	r3, [r3, #0]
 8006356:	681b      	ldr	r3, [r3, #0]
 8006358:	60fb      	str	r3, [r7, #12]
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	685b      	ldr	r3, [r3, #4]
 8006360:	60fb      	str	r3, [r7, #12]
 8006362:	68fb      	ldr	r3, [r7, #12]
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006368:	4619      	mov	r1, r3
 800636a:	6878      	ldr	r0, [r7, #4]
 800636c:	f7ff fdc0 	bl	8005ef0 <HAL_UARTEx_RxEventCallback>
 8006370:	e002      	b.n	8006378 <UART_Receive_IT+0x16a>
 8006372:	6878      	ldr	r0, [r7, #4]
 8006374:	f7fc f962 	bl	800263c <HAL_UART_RxCpltCallback>
 8006378:	2300      	movs	r3, #0
 800637a:	e002      	b.n	8006382 <UART_Receive_IT+0x174>
 800637c:	2300      	movs	r3, #0
 800637e:	e000      	b.n	8006382 <UART_Receive_IT+0x174>
 8006380:	2302      	movs	r3, #2
 8006382:	4618      	mov	r0, r3
 8006384:	3730      	adds	r7, #48	; 0x30
 8006386:	46bd      	mov	sp, r7
 8006388:	bd80      	pop	{r7, pc}
	...

0800638c <UART_SetConfig>:
 800638c:	b580      	push	{r7, lr}
 800638e:	b084      	sub	sp, #16
 8006390:	af00      	add	r7, sp, #0
 8006392:	6078      	str	r0, [r7, #4]
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	691b      	ldr	r3, [r3, #16]
 800639a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	68da      	ldr	r2, [r3, #12]
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	681b      	ldr	r3, [r3, #0]
 80063a6:	430a      	orrs	r2, r1
 80063a8:	611a      	str	r2, [r3, #16]
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	689a      	ldr	r2, [r3, #8]
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	691b      	ldr	r3, [r3, #16]
 80063b2:	431a      	orrs	r2, r3
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	695b      	ldr	r3, [r3, #20]
 80063b8:	4313      	orrs	r3, r2
 80063ba:	60bb      	str	r3, [r7, #8]
 80063bc:	687b      	ldr	r3, [r7, #4]
 80063be:	681b      	ldr	r3, [r3, #0]
 80063c0:	68db      	ldr	r3, [r3, #12]
 80063c2:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80063c6:	f023 030c 	bic.w	r3, r3, #12
 80063ca:	687a      	ldr	r2, [r7, #4]
 80063cc:	6812      	ldr	r2, [r2, #0]
 80063ce:	68b9      	ldr	r1, [r7, #8]
 80063d0:	430b      	orrs	r3, r1
 80063d2:	60d3      	str	r3, [r2, #12]
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	695b      	ldr	r3, [r3, #20]
 80063da:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	699a      	ldr	r2, [r3, #24]
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	681b      	ldr	r3, [r3, #0]
 80063e6:	430a      	orrs	r2, r1
 80063e8:	615a      	str	r2, [r3, #20]
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	681b      	ldr	r3, [r3, #0]
 80063ee:	4a2c      	ldr	r2, [pc, #176]	; (80064a0 <UART_SetConfig+0x114>)
 80063f0:	4293      	cmp	r3, r2
 80063f2:	d103      	bne.n	80063fc <UART_SetConfig+0x70>
 80063f4:	f7fd fe4a 	bl	800408c <HAL_RCC_GetPCLK2Freq>
 80063f8:	60f8      	str	r0, [r7, #12]
 80063fa:	e002      	b.n	8006402 <UART_SetConfig+0x76>
 80063fc:	f7fd fe32 	bl	8004064 <HAL_RCC_GetPCLK1Freq>
 8006400:	60f8      	str	r0, [r7, #12]
 8006402:	68fa      	ldr	r2, [r7, #12]
 8006404:	4613      	mov	r3, r2
 8006406:	009b      	lsls	r3, r3, #2
 8006408:	4413      	add	r3, r2
 800640a:	009a      	lsls	r2, r3, #2
 800640c:	441a      	add	r2, r3
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	685b      	ldr	r3, [r3, #4]
 8006412:	009b      	lsls	r3, r3, #2
 8006414:	fbb2 f3f3 	udiv	r3, r2, r3
 8006418:	4a22      	ldr	r2, [pc, #136]	; (80064a4 <UART_SetConfig+0x118>)
 800641a:	fba2 2303 	umull	r2, r3, r2, r3
 800641e:	095b      	lsrs	r3, r3, #5
 8006420:	0119      	lsls	r1, r3, #4
 8006422:	68fa      	ldr	r2, [r7, #12]
 8006424:	4613      	mov	r3, r2
 8006426:	009b      	lsls	r3, r3, #2
 8006428:	4413      	add	r3, r2
 800642a:	009a      	lsls	r2, r3, #2
 800642c:	441a      	add	r2, r3
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	685b      	ldr	r3, [r3, #4]
 8006432:	009b      	lsls	r3, r3, #2
 8006434:	fbb2 f2f3 	udiv	r2, r2, r3
 8006438:	4b1a      	ldr	r3, [pc, #104]	; (80064a4 <UART_SetConfig+0x118>)
 800643a:	fba3 0302 	umull	r0, r3, r3, r2
 800643e:	095b      	lsrs	r3, r3, #5
 8006440:	2064      	movs	r0, #100	; 0x64
 8006442:	fb00 f303 	mul.w	r3, r0, r3
 8006446:	1ad3      	subs	r3, r2, r3
 8006448:	011b      	lsls	r3, r3, #4
 800644a:	3332      	adds	r3, #50	; 0x32
 800644c:	4a15      	ldr	r2, [pc, #84]	; (80064a4 <UART_SetConfig+0x118>)
 800644e:	fba2 2303 	umull	r2, r3, r2, r3
 8006452:	095b      	lsrs	r3, r3, #5
 8006454:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006458:	4419      	add	r1, r3
 800645a:	68fa      	ldr	r2, [r7, #12]
 800645c:	4613      	mov	r3, r2
 800645e:	009b      	lsls	r3, r3, #2
 8006460:	4413      	add	r3, r2
 8006462:	009a      	lsls	r2, r3, #2
 8006464:	441a      	add	r2, r3
 8006466:	687b      	ldr	r3, [r7, #4]
 8006468:	685b      	ldr	r3, [r3, #4]
 800646a:	009b      	lsls	r3, r3, #2
 800646c:	fbb2 f2f3 	udiv	r2, r2, r3
 8006470:	4b0c      	ldr	r3, [pc, #48]	; (80064a4 <UART_SetConfig+0x118>)
 8006472:	fba3 0302 	umull	r0, r3, r3, r2
 8006476:	095b      	lsrs	r3, r3, #5
 8006478:	2064      	movs	r0, #100	; 0x64
 800647a:	fb00 f303 	mul.w	r3, r0, r3
 800647e:	1ad3      	subs	r3, r2, r3
 8006480:	011b      	lsls	r3, r3, #4
 8006482:	3332      	adds	r3, #50	; 0x32
 8006484:	4a07      	ldr	r2, [pc, #28]	; (80064a4 <UART_SetConfig+0x118>)
 8006486:	fba2 2303 	umull	r2, r3, r2, r3
 800648a:	095b      	lsrs	r3, r3, #5
 800648c:	f003 020f 	and.w	r2, r3, #15
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	440a      	add	r2, r1
 8006496:	609a      	str	r2, [r3, #8]
 8006498:	bf00      	nop
 800649a:	3710      	adds	r7, #16
 800649c:	46bd      	mov	sp, r7
 800649e:	bd80      	pop	{r7, pc}
 80064a0:	40013800 	.word	0x40013800
 80064a4:	51eb851f 	.word	0x51eb851f

080064a8 <makeFreeRtosPriority>:
 80064a8:	b480      	push	{r7}
 80064aa:	b085      	sub	sp, #20
 80064ac:	af00      	add	r7, sp, #0
 80064ae:	4603      	mov	r3, r0
 80064b0:	80fb      	strh	r3, [r7, #6]
 80064b2:	2300      	movs	r3, #0
 80064b4:	60fb      	str	r3, [r7, #12]
 80064b6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80064ba:	2b84      	cmp	r3, #132	; 0x84
 80064bc:	d005      	beq.n	80064ca <makeFreeRtosPriority+0x22>
 80064be:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80064c2:	68fb      	ldr	r3, [r7, #12]
 80064c4:	4413      	add	r3, r2
 80064c6:	3303      	adds	r3, #3
 80064c8:	60fb      	str	r3, [r7, #12]
 80064ca:	68fb      	ldr	r3, [r7, #12]
 80064cc:	4618      	mov	r0, r3
 80064ce:	3714      	adds	r7, #20
 80064d0:	46bd      	mov	sp, r7
 80064d2:	bc80      	pop	{r7}
 80064d4:	4770      	bx	lr

080064d6 <osKernelStart>:
 80064d6:	b580      	push	{r7, lr}
 80064d8:	af00      	add	r7, sp, #0
 80064da:	f000 fae7 	bl	8006aac <vTaskStartScheduler>
 80064de:	2300      	movs	r3, #0
 80064e0:	4618      	mov	r0, r3
 80064e2:	bd80      	pop	{r7, pc}

080064e4 <osThreadCreate>:
 80064e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80064e6:	b089      	sub	sp, #36	; 0x24
 80064e8:	af04      	add	r7, sp, #16
 80064ea:	6078      	str	r0, [r7, #4]
 80064ec:	6039      	str	r1, [r7, #0]
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	695b      	ldr	r3, [r3, #20]
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d020      	beq.n	8006538 <osThreadCreate+0x54>
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	699b      	ldr	r3, [r3, #24]
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d01c      	beq.n	8006538 <osThreadCreate+0x54>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	685c      	ldr	r4, [r3, #4]
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	681d      	ldr	r5, [r3, #0]
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	691e      	ldr	r6, [r3, #16]
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8006510:	4618      	mov	r0, r3
 8006512:	f7ff ffc9 	bl	80064a8 <makeFreeRtosPriority>
 8006516:	4601      	mov	r1, r0
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	695b      	ldr	r3, [r3, #20]
 800651c:	687a      	ldr	r2, [r7, #4]
 800651e:	6992      	ldr	r2, [r2, #24]
 8006520:	9202      	str	r2, [sp, #8]
 8006522:	9301      	str	r3, [sp, #4]
 8006524:	9100      	str	r1, [sp, #0]
 8006526:	683b      	ldr	r3, [r7, #0]
 8006528:	4632      	mov	r2, r6
 800652a:	4629      	mov	r1, r5
 800652c:	4620      	mov	r0, r4
 800652e:	f000 f8e8 	bl	8006702 <xTaskCreateStatic>
 8006532:	4603      	mov	r3, r0
 8006534:	60fb      	str	r3, [r7, #12]
 8006536:	e01c      	b.n	8006572 <osThreadCreate+0x8e>
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	685c      	ldr	r4, [r3, #4]
 800653c:	687b      	ldr	r3, [r7, #4]
 800653e:	681d      	ldr	r5, [r3, #0]
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	691b      	ldr	r3, [r3, #16]
 8006544:	b29e      	uxth	r6, r3
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800654c:	4618      	mov	r0, r3
 800654e:	f7ff ffab 	bl	80064a8 <makeFreeRtosPriority>
 8006552:	4602      	mov	r2, r0
 8006554:	f107 030c 	add.w	r3, r7, #12
 8006558:	9301      	str	r3, [sp, #4]
 800655a:	9200      	str	r2, [sp, #0]
 800655c:	683b      	ldr	r3, [r7, #0]
 800655e:	4632      	mov	r2, r6
 8006560:	4629      	mov	r1, r5
 8006562:	4620      	mov	r0, r4
 8006564:	f000 f929 	bl	80067ba <xTaskCreate>
 8006568:	4603      	mov	r3, r0
 800656a:	2b01      	cmp	r3, #1
 800656c:	d001      	beq.n	8006572 <osThreadCreate+0x8e>
 800656e:	2300      	movs	r3, #0
 8006570:	e000      	b.n	8006574 <osThreadCreate+0x90>
 8006572:	68fb      	ldr	r3, [r7, #12]
 8006574:	4618      	mov	r0, r3
 8006576:	3714      	adds	r7, #20
 8006578:	46bd      	mov	sp, r7
 800657a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800657c <osDelay>:
 800657c:	b580      	push	{r7, lr}
 800657e:	b084      	sub	sp, #16
 8006580:	af00      	add	r7, sp, #0
 8006582:	6078      	str	r0, [r7, #4]
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	60fb      	str	r3, [r7, #12]
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	2b00      	cmp	r3, #0
 800658c:	d001      	beq.n	8006592 <osDelay+0x16>
 800658e:	68fb      	ldr	r3, [r7, #12]
 8006590:	e000      	b.n	8006594 <osDelay+0x18>
 8006592:	2301      	movs	r3, #1
 8006594:	4618      	mov	r0, r3
 8006596:	f000 fa55 	bl	8006a44 <vTaskDelay>
 800659a:	2300      	movs	r3, #0
 800659c:	4618      	mov	r0, r3
 800659e:	3710      	adds	r7, #16
 80065a0:	46bd      	mov	sp, r7
 80065a2:	bd80      	pop	{r7, pc}

080065a4 <vListInitialise>:
 80065a4:	b480      	push	{r7}
 80065a6:	b083      	sub	sp, #12
 80065a8:	af00      	add	r7, sp, #0
 80065aa:	6078      	str	r0, [r7, #4]
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	f103 0208 	add.w	r2, r3, #8
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	605a      	str	r2, [r3, #4]
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80065bc:	609a      	str	r2, [r3, #8]
 80065be:	687b      	ldr	r3, [r7, #4]
 80065c0:	f103 0208 	add.w	r2, r3, #8
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	60da      	str	r2, [r3, #12]
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	f103 0208 	add.w	r2, r3, #8
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	611a      	str	r2, [r3, #16]
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	2200      	movs	r2, #0
 80065d6:	601a      	str	r2, [r3, #0]
 80065d8:	bf00      	nop
 80065da:	370c      	adds	r7, #12
 80065dc:	46bd      	mov	sp, r7
 80065de:	bc80      	pop	{r7}
 80065e0:	4770      	bx	lr

080065e2 <vListInitialiseItem>:
 80065e2:	b480      	push	{r7}
 80065e4:	b083      	sub	sp, #12
 80065e6:	af00      	add	r7, sp, #0
 80065e8:	6078      	str	r0, [r7, #4]
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	2200      	movs	r2, #0
 80065ee:	611a      	str	r2, [r3, #16]
 80065f0:	bf00      	nop
 80065f2:	370c      	adds	r7, #12
 80065f4:	46bd      	mov	sp, r7
 80065f6:	bc80      	pop	{r7}
 80065f8:	4770      	bx	lr

080065fa <vListInsertEnd>:
 80065fa:	b480      	push	{r7}
 80065fc:	b085      	sub	sp, #20
 80065fe:	af00      	add	r7, sp, #0
 8006600:	6078      	str	r0, [r7, #4]
 8006602:	6039      	str	r1, [r7, #0]
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	685b      	ldr	r3, [r3, #4]
 8006608:	60fb      	str	r3, [r7, #12]
 800660a:	683b      	ldr	r3, [r7, #0]
 800660c:	68fa      	ldr	r2, [r7, #12]
 800660e:	605a      	str	r2, [r3, #4]
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	689a      	ldr	r2, [r3, #8]
 8006614:	683b      	ldr	r3, [r7, #0]
 8006616:	609a      	str	r2, [r3, #8]
 8006618:	68fb      	ldr	r3, [r7, #12]
 800661a:	689b      	ldr	r3, [r3, #8]
 800661c:	683a      	ldr	r2, [r7, #0]
 800661e:	605a      	str	r2, [r3, #4]
 8006620:	68fb      	ldr	r3, [r7, #12]
 8006622:	683a      	ldr	r2, [r7, #0]
 8006624:	609a      	str	r2, [r3, #8]
 8006626:	683b      	ldr	r3, [r7, #0]
 8006628:	687a      	ldr	r2, [r7, #4]
 800662a:	611a      	str	r2, [r3, #16]
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	1c5a      	adds	r2, r3, #1
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	601a      	str	r2, [r3, #0]
 8006636:	bf00      	nop
 8006638:	3714      	adds	r7, #20
 800663a:	46bd      	mov	sp, r7
 800663c:	bc80      	pop	{r7}
 800663e:	4770      	bx	lr

08006640 <vListInsert>:
 8006640:	b480      	push	{r7}
 8006642:	b085      	sub	sp, #20
 8006644:	af00      	add	r7, sp, #0
 8006646:	6078      	str	r0, [r7, #4]
 8006648:	6039      	str	r1, [r7, #0]
 800664a:	683b      	ldr	r3, [r7, #0]
 800664c:	681b      	ldr	r3, [r3, #0]
 800664e:	60bb      	str	r3, [r7, #8]
 8006650:	68bb      	ldr	r3, [r7, #8]
 8006652:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006656:	d103      	bne.n	8006660 <vListInsert+0x20>
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	691b      	ldr	r3, [r3, #16]
 800665c:	60fb      	str	r3, [r7, #12]
 800665e:	e00c      	b.n	800667a <vListInsert+0x3a>
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	3308      	adds	r3, #8
 8006664:	60fb      	str	r3, [r7, #12]
 8006666:	e002      	b.n	800666e <vListInsert+0x2e>
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	685b      	ldr	r3, [r3, #4]
 800666c:	60fb      	str	r3, [r7, #12]
 800666e:	68fb      	ldr	r3, [r7, #12]
 8006670:	685b      	ldr	r3, [r3, #4]
 8006672:	681b      	ldr	r3, [r3, #0]
 8006674:	68ba      	ldr	r2, [r7, #8]
 8006676:	429a      	cmp	r2, r3
 8006678:	d2f6      	bcs.n	8006668 <vListInsert+0x28>
 800667a:	68fb      	ldr	r3, [r7, #12]
 800667c:	685a      	ldr	r2, [r3, #4]
 800667e:	683b      	ldr	r3, [r7, #0]
 8006680:	605a      	str	r2, [r3, #4]
 8006682:	683b      	ldr	r3, [r7, #0]
 8006684:	685b      	ldr	r3, [r3, #4]
 8006686:	683a      	ldr	r2, [r7, #0]
 8006688:	609a      	str	r2, [r3, #8]
 800668a:	683b      	ldr	r3, [r7, #0]
 800668c:	68fa      	ldr	r2, [r7, #12]
 800668e:	609a      	str	r2, [r3, #8]
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	683a      	ldr	r2, [r7, #0]
 8006694:	605a      	str	r2, [r3, #4]
 8006696:	683b      	ldr	r3, [r7, #0]
 8006698:	687a      	ldr	r2, [r7, #4]
 800669a:	611a      	str	r2, [r3, #16]
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	1c5a      	adds	r2, r3, #1
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	601a      	str	r2, [r3, #0]
 80066a6:	bf00      	nop
 80066a8:	3714      	adds	r7, #20
 80066aa:	46bd      	mov	sp, r7
 80066ac:	bc80      	pop	{r7}
 80066ae:	4770      	bx	lr

080066b0 <uxListRemove>:
 80066b0:	b480      	push	{r7}
 80066b2:	b085      	sub	sp, #20
 80066b4:	af00      	add	r7, sp, #0
 80066b6:	6078      	str	r0, [r7, #4]
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	691b      	ldr	r3, [r3, #16]
 80066bc:	60fb      	str	r3, [r7, #12]
 80066be:	687b      	ldr	r3, [r7, #4]
 80066c0:	685b      	ldr	r3, [r3, #4]
 80066c2:	687a      	ldr	r2, [r7, #4]
 80066c4:	6892      	ldr	r2, [r2, #8]
 80066c6:	609a      	str	r2, [r3, #8]
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	689b      	ldr	r3, [r3, #8]
 80066cc:	687a      	ldr	r2, [r7, #4]
 80066ce:	6852      	ldr	r2, [r2, #4]
 80066d0:	605a      	str	r2, [r3, #4]
 80066d2:	68fb      	ldr	r3, [r7, #12]
 80066d4:	685b      	ldr	r3, [r3, #4]
 80066d6:	687a      	ldr	r2, [r7, #4]
 80066d8:	429a      	cmp	r2, r3
 80066da:	d103      	bne.n	80066e4 <uxListRemove+0x34>
 80066dc:	687b      	ldr	r3, [r7, #4]
 80066de:	689a      	ldr	r2, [r3, #8]
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	605a      	str	r2, [r3, #4]
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	2200      	movs	r2, #0
 80066e8:	611a      	str	r2, [r3, #16]
 80066ea:	68fb      	ldr	r3, [r7, #12]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	1e5a      	subs	r2, r3, #1
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	601a      	str	r2, [r3, #0]
 80066f4:	68fb      	ldr	r3, [r7, #12]
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	4618      	mov	r0, r3
 80066fa:	3714      	adds	r7, #20
 80066fc:	46bd      	mov	sp, r7
 80066fe:	bc80      	pop	{r7}
 8006700:	4770      	bx	lr

08006702 <xTaskCreateStatic>:
 8006702:	b580      	push	{r7, lr}
 8006704:	b08e      	sub	sp, #56	; 0x38
 8006706:	af04      	add	r7, sp, #16
 8006708:	60f8      	str	r0, [r7, #12]
 800670a:	60b9      	str	r1, [r7, #8]
 800670c:	607a      	str	r2, [r7, #4]
 800670e:	603b      	str	r3, [r7, #0]
 8006710:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006712:	2b00      	cmp	r3, #0
 8006714:	d10a      	bne.n	800672c <xTaskCreateStatic+0x2a>
 8006716:	f04f 0350 	mov.w	r3, #80	; 0x50
 800671a:	f383 8811 	msr	BASEPRI, r3
 800671e:	f3bf 8f6f 	isb	sy
 8006722:	f3bf 8f4f 	dsb	sy
 8006726:	623b      	str	r3, [r7, #32]
 8006728:	bf00      	nop
 800672a:	e7fe      	b.n	800672a <xTaskCreateStatic+0x28>
 800672c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800672e:	2b00      	cmp	r3, #0
 8006730:	d10a      	bne.n	8006748 <xTaskCreateStatic+0x46>
 8006732:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006736:	f383 8811 	msr	BASEPRI, r3
 800673a:	f3bf 8f6f 	isb	sy
 800673e:	f3bf 8f4f 	dsb	sy
 8006742:	61fb      	str	r3, [r7, #28]
 8006744:	bf00      	nop
 8006746:	e7fe      	b.n	8006746 <xTaskCreateStatic+0x44>
 8006748:	23a0      	movs	r3, #160	; 0xa0
 800674a:	613b      	str	r3, [r7, #16]
 800674c:	693b      	ldr	r3, [r7, #16]
 800674e:	2ba0      	cmp	r3, #160	; 0xa0
 8006750:	d00a      	beq.n	8006768 <xTaskCreateStatic+0x66>
 8006752:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006756:	f383 8811 	msr	BASEPRI, r3
 800675a:	f3bf 8f6f 	isb	sy
 800675e:	f3bf 8f4f 	dsb	sy
 8006762:	61bb      	str	r3, [r7, #24]
 8006764:	bf00      	nop
 8006766:	e7fe      	b.n	8006766 <xTaskCreateStatic+0x64>
 8006768:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800676a:	2b00      	cmp	r3, #0
 800676c:	d01e      	beq.n	80067ac <xTaskCreateStatic+0xaa>
 800676e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006770:	2b00      	cmp	r3, #0
 8006772:	d01b      	beq.n	80067ac <xTaskCreateStatic+0xaa>
 8006774:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006776:	627b      	str	r3, [r7, #36]	; 0x24
 8006778:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800677a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800677c:	631a      	str	r2, [r3, #48]	; 0x30
 800677e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006780:	2202      	movs	r2, #2
 8006782:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 8006786:	2300      	movs	r3, #0
 8006788:	9303      	str	r3, [sp, #12]
 800678a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800678c:	9302      	str	r3, [sp, #8]
 800678e:	f107 0314 	add.w	r3, r7, #20
 8006792:	9301      	str	r3, [sp, #4]
 8006794:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006796:	9300      	str	r3, [sp, #0]
 8006798:	683b      	ldr	r3, [r7, #0]
 800679a:	687a      	ldr	r2, [r7, #4]
 800679c:	68b9      	ldr	r1, [r7, #8]
 800679e:	68f8      	ldr	r0, [r7, #12]
 80067a0:	f000 f850 	bl	8006844 <prvInitialiseNewTask>
 80067a4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80067a6:	f000 f8e3 	bl	8006970 <prvAddNewTaskToReadyList>
 80067aa:	e001      	b.n	80067b0 <xTaskCreateStatic+0xae>
 80067ac:	2300      	movs	r3, #0
 80067ae:	617b      	str	r3, [r7, #20]
 80067b0:	697b      	ldr	r3, [r7, #20]
 80067b2:	4618      	mov	r0, r3
 80067b4:	3728      	adds	r7, #40	; 0x28
 80067b6:	46bd      	mov	sp, r7
 80067b8:	bd80      	pop	{r7, pc}

080067ba <xTaskCreate>:
 80067ba:	b580      	push	{r7, lr}
 80067bc:	b08c      	sub	sp, #48	; 0x30
 80067be:	af04      	add	r7, sp, #16
 80067c0:	60f8      	str	r0, [r7, #12]
 80067c2:	60b9      	str	r1, [r7, #8]
 80067c4:	603b      	str	r3, [r7, #0]
 80067c6:	4613      	mov	r3, r2
 80067c8:	80fb      	strh	r3, [r7, #6]
 80067ca:	88fb      	ldrh	r3, [r7, #6]
 80067cc:	009b      	lsls	r3, r3, #2
 80067ce:	4618      	mov	r0, r3
 80067d0:	f000 fe96 	bl	8007500 <pvPortMalloc>
 80067d4:	6178      	str	r0, [r7, #20]
 80067d6:	697b      	ldr	r3, [r7, #20]
 80067d8:	2b00      	cmp	r3, #0
 80067da:	d00e      	beq.n	80067fa <xTaskCreate+0x40>
 80067dc:	20a0      	movs	r0, #160	; 0xa0
 80067de:	f000 fe8f 	bl	8007500 <pvPortMalloc>
 80067e2:	61f8      	str	r0, [r7, #28]
 80067e4:	69fb      	ldr	r3, [r7, #28]
 80067e6:	2b00      	cmp	r3, #0
 80067e8:	d003      	beq.n	80067f2 <xTaskCreate+0x38>
 80067ea:	69fb      	ldr	r3, [r7, #28]
 80067ec:	697a      	ldr	r2, [r7, #20]
 80067ee:	631a      	str	r2, [r3, #48]	; 0x30
 80067f0:	e005      	b.n	80067fe <xTaskCreate+0x44>
 80067f2:	6978      	ldr	r0, [r7, #20]
 80067f4:	f000 ff48 	bl	8007688 <vPortFree>
 80067f8:	e001      	b.n	80067fe <xTaskCreate+0x44>
 80067fa:	2300      	movs	r3, #0
 80067fc:	61fb      	str	r3, [r7, #28]
 80067fe:	69fb      	ldr	r3, [r7, #28]
 8006800:	2b00      	cmp	r3, #0
 8006802:	d017      	beq.n	8006834 <xTaskCreate+0x7a>
 8006804:	69fb      	ldr	r3, [r7, #28]
 8006806:	2200      	movs	r2, #0
 8006808:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 800680c:	88fa      	ldrh	r2, [r7, #6]
 800680e:	2300      	movs	r3, #0
 8006810:	9303      	str	r3, [sp, #12]
 8006812:	69fb      	ldr	r3, [r7, #28]
 8006814:	9302      	str	r3, [sp, #8]
 8006816:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006818:	9301      	str	r3, [sp, #4]
 800681a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800681c:	9300      	str	r3, [sp, #0]
 800681e:	683b      	ldr	r3, [r7, #0]
 8006820:	68b9      	ldr	r1, [r7, #8]
 8006822:	68f8      	ldr	r0, [r7, #12]
 8006824:	f000 f80e 	bl	8006844 <prvInitialiseNewTask>
 8006828:	69f8      	ldr	r0, [r7, #28]
 800682a:	f000 f8a1 	bl	8006970 <prvAddNewTaskToReadyList>
 800682e:	2301      	movs	r3, #1
 8006830:	61bb      	str	r3, [r7, #24]
 8006832:	e002      	b.n	800683a <xTaskCreate+0x80>
 8006834:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8006838:	61bb      	str	r3, [r7, #24]
 800683a:	69bb      	ldr	r3, [r7, #24]
 800683c:	4618      	mov	r0, r3
 800683e:	3720      	adds	r7, #32
 8006840:	46bd      	mov	sp, r7
 8006842:	bd80      	pop	{r7, pc}

08006844 <prvInitialiseNewTask>:
 8006844:	b580      	push	{r7, lr}
 8006846:	b088      	sub	sp, #32
 8006848:	af00      	add	r7, sp, #0
 800684a:	60f8      	str	r0, [r7, #12]
 800684c:	60b9      	str	r1, [r7, #8]
 800684e:	607a      	str	r2, [r7, #4]
 8006850:	603b      	str	r3, [r7, #0]
 8006852:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006854:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800685c:	3b01      	subs	r3, #1
 800685e:	009b      	lsls	r3, r3, #2
 8006860:	4413      	add	r3, r2
 8006862:	61bb      	str	r3, [r7, #24]
 8006864:	69bb      	ldr	r3, [r7, #24]
 8006866:	f023 0307 	bic.w	r3, r3, #7
 800686a:	61bb      	str	r3, [r7, #24]
 800686c:	69bb      	ldr	r3, [r7, #24]
 800686e:	f003 0307 	and.w	r3, r3, #7
 8006872:	2b00      	cmp	r3, #0
 8006874:	d00a      	beq.n	800688c <prvInitialiseNewTask+0x48>
 8006876:	f04f 0350 	mov.w	r3, #80	; 0x50
 800687a:	f383 8811 	msr	BASEPRI, r3
 800687e:	f3bf 8f6f 	isb	sy
 8006882:	f3bf 8f4f 	dsb	sy
 8006886:	617b      	str	r3, [r7, #20]
 8006888:	bf00      	nop
 800688a:	e7fe      	b.n	800688a <prvInitialiseNewTask+0x46>
 800688c:	2300      	movs	r3, #0
 800688e:	61fb      	str	r3, [r7, #28]
 8006890:	e012      	b.n	80068b8 <prvInitialiseNewTask+0x74>
 8006892:	68ba      	ldr	r2, [r7, #8]
 8006894:	69fb      	ldr	r3, [r7, #28]
 8006896:	4413      	add	r3, r2
 8006898:	7819      	ldrb	r1, [r3, #0]
 800689a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800689c:	69fb      	ldr	r3, [r7, #28]
 800689e:	4413      	add	r3, r2
 80068a0:	3334      	adds	r3, #52	; 0x34
 80068a2:	460a      	mov	r2, r1
 80068a4:	701a      	strb	r2, [r3, #0]
 80068a6:	68ba      	ldr	r2, [r7, #8]
 80068a8:	69fb      	ldr	r3, [r7, #28]
 80068aa:	4413      	add	r3, r2
 80068ac:	781b      	ldrb	r3, [r3, #0]
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d006      	beq.n	80068c0 <prvInitialiseNewTask+0x7c>
 80068b2:	69fb      	ldr	r3, [r7, #28]
 80068b4:	3301      	adds	r3, #1
 80068b6:	61fb      	str	r3, [r7, #28]
 80068b8:	69fb      	ldr	r3, [r7, #28]
 80068ba:	2b0f      	cmp	r3, #15
 80068bc:	d9e9      	bls.n	8006892 <prvInitialiseNewTask+0x4e>
 80068be:	e000      	b.n	80068c2 <prvInitialiseNewTask+0x7e>
 80068c0:	bf00      	nop
 80068c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068c4:	2200      	movs	r2, #0
 80068c6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80068ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80068cc:	2b06      	cmp	r3, #6
 80068ce:	d901      	bls.n	80068d4 <prvInitialiseNewTask+0x90>
 80068d0:	2306      	movs	r3, #6
 80068d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80068d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068d6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80068d8:	62da      	str	r2, [r3, #44]	; 0x2c
 80068da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068dc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80068de:	645a      	str	r2, [r3, #68]	; 0x44
 80068e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068e2:	2200      	movs	r2, #0
 80068e4:	649a      	str	r2, [r3, #72]	; 0x48
 80068e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068e8:	3304      	adds	r3, #4
 80068ea:	4618      	mov	r0, r3
 80068ec:	f7ff fe79 	bl	80065e2 <vListInitialiseItem>
 80068f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068f2:	3318      	adds	r3, #24
 80068f4:	4618      	mov	r0, r3
 80068f6:	f7ff fe74 	bl	80065e2 <vListInitialiseItem>
 80068fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068fc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80068fe:	611a      	str	r2, [r3, #16]
 8006900:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006902:	f1c3 0207 	rsb	r2, r3, #7
 8006906:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006908:	619a      	str	r2, [r3, #24]
 800690a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800690c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800690e:	625a      	str	r2, [r3, #36]	; 0x24
 8006910:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006912:	2200      	movs	r2, #0
 8006914:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8006918:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800691a:	2200      	movs	r2, #0
 800691c:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8006920:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006922:	334c      	adds	r3, #76	; 0x4c
 8006924:	224c      	movs	r2, #76	; 0x4c
 8006926:	2100      	movs	r1, #0
 8006928:	4618      	mov	r0, r3
 800692a:	f001 fd64 	bl	80083f6 <memset>
 800692e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006930:	4a0c      	ldr	r2, [pc, #48]	; (8006964 <prvInitialiseNewTask+0x120>)
 8006932:	651a      	str	r2, [r3, #80]	; 0x50
 8006934:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006936:	4a0c      	ldr	r2, [pc, #48]	; (8006968 <prvInitialiseNewTask+0x124>)
 8006938:	655a      	str	r2, [r3, #84]	; 0x54
 800693a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800693c:	4a0b      	ldr	r2, [pc, #44]	; (800696c <prvInitialiseNewTask+0x128>)
 800693e:	659a      	str	r2, [r3, #88]	; 0x58
 8006940:	683a      	ldr	r2, [r7, #0]
 8006942:	68f9      	ldr	r1, [r7, #12]
 8006944:	69b8      	ldr	r0, [r7, #24]
 8006946:	f000 fc29 	bl	800719c <pxPortInitialiseStack>
 800694a:	4602      	mov	r2, r0
 800694c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800694e:	601a      	str	r2, [r3, #0]
 8006950:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006952:	2b00      	cmp	r3, #0
 8006954:	d002      	beq.n	800695c <prvInitialiseNewTask+0x118>
 8006956:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006958:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800695a:	601a      	str	r2, [r3, #0]
 800695c:	bf00      	nop
 800695e:	3720      	adds	r7, #32
 8006960:	46bd      	mov	sp, r7
 8006962:	bd80      	pop	{r7, pc}
 8006964:	2000153c 	.word	0x2000153c
 8006968:	200015a4 	.word	0x200015a4
 800696c:	2000160c 	.word	0x2000160c

08006970 <prvAddNewTaskToReadyList>:
 8006970:	b580      	push	{r7, lr}
 8006972:	b082      	sub	sp, #8
 8006974:	af00      	add	r7, sp, #0
 8006976:	6078      	str	r0, [r7, #4]
 8006978:	f000 fd00 	bl	800737c <vPortEnterCritical>
 800697c:	4b2a      	ldr	r3, [pc, #168]	; (8006a28 <prvAddNewTaskToReadyList+0xb8>)
 800697e:	681b      	ldr	r3, [r3, #0]
 8006980:	3301      	adds	r3, #1
 8006982:	4a29      	ldr	r2, [pc, #164]	; (8006a28 <prvAddNewTaskToReadyList+0xb8>)
 8006984:	6013      	str	r3, [r2, #0]
 8006986:	4b29      	ldr	r3, [pc, #164]	; (8006a2c <prvAddNewTaskToReadyList+0xbc>)
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	2b00      	cmp	r3, #0
 800698c:	d109      	bne.n	80069a2 <prvAddNewTaskToReadyList+0x32>
 800698e:	4a27      	ldr	r2, [pc, #156]	; (8006a2c <prvAddNewTaskToReadyList+0xbc>)
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	6013      	str	r3, [r2, #0]
 8006994:	4b24      	ldr	r3, [pc, #144]	; (8006a28 <prvAddNewTaskToReadyList+0xb8>)
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	2b01      	cmp	r3, #1
 800699a:	d110      	bne.n	80069be <prvAddNewTaskToReadyList+0x4e>
 800699c:	f000 fad2 	bl	8006f44 <prvInitialiseTaskLists>
 80069a0:	e00d      	b.n	80069be <prvAddNewTaskToReadyList+0x4e>
 80069a2:	4b23      	ldr	r3, [pc, #140]	; (8006a30 <prvAddNewTaskToReadyList+0xc0>)
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	2b00      	cmp	r3, #0
 80069a8:	d109      	bne.n	80069be <prvAddNewTaskToReadyList+0x4e>
 80069aa:	4b20      	ldr	r3, [pc, #128]	; (8006a2c <prvAddNewTaskToReadyList+0xbc>)
 80069ac:	681b      	ldr	r3, [r3, #0]
 80069ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80069b0:	687b      	ldr	r3, [r7, #4]
 80069b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069b4:	429a      	cmp	r2, r3
 80069b6:	d802      	bhi.n	80069be <prvAddNewTaskToReadyList+0x4e>
 80069b8:	4a1c      	ldr	r2, [pc, #112]	; (8006a2c <prvAddNewTaskToReadyList+0xbc>)
 80069ba:	687b      	ldr	r3, [r7, #4]
 80069bc:	6013      	str	r3, [r2, #0]
 80069be:	4b1d      	ldr	r3, [pc, #116]	; (8006a34 <prvAddNewTaskToReadyList+0xc4>)
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	3301      	adds	r3, #1
 80069c4:	4a1b      	ldr	r2, [pc, #108]	; (8006a34 <prvAddNewTaskToReadyList+0xc4>)
 80069c6:	6013      	str	r3, [r2, #0]
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069cc:	2201      	movs	r2, #1
 80069ce:	409a      	lsls	r2, r3
 80069d0:	4b19      	ldr	r3, [pc, #100]	; (8006a38 <prvAddNewTaskToReadyList+0xc8>)
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	4313      	orrs	r3, r2
 80069d6:	4a18      	ldr	r2, [pc, #96]	; (8006a38 <prvAddNewTaskToReadyList+0xc8>)
 80069d8:	6013      	str	r3, [r2, #0]
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80069de:	4613      	mov	r3, r2
 80069e0:	009b      	lsls	r3, r3, #2
 80069e2:	4413      	add	r3, r2
 80069e4:	009b      	lsls	r3, r3, #2
 80069e6:	4a15      	ldr	r2, [pc, #84]	; (8006a3c <prvAddNewTaskToReadyList+0xcc>)
 80069e8:	441a      	add	r2, r3
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	3304      	adds	r3, #4
 80069ee:	4619      	mov	r1, r3
 80069f0:	4610      	mov	r0, r2
 80069f2:	f7ff fe02 	bl	80065fa <vListInsertEnd>
 80069f6:	f000 fcf1 	bl	80073dc <vPortExitCritical>
 80069fa:	4b0d      	ldr	r3, [pc, #52]	; (8006a30 <prvAddNewTaskToReadyList+0xc0>)
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	2b00      	cmp	r3, #0
 8006a00:	d00e      	beq.n	8006a20 <prvAddNewTaskToReadyList+0xb0>
 8006a02:	4b0a      	ldr	r3, [pc, #40]	; (8006a2c <prvAddNewTaskToReadyList+0xbc>)
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a0c:	429a      	cmp	r2, r3
 8006a0e:	d207      	bcs.n	8006a20 <prvAddNewTaskToReadyList+0xb0>
 8006a10:	4b0b      	ldr	r3, [pc, #44]	; (8006a40 <prvAddNewTaskToReadyList+0xd0>)
 8006a12:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006a16:	601a      	str	r2, [r3, #0]
 8006a18:	f3bf 8f4f 	dsb	sy
 8006a1c:	f3bf 8f6f 	isb	sy
 8006a20:	bf00      	nop
 8006a22:	3708      	adds	r7, #8
 8006a24:	46bd      	mov	sp, r7
 8006a26:	bd80      	pop	{r7, pc}
 8006a28:	200008f0 	.word	0x200008f0
 8006a2c:	200007f0 	.word	0x200007f0
 8006a30:	200008fc 	.word	0x200008fc
 8006a34:	2000090c 	.word	0x2000090c
 8006a38:	200008f8 	.word	0x200008f8
 8006a3c:	200007f4 	.word	0x200007f4
 8006a40:	e000ed04 	.word	0xe000ed04

08006a44 <vTaskDelay>:
 8006a44:	b580      	push	{r7, lr}
 8006a46:	b084      	sub	sp, #16
 8006a48:	af00      	add	r7, sp, #0
 8006a4a:	6078      	str	r0, [r7, #4]
 8006a4c:	2300      	movs	r3, #0
 8006a4e:	60fb      	str	r3, [r7, #12]
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	2b00      	cmp	r3, #0
 8006a54:	d017      	beq.n	8006a86 <vTaskDelay+0x42>
 8006a56:	4b13      	ldr	r3, [pc, #76]	; (8006aa4 <vTaskDelay+0x60>)
 8006a58:	681b      	ldr	r3, [r3, #0]
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	d00a      	beq.n	8006a74 <vTaskDelay+0x30>
 8006a5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a62:	f383 8811 	msr	BASEPRI, r3
 8006a66:	f3bf 8f6f 	isb	sy
 8006a6a:	f3bf 8f4f 	dsb	sy
 8006a6e:	60bb      	str	r3, [r7, #8]
 8006a70:	bf00      	nop
 8006a72:	e7fe      	b.n	8006a72 <vTaskDelay+0x2e>
 8006a74:	f000 f884 	bl	8006b80 <vTaskSuspendAll>
 8006a78:	2100      	movs	r1, #0
 8006a7a:	6878      	ldr	r0, [r7, #4]
 8006a7c:	f000 fb28 	bl	80070d0 <prvAddCurrentTaskToDelayedList>
 8006a80:	f000 f88c 	bl	8006b9c <xTaskResumeAll>
 8006a84:	60f8      	str	r0, [r7, #12]
 8006a86:	68fb      	ldr	r3, [r7, #12]
 8006a88:	2b00      	cmp	r3, #0
 8006a8a:	d107      	bne.n	8006a9c <vTaskDelay+0x58>
 8006a8c:	4b06      	ldr	r3, [pc, #24]	; (8006aa8 <vTaskDelay+0x64>)
 8006a8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006a92:	601a      	str	r2, [r3, #0]
 8006a94:	f3bf 8f4f 	dsb	sy
 8006a98:	f3bf 8f6f 	isb	sy
 8006a9c:	bf00      	nop
 8006a9e:	3710      	adds	r7, #16
 8006aa0:	46bd      	mov	sp, r7
 8006aa2:	bd80      	pop	{r7, pc}
 8006aa4:	20000918 	.word	0x20000918
 8006aa8:	e000ed04 	.word	0xe000ed04

08006aac <vTaskStartScheduler>:
 8006aac:	b580      	push	{r7, lr}
 8006aae:	b08a      	sub	sp, #40	; 0x28
 8006ab0:	af04      	add	r7, sp, #16
 8006ab2:	2300      	movs	r3, #0
 8006ab4:	60bb      	str	r3, [r7, #8]
 8006ab6:	2300      	movs	r3, #0
 8006ab8:	607b      	str	r3, [r7, #4]
 8006aba:	463a      	mov	r2, r7
 8006abc:	1d39      	adds	r1, r7, #4
 8006abe:	f107 0308 	add.w	r3, r7, #8
 8006ac2:	4618      	mov	r0, r3
 8006ac4:	f7fb fa1e 	bl	8001f04 <vApplicationGetIdleTaskMemory>
 8006ac8:	6839      	ldr	r1, [r7, #0]
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	68ba      	ldr	r2, [r7, #8]
 8006ace:	9202      	str	r2, [sp, #8]
 8006ad0:	9301      	str	r3, [sp, #4]
 8006ad2:	2300      	movs	r3, #0
 8006ad4:	9300      	str	r3, [sp, #0]
 8006ad6:	2300      	movs	r3, #0
 8006ad8:	460a      	mov	r2, r1
 8006ada:	4921      	ldr	r1, [pc, #132]	; (8006b60 <vTaskStartScheduler+0xb4>)
 8006adc:	4821      	ldr	r0, [pc, #132]	; (8006b64 <vTaskStartScheduler+0xb8>)
 8006ade:	f7ff fe10 	bl	8006702 <xTaskCreateStatic>
 8006ae2:	4603      	mov	r3, r0
 8006ae4:	4a20      	ldr	r2, [pc, #128]	; (8006b68 <vTaskStartScheduler+0xbc>)
 8006ae6:	6013      	str	r3, [r2, #0]
 8006ae8:	4b1f      	ldr	r3, [pc, #124]	; (8006b68 <vTaskStartScheduler+0xbc>)
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	d002      	beq.n	8006af6 <vTaskStartScheduler+0x4a>
 8006af0:	2301      	movs	r3, #1
 8006af2:	617b      	str	r3, [r7, #20]
 8006af4:	e001      	b.n	8006afa <vTaskStartScheduler+0x4e>
 8006af6:	2300      	movs	r3, #0
 8006af8:	617b      	str	r3, [r7, #20]
 8006afa:	697b      	ldr	r3, [r7, #20]
 8006afc:	2b01      	cmp	r3, #1
 8006afe:	d11b      	bne.n	8006b38 <vTaskStartScheduler+0x8c>
 8006b00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b04:	f383 8811 	msr	BASEPRI, r3
 8006b08:	f3bf 8f6f 	isb	sy
 8006b0c:	f3bf 8f4f 	dsb	sy
 8006b10:	613b      	str	r3, [r7, #16]
 8006b12:	bf00      	nop
 8006b14:	4b15      	ldr	r3, [pc, #84]	; (8006b6c <vTaskStartScheduler+0xc0>)
 8006b16:	681b      	ldr	r3, [r3, #0]
 8006b18:	334c      	adds	r3, #76	; 0x4c
 8006b1a:	4a15      	ldr	r2, [pc, #84]	; (8006b70 <vTaskStartScheduler+0xc4>)
 8006b1c:	6013      	str	r3, [r2, #0]
 8006b1e:	4b15      	ldr	r3, [pc, #84]	; (8006b74 <vTaskStartScheduler+0xc8>)
 8006b20:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006b24:	601a      	str	r2, [r3, #0]
 8006b26:	4b14      	ldr	r3, [pc, #80]	; (8006b78 <vTaskStartScheduler+0xcc>)
 8006b28:	2201      	movs	r2, #1
 8006b2a:	601a      	str	r2, [r3, #0]
 8006b2c:	4b13      	ldr	r3, [pc, #76]	; (8006b7c <vTaskStartScheduler+0xd0>)
 8006b2e:	2200      	movs	r2, #0
 8006b30:	601a      	str	r2, [r3, #0]
 8006b32:	f000 fbb1 	bl	8007298 <xPortStartScheduler>
 8006b36:	e00e      	b.n	8006b56 <vTaskStartScheduler+0xaa>
 8006b38:	697b      	ldr	r3, [r7, #20]
 8006b3a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006b3e:	d10a      	bne.n	8006b56 <vTaskStartScheduler+0xaa>
 8006b40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b44:	f383 8811 	msr	BASEPRI, r3
 8006b48:	f3bf 8f6f 	isb	sy
 8006b4c:	f3bf 8f4f 	dsb	sy
 8006b50:	60fb      	str	r3, [r7, #12]
 8006b52:	bf00      	nop
 8006b54:	e7fe      	b.n	8006b54 <vTaskStartScheduler+0xa8>
 8006b56:	bf00      	nop
 8006b58:	3718      	adds	r7, #24
 8006b5a:	46bd      	mov	sp, r7
 8006b5c:	bd80      	pop	{r7, pc}
 8006b5e:	bf00      	nop
 8006b60:	0800a3b8 	.word	0x0800a3b8
 8006b64:	08006f15 	.word	0x08006f15
 8006b68:	20000914 	.word	0x20000914
 8006b6c:	200007f0 	.word	0x200007f0
 8006b70:	20000068 	.word	0x20000068
 8006b74:	20000910 	.word	0x20000910
 8006b78:	200008fc 	.word	0x200008fc
 8006b7c:	200008f4 	.word	0x200008f4

08006b80 <vTaskSuspendAll>:
 8006b80:	b480      	push	{r7}
 8006b82:	af00      	add	r7, sp, #0
 8006b84:	4b04      	ldr	r3, [pc, #16]	; (8006b98 <vTaskSuspendAll+0x18>)
 8006b86:	681b      	ldr	r3, [r3, #0]
 8006b88:	3301      	adds	r3, #1
 8006b8a:	4a03      	ldr	r2, [pc, #12]	; (8006b98 <vTaskSuspendAll+0x18>)
 8006b8c:	6013      	str	r3, [r2, #0]
 8006b8e:	bf00      	nop
 8006b90:	46bd      	mov	sp, r7
 8006b92:	bc80      	pop	{r7}
 8006b94:	4770      	bx	lr
 8006b96:	bf00      	nop
 8006b98:	20000918 	.word	0x20000918

08006b9c <xTaskResumeAll>:
 8006b9c:	b580      	push	{r7, lr}
 8006b9e:	b084      	sub	sp, #16
 8006ba0:	af00      	add	r7, sp, #0
 8006ba2:	2300      	movs	r3, #0
 8006ba4:	60fb      	str	r3, [r7, #12]
 8006ba6:	2300      	movs	r3, #0
 8006ba8:	60bb      	str	r3, [r7, #8]
 8006baa:	4b41      	ldr	r3, [pc, #260]	; (8006cb0 <xTaskResumeAll+0x114>)
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	2b00      	cmp	r3, #0
 8006bb0:	d10a      	bne.n	8006bc8 <xTaskResumeAll+0x2c>
 8006bb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006bb6:	f383 8811 	msr	BASEPRI, r3
 8006bba:	f3bf 8f6f 	isb	sy
 8006bbe:	f3bf 8f4f 	dsb	sy
 8006bc2:	603b      	str	r3, [r7, #0]
 8006bc4:	bf00      	nop
 8006bc6:	e7fe      	b.n	8006bc6 <xTaskResumeAll+0x2a>
 8006bc8:	f000 fbd8 	bl	800737c <vPortEnterCritical>
 8006bcc:	4b38      	ldr	r3, [pc, #224]	; (8006cb0 <xTaskResumeAll+0x114>)
 8006bce:	681b      	ldr	r3, [r3, #0]
 8006bd0:	3b01      	subs	r3, #1
 8006bd2:	4a37      	ldr	r2, [pc, #220]	; (8006cb0 <xTaskResumeAll+0x114>)
 8006bd4:	6013      	str	r3, [r2, #0]
 8006bd6:	4b36      	ldr	r3, [pc, #216]	; (8006cb0 <xTaskResumeAll+0x114>)
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	2b00      	cmp	r3, #0
 8006bdc:	d161      	bne.n	8006ca2 <xTaskResumeAll+0x106>
 8006bde:	4b35      	ldr	r3, [pc, #212]	; (8006cb4 <xTaskResumeAll+0x118>)
 8006be0:	681b      	ldr	r3, [r3, #0]
 8006be2:	2b00      	cmp	r3, #0
 8006be4:	d05d      	beq.n	8006ca2 <xTaskResumeAll+0x106>
 8006be6:	e02e      	b.n	8006c46 <xTaskResumeAll+0xaa>
 8006be8:	4b33      	ldr	r3, [pc, #204]	; (8006cb8 <xTaskResumeAll+0x11c>)
 8006bea:	68db      	ldr	r3, [r3, #12]
 8006bec:	68db      	ldr	r3, [r3, #12]
 8006bee:	60fb      	str	r3, [r7, #12]
 8006bf0:	68fb      	ldr	r3, [r7, #12]
 8006bf2:	3318      	adds	r3, #24
 8006bf4:	4618      	mov	r0, r3
 8006bf6:	f7ff fd5b 	bl	80066b0 <uxListRemove>
 8006bfa:	68fb      	ldr	r3, [r7, #12]
 8006bfc:	3304      	adds	r3, #4
 8006bfe:	4618      	mov	r0, r3
 8006c00:	f7ff fd56 	bl	80066b0 <uxListRemove>
 8006c04:	68fb      	ldr	r3, [r7, #12]
 8006c06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c08:	2201      	movs	r2, #1
 8006c0a:	409a      	lsls	r2, r3
 8006c0c:	4b2b      	ldr	r3, [pc, #172]	; (8006cbc <xTaskResumeAll+0x120>)
 8006c0e:	681b      	ldr	r3, [r3, #0]
 8006c10:	4313      	orrs	r3, r2
 8006c12:	4a2a      	ldr	r2, [pc, #168]	; (8006cbc <xTaskResumeAll+0x120>)
 8006c14:	6013      	str	r3, [r2, #0]
 8006c16:	68fb      	ldr	r3, [r7, #12]
 8006c18:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006c1a:	4613      	mov	r3, r2
 8006c1c:	009b      	lsls	r3, r3, #2
 8006c1e:	4413      	add	r3, r2
 8006c20:	009b      	lsls	r3, r3, #2
 8006c22:	4a27      	ldr	r2, [pc, #156]	; (8006cc0 <xTaskResumeAll+0x124>)
 8006c24:	441a      	add	r2, r3
 8006c26:	68fb      	ldr	r3, [r7, #12]
 8006c28:	3304      	adds	r3, #4
 8006c2a:	4619      	mov	r1, r3
 8006c2c:	4610      	mov	r0, r2
 8006c2e:	f7ff fce4 	bl	80065fa <vListInsertEnd>
 8006c32:	68fb      	ldr	r3, [r7, #12]
 8006c34:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006c36:	4b23      	ldr	r3, [pc, #140]	; (8006cc4 <xTaskResumeAll+0x128>)
 8006c38:	681b      	ldr	r3, [r3, #0]
 8006c3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c3c:	429a      	cmp	r2, r3
 8006c3e:	d302      	bcc.n	8006c46 <xTaskResumeAll+0xaa>
 8006c40:	4b21      	ldr	r3, [pc, #132]	; (8006cc8 <xTaskResumeAll+0x12c>)
 8006c42:	2201      	movs	r2, #1
 8006c44:	601a      	str	r2, [r3, #0]
 8006c46:	4b1c      	ldr	r3, [pc, #112]	; (8006cb8 <xTaskResumeAll+0x11c>)
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	d1cc      	bne.n	8006be8 <xTaskResumeAll+0x4c>
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d001      	beq.n	8006c58 <xTaskResumeAll+0xbc>
 8006c54:	f000 fa18 	bl	8007088 <prvResetNextTaskUnblockTime>
 8006c58:	4b1c      	ldr	r3, [pc, #112]	; (8006ccc <xTaskResumeAll+0x130>)
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	607b      	str	r3, [r7, #4]
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	2b00      	cmp	r3, #0
 8006c62:	d010      	beq.n	8006c86 <xTaskResumeAll+0xea>
 8006c64:	f000 f836 	bl	8006cd4 <xTaskIncrementTick>
 8006c68:	4603      	mov	r3, r0
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d002      	beq.n	8006c74 <xTaskResumeAll+0xd8>
 8006c6e:	4b16      	ldr	r3, [pc, #88]	; (8006cc8 <xTaskResumeAll+0x12c>)
 8006c70:	2201      	movs	r2, #1
 8006c72:	601a      	str	r2, [r3, #0]
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	3b01      	subs	r3, #1
 8006c78:	607b      	str	r3, [r7, #4]
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	2b00      	cmp	r3, #0
 8006c7e:	d1f1      	bne.n	8006c64 <xTaskResumeAll+0xc8>
 8006c80:	4b12      	ldr	r3, [pc, #72]	; (8006ccc <xTaskResumeAll+0x130>)
 8006c82:	2200      	movs	r2, #0
 8006c84:	601a      	str	r2, [r3, #0]
 8006c86:	4b10      	ldr	r3, [pc, #64]	; (8006cc8 <xTaskResumeAll+0x12c>)
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	2b00      	cmp	r3, #0
 8006c8c:	d009      	beq.n	8006ca2 <xTaskResumeAll+0x106>
 8006c8e:	2301      	movs	r3, #1
 8006c90:	60bb      	str	r3, [r7, #8]
 8006c92:	4b0f      	ldr	r3, [pc, #60]	; (8006cd0 <xTaskResumeAll+0x134>)
 8006c94:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c98:	601a      	str	r2, [r3, #0]
 8006c9a:	f3bf 8f4f 	dsb	sy
 8006c9e:	f3bf 8f6f 	isb	sy
 8006ca2:	f000 fb9b 	bl	80073dc <vPortExitCritical>
 8006ca6:	68bb      	ldr	r3, [r7, #8]
 8006ca8:	4618      	mov	r0, r3
 8006caa:	3710      	adds	r7, #16
 8006cac:	46bd      	mov	sp, r7
 8006cae:	bd80      	pop	{r7, pc}
 8006cb0:	20000918 	.word	0x20000918
 8006cb4:	200008f0 	.word	0x200008f0
 8006cb8:	200008b0 	.word	0x200008b0
 8006cbc:	200008f8 	.word	0x200008f8
 8006cc0:	200007f4 	.word	0x200007f4
 8006cc4:	200007f0 	.word	0x200007f0
 8006cc8:	20000904 	.word	0x20000904
 8006ccc:	20000900 	.word	0x20000900
 8006cd0:	e000ed04 	.word	0xe000ed04

08006cd4 <xTaskIncrementTick>:
 8006cd4:	b580      	push	{r7, lr}
 8006cd6:	b086      	sub	sp, #24
 8006cd8:	af00      	add	r7, sp, #0
 8006cda:	2300      	movs	r3, #0
 8006cdc:	617b      	str	r3, [r7, #20]
 8006cde:	4b51      	ldr	r3, [pc, #324]	; (8006e24 <xTaskIncrementTick+0x150>)
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	f040 808d 	bne.w	8006e02 <xTaskIncrementTick+0x12e>
 8006ce8:	4b4f      	ldr	r3, [pc, #316]	; (8006e28 <xTaskIncrementTick+0x154>)
 8006cea:	681b      	ldr	r3, [r3, #0]
 8006cec:	3301      	adds	r3, #1
 8006cee:	613b      	str	r3, [r7, #16]
 8006cf0:	4a4d      	ldr	r2, [pc, #308]	; (8006e28 <xTaskIncrementTick+0x154>)
 8006cf2:	693b      	ldr	r3, [r7, #16]
 8006cf4:	6013      	str	r3, [r2, #0]
 8006cf6:	693b      	ldr	r3, [r7, #16]
 8006cf8:	2b00      	cmp	r3, #0
 8006cfa:	d120      	bne.n	8006d3e <xTaskIncrementTick+0x6a>
 8006cfc:	4b4b      	ldr	r3, [pc, #300]	; (8006e2c <xTaskIncrementTick+0x158>)
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	681b      	ldr	r3, [r3, #0]
 8006d02:	2b00      	cmp	r3, #0
 8006d04:	d00a      	beq.n	8006d1c <xTaskIncrementTick+0x48>
 8006d06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d0a:	f383 8811 	msr	BASEPRI, r3
 8006d0e:	f3bf 8f6f 	isb	sy
 8006d12:	f3bf 8f4f 	dsb	sy
 8006d16:	603b      	str	r3, [r7, #0]
 8006d18:	bf00      	nop
 8006d1a:	e7fe      	b.n	8006d1a <xTaskIncrementTick+0x46>
 8006d1c:	4b43      	ldr	r3, [pc, #268]	; (8006e2c <xTaskIncrementTick+0x158>)
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	60fb      	str	r3, [r7, #12]
 8006d22:	4b43      	ldr	r3, [pc, #268]	; (8006e30 <xTaskIncrementTick+0x15c>)
 8006d24:	681b      	ldr	r3, [r3, #0]
 8006d26:	4a41      	ldr	r2, [pc, #260]	; (8006e2c <xTaskIncrementTick+0x158>)
 8006d28:	6013      	str	r3, [r2, #0]
 8006d2a:	4a41      	ldr	r2, [pc, #260]	; (8006e30 <xTaskIncrementTick+0x15c>)
 8006d2c:	68fb      	ldr	r3, [r7, #12]
 8006d2e:	6013      	str	r3, [r2, #0]
 8006d30:	4b40      	ldr	r3, [pc, #256]	; (8006e34 <xTaskIncrementTick+0x160>)
 8006d32:	681b      	ldr	r3, [r3, #0]
 8006d34:	3301      	adds	r3, #1
 8006d36:	4a3f      	ldr	r2, [pc, #252]	; (8006e34 <xTaskIncrementTick+0x160>)
 8006d38:	6013      	str	r3, [r2, #0]
 8006d3a:	f000 f9a5 	bl	8007088 <prvResetNextTaskUnblockTime>
 8006d3e:	4b3e      	ldr	r3, [pc, #248]	; (8006e38 <xTaskIncrementTick+0x164>)
 8006d40:	681b      	ldr	r3, [r3, #0]
 8006d42:	693a      	ldr	r2, [r7, #16]
 8006d44:	429a      	cmp	r2, r3
 8006d46:	d34d      	bcc.n	8006de4 <xTaskIncrementTick+0x110>
 8006d48:	4b38      	ldr	r3, [pc, #224]	; (8006e2c <xTaskIncrementTick+0x158>)
 8006d4a:	681b      	ldr	r3, [r3, #0]
 8006d4c:	681b      	ldr	r3, [r3, #0]
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d101      	bne.n	8006d56 <xTaskIncrementTick+0x82>
 8006d52:	2301      	movs	r3, #1
 8006d54:	e000      	b.n	8006d58 <xTaskIncrementTick+0x84>
 8006d56:	2300      	movs	r3, #0
 8006d58:	2b00      	cmp	r3, #0
 8006d5a:	d004      	beq.n	8006d66 <xTaskIncrementTick+0x92>
 8006d5c:	4b36      	ldr	r3, [pc, #216]	; (8006e38 <xTaskIncrementTick+0x164>)
 8006d5e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006d62:	601a      	str	r2, [r3, #0]
 8006d64:	e03e      	b.n	8006de4 <xTaskIncrementTick+0x110>
 8006d66:	4b31      	ldr	r3, [pc, #196]	; (8006e2c <xTaskIncrementTick+0x158>)
 8006d68:	681b      	ldr	r3, [r3, #0]
 8006d6a:	68db      	ldr	r3, [r3, #12]
 8006d6c:	68db      	ldr	r3, [r3, #12]
 8006d6e:	60bb      	str	r3, [r7, #8]
 8006d70:	68bb      	ldr	r3, [r7, #8]
 8006d72:	685b      	ldr	r3, [r3, #4]
 8006d74:	607b      	str	r3, [r7, #4]
 8006d76:	693a      	ldr	r2, [r7, #16]
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	429a      	cmp	r2, r3
 8006d7c:	d203      	bcs.n	8006d86 <xTaskIncrementTick+0xb2>
 8006d7e:	4a2e      	ldr	r2, [pc, #184]	; (8006e38 <xTaskIncrementTick+0x164>)
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	6013      	str	r3, [r2, #0]
 8006d84:	e02e      	b.n	8006de4 <xTaskIncrementTick+0x110>
 8006d86:	68bb      	ldr	r3, [r7, #8]
 8006d88:	3304      	adds	r3, #4
 8006d8a:	4618      	mov	r0, r3
 8006d8c:	f7ff fc90 	bl	80066b0 <uxListRemove>
 8006d90:	68bb      	ldr	r3, [r7, #8]
 8006d92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	d004      	beq.n	8006da2 <xTaskIncrementTick+0xce>
 8006d98:	68bb      	ldr	r3, [r7, #8]
 8006d9a:	3318      	adds	r3, #24
 8006d9c:	4618      	mov	r0, r3
 8006d9e:	f7ff fc87 	bl	80066b0 <uxListRemove>
 8006da2:	68bb      	ldr	r3, [r7, #8]
 8006da4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006da6:	2201      	movs	r2, #1
 8006da8:	409a      	lsls	r2, r3
 8006daa:	4b24      	ldr	r3, [pc, #144]	; (8006e3c <xTaskIncrementTick+0x168>)
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	4313      	orrs	r3, r2
 8006db0:	4a22      	ldr	r2, [pc, #136]	; (8006e3c <xTaskIncrementTick+0x168>)
 8006db2:	6013      	str	r3, [r2, #0]
 8006db4:	68bb      	ldr	r3, [r7, #8]
 8006db6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006db8:	4613      	mov	r3, r2
 8006dba:	009b      	lsls	r3, r3, #2
 8006dbc:	4413      	add	r3, r2
 8006dbe:	009b      	lsls	r3, r3, #2
 8006dc0:	4a1f      	ldr	r2, [pc, #124]	; (8006e40 <xTaskIncrementTick+0x16c>)
 8006dc2:	441a      	add	r2, r3
 8006dc4:	68bb      	ldr	r3, [r7, #8]
 8006dc6:	3304      	adds	r3, #4
 8006dc8:	4619      	mov	r1, r3
 8006dca:	4610      	mov	r0, r2
 8006dcc:	f7ff fc15 	bl	80065fa <vListInsertEnd>
 8006dd0:	68bb      	ldr	r3, [r7, #8]
 8006dd2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006dd4:	4b1b      	ldr	r3, [pc, #108]	; (8006e44 <xTaskIncrementTick+0x170>)
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006dda:	429a      	cmp	r2, r3
 8006ddc:	d3b4      	bcc.n	8006d48 <xTaskIncrementTick+0x74>
 8006dde:	2301      	movs	r3, #1
 8006de0:	617b      	str	r3, [r7, #20]
 8006de2:	e7b1      	b.n	8006d48 <xTaskIncrementTick+0x74>
 8006de4:	4b17      	ldr	r3, [pc, #92]	; (8006e44 <xTaskIncrementTick+0x170>)
 8006de6:	681b      	ldr	r3, [r3, #0]
 8006de8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006dea:	4915      	ldr	r1, [pc, #84]	; (8006e40 <xTaskIncrementTick+0x16c>)
 8006dec:	4613      	mov	r3, r2
 8006dee:	009b      	lsls	r3, r3, #2
 8006df0:	4413      	add	r3, r2
 8006df2:	009b      	lsls	r3, r3, #2
 8006df4:	440b      	add	r3, r1
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	2b01      	cmp	r3, #1
 8006dfa:	d907      	bls.n	8006e0c <xTaskIncrementTick+0x138>
 8006dfc:	2301      	movs	r3, #1
 8006dfe:	617b      	str	r3, [r7, #20]
 8006e00:	e004      	b.n	8006e0c <xTaskIncrementTick+0x138>
 8006e02:	4b11      	ldr	r3, [pc, #68]	; (8006e48 <xTaskIncrementTick+0x174>)
 8006e04:	681b      	ldr	r3, [r3, #0]
 8006e06:	3301      	adds	r3, #1
 8006e08:	4a0f      	ldr	r2, [pc, #60]	; (8006e48 <xTaskIncrementTick+0x174>)
 8006e0a:	6013      	str	r3, [r2, #0]
 8006e0c:	4b0f      	ldr	r3, [pc, #60]	; (8006e4c <xTaskIncrementTick+0x178>)
 8006e0e:	681b      	ldr	r3, [r3, #0]
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d001      	beq.n	8006e18 <xTaskIncrementTick+0x144>
 8006e14:	2301      	movs	r3, #1
 8006e16:	617b      	str	r3, [r7, #20]
 8006e18:	697b      	ldr	r3, [r7, #20]
 8006e1a:	4618      	mov	r0, r3
 8006e1c:	3718      	adds	r7, #24
 8006e1e:	46bd      	mov	sp, r7
 8006e20:	bd80      	pop	{r7, pc}
 8006e22:	bf00      	nop
 8006e24:	20000918 	.word	0x20000918
 8006e28:	200008f4 	.word	0x200008f4
 8006e2c:	200008a8 	.word	0x200008a8
 8006e30:	200008ac 	.word	0x200008ac
 8006e34:	20000908 	.word	0x20000908
 8006e38:	20000910 	.word	0x20000910
 8006e3c:	200008f8 	.word	0x200008f8
 8006e40:	200007f4 	.word	0x200007f4
 8006e44:	200007f0 	.word	0x200007f0
 8006e48:	20000900 	.word	0x20000900
 8006e4c:	20000904 	.word	0x20000904

08006e50 <vTaskSwitchContext>:
 8006e50:	b480      	push	{r7}
 8006e52:	b087      	sub	sp, #28
 8006e54:	af00      	add	r7, sp, #0
 8006e56:	4b29      	ldr	r3, [pc, #164]	; (8006efc <vTaskSwitchContext+0xac>)
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	2b00      	cmp	r3, #0
 8006e5c:	d003      	beq.n	8006e66 <vTaskSwitchContext+0x16>
 8006e5e:	4b28      	ldr	r3, [pc, #160]	; (8006f00 <vTaskSwitchContext+0xb0>)
 8006e60:	2201      	movs	r2, #1
 8006e62:	601a      	str	r2, [r3, #0]
 8006e64:	e044      	b.n	8006ef0 <vTaskSwitchContext+0xa0>
 8006e66:	4b26      	ldr	r3, [pc, #152]	; (8006f00 <vTaskSwitchContext+0xb0>)
 8006e68:	2200      	movs	r2, #0
 8006e6a:	601a      	str	r2, [r3, #0]
 8006e6c:	4b25      	ldr	r3, [pc, #148]	; (8006f04 <vTaskSwitchContext+0xb4>)
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	60fb      	str	r3, [r7, #12]
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	fab3 f383 	clz	r3, r3
 8006e78:	72fb      	strb	r3, [r7, #11]
 8006e7a:	7afb      	ldrb	r3, [r7, #11]
 8006e7c:	f1c3 031f 	rsb	r3, r3, #31
 8006e80:	617b      	str	r3, [r7, #20]
 8006e82:	4921      	ldr	r1, [pc, #132]	; (8006f08 <vTaskSwitchContext+0xb8>)
 8006e84:	697a      	ldr	r2, [r7, #20]
 8006e86:	4613      	mov	r3, r2
 8006e88:	009b      	lsls	r3, r3, #2
 8006e8a:	4413      	add	r3, r2
 8006e8c:	009b      	lsls	r3, r3, #2
 8006e8e:	440b      	add	r3, r1
 8006e90:	681b      	ldr	r3, [r3, #0]
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d10a      	bne.n	8006eac <vTaskSwitchContext+0x5c>
 8006e96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e9a:	f383 8811 	msr	BASEPRI, r3
 8006e9e:	f3bf 8f6f 	isb	sy
 8006ea2:	f3bf 8f4f 	dsb	sy
 8006ea6:	607b      	str	r3, [r7, #4]
 8006ea8:	bf00      	nop
 8006eaa:	e7fe      	b.n	8006eaa <vTaskSwitchContext+0x5a>
 8006eac:	697a      	ldr	r2, [r7, #20]
 8006eae:	4613      	mov	r3, r2
 8006eb0:	009b      	lsls	r3, r3, #2
 8006eb2:	4413      	add	r3, r2
 8006eb4:	009b      	lsls	r3, r3, #2
 8006eb6:	4a14      	ldr	r2, [pc, #80]	; (8006f08 <vTaskSwitchContext+0xb8>)
 8006eb8:	4413      	add	r3, r2
 8006eba:	613b      	str	r3, [r7, #16]
 8006ebc:	693b      	ldr	r3, [r7, #16]
 8006ebe:	685b      	ldr	r3, [r3, #4]
 8006ec0:	685a      	ldr	r2, [r3, #4]
 8006ec2:	693b      	ldr	r3, [r7, #16]
 8006ec4:	605a      	str	r2, [r3, #4]
 8006ec6:	693b      	ldr	r3, [r7, #16]
 8006ec8:	685a      	ldr	r2, [r3, #4]
 8006eca:	693b      	ldr	r3, [r7, #16]
 8006ecc:	3308      	adds	r3, #8
 8006ece:	429a      	cmp	r2, r3
 8006ed0:	d104      	bne.n	8006edc <vTaskSwitchContext+0x8c>
 8006ed2:	693b      	ldr	r3, [r7, #16]
 8006ed4:	685b      	ldr	r3, [r3, #4]
 8006ed6:	685a      	ldr	r2, [r3, #4]
 8006ed8:	693b      	ldr	r3, [r7, #16]
 8006eda:	605a      	str	r2, [r3, #4]
 8006edc:	693b      	ldr	r3, [r7, #16]
 8006ede:	685b      	ldr	r3, [r3, #4]
 8006ee0:	68db      	ldr	r3, [r3, #12]
 8006ee2:	4a0a      	ldr	r2, [pc, #40]	; (8006f0c <vTaskSwitchContext+0xbc>)
 8006ee4:	6013      	str	r3, [r2, #0]
 8006ee6:	4b09      	ldr	r3, [pc, #36]	; (8006f0c <vTaskSwitchContext+0xbc>)
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	334c      	adds	r3, #76	; 0x4c
 8006eec:	4a08      	ldr	r2, [pc, #32]	; (8006f10 <vTaskSwitchContext+0xc0>)
 8006eee:	6013      	str	r3, [r2, #0]
 8006ef0:	bf00      	nop
 8006ef2:	371c      	adds	r7, #28
 8006ef4:	46bd      	mov	sp, r7
 8006ef6:	bc80      	pop	{r7}
 8006ef8:	4770      	bx	lr
 8006efa:	bf00      	nop
 8006efc:	20000918 	.word	0x20000918
 8006f00:	20000904 	.word	0x20000904
 8006f04:	200008f8 	.word	0x200008f8
 8006f08:	200007f4 	.word	0x200007f4
 8006f0c:	200007f0 	.word	0x200007f0
 8006f10:	20000068 	.word	0x20000068

08006f14 <prvIdleTask>:
 8006f14:	b580      	push	{r7, lr}
 8006f16:	b082      	sub	sp, #8
 8006f18:	af00      	add	r7, sp, #0
 8006f1a:	6078      	str	r0, [r7, #4]
 8006f1c:	f000 f852 	bl	8006fc4 <prvCheckTasksWaitingTermination>
 8006f20:	4b06      	ldr	r3, [pc, #24]	; (8006f3c <prvIdleTask+0x28>)
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	2b01      	cmp	r3, #1
 8006f26:	d9f9      	bls.n	8006f1c <prvIdleTask+0x8>
 8006f28:	4b05      	ldr	r3, [pc, #20]	; (8006f40 <prvIdleTask+0x2c>)
 8006f2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f2e:	601a      	str	r2, [r3, #0]
 8006f30:	f3bf 8f4f 	dsb	sy
 8006f34:	f3bf 8f6f 	isb	sy
 8006f38:	e7f0      	b.n	8006f1c <prvIdleTask+0x8>
 8006f3a:	bf00      	nop
 8006f3c:	200007f4 	.word	0x200007f4
 8006f40:	e000ed04 	.word	0xe000ed04

08006f44 <prvInitialiseTaskLists>:
 8006f44:	b580      	push	{r7, lr}
 8006f46:	b082      	sub	sp, #8
 8006f48:	af00      	add	r7, sp, #0
 8006f4a:	2300      	movs	r3, #0
 8006f4c:	607b      	str	r3, [r7, #4]
 8006f4e:	e00c      	b.n	8006f6a <prvInitialiseTaskLists+0x26>
 8006f50:	687a      	ldr	r2, [r7, #4]
 8006f52:	4613      	mov	r3, r2
 8006f54:	009b      	lsls	r3, r3, #2
 8006f56:	4413      	add	r3, r2
 8006f58:	009b      	lsls	r3, r3, #2
 8006f5a:	4a12      	ldr	r2, [pc, #72]	; (8006fa4 <prvInitialiseTaskLists+0x60>)
 8006f5c:	4413      	add	r3, r2
 8006f5e:	4618      	mov	r0, r3
 8006f60:	f7ff fb20 	bl	80065a4 <vListInitialise>
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	3301      	adds	r3, #1
 8006f68:	607b      	str	r3, [r7, #4]
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	2b06      	cmp	r3, #6
 8006f6e:	d9ef      	bls.n	8006f50 <prvInitialiseTaskLists+0xc>
 8006f70:	480d      	ldr	r0, [pc, #52]	; (8006fa8 <prvInitialiseTaskLists+0x64>)
 8006f72:	f7ff fb17 	bl	80065a4 <vListInitialise>
 8006f76:	480d      	ldr	r0, [pc, #52]	; (8006fac <prvInitialiseTaskLists+0x68>)
 8006f78:	f7ff fb14 	bl	80065a4 <vListInitialise>
 8006f7c:	480c      	ldr	r0, [pc, #48]	; (8006fb0 <prvInitialiseTaskLists+0x6c>)
 8006f7e:	f7ff fb11 	bl	80065a4 <vListInitialise>
 8006f82:	480c      	ldr	r0, [pc, #48]	; (8006fb4 <prvInitialiseTaskLists+0x70>)
 8006f84:	f7ff fb0e 	bl	80065a4 <vListInitialise>
 8006f88:	480b      	ldr	r0, [pc, #44]	; (8006fb8 <prvInitialiseTaskLists+0x74>)
 8006f8a:	f7ff fb0b 	bl	80065a4 <vListInitialise>
 8006f8e:	4b0b      	ldr	r3, [pc, #44]	; (8006fbc <prvInitialiseTaskLists+0x78>)
 8006f90:	4a05      	ldr	r2, [pc, #20]	; (8006fa8 <prvInitialiseTaskLists+0x64>)
 8006f92:	601a      	str	r2, [r3, #0]
 8006f94:	4b0a      	ldr	r3, [pc, #40]	; (8006fc0 <prvInitialiseTaskLists+0x7c>)
 8006f96:	4a05      	ldr	r2, [pc, #20]	; (8006fac <prvInitialiseTaskLists+0x68>)
 8006f98:	601a      	str	r2, [r3, #0]
 8006f9a:	bf00      	nop
 8006f9c:	3708      	adds	r7, #8
 8006f9e:	46bd      	mov	sp, r7
 8006fa0:	bd80      	pop	{r7, pc}
 8006fa2:	bf00      	nop
 8006fa4:	200007f4 	.word	0x200007f4
 8006fa8:	20000880 	.word	0x20000880
 8006fac:	20000894 	.word	0x20000894
 8006fb0:	200008b0 	.word	0x200008b0
 8006fb4:	200008c4 	.word	0x200008c4
 8006fb8:	200008dc 	.word	0x200008dc
 8006fbc:	200008a8 	.word	0x200008a8
 8006fc0:	200008ac 	.word	0x200008ac

08006fc4 <prvCheckTasksWaitingTermination>:
 8006fc4:	b580      	push	{r7, lr}
 8006fc6:	b082      	sub	sp, #8
 8006fc8:	af00      	add	r7, sp, #0
 8006fca:	e019      	b.n	8007000 <prvCheckTasksWaitingTermination+0x3c>
 8006fcc:	f000 f9d6 	bl	800737c <vPortEnterCritical>
 8006fd0:	4b10      	ldr	r3, [pc, #64]	; (8007014 <prvCheckTasksWaitingTermination+0x50>)
 8006fd2:	68db      	ldr	r3, [r3, #12]
 8006fd4:	68db      	ldr	r3, [r3, #12]
 8006fd6:	607b      	str	r3, [r7, #4]
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	3304      	adds	r3, #4
 8006fdc:	4618      	mov	r0, r3
 8006fde:	f7ff fb67 	bl	80066b0 <uxListRemove>
 8006fe2:	4b0d      	ldr	r3, [pc, #52]	; (8007018 <prvCheckTasksWaitingTermination+0x54>)
 8006fe4:	681b      	ldr	r3, [r3, #0]
 8006fe6:	3b01      	subs	r3, #1
 8006fe8:	4a0b      	ldr	r2, [pc, #44]	; (8007018 <prvCheckTasksWaitingTermination+0x54>)
 8006fea:	6013      	str	r3, [r2, #0]
 8006fec:	4b0b      	ldr	r3, [pc, #44]	; (800701c <prvCheckTasksWaitingTermination+0x58>)
 8006fee:	681b      	ldr	r3, [r3, #0]
 8006ff0:	3b01      	subs	r3, #1
 8006ff2:	4a0a      	ldr	r2, [pc, #40]	; (800701c <prvCheckTasksWaitingTermination+0x58>)
 8006ff4:	6013      	str	r3, [r2, #0]
 8006ff6:	f000 f9f1 	bl	80073dc <vPortExitCritical>
 8006ffa:	6878      	ldr	r0, [r7, #4]
 8006ffc:	f000 f810 	bl	8007020 <prvDeleteTCB>
 8007000:	4b06      	ldr	r3, [pc, #24]	; (800701c <prvCheckTasksWaitingTermination+0x58>)
 8007002:	681b      	ldr	r3, [r3, #0]
 8007004:	2b00      	cmp	r3, #0
 8007006:	d1e1      	bne.n	8006fcc <prvCheckTasksWaitingTermination+0x8>
 8007008:	bf00      	nop
 800700a:	bf00      	nop
 800700c:	3708      	adds	r7, #8
 800700e:	46bd      	mov	sp, r7
 8007010:	bd80      	pop	{r7, pc}
 8007012:	bf00      	nop
 8007014:	200008c4 	.word	0x200008c4
 8007018:	200008f0 	.word	0x200008f0
 800701c:	200008d8 	.word	0x200008d8

08007020 <prvDeleteTCB>:
 8007020:	b580      	push	{r7, lr}
 8007022:	b084      	sub	sp, #16
 8007024:	af00      	add	r7, sp, #0
 8007026:	6078      	str	r0, [r7, #4]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	334c      	adds	r3, #76	; 0x4c
 800702c:	4618      	mov	r0, r3
 800702e:	f001 f9ff 	bl	8008430 <_reclaim_reent>
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8007038:	2b00      	cmp	r3, #0
 800703a:	d108      	bne.n	800704e <prvDeleteTCB+0x2e>
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007040:	4618      	mov	r0, r3
 8007042:	f000 fb21 	bl	8007688 <vPortFree>
 8007046:	6878      	ldr	r0, [r7, #4]
 8007048:	f000 fb1e 	bl	8007688 <vPortFree>
 800704c:	e018      	b.n	8007080 <prvDeleteTCB+0x60>
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8007054:	2b01      	cmp	r3, #1
 8007056:	d103      	bne.n	8007060 <prvDeleteTCB+0x40>
 8007058:	6878      	ldr	r0, [r7, #4]
 800705a:	f000 fb15 	bl	8007688 <vPortFree>
 800705e:	e00f      	b.n	8007080 <prvDeleteTCB+0x60>
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8007066:	2b02      	cmp	r3, #2
 8007068:	d00a      	beq.n	8007080 <prvDeleteTCB+0x60>
 800706a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800706e:	f383 8811 	msr	BASEPRI, r3
 8007072:	f3bf 8f6f 	isb	sy
 8007076:	f3bf 8f4f 	dsb	sy
 800707a:	60fb      	str	r3, [r7, #12]
 800707c:	bf00      	nop
 800707e:	e7fe      	b.n	800707e <prvDeleteTCB+0x5e>
 8007080:	bf00      	nop
 8007082:	3710      	adds	r7, #16
 8007084:	46bd      	mov	sp, r7
 8007086:	bd80      	pop	{r7, pc}

08007088 <prvResetNextTaskUnblockTime>:
 8007088:	b480      	push	{r7}
 800708a:	b083      	sub	sp, #12
 800708c:	af00      	add	r7, sp, #0
 800708e:	4b0e      	ldr	r3, [pc, #56]	; (80070c8 <prvResetNextTaskUnblockTime+0x40>)
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	2b00      	cmp	r3, #0
 8007096:	d101      	bne.n	800709c <prvResetNextTaskUnblockTime+0x14>
 8007098:	2301      	movs	r3, #1
 800709a:	e000      	b.n	800709e <prvResetNextTaskUnblockTime+0x16>
 800709c:	2300      	movs	r3, #0
 800709e:	2b00      	cmp	r3, #0
 80070a0:	d004      	beq.n	80070ac <prvResetNextTaskUnblockTime+0x24>
 80070a2:	4b0a      	ldr	r3, [pc, #40]	; (80070cc <prvResetNextTaskUnblockTime+0x44>)
 80070a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80070a8:	601a      	str	r2, [r3, #0]
 80070aa:	e008      	b.n	80070be <prvResetNextTaskUnblockTime+0x36>
 80070ac:	4b06      	ldr	r3, [pc, #24]	; (80070c8 <prvResetNextTaskUnblockTime+0x40>)
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	68db      	ldr	r3, [r3, #12]
 80070b2:	68db      	ldr	r3, [r3, #12]
 80070b4:	607b      	str	r3, [r7, #4]
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	685b      	ldr	r3, [r3, #4]
 80070ba:	4a04      	ldr	r2, [pc, #16]	; (80070cc <prvResetNextTaskUnblockTime+0x44>)
 80070bc:	6013      	str	r3, [r2, #0]
 80070be:	bf00      	nop
 80070c0:	370c      	adds	r7, #12
 80070c2:	46bd      	mov	sp, r7
 80070c4:	bc80      	pop	{r7}
 80070c6:	4770      	bx	lr
 80070c8:	200008a8 	.word	0x200008a8
 80070cc:	20000910 	.word	0x20000910

080070d0 <prvAddCurrentTaskToDelayedList>:
 80070d0:	b580      	push	{r7, lr}
 80070d2:	b084      	sub	sp, #16
 80070d4:	af00      	add	r7, sp, #0
 80070d6:	6078      	str	r0, [r7, #4]
 80070d8:	6039      	str	r1, [r7, #0]
 80070da:	4b29      	ldr	r3, [pc, #164]	; (8007180 <prvAddCurrentTaskToDelayedList+0xb0>)
 80070dc:	681b      	ldr	r3, [r3, #0]
 80070de:	60fb      	str	r3, [r7, #12]
 80070e0:	4b28      	ldr	r3, [pc, #160]	; (8007184 <prvAddCurrentTaskToDelayedList+0xb4>)
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	3304      	adds	r3, #4
 80070e6:	4618      	mov	r0, r3
 80070e8:	f7ff fae2 	bl	80066b0 <uxListRemove>
 80070ec:	4603      	mov	r3, r0
 80070ee:	2b00      	cmp	r3, #0
 80070f0:	d10b      	bne.n	800710a <prvAddCurrentTaskToDelayedList+0x3a>
 80070f2:	4b24      	ldr	r3, [pc, #144]	; (8007184 <prvAddCurrentTaskToDelayedList+0xb4>)
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80070f8:	2201      	movs	r2, #1
 80070fa:	fa02 f303 	lsl.w	r3, r2, r3
 80070fe:	43da      	mvns	r2, r3
 8007100:	4b21      	ldr	r3, [pc, #132]	; (8007188 <prvAddCurrentTaskToDelayedList+0xb8>)
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	4013      	ands	r3, r2
 8007106:	4a20      	ldr	r2, [pc, #128]	; (8007188 <prvAddCurrentTaskToDelayedList+0xb8>)
 8007108:	6013      	str	r3, [r2, #0]
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007110:	d10a      	bne.n	8007128 <prvAddCurrentTaskToDelayedList+0x58>
 8007112:	683b      	ldr	r3, [r7, #0]
 8007114:	2b00      	cmp	r3, #0
 8007116:	d007      	beq.n	8007128 <prvAddCurrentTaskToDelayedList+0x58>
 8007118:	4b1a      	ldr	r3, [pc, #104]	; (8007184 <prvAddCurrentTaskToDelayedList+0xb4>)
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	3304      	adds	r3, #4
 800711e:	4619      	mov	r1, r3
 8007120:	481a      	ldr	r0, [pc, #104]	; (800718c <prvAddCurrentTaskToDelayedList+0xbc>)
 8007122:	f7ff fa6a 	bl	80065fa <vListInsertEnd>
 8007126:	e026      	b.n	8007176 <prvAddCurrentTaskToDelayedList+0xa6>
 8007128:	68fa      	ldr	r2, [r7, #12]
 800712a:	687b      	ldr	r3, [r7, #4]
 800712c:	4413      	add	r3, r2
 800712e:	60bb      	str	r3, [r7, #8]
 8007130:	4b14      	ldr	r3, [pc, #80]	; (8007184 <prvAddCurrentTaskToDelayedList+0xb4>)
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	68ba      	ldr	r2, [r7, #8]
 8007136:	605a      	str	r2, [r3, #4]
 8007138:	68ba      	ldr	r2, [r7, #8]
 800713a:	68fb      	ldr	r3, [r7, #12]
 800713c:	429a      	cmp	r2, r3
 800713e:	d209      	bcs.n	8007154 <prvAddCurrentTaskToDelayedList+0x84>
 8007140:	4b13      	ldr	r3, [pc, #76]	; (8007190 <prvAddCurrentTaskToDelayedList+0xc0>)
 8007142:	681a      	ldr	r2, [r3, #0]
 8007144:	4b0f      	ldr	r3, [pc, #60]	; (8007184 <prvAddCurrentTaskToDelayedList+0xb4>)
 8007146:	681b      	ldr	r3, [r3, #0]
 8007148:	3304      	adds	r3, #4
 800714a:	4619      	mov	r1, r3
 800714c:	4610      	mov	r0, r2
 800714e:	f7ff fa77 	bl	8006640 <vListInsert>
 8007152:	e010      	b.n	8007176 <prvAddCurrentTaskToDelayedList+0xa6>
 8007154:	4b0f      	ldr	r3, [pc, #60]	; (8007194 <prvAddCurrentTaskToDelayedList+0xc4>)
 8007156:	681a      	ldr	r2, [r3, #0]
 8007158:	4b0a      	ldr	r3, [pc, #40]	; (8007184 <prvAddCurrentTaskToDelayedList+0xb4>)
 800715a:	681b      	ldr	r3, [r3, #0]
 800715c:	3304      	adds	r3, #4
 800715e:	4619      	mov	r1, r3
 8007160:	4610      	mov	r0, r2
 8007162:	f7ff fa6d 	bl	8006640 <vListInsert>
 8007166:	4b0c      	ldr	r3, [pc, #48]	; (8007198 <prvAddCurrentTaskToDelayedList+0xc8>)
 8007168:	681b      	ldr	r3, [r3, #0]
 800716a:	68ba      	ldr	r2, [r7, #8]
 800716c:	429a      	cmp	r2, r3
 800716e:	d202      	bcs.n	8007176 <prvAddCurrentTaskToDelayedList+0xa6>
 8007170:	4a09      	ldr	r2, [pc, #36]	; (8007198 <prvAddCurrentTaskToDelayedList+0xc8>)
 8007172:	68bb      	ldr	r3, [r7, #8]
 8007174:	6013      	str	r3, [r2, #0]
 8007176:	bf00      	nop
 8007178:	3710      	adds	r7, #16
 800717a:	46bd      	mov	sp, r7
 800717c:	bd80      	pop	{r7, pc}
 800717e:	bf00      	nop
 8007180:	200008f4 	.word	0x200008f4
 8007184:	200007f0 	.word	0x200007f0
 8007188:	200008f8 	.word	0x200008f8
 800718c:	200008dc 	.word	0x200008dc
 8007190:	200008ac 	.word	0x200008ac
 8007194:	200008a8 	.word	0x200008a8
 8007198:	20000910 	.word	0x20000910

0800719c <pxPortInitialiseStack>:
 800719c:	b480      	push	{r7}
 800719e:	b085      	sub	sp, #20
 80071a0:	af00      	add	r7, sp, #0
 80071a2:	60f8      	str	r0, [r7, #12]
 80071a4:	60b9      	str	r1, [r7, #8]
 80071a6:	607a      	str	r2, [r7, #4]
 80071a8:	68fb      	ldr	r3, [r7, #12]
 80071aa:	3b04      	subs	r3, #4
 80071ac:	60fb      	str	r3, [r7, #12]
 80071ae:	68fb      	ldr	r3, [r7, #12]
 80071b0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80071b4:	601a      	str	r2, [r3, #0]
 80071b6:	68fb      	ldr	r3, [r7, #12]
 80071b8:	3b04      	subs	r3, #4
 80071ba:	60fb      	str	r3, [r7, #12]
 80071bc:	68bb      	ldr	r3, [r7, #8]
 80071be:	f023 0201 	bic.w	r2, r3, #1
 80071c2:	68fb      	ldr	r3, [r7, #12]
 80071c4:	601a      	str	r2, [r3, #0]
 80071c6:	68fb      	ldr	r3, [r7, #12]
 80071c8:	3b04      	subs	r3, #4
 80071ca:	60fb      	str	r3, [r7, #12]
 80071cc:	4a08      	ldr	r2, [pc, #32]	; (80071f0 <pxPortInitialiseStack+0x54>)
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	601a      	str	r2, [r3, #0]
 80071d2:	68fb      	ldr	r3, [r7, #12]
 80071d4:	3b14      	subs	r3, #20
 80071d6:	60fb      	str	r3, [r7, #12]
 80071d8:	687a      	ldr	r2, [r7, #4]
 80071da:	68fb      	ldr	r3, [r7, #12]
 80071dc:	601a      	str	r2, [r3, #0]
 80071de:	68fb      	ldr	r3, [r7, #12]
 80071e0:	3b20      	subs	r3, #32
 80071e2:	60fb      	str	r3, [r7, #12]
 80071e4:	68fb      	ldr	r3, [r7, #12]
 80071e6:	4618      	mov	r0, r3
 80071e8:	3714      	adds	r7, #20
 80071ea:	46bd      	mov	sp, r7
 80071ec:	bc80      	pop	{r7}
 80071ee:	4770      	bx	lr
 80071f0:	080071f5 	.word	0x080071f5

080071f4 <prvTaskExitError>:
 80071f4:	b480      	push	{r7}
 80071f6:	b085      	sub	sp, #20
 80071f8:	af00      	add	r7, sp, #0
 80071fa:	2300      	movs	r3, #0
 80071fc:	607b      	str	r3, [r7, #4]
 80071fe:	4b12      	ldr	r3, [pc, #72]	; (8007248 <prvTaskExitError+0x54>)
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007206:	d00a      	beq.n	800721e <prvTaskExitError+0x2a>
 8007208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800720c:	f383 8811 	msr	BASEPRI, r3
 8007210:	f3bf 8f6f 	isb	sy
 8007214:	f3bf 8f4f 	dsb	sy
 8007218:	60fb      	str	r3, [r7, #12]
 800721a:	bf00      	nop
 800721c:	e7fe      	b.n	800721c <prvTaskExitError+0x28>
 800721e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007222:	f383 8811 	msr	BASEPRI, r3
 8007226:	f3bf 8f6f 	isb	sy
 800722a:	f3bf 8f4f 	dsb	sy
 800722e:	60bb      	str	r3, [r7, #8]
 8007230:	bf00      	nop
 8007232:	bf00      	nop
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	2b00      	cmp	r3, #0
 8007238:	d0fc      	beq.n	8007234 <prvTaskExitError+0x40>
 800723a:	bf00      	nop
 800723c:	bf00      	nop
 800723e:	3714      	adds	r7, #20
 8007240:	46bd      	mov	sp, r7
 8007242:	bc80      	pop	{r7}
 8007244:	4770      	bx	lr
 8007246:	bf00      	nop
 8007248:	2000000c 	.word	0x2000000c
 800724c:	00000000 	.word	0x00000000

08007250 <SVC_Handler>:
 8007250:	4b07      	ldr	r3, [pc, #28]	; (8007270 <pxCurrentTCBConst2>)
 8007252:	6819      	ldr	r1, [r3, #0]
 8007254:	6808      	ldr	r0, [r1, #0]
 8007256:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800725a:	f380 8809 	msr	PSP, r0
 800725e:	f3bf 8f6f 	isb	sy
 8007262:	f04f 0000 	mov.w	r0, #0
 8007266:	f380 8811 	msr	BASEPRI, r0
 800726a:	f04e 0e0d 	orr.w	lr, lr, #13
 800726e:	4770      	bx	lr

08007270 <pxCurrentTCBConst2>:
 8007270:	200007f0 	.word	0x200007f0
 8007274:	bf00      	nop
 8007276:	bf00      	nop

08007278 <prvPortStartFirstTask>:
 8007278:	4806      	ldr	r0, [pc, #24]	; (8007294 <prvPortStartFirstTask+0x1c>)
 800727a:	6800      	ldr	r0, [r0, #0]
 800727c:	6800      	ldr	r0, [r0, #0]
 800727e:	f380 8808 	msr	MSP, r0
 8007282:	b662      	cpsie	i
 8007284:	b661      	cpsie	f
 8007286:	f3bf 8f4f 	dsb	sy
 800728a:	f3bf 8f6f 	isb	sy
 800728e:	df00      	svc	0
 8007290:	bf00      	nop
 8007292:	bf00      	nop
 8007294:	e000ed08 	.word	0xe000ed08

08007298 <xPortStartScheduler>:
 8007298:	b580      	push	{r7, lr}
 800729a:	b084      	sub	sp, #16
 800729c:	af00      	add	r7, sp, #0
 800729e:	4b32      	ldr	r3, [pc, #200]	; (8007368 <xPortStartScheduler+0xd0>)
 80072a0:	60fb      	str	r3, [r7, #12]
 80072a2:	68fb      	ldr	r3, [r7, #12]
 80072a4:	781b      	ldrb	r3, [r3, #0]
 80072a6:	b2db      	uxtb	r3, r3
 80072a8:	607b      	str	r3, [r7, #4]
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	22ff      	movs	r2, #255	; 0xff
 80072ae:	701a      	strb	r2, [r3, #0]
 80072b0:	68fb      	ldr	r3, [r7, #12]
 80072b2:	781b      	ldrb	r3, [r3, #0]
 80072b4:	b2db      	uxtb	r3, r3
 80072b6:	70fb      	strb	r3, [r7, #3]
 80072b8:	78fb      	ldrb	r3, [r7, #3]
 80072ba:	b2db      	uxtb	r3, r3
 80072bc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80072c0:	b2da      	uxtb	r2, r3
 80072c2:	4b2a      	ldr	r3, [pc, #168]	; (800736c <xPortStartScheduler+0xd4>)
 80072c4:	701a      	strb	r2, [r3, #0]
 80072c6:	4b2a      	ldr	r3, [pc, #168]	; (8007370 <xPortStartScheduler+0xd8>)
 80072c8:	2207      	movs	r2, #7
 80072ca:	601a      	str	r2, [r3, #0]
 80072cc:	e009      	b.n	80072e2 <xPortStartScheduler+0x4a>
 80072ce:	4b28      	ldr	r3, [pc, #160]	; (8007370 <xPortStartScheduler+0xd8>)
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	3b01      	subs	r3, #1
 80072d4:	4a26      	ldr	r2, [pc, #152]	; (8007370 <xPortStartScheduler+0xd8>)
 80072d6:	6013      	str	r3, [r2, #0]
 80072d8:	78fb      	ldrb	r3, [r7, #3]
 80072da:	b2db      	uxtb	r3, r3
 80072dc:	005b      	lsls	r3, r3, #1
 80072de:	b2db      	uxtb	r3, r3
 80072e0:	70fb      	strb	r3, [r7, #3]
 80072e2:	78fb      	ldrb	r3, [r7, #3]
 80072e4:	b2db      	uxtb	r3, r3
 80072e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80072ea:	2b80      	cmp	r3, #128	; 0x80
 80072ec:	d0ef      	beq.n	80072ce <xPortStartScheduler+0x36>
 80072ee:	4b20      	ldr	r3, [pc, #128]	; (8007370 <xPortStartScheduler+0xd8>)
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	f1c3 0307 	rsb	r3, r3, #7
 80072f6:	2b04      	cmp	r3, #4
 80072f8:	d00a      	beq.n	8007310 <xPortStartScheduler+0x78>
 80072fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072fe:	f383 8811 	msr	BASEPRI, r3
 8007302:	f3bf 8f6f 	isb	sy
 8007306:	f3bf 8f4f 	dsb	sy
 800730a:	60bb      	str	r3, [r7, #8]
 800730c:	bf00      	nop
 800730e:	e7fe      	b.n	800730e <xPortStartScheduler+0x76>
 8007310:	4b17      	ldr	r3, [pc, #92]	; (8007370 <xPortStartScheduler+0xd8>)
 8007312:	681b      	ldr	r3, [r3, #0]
 8007314:	021b      	lsls	r3, r3, #8
 8007316:	4a16      	ldr	r2, [pc, #88]	; (8007370 <xPortStartScheduler+0xd8>)
 8007318:	6013      	str	r3, [r2, #0]
 800731a:	4b15      	ldr	r3, [pc, #84]	; (8007370 <xPortStartScheduler+0xd8>)
 800731c:	681b      	ldr	r3, [r3, #0]
 800731e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007322:	4a13      	ldr	r2, [pc, #76]	; (8007370 <xPortStartScheduler+0xd8>)
 8007324:	6013      	str	r3, [r2, #0]
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	b2da      	uxtb	r2, r3
 800732a:	68fb      	ldr	r3, [r7, #12]
 800732c:	701a      	strb	r2, [r3, #0]
 800732e:	4b11      	ldr	r3, [pc, #68]	; (8007374 <xPortStartScheduler+0xdc>)
 8007330:	681b      	ldr	r3, [r3, #0]
 8007332:	4a10      	ldr	r2, [pc, #64]	; (8007374 <xPortStartScheduler+0xdc>)
 8007334:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007338:	6013      	str	r3, [r2, #0]
 800733a:	4b0e      	ldr	r3, [pc, #56]	; (8007374 <xPortStartScheduler+0xdc>)
 800733c:	681b      	ldr	r3, [r3, #0]
 800733e:	4a0d      	ldr	r2, [pc, #52]	; (8007374 <xPortStartScheduler+0xdc>)
 8007340:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007344:	6013      	str	r3, [r2, #0]
 8007346:	f000 f8b9 	bl	80074bc <vPortSetupTimerInterrupt>
 800734a:	4b0b      	ldr	r3, [pc, #44]	; (8007378 <xPortStartScheduler+0xe0>)
 800734c:	2200      	movs	r2, #0
 800734e:	601a      	str	r2, [r3, #0]
 8007350:	f7ff ff92 	bl	8007278 <prvPortStartFirstTask>
 8007354:	f7ff fd7c 	bl	8006e50 <vTaskSwitchContext>
 8007358:	f7ff ff4c 	bl	80071f4 <prvTaskExitError>
 800735c:	2300      	movs	r3, #0
 800735e:	4618      	mov	r0, r3
 8007360:	3710      	adds	r7, #16
 8007362:	46bd      	mov	sp, r7
 8007364:	bd80      	pop	{r7, pc}
 8007366:	bf00      	nop
 8007368:	e000e400 	.word	0xe000e400
 800736c:	2000091c 	.word	0x2000091c
 8007370:	20000920 	.word	0x20000920
 8007374:	e000ed20 	.word	0xe000ed20
 8007378:	2000000c 	.word	0x2000000c

0800737c <vPortEnterCritical>:
 800737c:	b480      	push	{r7}
 800737e:	b083      	sub	sp, #12
 8007380:	af00      	add	r7, sp, #0
 8007382:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007386:	f383 8811 	msr	BASEPRI, r3
 800738a:	f3bf 8f6f 	isb	sy
 800738e:	f3bf 8f4f 	dsb	sy
 8007392:	607b      	str	r3, [r7, #4]
 8007394:	bf00      	nop
 8007396:	4b0f      	ldr	r3, [pc, #60]	; (80073d4 <vPortEnterCritical+0x58>)
 8007398:	681b      	ldr	r3, [r3, #0]
 800739a:	3301      	adds	r3, #1
 800739c:	4a0d      	ldr	r2, [pc, #52]	; (80073d4 <vPortEnterCritical+0x58>)
 800739e:	6013      	str	r3, [r2, #0]
 80073a0:	4b0c      	ldr	r3, [pc, #48]	; (80073d4 <vPortEnterCritical+0x58>)
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	2b01      	cmp	r3, #1
 80073a6:	d10f      	bne.n	80073c8 <vPortEnterCritical+0x4c>
 80073a8:	4b0b      	ldr	r3, [pc, #44]	; (80073d8 <vPortEnterCritical+0x5c>)
 80073aa:	681b      	ldr	r3, [r3, #0]
 80073ac:	b2db      	uxtb	r3, r3
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d00a      	beq.n	80073c8 <vPortEnterCritical+0x4c>
 80073b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073b6:	f383 8811 	msr	BASEPRI, r3
 80073ba:	f3bf 8f6f 	isb	sy
 80073be:	f3bf 8f4f 	dsb	sy
 80073c2:	603b      	str	r3, [r7, #0]
 80073c4:	bf00      	nop
 80073c6:	e7fe      	b.n	80073c6 <vPortEnterCritical+0x4a>
 80073c8:	bf00      	nop
 80073ca:	370c      	adds	r7, #12
 80073cc:	46bd      	mov	sp, r7
 80073ce:	bc80      	pop	{r7}
 80073d0:	4770      	bx	lr
 80073d2:	bf00      	nop
 80073d4:	2000000c 	.word	0x2000000c
 80073d8:	e000ed04 	.word	0xe000ed04

080073dc <vPortExitCritical>:
 80073dc:	b480      	push	{r7}
 80073de:	b083      	sub	sp, #12
 80073e0:	af00      	add	r7, sp, #0
 80073e2:	4b11      	ldr	r3, [pc, #68]	; (8007428 <vPortExitCritical+0x4c>)
 80073e4:	681b      	ldr	r3, [r3, #0]
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	d10a      	bne.n	8007400 <vPortExitCritical+0x24>
 80073ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073ee:	f383 8811 	msr	BASEPRI, r3
 80073f2:	f3bf 8f6f 	isb	sy
 80073f6:	f3bf 8f4f 	dsb	sy
 80073fa:	607b      	str	r3, [r7, #4]
 80073fc:	bf00      	nop
 80073fe:	e7fe      	b.n	80073fe <vPortExitCritical+0x22>
 8007400:	4b09      	ldr	r3, [pc, #36]	; (8007428 <vPortExitCritical+0x4c>)
 8007402:	681b      	ldr	r3, [r3, #0]
 8007404:	3b01      	subs	r3, #1
 8007406:	4a08      	ldr	r2, [pc, #32]	; (8007428 <vPortExitCritical+0x4c>)
 8007408:	6013      	str	r3, [r2, #0]
 800740a:	4b07      	ldr	r3, [pc, #28]	; (8007428 <vPortExitCritical+0x4c>)
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	2b00      	cmp	r3, #0
 8007410:	d105      	bne.n	800741e <vPortExitCritical+0x42>
 8007412:	2300      	movs	r3, #0
 8007414:	603b      	str	r3, [r7, #0]
 8007416:	683b      	ldr	r3, [r7, #0]
 8007418:	f383 8811 	msr	BASEPRI, r3
 800741c:	bf00      	nop
 800741e:	bf00      	nop
 8007420:	370c      	adds	r7, #12
 8007422:	46bd      	mov	sp, r7
 8007424:	bc80      	pop	{r7}
 8007426:	4770      	bx	lr
 8007428:	2000000c 	.word	0x2000000c
 800742c:	00000000 	.word	0x00000000

08007430 <PendSV_Handler>:
 8007430:	f3ef 8009 	mrs	r0, PSP
 8007434:	f3bf 8f6f 	isb	sy
 8007438:	4b0d      	ldr	r3, [pc, #52]	; (8007470 <pxCurrentTCBConst>)
 800743a:	681a      	ldr	r2, [r3, #0]
 800743c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8007440:	6010      	str	r0, [r2, #0]
 8007442:	e92d 4008 	stmdb	sp!, {r3, lr}
 8007446:	f04f 0050 	mov.w	r0, #80	; 0x50
 800744a:	f380 8811 	msr	BASEPRI, r0
 800744e:	f7ff fcff 	bl	8006e50 <vTaskSwitchContext>
 8007452:	f04f 0000 	mov.w	r0, #0
 8007456:	f380 8811 	msr	BASEPRI, r0
 800745a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800745e:	6819      	ldr	r1, [r3, #0]
 8007460:	6808      	ldr	r0, [r1, #0]
 8007462:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8007466:	f380 8809 	msr	PSP, r0
 800746a:	f3bf 8f6f 	isb	sy
 800746e:	4770      	bx	lr

08007470 <pxCurrentTCBConst>:
 8007470:	200007f0 	.word	0x200007f0
 8007474:	bf00      	nop
 8007476:	bf00      	nop

08007478 <SysTick_Handler>:
 8007478:	b580      	push	{r7, lr}
 800747a:	b082      	sub	sp, #8
 800747c:	af00      	add	r7, sp, #0
 800747e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007482:	f383 8811 	msr	BASEPRI, r3
 8007486:	f3bf 8f6f 	isb	sy
 800748a:	f3bf 8f4f 	dsb	sy
 800748e:	607b      	str	r3, [r7, #4]
 8007490:	bf00      	nop
 8007492:	f7ff fc1f 	bl	8006cd4 <xTaskIncrementTick>
 8007496:	4603      	mov	r3, r0
 8007498:	2b00      	cmp	r3, #0
 800749a:	d003      	beq.n	80074a4 <SysTick_Handler+0x2c>
 800749c:	4b06      	ldr	r3, [pc, #24]	; (80074b8 <SysTick_Handler+0x40>)
 800749e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80074a2:	601a      	str	r2, [r3, #0]
 80074a4:	2300      	movs	r3, #0
 80074a6:	603b      	str	r3, [r7, #0]
 80074a8:	683b      	ldr	r3, [r7, #0]
 80074aa:	f383 8811 	msr	BASEPRI, r3
 80074ae:	bf00      	nop
 80074b0:	bf00      	nop
 80074b2:	3708      	adds	r7, #8
 80074b4:	46bd      	mov	sp, r7
 80074b6:	bd80      	pop	{r7, pc}
 80074b8:	e000ed04 	.word	0xe000ed04

080074bc <vPortSetupTimerInterrupt>:
 80074bc:	b480      	push	{r7}
 80074be:	af00      	add	r7, sp, #0
 80074c0:	4b0a      	ldr	r3, [pc, #40]	; (80074ec <vPortSetupTimerInterrupt+0x30>)
 80074c2:	2200      	movs	r2, #0
 80074c4:	601a      	str	r2, [r3, #0]
 80074c6:	4b0a      	ldr	r3, [pc, #40]	; (80074f0 <vPortSetupTimerInterrupt+0x34>)
 80074c8:	2200      	movs	r2, #0
 80074ca:	601a      	str	r2, [r3, #0]
 80074cc:	4b09      	ldr	r3, [pc, #36]	; (80074f4 <vPortSetupTimerInterrupt+0x38>)
 80074ce:	681b      	ldr	r3, [r3, #0]
 80074d0:	4a09      	ldr	r2, [pc, #36]	; (80074f8 <vPortSetupTimerInterrupt+0x3c>)
 80074d2:	fba2 2303 	umull	r2, r3, r2, r3
 80074d6:	099b      	lsrs	r3, r3, #6
 80074d8:	4a08      	ldr	r2, [pc, #32]	; (80074fc <vPortSetupTimerInterrupt+0x40>)
 80074da:	3b01      	subs	r3, #1
 80074dc:	6013      	str	r3, [r2, #0]
 80074de:	4b03      	ldr	r3, [pc, #12]	; (80074ec <vPortSetupTimerInterrupt+0x30>)
 80074e0:	2207      	movs	r2, #7
 80074e2:	601a      	str	r2, [r3, #0]
 80074e4:	bf00      	nop
 80074e6:	46bd      	mov	sp, r7
 80074e8:	bc80      	pop	{r7}
 80074ea:	4770      	bx	lr
 80074ec:	e000e010 	.word	0xe000e010
 80074f0:	e000e018 	.word	0xe000e018
 80074f4:	20000000 	.word	0x20000000
 80074f8:	10624dd3 	.word	0x10624dd3
 80074fc:	e000e014 	.word	0xe000e014

08007500 <pvPortMalloc>:
 8007500:	b580      	push	{r7, lr}
 8007502:	b08a      	sub	sp, #40	; 0x28
 8007504:	af00      	add	r7, sp, #0
 8007506:	6078      	str	r0, [r7, #4]
 8007508:	2300      	movs	r3, #0
 800750a:	61fb      	str	r3, [r7, #28]
 800750c:	f7ff fb38 	bl	8006b80 <vTaskSuspendAll>
 8007510:	4b58      	ldr	r3, [pc, #352]	; (8007674 <pvPortMalloc+0x174>)
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	2b00      	cmp	r3, #0
 8007516:	d101      	bne.n	800751c <pvPortMalloc+0x1c>
 8007518:	f000 f910 	bl	800773c <prvHeapInit>
 800751c:	4b56      	ldr	r3, [pc, #344]	; (8007678 <pvPortMalloc+0x178>)
 800751e:	681a      	ldr	r2, [r3, #0]
 8007520:	687b      	ldr	r3, [r7, #4]
 8007522:	4013      	ands	r3, r2
 8007524:	2b00      	cmp	r3, #0
 8007526:	f040 808e 	bne.w	8007646 <pvPortMalloc+0x146>
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	2b00      	cmp	r3, #0
 800752e:	d01d      	beq.n	800756c <pvPortMalloc+0x6c>
 8007530:	2208      	movs	r2, #8
 8007532:	687b      	ldr	r3, [r7, #4]
 8007534:	4413      	add	r3, r2
 8007536:	607b      	str	r3, [r7, #4]
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	f003 0307 	and.w	r3, r3, #7
 800753e:	2b00      	cmp	r3, #0
 8007540:	d014      	beq.n	800756c <pvPortMalloc+0x6c>
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	f023 0307 	bic.w	r3, r3, #7
 8007548:	3308      	adds	r3, #8
 800754a:	607b      	str	r3, [r7, #4]
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	f003 0307 	and.w	r3, r3, #7
 8007552:	2b00      	cmp	r3, #0
 8007554:	d00a      	beq.n	800756c <pvPortMalloc+0x6c>
 8007556:	f04f 0350 	mov.w	r3, #80	; 0x50
 800755a:	f383 8811 	msr	BASEPRI, r3
 800755e:	f3bf 8f6f 	isb	sy
 8007562:	f3bf 8f4f 	dsb	sy
 8007566:	617b      	str	r3, [r7, #20]
 8007568:	bf00      	nop
 800756a:	e7fe      	b.n	800756a <pvPortMalloc+0x6a>
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	2b00      	cmp	r3, #0
 8007570:	d069      	beq.n	8007646 <pvPortMalloc+0x146>
 8007572:	4b42      	ldr	r3, [pc, #264]	; (800767c <pvPortMalloc+0x17c>)
 8007574:	681b      	ldr	r3, [r3, #0]
 8007576:	687a      	ldr	r2, [r7, #4]
 8007578:	429a      	cmp	r2, r3
 800757a:	d864      	bhi.n	8007646 <pvPortMalloc+0x146>
 800757c:	4b40      	ldr	r3, [pc, #256]	; (8007680 <pvPortMalloc+0x180>)
 800757e:	623b      	str	r3, [r7, #32]
 8007580:	4b3f      	ldr	r3, [pc, #252]	; (8007680 <pvPortMalloc+0x180>)
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	627b      	str	r3, [r7, #36]	; 0x24
 8007586:	e004      	b.n	8007592 <pvPortMalloc+0x92>
 8007588:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800758a:	623b      	str	r3, [r7, #32]
 800758c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800758e:	681b      	ldr	r3, [r3, #0]
 8007590:	627b      	str	r3, [r7, #36]	; 0x24
 8007592:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007594:	685b      	ldr	r3, [r3, #4]
 8007596:	687a      	ldr	r2, [r7, #4]
 8007598:	429a      	cmp	r2, r3
 800759a:	d903      	bls.n	80075a4 <pvPortMalloc+0xa4>
 800759c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800759e:	681b      	ldr	r3, [r3, #0]
 80075a0:	2b00      	cmp	r3, #0
 80075a2:	d1f1      	bne.n	8007588 <pvPortMalloc+0x88>
 80075a4:	4b33      	ldr	r3, [pc, #204]	; (8007674 <pvPortMalloc+0x174>)
 80075a6:	681b      	ldr	r3, [r3, #0]
 80075a8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80075aa:	429a      	cmp	r2, r3
 80075ac:	d04b      	beq.n	8007646 <pvPortMalloc+0x146>
 80075ae:	6a3b      	ldr	r3, [r7, #32]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	2208      	movs	r2, #8
 80075b4:	4413      	add	r3, r2
 80075b6:	61fb      	str	r3, [r7, #28]
 80075b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075ba:	681a      	ldr	r2, [r3, #0]
 80075bc:	6a3b      	ldr	r3, [r7, #32]
 80075be:	601a      	str	r2, [r3, #0]
 80075c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075c2:	685a      	ldr	r2, [r3, #4]
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	1ad2      	subs	r2, r2, r3
 80075c8:	2308      	movs	r3, #8
 80075ca:	005b      	lsls	r3, r3, #1
 80075cc:	429a      	cmp	r2, r3
 80075ce:	d91f      	bls.n	8007610 <pvPortMalloc+0x110>
 80075d0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	4413      	add	r3, r2
 80075d6:	61bb      	str	r3, [r7, #24]
 80075d8:	69bb      	ldr	r3, [r7, #24]
 80075da:	f003 0307 	and.w	r3, r3, #7
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d00a      	beq.n	80075f8 <pvPortMalloc+0xf8>
 80075e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075e6:	f383 8811 	msr	BASEPRI, r3
 80075ea:	f3bf 8f6f 	isb	sy
 80075ee:	f3bf 8f4f 	dsb	sy
 80075f2:	613b      	str	r3, [r7, #16]
 80075f4:	bf00      	nop
 80075f6:	e7fe      	b.n	80075f6 <pvPortMalloc+0xf6>
 80075f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075fa:	685a      	ldr	r2, [r3, #4]
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	1ad2      	subs	r2, r2, r3
 8007600:	69bb      	ldr	r3, [r7, #24]
 8007602:	605a      	str	r2, [r3, #4]
 8007604:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007606:	687a      	ldr	r2, [r7, #4]
 8007608:	605a      	str	r2, [r3, #4]
 800760a:	69b8      	ldr	r0, [r7, #24]
 800760c:	f000 f8f8 	bl	8007800 <prvInsertBlockIntoFreeList>
 8007610:	4b1a      	ldr	r3, [pc, #104]	; (800767c <pvPortMalloc+0x17c>)
 8007612:	681a      	ldr	r2, [r3, #0]
 8007614:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007616:	685b      	ldr	r3, [r3, #4]
 8007618:	1ad3      	subs	r3, r2, r3
 800761a:	4a18      	ldr	r2, [pc, #96]	; (800767c <pvPortMalloc+0x17c>)
 800761c:	6013      	str	r3, [r2, #0]
 800761e:	4b17      	ldr	r3, [pc, #92]	; (800767c <pvPortMalloc+0x17c>)
 8007620:	681a      	ldr	r2, [r3, #0]
 8007622:	4b18      	ldr	r3, [pc, #96]	; (8007684 <pvPortMalloc+0x184>)
 8007624:	681b      	ldr	r3, [r3, #0]
 8007626:	429a      	cmp	r2, r3
 8007628:	d203      	bcs.n	8007632 <pvPortMalloc+0x132>
 800762a:	4b14      	ldr	r3, [pc, #80]	; (800767c <pvPortMalloc+0x17c>)
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	4a15      	ldr	r2, [pc, #84]	; (8007684 <pvPortMalloc+0x184>)
 8007630:	6013      	str	r3, [r2, #0]
 8007632:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007634:	685a      	ldr	r2, [r3, #4]
 8007636:	4b10      	ldr	r3, [pc, #64]	; (8007678 <pvPortMalloc+0x178>)
 8007638:	681b      	ldr	r3, [r3, #0]
 800763a:	431a      	orrs	r2, r3
 800763c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800763e:	605a      	str	r2, [r3, #4]
 8007640:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007642:	2200      	movs	r2, #0
 8007644:	601a      	str	r2, [r3, #0]
 8007646:	f7ff faa9 	bl	8006b9c <xTaskResumeAll>
 800764a:	69fb      	ldr	r3, [r7, #28]
 800764c:	f003 0307 	and.w	r3, r3, #7
 8007650:	2b00      	cmp	r3, #0
 8007652:	d00a      	beq.n	800766a <pvPortMalloc+0x16a>
 8007654:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007658:	f383 8811 	msr	BASEPRI, r3
 800765c:	f3bf 8f6f 	isb	sy
 8007660:	f3bf 8f4f 	dsb	sy
 8007664:	60fb      	str	r3, [r7, #12]
 8007666:	bf00      	nop
 8007668:	e7fe      	b.n	8007668 <pvPortMalloc+0x168>
 800766a:	69fb      	ldr	r3, [r7, #28]
 800766c:	4618      	mov	r0, r3
 800766e:	3728      	adds	r7, #40	; 0x28
 8007670:	46bd      	mov	sp, r7
 8007672:	bd80      	pop	{r7, pc}
 8007674:	2000152c 	.word	0x2000152c
 8007678:	20001538 	.word	0x20001538
 800767c:	20001530 	.word	0x20001530
 8007680:	20001524 	.word	0x20001524
 8007684:	20001534 	.word	0x20001534

08007688 <vPortFree>:
 8007688:	b580      	push	{r7, lr}
 800768a:	b086      	sub	sp, #24
 800768c:	af00      	add	r7, sp, #0
 800768e:	6078      	str	r0, [r7, #4]
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	617b      	str	r3, [r7, #20]
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	2b00      	cmp	r3, #0
 8007698:	d048      	beq.n	800772c <vPortFree+0xa4>
 800769a:	2308      	movs	r3, #8
 800769c:	425b      	negs	r3, r3
 800769e:	697a      	ldr	r2, [r7, #20]
 80076a0:	4413      	add	r3, r2
 80076a2:	617b      	str	r3, [r7, #20]
 80076a4:	697b      	ldr	r3, [r7, #20]
 80076a6:	613b      	str	r3, [r7, #16]
 80076a8:	693b      	ldr	r3, [r7, #16]
 80076aa:	685a      	ldr	r2, [r3, #4]
 80076ac:	4b21      	ldr	r3, [pc, #132]	; (8007734 <vPortFree+0xac>)
 80076ae:	681b      	ldr	r3, [r3, #0]
 80076b0:	4013      	ands	r3, r2
 80076b2:	2b00      	cmp	r3, #0
 80076b4:	d10a      	bne.n	80076cc <vPortFree+0x44>
 80076b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076ba:	f383 8811 	msr	BASEPRI, r3
 80076be:	f3bf 8f6f 	isb	sy
 80076c2:	f3bf 8f4f 	dsb	sy
 80076c6:	60fb      	str	r3, [r7, #12]
 80076c8:	bf00      	nop
 80076ca:	e7fe      	b.n	80076ca <vPortFree+0x42>
 80076cc:	693b      	ldr	r3, [r7, #16]
 80076ce:	681b      	ldr	r3, [r3, #0]
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d00a      	beq.n	80076ea <vPortFree+0x62>
 80076d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076d8:	f383 8811 	msr	BASEPRI, r3
 80076dc:	f3bf 8f6f 	isb	sy
 80076e0:	f3bf 8f4f 	dsb	sy
 80076e4:	60bb      	str	r3, [r7, #8]
 80076e6:	bf00      	nop
 80076e8:	e7fe      	b.n	80076e8 <vPortFree+0x60>
 80076ea:	693b      	ldr	r3, [r7, #16]
 80076ec:	685a      	ldr	r2, [r3, #4]
 80076ee:	4b11      	ldr	r3, [pc, #68]	; (8007734 <vPortFree+0xac>)
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	4013      	ands	r3, r2
 80076f4:	2b00      	cmp	r3, #0
 80076f6:	d019      	beq.n	800772c <vPortFree+0xa4>
 80076f8:	693b      	ldr	r3, [r7, #16]
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	2b00      	cmp	r3, #0
 80076fe:	d115      	bne.n	800772c <vPortFree+0xa4>
 8007700:	693b      	ldr	r3, [r7, #16]
 8007702:	685a      	ldr	r2, [r3, #4]
 8007704:	4b0b      	ldr	r3, [pc, #44]	; (8007734 <vPortFree+0xac>)
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	43db      	mvns	r3, r3
 800770a:	401a      	ands	r2, r3
 800770c:	693b      	ldr	r3, [r7, #16]
 800770e:	605a      	str	r2, [r3, #4]
 8007710:	f7ff fa36 	bl	8006b80 <vTaskSuspendAll>
 8007714:	693b      	ldr	r3, [r7, #16]
 8007716:	685a      	ldr	r2, [r3, #4]
 8007718:	4b07      	ldr	r3, [pc, #28]	; (8007738 <vPortFree+0xb0>)
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	4413      	add	r3, r2
 800771e:	4a06      	ldr	r2, [pc, #24]	; (8007738 <vPortFree+0xb0>)
 8007720:	6013      	str	r3, [r2, #0]
 8007722:	6938      	ldr	r0, [r7, #16]
 8007724:	f000 f86c 	bl	8007800 <prvInsertBlockIntoFreeList>
 8007728:	f7ff fa38 	bl	8006b9c <xTaskResumeAll>
 800772c:	bf00      	nop
 800772e:	3718      	adds	r7, #24
 8007730:	46bd      	mov	sp, r7
 8007732:	bd80      	pop	{r7, pc}
 8007734:	20001538 	.word	0x20001538
 8007738:	20001530 	.word	0x20001530

0800773c <prvHeapInit>:
 800773c:	b480      	push	{r7}
 800773e:	b085      	sub	sp, #20
 8007740:	af00      	add	r7, sp, #0
 8007742:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8007746:	60bb      	str	r3, [r7, #8]
 8007748:	4b27      	ldr	r3, [pc, #156]	; (80077e8 <prvHeapInit+0xac>)
 800774a:	60fb      	str	r3, [r7, #12]
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	f003 0307 	and.w	r3, r3, #7
 8007752:	2b00      	cmp	r3, #0
 8007754:	d00c      	beq.n	8007770 <prvHeapInit+0x34>
 8007756:	68fb      	ldr	r3, [r7, #12]
 8007758:	3307      	adds	r3, #7
 800775a:	60fb      	str	r3, [r7, #12]
 800775c:	68fb      	ldr	r3, [r7, #12]
 800775e:	f023 0307 	bic.w	r3, r3, #7
 8007762:	60fb      	str	r3, [r7, #12]
 8007764:	68ba      	ldr	r2, [r7, #8]
 8007766:	68fb      	ldr	r3, [r7, #12]
 8007768:	1ad3      	subs	r3, r2, r3
 800776a:	4a1f      	ldr	r2, [pc, #124]	; (80077e8 <prvHeapInit+0xac>)
 800776c:	4413      	add	r3, r2
 800776e:	60bb      	str	r3, [r7, #8]
 8007770:	68fb      	ldr	r3, [r7, #12]
 8007772:	607b      	str	r3, [r7, #4]
 8007774:	4a1d      	ldr	r2, [pc, #116]	; (80077ec <prvHeapInit+0xb0>)
 8007776:	687b      	ldr	r3, [r7, #4]
 8007778:	6013      	str	r3, [r2, #0]
 800777a:	4b1c      	ldr	r3, [pc, #112]	; (80077ec <prvHeapInit+0xb0>)
 800777c:	2200      	movs	r2, #0
 800777e:	605a      	str	r2, [r3, #4]
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	68ba      	ldr	r2, [r7, #8]
 8007784:	4413      	add	r3, r2
 8007786:	60fb      	str	r3, [r7, #12]
 8007788:	2208      	movs	r2, #8
 800778a:	68fb      	ldr	r3, [r7, #12]
 800778c:	1a9b      	subs	r3, r3, r2
 800778e:	60fb      	str	r3, [r7, #12]
 8007790:	68fb      	ldr	r3, [r7, #12]
 8007792:	f023 0307 	bic.w	r3, r3, #7
 8007796:	60fb      	str	r3, [r7, #12]
 8007798:	68fb      	ldr	r3, [r7, #12]
 800779a:	4a15      	ldr	r2, [pc, #84]	; (80077f0 <prvHeapInit+0xb4>)
 800779c:	6013      	str	r3, [r2, #0]
 800779e:	4b14      	ldr	r3, [pc, #80]	; (80077f0 <prvHeapInit+0xb4>)
 80077a0:	681b      	ldr	r3, [r3, #0]
 80077a2:	2200      	movs	r2, #0
 80077a4:	605a      	str	r2, [r3, #4]
 80077a6:	4b12      	ldr	r3, [pc, #72]	; (80077f0 <prvHeapInit+0xb4>)
 80077a8:	681b      	ldr	r3, [r3, #0]
 80077aa:	2200      	movs	r2, #0
 80077ac:	601a      	str	r2, [r3, #0]
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	603b      	str	r3, [r7, #0]
 80077b2:	683b      	ldr	r3, [r7, #0]
 80077b4:	68fa      	ldr	r2, [r7, #12]
 80077b6:	1ad2      	subs	r2, r2, r3
 80077b8:	683b      	ldr	r3, [r7, #0]
 80077ba:	605a      	str	r2, [r3, #4]
 80077bc:	4b0c      	ldr	r3, [pc, #48]	; (80077f0 <prvHeapInit+0xb4>)
 80077be:	681a      	ldr	r2, [r3, #0]
 80077c0:	683b      	ldr	r3, [r7, #0]
 80077c2:	601a      	str	r2, [r3, #0]
 80077c4:	683b      	ldr	r3, [r7, #0]
 80077c6:	685b      	ldr	r3, [r3, #4]
 80077c8:	4a0a      	ldr	r2, [pc, #40]	; (80077f4 <prvHeapInit+0xb8>)
 80077ca:	6013      	str	r3, [r2, #0]
 80077cc:	683b      	ldr	r3, [r7, #0]
 80077ce:	685b      	ldr	r3, [r3, #4]
 80077d0:	4a09      	ldr	r2, [pc, #36]	; (80077f8 <prvHeapInit+0xbc>)
 80077d2:	6013      	str	r3, [r2, #0]
 80077d4:	4b09      	ldr	r3, [pc, #36]	; (80077fc <prvHeapInit+0xc0>)
 80077d6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80077da:	601a      	str	r2, [r3, #0]
 80077dc:	bf00      	nop
 80077de:	3714      	adds	r7, #20
 80077e0:	46bd      	mov	sp, r7
 80077e2:	bc80      	pop	{r7}
 80077e4:	4770      	bx	lr
 80077e6:	bf00      	nop
 80077e8:	20000924 	.word	0x20000924
 80077ec:	20001524 	.word	0x20001524
 80077f0:	2000152c 	.word	0x2000152c
 80077f4:	20001534 	.word	0x20001534
 80077f8:	20001530 	.word	0x20001530
 80077fc:	20001538 	.word	0x20001538

08007800 <prvInsertBlockIntoFreeList>:
 8007800:	b480      	push	{r7}
 8007802:	b085      	sub	sp, #20
 8007804:	af00      	add	r7, sp, #0
 8007806:	6078      	str	r0, [r7, #4]
 8007808:	4b27      	ldr	r3, [pc, #156]	; (80078a8 <prvInsertBlockIntoFreeList+0xa8>)
 800780a:	60fb      	str	r3, [r7, #12]
 800780c:	e002      	b.n	8007814 <prvInsertBlockIntoFreeList+0x14>
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	60fb      	str	r3, [r7, #12]
 8007814:	68fb      	ldr	r3, [r7, #12]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	687a      	ldr	r2, [r7, #4]
 800781a:	429a      	cmp	r2, r3
 800781c:	d8f7      	bhi.n	800780e <prvInsertBlockIntoFreeList+0xe>
 800781e:	68fb      	ldr	r3, [r7, #12]
 8007820:	60bb      	str	r3, [r7, #8]
 8007822:	68fb      	ldr	r3, [r7, #12]
 8007824:	685b      	ldr	r3, [r3, #4]
 8007826:	68ba      	ldr	r2, [r7, #8]
 8007828:	4413      	add	r3, r2
 800782a:	687a      	ldr	r2, [r7, #4]
 800782c:	429a      	cmp	r2, r3
 800782e:	d108      	bne.n	8007842 <prvInsertBlockIntoFreeList+0x42>
 8007830:	68fb      	ldr	r3, [r7, #12]
 8007832:	685a      	ldr	r2, [r3, #4]
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	685b      	ldr	r3, [r3, #4]
 8007838:	441a      	add	r2, r3
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	605a      	str	r2, [r3, #4]
 800783e:	68fb      	ldr	r3, [r7, #12]
 8007840:	607b      	str	r3, [r7, #4]
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	60bb      	str	r3, [r7, #8]
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	685b      	ldr	r3, [r3, #4]
 800784a:	68ba      	ldr	r2, [r7, #8]
 800784c:	441a      	add	r2, r3
 800784e:	68fb      	ldr	r3, [r7, #12]
 8007850:	681b      	ldr	r3, [r3, #0]
 8007852:	429a      	cmp	r2, r3
 8007854:	d118      	bne.n	8007888 <prvInsertBlockIntoFreeList+0x88>
 8007856:	68fb      	ldr	r3, [r7, #12]
 8007858:	681a      	ldr	r2, [r3, #0]
 800785a:	4b14      	ldr	r3, [pc, #80]	; (80078ac <prvInsertBlockIntoFreeList+0xac>)
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	429a      	cmp	r2, r3
 8007860:	d00d      	beq.n	800787e <prvInsertBlockIntoFreeList+0x7e>
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	685a      	ldr	r2, [r3, #4]
 8007866:	68fb      	ldr	r3, [r7, #12]
 8007868:	681b      	ldr	r3, [r3, #0]
 800786a:	685b      	ldr	r3, [r3, #4]
 800786c:	441a      	add	r2, r3
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	605a      	str	r2, [r3, #4]
 8007872:	68fb      	ldr	r3, [r7, #12]
 8007874:	681b      	ldr	r3, [r3, #0]
 8007876:	681a      	ldr	r2, [r3, #0]
 8007878:	687b      	ldr	r3, [r7, #4]
 800787a:	601a      	str	r2, [r3, #0]
 800787c:	e008      	b.n	8007890 <prvInsertBlockIntoFreeList+0x90>
 800787e:	4b0b      	ldr	r3, [pc, #44]	; (80078ac <prvInsertBlockIntoFreeList+0xac>)
 8007880:	681a      	ldr	r2, [r3, #0]
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	601a      	str	r2, [r3, #0]
 8007886:	e003      	b.n	8007890 <prvInsertBlockIntoFreeList+0x90>
 8007888:	68fb      	ldr	r3, [r7, #12]
 800788a:	681a      	ldr	r2, [r3, #0]
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	601a      	str	r2, [r3, #0]
 8007890:	68fa      	ldr	r2, [r7, #12]
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	429a      	cmp	r2, r3
 8007896:	d002      	beq.n	800789e <prvInsertBlockIntoFreeList+0x9e>
 8007898:	68fb      	ldr	r3, [r7, #12]
 800789a:	687a      	ldr	r2, [r7, #4]
 800789c:	601a      	str	r2, [r3, #0]
 800789e:	bf00      	nop
 80078a0:	3714      	adds	r7, #20
 80078a2:	46bd      	mov	sp, r7
 80078a4:	bc80      	pop	{r7}
 80078a6:	4770      	bx	lr
 80078a8:	20001524 	.word	0x20001524
 80078ac:	2000152c 	.word	0x2000152c

080078b0 <ceilf>:
 80078b0:	b570      	push	{r4, r5, r6, lr}
 80078b2:	f3c0 55c7 	ubfx	r5, r0, #23, #8
 80078b6:	3d7f      	subs	r5, #127	; 0x7f
 80078b8:	2d16      	cmp	r5, #22
 80078ba:	4601      	mov	r1, r0
 80078bc:	4604      	mov	r4, r0
 80078be:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 80078c2:	dc25      	bgt.n	8007910 <ceilf+0x60>
 80078c4:	2d00      	cmp	r5, #0
 80078c6:	da0e      	bge.n	80078e6 <ceilf+0x36>
 80078c8:	4917      	ldr	r1, [pc, #92]	; (8007928 <ceilf+0x78>)
 80078ca:	f7f9 f953 	bl	8000b74 <__addsf3>
 80078ce:	2100      	movs	r1, #0
 80078d0:	f7f9 fc14 	bl	80010fc <__aeabi_fcmpgt>
 80078d4:	b128      	cbz	r0, 80078e2 <ceilf+0x32>
 80078d6:	2c00      	cmp	r4, #0
 80078d8:	db22      	blt.n	8007920 <ceilf+0x70>
 80078da:	2e00      	cmp	r6, #0
 80078dc:	bf18      	it	ne
 80078de:	f04f 547e 	movne.w	r4, #1065353216	; 0x3f800000
 80078e2:	4621      	mov	r1, r4
 80078e4:	e01a      	b.n	800791c <ceilf+0x6c>
 80078e6:	4e11      	ldr	r6, [pc, #68]	; (800792c <ceilf+0x7c>)
 80078e8:	412e      	asrs	r6, r5
 80078ea:	4230      	tst	r0, r6
 80078ec:	d016      	beq.n	800791c <ceilf+0x6c>
 80078ee:	490e      	ldr	r1, [pc, #56]	; (8007928 <ceilf+0x78>)
 80078f0:	f7f9 f940 	bl	8000b74 <__addsf3>
 80078f4:	2100      	movs	r1, #0
 80078f6:	f7f9 fc01 	bl	80010fc <__aeabi_fcmpgt>
 80078fa:	2800      	cmp	r0, #0
 80078fc:	d0f1      	beq.n	80078e2 <ceilf+0x32>
 80078fe:	2c00      	cmp	r4, #0
 8007900:	bfc2      	ittt	gt
 8007902:	f44f 0300 	movgt.w	r3, #8388608	; 0x800000
 8007906:	412b      	asrgt	r3, r5
 8007908:	18e4      	addgt	r4, r4, r3
 800790a:	ea24 0406 	bic.w	r4, r4, r6
 800790e:	e7e8      	b.n	80078e2 <ceilf+0x32>
 8007910:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8007914:	d302      	bcc.n	800791c <ceilf+0x6c>
 8007916:	f7f9 f92d 	bl	8000b74 <__addsf3>
 800791a:	4601      	mov	r1, r0
 800791c:	4608      	mov	r0, r1
 800791e:	bd70      	pop	{r4, r5, r6, pc}
 8007920:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8007924:	e7dd      	b.n	80078e2 <ceilf+0x32>
 8007926:	bf00      	nop
 8007928:	7149f2ca 	.word	0x7149f2ca
 800792c:	007fffff 	.word	0x007fffff

08007930 <__cvt>:
 8007930:	2b00      	cmp	r3, #0
 8007932:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007936:	461f      	mov	r7, r3
 8007938:	bfbb      	ittet	lt
 800793a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800793e:	461f      	movlt	r7, r3
 8007940:	2300      	movge	r3, #0
 8007942:	232d      	movlt	r3, #45	; 0x2d
 8007944:	b088      	sub	sp, #32
 8007946:	4614      	mov	r4, r2
 8007948:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800794a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800794c:	7013      	strb	r3, [r2, #0]
 800794e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007950:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8007954:	f023 0820 	bic.w	r8, r3, #32
 8007958:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800795c:	d005      	beq.n	800796a <__cvt+0x3a>
 800795e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8007962:	d100      	bne.n	8007966 <__cvt+0x36>
 8007964:	3501      	adds	r5, #1
 8007966:	2302      	movs	r3, #2
 8007968:	e000      	b.n	800796c <__cvt+0x3c>
 800796a:	2303      	movs	r3, #3
 800796c:	aa07      	add	r2, sp, #28
 800796e:	9204      	str	r2, [sp, #16]
 8007970:	aa06      	add	r2, sp, #24
 8007972:	e9cd a202 	strd	sl, r2, [sp, #8]
 8007976:	e9cd 3500 	strd	r3, r5, [sp]
 800797a:	4622      	mov	r2, r4
 800797c:	463b      	mov	r3, r7
 800797e:	f000 feb7 	bl	80086f0 <_dtoa_r>
 8007982:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8007986:	4606      	mov	r6, r0
 8007988:	d102      	bne.n	8007990 <__cvt+0x60>
 800798a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800798c:	07db      	lsls	r3, r3, #31
 800798e:	d522      	bpl.n	80079d6 <__cvt+0xa6>
 8007990:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8007994:	eb06 0905 	add.w	r9, r6, r5
 8007998:	d110      	bne.n	80079bc <__cvt+0x8c>
 800799a:	7833      	ldrb	r3, [r6, #0]
 800799c:	2b30      	cmp	r3, #48	; 0x30
 800799e:	d10a      	bne.n	80079b6 <__cvt+0x86>
 80079a0:	2200      	movs	r2, #0
 80079a2:	2300      	movs	r3, #0
 80079a4:	4620      	mov	r0, r4
 80079a6:	4639      	mov	r1, r7
 80079a8:	f7f8 fffe 	bl	80009a8 <__aeabi_dcmpeq>
 80079ac:	b918      	cbnz	r0, 80079b6 <__cvt+0x86>
 80079ae:	f1c5 0501 	rsb	r5, r5, #1
 80079b2:	f8ca 5000 	str.w	r5, [sl]
 80079b6:	f8da 3000 	ldr.w	r3, [sl]
 80079ba:	4499      	add	r9, r3
 80079bc:	2200      	movs	r2, #0
 80079be:	2300      	movs	r3, #0
 80079c0:	4620      	mov	r0, r4
 80079c2:	4639      	mov	r1, r7
 80079c4:	f7f8 fff0 	bl	80009a8 <__aeabi_dcmpeq>
 80079c8:	b108      	cbz	r0, 80079ce <__cvt+0x9e>
 80079ca:	f8cd 901c 	str.w	r9, [sp, #28]
 80079ce:	2230      	movs	r2, #48	; 0x30
 80079d0:	9b07      	ldr	r3, [sp, #28]
 80079d2:	454b      	cmp	r3, r9
 80079d4:	d307      	bcc.n	80079e6 <__cvt+0xb6>
 80079d6:	4630      	mov	r0, r6
 80079d8:	9b07      	ldr	r3, [sp, #28]
 80079da:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80079dc:	1b9b      	subs	r3, r3, r6
 80079de:	6013      	str	r3, [r2, #0]
 80079e0:	b008      	add	sp, #32
 80079e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80079e6:	1c59      	adds	r1, r3, #1
 80079e8:	9107      	str	r1, [sp, #28]
 80079ea:	701a      	strb	r2, [r3, #0]
 80079ec:	e7f0      	b.n	80079d0 <__cvt+0xa0>

080079ee <__exponent>:
 80079ee:	4603      	mov	r3, r0
 80079f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80079f2:	2900      	cmp	r1, #0
 80079f4:	f803 2b02 	strb.w	r2, [r3], #2
 80079f8:	bfb6      	itet	lt
 80079fa:	222d      	movlt	r2, #45	; 0x2d
 80079fc:	222b      	movge	r2, #43	; 0x2b
 80079fe:	4249      	neglt	r1, r1
 8007a00:	2909      	cmp	r1, #9
 8007a02:	7042      	strb	r2, [r0, #1]
 8007a04:	dd2a      	ble.n	8007a5c <__exponent+0x6e>
 8007a06:	f10d 0207 	add.w	r2, sp, #7
 8007a0a:	4617      	mov	r7, r2
 8007a0c:	260a      	movs	r6, #10
 8007a0e:	fb91 f5f6 	sdiv	r5, r1, r6
 8007a12:	4694      	mov	ip, r2
 8007a14:	fb06 1415 	mls	r4, r6, r5, r1
 8007a18:	3430      	adds	r4, #48	; 0x30
 8007a1a:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8007a1e:	460c      	mov	r4, r1
 8007a20:	2c63      	cmp	r4, #99	; 0x63
 8007a22:	4629      	mov	r1, r5
 8007a24:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8007a28:	dcf1      	bgt.n	8007a0e <__exponent+0x20>
 8007a2a:	3130      	adds	r1, #48	; 0x30
 8007a2c:	f1ac 0402 	sub.w	r4, ip, #2
 8007a30:	f802 1c01 	strb.w	r1, [r2, #-1]
 8007a34:	4622      	mov	r2, r4
 8007a36:	1c41      	adds	r1, r0, #1
 8007a38:	42ba      	cmp	r2, r7
 8007a3a:	d30a      	bcc.n	8007a52 <__exponent+0x64>
 8007a3c:	f10d 0209 	add.w	r2, sp, #9
 8007a40:	eba2 020c 	sub.w	r2, r2, ip
 8007a44:	42bc      	cmp	r4, r7
 8007a46:	bf88      	it	hi
 8007a48:	2200      	movhi	r2, #0
 8007a4a:	4413      	add	r3, r2
 8007a4c:	1a18      	subs	r0, r3, r0
 8007a4e:	b003      	add	sp, #12
 8007a50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a52:	f812 5b01 	ldrb.w	r5, [r2], #1
 8007a56:	f801 5f01 	strb.w	r5, [r1, #1]!
 8007a5a:	e7ed      	b.n	8007a38 <__exponent+0x4a>
 8007a5c:	2330      	movs	r3, #48	; 0x30
 8007a5e:	3130      	adds	r1, #48	; 0x30
 8007a60:	7083      	strb	r3, [r0, #2]
 8007a62:	70c1      	strb	r1, [r0, #3]
 8007a64:	1d03      	adds	r3, r0, #4
 8007a66:	e7f1      	b.n	8007a4c <__exponent+0x5e>

08007a68 <_printf_float>:
 8007a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a6c:	b091      	sub	sp, #68	; 0x44
 8007a6e:	460c      	mov	r4, r1
 8007a70:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8007a74:	4616      	mov	r6, r2
 8007a76:	461f      	mov	r7, r3
 8007a78:	4605      	mov	r5, r0
 8007a7a:	f000 fcc5 	bl	8008408 <_localeconv_r>
 8007a7e:	6803      	ldr	r3, [r0, #0]
 8007a80:	4618      	mov	r0, r3
 8007a82:	9309      	str	r3, [sp, #36]	; 0x24
 8007a84:	f7f8 fb64 	bl	8000150 <strlen>
 8007a88:	2300      	movs	r3, #0
 8007a8a:	930e      	str	r3, [sp, #56]	; 0x38
 8007a8c:	f8d8 3000 	ldr.w	r3, [r8]
 8007a90:	900a      	str	r0, [sp, #40]	; 0x28
 8007a92:	3307      	adds	r3, #7
 8007a94:	f023 0307 	bic.w	r3, r3, #7
 8007a98:	f103 0208 	add.w	r2, r3, #8
 8007a9c:	f894 9018 	ldrb.w	r9, [r4, #24]
 8007aa0:	f8d4 b000 	ldr.w	fp, [r4]
 8007aa4:	f8c8 2000 	str.w	r2, [r8]
 8007aa8:	e9d3 a800 	ldrd	sl, r8, [r3]
 8007aac:	4652      	mov	r2, sl
 8007aae:	4643      	mov	r3, r8
 8007ab0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8007ab4:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8007ab8:	930b      	str	r3, [sp, #44]	; 0x2c
 8007aba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007abe:	4650      	mov	r0, sl
 8007ac0:	4b9c      	ldr	r3, [pc, #624]	; (8007d34 <_printf_float+0x2cc>)
 8007ac2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007ac4:	f7f8 ffa2 	bl	8000a0c <__aeabi_dcmpun>
 8007ac8:	bb70      	cbnz	r0, 8007b28 <_printf_float+0xc0>
 8007aca:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007ace:	4650      	mov	r0, sl
 8007ad0:	4b98      	ldr	r3, [pc, #608]	; (8007d34 <_printf_float+0x2cc>)
 8007ad2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007ad4:	f7f8 ff7c 	bl	80009d0 <__aeabi_dcmple>
 8007ad8:	bb30      	cbnz	r0, 8007b28 <_printf_float+0xc0>
 8007ada:	2200      	movs	r2, #0
 8007adc:	2300      	movs	r3, #0
 8007ade:	4650      	mov	r0, sl
 8007ae0:	4641      	mov	r1, r8
 8007ae2:	f7f8 ff6b 	bl	80009bc <__aeabi_dcmplt>
 8007ae6:	b110      	cbz	r0, 8007aee <_printf_float+0x86>
 8007ae8:	232d      	movs	r3, #45	; 0x2d
 8007aea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007aee:	4a92      	ldr	r2, [pc, #584]	; (8007d38 <_printf_float+0x2d0>)
 8007af0:	4b92      	ldr	r3, [pc, #584]	; (8007d3c <_printf_float+0x2d4>)
 8007af2:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8007af6:	bf94      	ite	ls
 8007af8:	4690      	movls	r8, r2
 8007afa:	4698      	movhi	r8, r3
 8007afc:	2303      	movs	r3, #3
 8007afe:	f04f 0a00 	mov.w	sl, #0
 8007b02:	6123      	str	r3, [r4, #16]
 8007b04:	f02b 0304 	bic.w	r3, fp, #4
 8007b08:	6023      	str	r3, [r4, #0]
 8007b0a:	4633      	mov	r3, r6
 8007b0c:	4621      	mov	r1, r4
 8007b0e:	4628      	mov	r0, r5
 8007b10:	9700      	str	r7, [sp, #0]
 8007b12:	aa0f      	add	r2, sp, #60	; 0x3c
 8007b14:	f000 f9d6 	bl	8007ec4 <_printf_common>
 8007b18:	3001      	adds	r0, #1
 8007b1a:	f040 8090 	bne.w	8007c3e <_printf_float+0x1d6>
 8007b1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007b22:	b011      	add	sp, #68	; 0x44
 8007b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007b28:	4652      	mov	r2, sl
 8007b2a:	4643      	mov	r3, r8
 8007b2c:	4650      	mov	r0, sl
 8007b2e:	4641      	mov	r1, r8
 8007b30:	f7f8 ff6c 	bl	8000a0c <__aeabi_dcmpun>
 8007b34:	b148      	cbz	r0, 8007b4a <_printf_float+0xe2>
 8007b36:	f1b8 0f00 	cmp.w	r8, #0
 8007b3a:	bfb8      	it	lt
 8007b3c:	232d      	movlt	r3, #45	; 0x2d
 8007b3e:	4a80      	ldr	r2, [pc, #512]	; (8007d40 <_printf_float+0x2d8>)
 8007b40:	bfb8      	it	lt
 8007b42:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8007b46:	4b7f      	ldr	r3, [pc, #508]	; (8007d44 <_printf_float+0x2dc>)
 8007b48:	e7d3      	b.n	8007af2 <_printf_float+0x8a>
 8007b4a:	6863      	ldr	r3, [r4, #4]
 8007b4c:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8007b50:	1c5a      	adds	r2, r3, #1
 8007b52:	d142      	bne.n	8007bda <_printf_float+0x172>
 8007b54:	2306      	movs	r3, #6
 8007b56:	6063      	str	r3, [r4, #4]
 8007b58:	2200      	movs	r2, #0
 8007b5a:	9206      	str	r2, [sp, #24]
 8007b5c:	aa0e      	add	r2, sp, #56	; 0x38
 8007b5e:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8007b62:	aa0d      	add	r2, sp, #52	; 0x34
 8007b64:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8007b68:	9203      	str	r2, [sp, #12]
 8007b6a:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8007b6e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8007b72:	6023      	str	r3, [r4, #0]
 8007b74:	6863      	ldr	r3, [r4, #4]
 8007b76:	4652      	mov	r2, sl
 8007b78:	9300      	str	r3, [sp, #0]
 8007b7a:	4628      	mov	r0, r5
 8007b7c:	4643      	mov	r3, r8
 8007b7e:	910b      	str	r1, [sp, #44]	; 0x2c
 8007b80:	f7ff fed6 	bl	8007930 <__cvt>
 8007b84:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007b86:	4680      	mov	r8, r0
 8007b88:	2947      	cmp	r1, #71	; 0x47
 8007b8a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8007b8c:	d108      	bne.n	8007ba0 <_printf_float+0x138>
 8007b8e:	1cc8      	adds	r0, r1, #3
 8007b90:	db02      	blt.n	8007b98 <_printf_float+0x130>
 8007b92:	6863      	ldr	r3, [r4, #4]
 8007b94:	4299      	cmp	r1, r3
 8007b96:	dd40      	ble.n	8007c1a <_printf_float+0x1b2>
 8007b98:	f1a9 0902 	sub.w	r9, r9, #2
 8007b9c:	fa5f f989 	uxtb.w	r9, r9
 8007ba0:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8007ba4:	d81f      	bhi.n	8007be6 <_printf_float+0x17e>
 8007ba6:	464a      	mov	r2, r9
 8007ba8:	3901      	subs	r1, #1
 8007baa:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8007bae:	910d      	str	r1, [sp, #52]	; 0x34
 8007bb0:	f7ff ff1d 	bl	80079ee <__exponent>
 8007bb4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007bb6:	4682      	mov	sl, r0
 8007bb8:	1813      	adds	r3, r2, r0
 8007bba:	2a01      	cmp	r2, #1
 8007bbc:	6123      	str	r3, [r4, #16]
 8007bbe:	dc02      	bgt.n	8007bc6 <_printf_float+0x15e>
 8007bc0:	6822      	ldr	r2, [r4, #0]
 8007bc2:	07d2      	lsls	r2, r2, #31
 8007bc4:	d501      	bpl.n	8007bca <_printf_float+0x162>
 8007bc6:	3301      	adds	r3, #1
 8007bc8:	6123      	str	r3, [r4, #16]
 8007bca:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8007bce:	2b00      	cmp	r3, #0
 8007bd0:	d09b      	beq.n	8007b0a <_printf_float+0xa2>
 8007bd2:	232d      	movs	r3, #45	; 0x2d
 8007bd4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007bd8:	e797      	b.n	8007b0a <_printf_float+0xa2>
 8007bda:	2947      	cmp	r1, #71	; 0x47
 8007bdc:	d1bc      	bne.n	8007b58 <_printf_float+0xf0>
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	d1ba      	bne.n	8007b58 <_printf_float+0xf0>
 8007be2:	2301      	movs	r3, #1
 8007be4:	e7b7      	b.n	8007b56 <_printf_float+0xee>
 8007be6:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8007bea:	d118      	bne.n	8007c1e <_printf_float+0x1b6>
 8007bec:	2900      	cmp	r1, #0
 8007bee:	6863      	ldr	r3, [r4, #4]
 8007bf0:	dd0b      	ble.n	8007c0a <_printf_float+0x1a2>
 8007bf2:	6121      	str	r1, [r4, #16]
 8007bf4:	b913      	cbnz	r3, 8007bfc <_printf_float+0x194>
 8007bf6:	6822      	ldr	r2, [r4, #0]
 8007bf8:	07d0      	lsls	r0, r2, #31
 8007bfa:	d502      	bpl.n	8007c02 <_printf_float+0x19a>
 8007bfc:	3301      	adds	r3, #1
 8007bfe:	440b      	add	r3, r1
 8007c00:	6123      	str	r3, [r4, #16]
 8007c02:	f04f 0a00 	mov.w	sl, #0
 8007c06:	65a1      	str	r1, [r4, #88]	; 0x58
 8007c08:	e7df      	b.n	8007bca <_printf_float+0x162>
 8007c0a:	b913      	cbnz	r3, 8007c12 <_printf_float+0x1aa>
 8007c0c:	6822      	ldr	r2, [r4, #0]
 8007c0e:	07d2      	lsls	r2, r2, #31
 8007c10:	d501      	bpl.n	8007c16 <_printf_float+0x1ae>
 8007c12:	3302      	adds	r3, #2
 8007c14:	e7f4      	b.n	8007c00 <_printf_float+0x198>
 8007c16:	2301      	movs	r3, #1
 8007c18:	e7f2      	b.n	8007c00 <_printf_float+0x198>
 8007c1a:	f04f 0967 	mov.w	r9, #103	; 0x67
 8007c1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007c20:	4299      	cmp	r1, r3
 8007c22:	db05      	blt.n	8007c30 <_printf_float+0x1c8>
 8007c24:	6823      	ldr	r3, [r4, #0]
 8007c26:	6121      	str	r1, [r4, #16]
 8007c28:	07d8      	lsls	r0, r3, #31
 8007c2a:	d5ea      	bpl.n	8007c02 <_printf_float+0x19a>
 8007c2c:	1c4b      	adds	r3, r1, #1
 8007c2e:	e7e7      	b.n	8007c00 <_printf_float+0x198>
 8007c30:	2900      	cmp	r1, #0
 8007c32:	bfcc      	ite	gt
 8007c34:	2201      	movgt	r2, #1
 8007c36:	f1c1 0202 	rsble	r2, r1, #2
 8007c3a:	4413      	add	r3, r2
 8007c3c:	e7e0      	b.n	8007c00 <_printf_float+0x198>
 8007c3e:	6823      	ldr	r3, [r4, #0]
 8007c40:	055a      	lsls	r2, r3, #21
 8007c42:	d407      	bmi.n	8007c54 <_printf_float+0x1ec>
 8007c44:	6923      	ldr	r3, [r4, #16]
 8007c46:	4642      	mov	r2, r8
 8007c48:	4631      	mov	r1, r6
 8007c4a:	4628      	mov	r0, r5
 8007c4c:	47b8      	blx	r7
 8007c4e:	3001      	adds	r0, #1
 8007c50:	d12b      	bne.n	8007caa <_printf_float+0x242>
 8007c52:	e764      	b.n	8007b1e <_printf_float+0xb6>
 8007c54:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8007c58:	f240 80dd 	bls.w	8007e16 <_printf_float+0x3ae>
 8007c5c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007c60:	2200      	movs	r2, #0
 8007c62:	2300      	movs	r3, #0
 8007c64:	f7f8 fea0 	bl	80009a8 <__aeabi_dcmpeq>
 8007c68:	2800      	cmp	r0, #0
 8007c6a:	d033      	beq.n	8007cd4 <_printf_float+0x26c>
 8007c6c:	2301      	movs	r3, #1
 8007c6e:	4631      	mov	r1, r6
 8007c70:	4628      	mov	r0, r5
 8007c72:	4a35      	ldr	r2, [pc, #212]	; (8007d48 <_printf_float+0x2e0>)
 8007c74:	47b8      	blx	r7
 8007c76:	3001      	adds	r0, #1
 8007c78:	f43f af51 	beq.w	8007b1e <_printf_float+0xb6>
 8007c7c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8007c80:	429a      	cmp	r2, r3
 8007c82:	db02      	blt.n	8007c8a <_printf_float+0x222>
 8007c84:	6823      	ldr	r3, [r4, #0]
 8007c86:	07d8      	lsls	r0, r3, #31
 8007c88:	d50f      	bpl.n	8007caa <_printf_float+0x242>
 8007c8a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007c8e:	4631      	mov	r1, r6
 8007c90:	4628      	mov	r0, r5
 8007c92:	47b8      	blx	r7
 8007c94:	3001      	adds	r0, #1
 8007c96:	f43f af42 	beq.w	8007b1e <_printf_float+0xb6>
 8007c9a:	f04f 0800 	mov.w	r8, #0
 8007c9e:	f104 091a 	add.w	r9, r4, #26
 8007ca2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007ca4:	3b01      	subs	r3, #1
 8007ca6:	4543      	cmp	r3, r8
 8007ca8:	dc09      	bgt.n	8007cbe <_printf_float+0x256>
 8007caa:	6823      	ldr	r3, [r4, #0]
 8007cac:	079b      	lsls	r3, r3, #30
 8007cae:	f100 8104 	bmi.w	8007eba <_printf_float+0x452>
 8007cb2:	68e0      	ldr	r0, [r4, #12]
 8007cb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007cb6:	4298      	cmp	r0, r3
 8007cb8:	bfb8      	it	lt
 8007cba:	4618      	movlt	r0, r3
 8007cbc:	e731      	b.n	8007b22 <_printf_float+0xba>
 8007cbe:	2301      	movs	r3, #1
 8007cc0:	464a      	mov	r2, r9
 8007cc2:	4631      	mov	r1, r6
 8007cc4:	4628      	mov	r0, r5
 8007cc6:	47b8      	blx	r7
 8007cc8:	3001      	adds	r0, #1
 8007cca:	f43f af28 	beq.w	8007b1e <_printf_float+0xb6>
 8007cce:	f108 0801 	add.w	r8, r8, #1
 8007cd2:	e7e6      	b.n	8007ca2 <_printf_float+0x23a>
 8007cd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007cd6:	2b00      	cmp	r3, #0
 8007cd8:	dc38      	bgt.n	8007d4c <_printf_float+0x2e4>
 8007cda:	2301      	movs	r3, #1
 8007cdc:	4631      	mov	r1, r6
 8007cde:	4628      	mov	r0, r5
 8007ce0:	4a19      	ldr	r2, [pc, #100]	; (8007d48 <_printf_float+0x2e0>)
 8007ce2:	47b8      	blx	r7
 8007ce4:	3001      	adds	r0, #1
 8007ce6:	f43f af1a 	beq.w	8007b1e <_printf_float+0xb6>
 8007cea:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8007cee:	4313      	orrs	r3, r2
 8007cf0:	d102      	bne.n	8007cf8 <_printf_float+0x290>
 8007cf2:	6823      	ldr	r3, [r4, #0]
 8007cf4:	07d9      	lsls	r1, r3, #31
 8007cf6:	d5d8      	bpl.n	8007caa <_printf_float+0x242>
 8007cf8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007cfc:	4631      	mov	r1, r6
 8007cfe:	4628      	mov	r0, r5
 8007d00:	47b8      	blx	r7
 8007d02:	3001      	adds	r0, #1
 8007d04:	f43f af0b 	beq.w	8007b1e <_printf_float+0xb6>
 8007d08:	f04f 0900 	mov.w	r9, #0
 8007d0c:	f104 0a1a 	add.w	sl, r4, #26
 8007d10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007d12:	425b      	negs	r3, r3
 8007d14:	454b      	cmp	r3, r9
 8007d16:	dc01      	bgt.n	8007d1c <_printf_float+0x2b4>
 8007d18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007d1a:	e794      	b.n	8007c46 <_printf_float+0x1de>
 8007d1c:	2301      	movs	r3, #1
 8007d1e:	4652      	mov	r2, sl
 8007d20:	4631      	mov	r1, r6
 8007d22:	4628      	mov	r0, r5
 8007d24:	47b8      	blx	r7
 8007d26:	3001      	adds	r0, #1
 8007d28:	f43f aef9 	beq.w	8007b1e <_printf_float+0xb6>
 8007d2c:	f109 0901 	add.w	r9, r9, #1
 8007d30:	e7ee      	b.n	8007d10 <_printf_float+0x2a8>
 8007d32:	bf00      	nop
 8007d34:	7fefffff 	.word	0x7fefffff
 8007d38:	0800a3ea 	.word	0x0800a3ea
 8007d3c:	0800a3ee 	.word	0x0800a3ee
 8007d40:	0800a3f2 	.word	0x0800a3f2
 8007d44:	0800a3f6 	.word	0x0800a3f6
 8007d48:	0800a3fa 	.word	0x0800a3fa
 8007d4c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007d4e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8007d50:	429a      	cmp	r2, r3
 8007d52:	bfa8      	it	ge
 8007d54:	461a      	movge	r2, r3
 8007d56:	2a00      	cmp	r2, #0
 8007d58:	4691      	mov	r9, r2
 8007d5a:	dc37      	bgt.n	8007dcc <_printf_float+0x364>
 8007d5c:	f04f 0b00 	mov.w	fp, #0
 8007d60:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007d64:	f104 021a 	add.w	r2, r4, #26
 8007d68:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8007d6c:	ebaa 0309 	sub.w	r3, sl, r9
 8007d70:	455b      	cmp	r3, fp
 8007d72:	dc33      	bgt.n	8007ddc <_printf_float+0x374>
 8007d74:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8007d78:	429a      	cmp	r2, r3
 8007d7a:	db3b      	blt.n	8007df4 <_printf_float+0x38c>
 8007d7c:	6823      	ldr	r3, [r4, #0]
 8007d7e:	07da      	lsls	r2, r3, #31
 8007d80:	d438      	bmi.n	8007df4 <_printf_float+0x38c>
 8007d82:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8007d86:	eba2 0903 	sub.w	r9, r2, r3
 8007d8a:	eba2 020a 	sub.w	r2, r2, sl
 8007d8e:	4591      	cmp	r9, r2
 8007d90:	bfa8      	it	ge
 8007d92:	4691      	movge	r9, r2
 8007d94:	f1b9 0f00 	cmp.w	r9, #0
 8007d98:	dc34      	bgt.n	8007e04 <_printf_float+0x39c>
 8007d9a:	f04f 0800 	mov.w	r8, #0
 8007d9e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007da2:	f104 0a1a 	add.w	sl, r4, #26
 8007da6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8007daa:	1a9b      	subs	r3, r3, r2
 8007dac:	eba3 0309 	sub.w	r3, r3, r9
 8007db0:	4543      	cmp	r3, r8
 8007db2:	f77f af7a 	ble.w	8007caa <_printf_float+0x242>
 8007db6:	2301      	movs	r3, #1
 8007db8:	4652      	mov	r2, sl
 8007dba:	4631      	mov	r1, r6
 8007dbc:	4628      	mov	r0, r5
 8007dbe:	47b8      	blx	r7
 8007dc0:	3001      	adds	r0, #1
 8007dc2:	f43f aeac 	beq.w	8007b1e <_printf_float+0xb6>
 8007dc6:	f108 0801 	add.w	r8, r8, #1
 8007dca:	e7ec      	b.n	8007da6 <_printf_float+0x33e>
 8007dcc:	4613      	mov	r3, r2
 8007dce:	4631      	mov	r1, r6
 8007dd0:	4642      	mov	r2, r8
 8007dd2:	4628      	mov	r0, r5
 8007dd4:	47b8      	blx	r7
 8007dd6:	3001      	adds	r0, #1
 8007dd8:	d1c0      	bne.n	8007d5c <_printf_float+0x2f4>
 8007dda:	e6a0      	b.n	8007b1e <_printf_float+0xb6>
 8007ddc:	2301      	movs	r3, #1
 8007dde:	4631      	mov	r1, r6
 8007de0:	4628      	mov	r0, r5
 8007de2:	920b      	str	r2, [sp, #44]	; 0x2c
 8007de4:	47b8      	blx	r7
 8007de6:	3001      	adds	r0, #1
 8007de8:	f43f ae99 	beq.w	8007b1e <_printf_float+0xb6>
 8007dec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007dee:	f10b 0b01 	add.w	fp, fp, #1
 8007df2:	e7b9      	b.n	8007d68 <_printf_float+0x300>
 8007df4:	4631      	mov	r1, r6
 8007df6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007dfa:	4628      	mov	r0, r5
 8007dfc:	47b8      	blx	r7
 8007dfe:	3001      	adds	r0, #1
 8007e00:	d1bf      	bne.n	8007d82 <_printf_float+0x31a>
 8007e02:	e68c      	b.n	8007b1e <_printf_float+0xb6>
 8007e04:	464b      	mov	r3, r9
 8007e06:	4631      	mov	r1, r6
 8007e08:	4628      	mov	r0, r5
 8007e0a:	eb08 020a 	add.w	r2, r8, sl
 8007e0e:	47b8      	blx	r7
 8007e10:	3001      	adds	r0, #1
 8007e12:	d1c2      	bne.n	8007d9a <_printf_float+0x332>
 8007e14:	e683      	b.n	8007b1e <_printf_float+0xb6>
 8007e16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007e18:	2a01      	cmp	r2, #1
 8007e1a:	dc01      	bgt.n	8007e20 <_printf_float+0x3b8>
 8007e1c:	07db      	lsls	r3, r3, #31
 8007e1e:	d539      	bpl.n	8007e94 <_printf_float+0x42c>
 8007e20:	2301      	movs	r3, #1
 8007e22:	4642      	mov	r2, r8
 8007e24:	4631      	mov	r1, r6
 8007e26:	4628      	mov	r0, r5
 8007e28:	47b8      	blx	r7
 8007e2a:	3001      	adds	r0, #1
 8007e2c:	f43f ae77 	beq.w	8007b1e <_printf_float+0xb6>
 8007e30:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007e34:	4631      	mov	r1, r6
 8007e36:	4628      	mov	r0, r5
 8007e38:	47b8      	blx	r7
 8007e3a:	3001      	adds	r0, #1
 8007e3c:	f43f ae6f 	beq.w	8007b1e <_printf_float+0xb6>
 8007e40:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007e44:	2200      	movs	r2, #0
 8007e46:	2300      	movs	r3, #0
 8007e48:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 8007e4c:	f7f8 fdac 	bl	80009a8 <__aeabi_dcmpeq>
 8007e50:	b9d8      	cbnz	r0, 8007e8a <_printf_float+0x422>
 8007e52:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
 8007e56:	f108 0201 	add.w	r2, r8, #1
 8007e5a:	4631      	mov	r1, r6
 8007e5c:	4628      	mov	r0, r5
 8007e5e:	47b8      	blx	r7
 8007e60:	3001      	adds	r0, #1
 8007e62:	d10e      	bne.n	8007e82 <_printf_float+0x41a>
 8007e64:	e65b      	b.n	8007b1e <_printf_float+0xb6>
 8007e66:	2301      	movs	r3, #1
 8007e68:	464a      	mov	r2, r9
 8007e6a:	4631      	mov	r1, r6
 8007e6c:	4628      	mov	r0, r5
 8007e6e:	47b8      	blx	r7
 8007e70:	3001      	adds	r0, #1
 8007e72:	f43f ae54 	beq.w	8007b1e <_printf_float+0xb6>
 8007e76:	f108 0801 	add.w	r8, r8, #1
 8007e7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007e7c:	3b01      	subs	r3, #1
 8007e7e:	4543      	cmp	r3, r8
 8007e80:	dcf1      	bgt.n	8007e66 <_printf_float+0x3fe>
 8007e82:	4653      	mov	r3, sl
 8007e84:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8007e88:	e6de      	b.n	8007c48 <_printf_float+0x1e0>
 8007e8a:	f04f 0800 	mov.w	r8, #0
 8007e8e:	f104 091a 	add.w	r9, r4, #26
 8007e92:	e7f2      	b.n	8007e7a <_printf_float+0x412>
 8007e94:	2301      	movs	r3, #1
 8007e96:	4642      	mov	r2, r8
 8007e98:	e7df      	b.n	8007e5a <_printf_float+0x3f2>
 8007e9a:	2301      	movs	r3, #1
 8007e9c:	464a      	mov	r2, r9
 8007e9e:	4631      	mov	r1, r6
 8007ea0:	4628      	mov	r0, r5
 8007ea2:	47b8      	blx	r7
 8007ea4:	3001      	adds	r0, #1
 8007ea6:	f43f ae3a 	beq.w	8007b1e <_printf_float+0xb6>
 8007eaa:	f108 0801 	add.w	r8, r8, #1
 8007eae:	68e3      	ldr	r3, [r4, #12]
 8007eb0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007eb2:	1a5b      	subs	r3, r3, r1
 8007eb4:	4543      	cmp	r3, r8
 8007eb6:	dcf0      	bgt.n	8007e9a <_printf_float+0x432>
 8007eb8:	e6fb      	b.n	8007cb2 <_printf_float+0x24a>
 8007eba:	f04f 0800 	mov.w	r8, #0
 8007ebe:	f104 0919 	add.w	r9, r4, #25
 8007ec2:	e7f4      	b.n	8007eae <_printf_float+0x446>

08007ec4 <_printf_common>:
 8007ec4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ec8:	4616      	mov	r6, r2
 8007eca:	4699      	mov	r9, r3
 8007ecc:	688a      	ldr	r2, [r1, #8]
 8007ece:	690b      	ldr	r3, [r1, #16]
 8007ed0:	4607      	mov	r7, r0
 8007ed2:	4293      	cmp	r3, r2
 8007ed4:	bfb8      	it	lt
 8007ed6:	4613      	movlt	r3, r2
 8007ed8:	6033      	str	r3, [r6, #0]
 8007eda:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007ede:	460c      	mov	r4, r1
 8007ee0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007ee4:	b10a      	cbz	r2, 8007eea <_printf_common+0x26>
 8007ee6:	3301      	adds	r3, #1
 8007ee8:	6033      	str	r3, [r6, #0]
 8007eea:	6823      	ldr	r3, [r4, #0]
 8007eec:	0699      	lsls	r1, r3, #26
 8007eee:	bf42      	ittt	mi
 8007ef0:	6833      	ldrmi	r3, [r6, #0]
 8007ef2:	3302      	addmi	r3, #2
 8007ef4:	6033      	strmi	r3, [r6, #0]
 8007ef6:	6825      	ldr	r5, [r4, #0]
 8007ef8:	f015 0506 	ands.w	r5, r5, #6
 8007efc:	d106      	bne.n	8007f0c <_printf_common+0x48>
 8007efe:	f104 0a19 	add.w	sl, r4, #25
 8007f02:	68e3      	ldr	r3, [r4, #12]
 8007f04:	6832      	ldr	r2, [r6, #0]
 8007f06:	1a9b      	subs	r3, r3, r2
 8007f08:	42ab      	cmp	r3, r5
 8007f0a:	dc2b      	bgt.n	8007f64 <_printf_common+0xa0>
 8007f0c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007f10:	1e13      	subs	r3, r2, #0
 8007f12:	6822      	ldr	r2, [r4, #0]
 8007f14:	bf18      	it	ne
 8007f16:	2301      	movne	r3, #1
 8007f18:	0692      	lsls	r2, r2, #26
 8007f1a:	d430      	bmi.n	8007f7e <_printf_common+0xba>
 8007f1c:	4649      	mov	r1, r9
 8007f1e:	4638      	mov	r0, r7
 8007f20:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007f24:	47c0      	blx	r8
 8007f26:	3001      	adds	r0, #1
 8007f28:	d023      	beq.n	8007f72 <_printf_common+0xae>
 8007f2a:	6823      	ldr	r3, [r4, #0]
 8007f2c:	6922      	ldr	r2, [r4, #16]
 8007f2e:	f003 0306 	and.w	r3, r3, #6
 8007f32:	2b04      	cmp	r3, #4
 8007f34:	bf14      	ite	ne
 8007f36:	2500      	movne	r5, #0
 8007f38:	6833      	ldreq	r3, [r6, #0]
 8007f3a:	f04f 0600 	mov.w	r6, #0
 8007f3e:	bf08      	it	eq
 8007f40:	68e5      	ldreq	r5, [r4, #12]
 8007f42:	f104 041a 	add.w	r4, r4, #26
 8007f46:	bf08      	it	eq
 8007f48:	1aed      	subeq	r5, r5, r3
 8007f4a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8007f4e:	bf08      	it	eq
 8007f50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007f54:	4293      	cmp	r3, r2
 8007f56:	bfc4      	itt	gt
 8007f58:	1a9b      	subgt	r3, r3, r2
 8007f5a:	18ed      	addgt	r5, r5, r3
 8007f5c:	42b5      	cmp	r5, r6
 8007f5e:	d11a      	bne.n	8007f96 <_printf_common+0xd2>
 8007f60:	2000      	movs	r0, #0
 8007f62:	e008      	b.n	8007f76 <_printf_common+0xb2>
 8007f64:	2301      	movs	r3, #1
 8007f66:	4652      	mov	r2, sl
 8007f68:	4649      	mov	r1, r9
 8007f6a:	4638      	mov	r0, r7
 8007f6c:	47c0      	blx	r8
 8007f6e:	3001      	adds	r0, #1
 8007f70:	d103      	bne.n	8007f7a <_printf_common+0xb6>
 8007f72:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007f76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007f7a:	3501      	adds	r5, #1
 8007f7c:	e7c1      	b.n	8007f02 <_printf_common+0x3e>
 8007f7e:	2030      	movs	r0, #48	; 0x30
 8007f80:	18e1      	adds	r1, r4, r3
 8007f82:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007f86:	1c5a      	adds	r2, r3, #1
 8007f88:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007f8c:	4422      	add	r2, r4
 8007f8e:	3302      	adds	r3, #2
 8007f90:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007f94:	e7c2      	b.n	8007f1c <_printf_common+0x58>
 8007f96:	2301      	movs	r3, #1
 8007f98:	4622      	mov	r2, r4
 8007f9a:	4649      	mov	r1, r9
 8007f9c:	4638      	mov	r0, r7
 8007f9e:	47c0      	blx	r8
 8007fa0:	3001      	adds	r0, #1
 8007fa2:	d0e6      	beq.n	8007f72 <_printf_common+0xae>
 8007fa4:	3601      	adds	r6, #1
 8007fa6:	e7d9      	b.n	8007f5c <_printf_common+0x98>

08007fa8 <_printf_i>:
 8007fa8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007fac:	7e0f      	ldrb	r7, [r1, #24]
 8007fae:	4691      	mov	r9, r2
 8007fb0:	2f78      	cmp	r7, #120	; 0x78
 8007fb2:	4680      	mov	r8, r0
 8007fb4:	460c      	mov	r4, r1
 8007fb6:	469a      	mov	sl, r3
 8007fb8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007fba:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8007fbe:	d807      	bhi.n	8007fd0 <_printf_i+0x28>
 8007fc0:	2f62      	cmp	r7, #98	; 0x62
 8007fc2:	d80a      	bhi.n	8007fda <_printf_i+0x32>
 8007fc4:	2f00      	cmp	r7, #0
 8007fc6:	f000 80d5 	beq.w	8008174 <_printf_i+0x1cc>
 8007fca:	2f58      	cmp	r7, #88	; 0x58
 8007fcc:	f000 80c1 	beq.w	8008152 <_printf_i+0x1aa>
 8007fd0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007fd4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007fd8:	e03a      	b.n	8008050 <_printf_i+0xa8>
 8007fda:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007fde:	2b15      	cmp	r3, #21
 8007fe0:	d8f6      	bhi.n	8007fd0 <_printf_i+0x28>
 8007fe2:	a101      	add	r1, pc, #4	; (adr r1, 8007fe8 <_printf_i+0x40>)
 8007fe4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007fe8:	08008041 	.word	0x08008041
 8007fec:	08008055 	.word	0x08008055
 8007ff0:	08007fd1 	.word	0x08007fd1
 8007ff4:	08007fd1 	.word	0x08007fd1
 8007ff8:	08007fd1 	.word	0x08007fd1
 8007ffc:	08007fd1 	.word	0x08007fd1
 8008000:	08008055 	.word	0x08008055
 8008004:	08007fd1 	.word	0x08007fd1
 8008008:	08007fd1 	.word	0x08007fd1
 800800c:	08007fd1 	.word	0x08007fd1
 8008010:	08007fd1 	.word	0x08007fd1
 8008014:	0800815b 	.word	0x0800815b
 8008018:	08008081 	.word	0x08008081
 800801c:	08008115 	.word	0x08008115
 8008020:	08007fd1 	.word	0x08007fd1
 8008024:	08007fd1 	.word	0x08007fd1
 8008028:	0800817d 	.word	0x0800817d
 800802c:	08007fd1 	.word	0x08007fd1
 8008030:	08008081 	.word	0x08008081
 8008034:	08007fd1 	.word	0x08007fd1
 8008038:	08007fd1 	.word	0x08007fd1
 800803c:	0800811d 	.word	0x0800811d
 8008040:	682b      	ldr	r3, [r5, #0]
 8008042:	1d1a      	adds	r2, r3, #4
 8008044:	681b      	ldr	r3, [r3, #0]
 8008046:	602a      	str	r2, [r5, #0]
 8008048:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800804c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8008050:	2301      	movs	r3, #1
 8008052:	e0a0      	b.n	8008196 <_printf_i+0x1ee>
 8008054:	6820      	ldr	r0, [r4, #0]
 8008056:	682b      	ldr	r3, [r5, #0]
 8008058:	0607      	lsls	r7, r0, #24
 800805a:	f103 0104 	add.w	r1, r3, #4
 800805e:	6029      	str	r1, [r5, #0]
 8008060:	d501      	bpl.n	8008066 <_printf_i+0xbe>
 8008062:	681e      	ldr	r6, [r3, #0]
 8008064:	e003      	b.n	800806e <_printf_i+0xc6>
 8008066:	0646      	lsls	r6, r0, #25
 8008068:	d5fb      	bpl.n	8008062 <_printf_i+0xba>
 800806a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800806e:	2e00      	cmp	r6, #0
 8008070:	da03      	bge.n	800807a <_printf_i+0xd2>
 8008072:	232d      	movs	r3, #45	; 0x2d
 8008074:	4276      	negs	r6, r6
 8008076:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800807a:	230a      	movs	r3, #10
 800807c:	4859      	ldr	r0, [pc, #356]	; (80081e4 <_printf_i+0x23c>)
 800807e:	e012      	b.n	80080a6 <_printf_i+0xfe>
 8008080:	682b      	ldr	r3, [r5, #0]
 8008082:	6820      	ldr	r0, [r4, #0]
 8008084:	1d19      	adds	r1, r3, #4
 8008086:	6029      	str	r1, [r5, #0]
 8008088:	0605      	lsls	r5, r0, #24
 800808a:	d501      	bpl.n	8008090 <_printf_i+0xe8>
 800808c:	681e      	ldr	r6, [r3, #0]
 800808e:	e002      	b.n	8008096 <_printf_i+0xee>
 8008090:	0641      	lsls	r1, r0, #25
 8008092:	d5fb      	bpl.n	800808c <_printf_i+0xe4>
 8008094:	881e      	ldrh	r6, [r3, #0]
 8008096:	2f6f      	cmp	r7, #111	; 0x6f
 8008098:	bf0c      	ite	eq
 800809a:	2308      	moveq	r3, #8
 800809c:	230a      	movne	r3, #10
 800809e:	4851      	ldr	r0, [pc, #324]	; (80081e4 <_printf_i+0x23c>)
 80080a0:	2100      	movs	r1, #0
 80080a2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80080a6:	6865      	ldr	r5, [r4, #4]
 80080a8:	2d00      	cmp	r5, #0
 80080aa:	bfa8      	it	ge
 80080ac:	6821      	ldrge	r1, [r4, #0]
 80080ae:	60a5      	str	r5, [r4, #8]
 80080b0:	bfa4      	itt	ge
 80080b2:	f021 0104 	bicge.w	r1, r1, #4
 80080b6:	6021      	strge	r1, [r4, #0]
 80080b8:	b90e      	cbnz	r6, 80080be <_printf_i+0x116>
 80080ba:	2d00      	cmp	r5, #0
 80080bc:	d04b      	beq.n	8008156 <_printf_i+0x1ae>
 80080be:	4615      	mov	r5, r2
 80080c0:	fbb6 f1f3 	udiv	r1, r6, r3
 80080c4:	fb03 6711 	mls	r7, r3, r1, r6
 80080c8:	5dc7      	ldrb	r7, [r0, r7]
 80080ca:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80080ce:	4637      	mov	r7, r6
 80080d0:	42bb      	cmp	r3, r7
 80080d2:	460e      	mov	r6, r1
 80080d4:	d9f4      	bls.n	80080c0 <_printf_i+0x118>
 80080d6:	2b08      	cmp	r3, #8
 80080d8:	d10b      	bne.n	80080f2 <_printf_i+0x14a>
 80080da:	6823      	ldr	r3, [r4, #0]
 80080dc:	07de      	lsls	r6, r3, #31
 80080de:	d508      	bpl.n	80080f2 <_printf_i+0x14a>
 80080e0:	6923      	ldr	r3, [r4, #16]
 80080e2:	6861      	ldr	r1, [r4, #4]
 80080e4:	4299      	cmp	r1, r3
 80080e6:	bfde      	ittt	le
 80080e8:	2330      	movle	r3, #48	; 0x30
 80080ea:	f805 3c01 	strble.w	r3, [r5, #-1]
 80080ee:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80080f2:	1b52      	subs	r2, r2, r5
 80080f4:	6122      	str	r2, [r4, #16]
 80080f6:	464b      	mov	r3, r9
 80080f8:	4621      	mov	r1, r4
 80080fa:	4640      	mov	r0, r8
 80080fc:	f8cd a000 	str.w	sl, [sp]
 8008100:	aa03      	add	r2, sp, #12
 8008102:	f7ff fedf 	bl	8007ec4 <_printf_common>
 8008106:	3001      	adds	r0, #1
 8008108:	d14a      	bne.n	80081a0 <_printf_i+0x1f8>
 800810a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800810e:	b004      	add	sp, #16
 8008110:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008114:	6823      	ldr	r3, [r4, #0]
 8008116:	f043 0320 	orr.w	r3, r3, #32
 800811a:	6023      	str	r3, [r4, #0]
 800811c:	2778      	movs	r7, #120	; 0x78
 800811e:	4832      	ldr	r0, [pc, #200]	; (80081e8 <_printf_i+0x240>)
 8008120:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8008124:	6823      	ldr	r3, [r4, #0]
 8008126:	6829      	ldr	r1, [r5, #0]
 8008128:	061f      	lsls	r7, r3, #24
 800812a:	f851 6b04 	ldr.w	r6, [r1], #4
 800812e:	d402      	bmi.n	8008136 <_printf_i+0x18e>
 8008130:	065f      	lsls	r7, r3, #25
 8008132:	bf48      	it	mi
 8008134:	b2b6      	uxthmi	r6, r6
 8008136:	07df      	lsls	r7, r3, #31
 8008138:	bf48      	it	mi
 800813a:	f043 0320 	orrmi.w	r3, r3, #32
 800813e:	6029      	str	r1, [r5, #0]
 8008140:	bf48      	it	mi
 8008142:	6023      	strmi	r3, [r4, #0]
 8008144:	b91e      	cbnz	r6, 800814e <_printf_i+0x1a6>
 8008146:	6823      	ldr	r3, [r4, #0]
 8008148:	f023 0320 	bic.w	r3, r3, #32
 800814c:	6023      	str	r3, [r4, #0]
 800814e:	2310      	movs	r3, #16
 8008150:	e7a6      	b.n	80080a0 <_printf_i+0xf8>
 8008152:	4824      	ldr	r0, [pc, #144]	; (80081e4 <_printf_i+0x23c>)
 8008154:	e7e4      	b.n	8008120 <_printf_i+0x178>
 8008156:	4615      	mov	r5, r2
 8008158:	e7bd      	b.n	80080d6 <_printf_i+0x12e>
 800815a:	682b      	ldr	r3, [r5, #0]
 800815c:	6826      	ldr	r6, [r4, #0]
 800815e:	1d18      	adds	r0, r3, #4
 8008160:	6961      	ldr	r1, [r4, #20]
 8008162:	6028      	str	r0, [r5, #0]
 8008164:	0635      	lsls	r5, r6, #24
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	d501      	bpl.n	800816e <_printf_i+0x1c6>
 800816a:	6019      	str	r1, [r3, #0]
 800816c:	e002      	b.n	8008174 <_printf_i+0x1cc>
 800816e:	0670      	lsls	r0, r6, #25
 8008170:	d5fb      	bpl.n	800816a <_printf_i+0x1c2>
 8008172:	8019      	strh	r1, [r3, #0]
 8008174:	2300      	movs	r3, #0
 8008176:	4615      	mov	r5, r2
 8008178:	6123      	str	r3, [r4, #16]
 800817a:	e7bc      	b.n	80080f6 <_printf_i+0x14e>
 800817c:	682b      	ldr	r3, [r5, #0]
 800817e:	2100      	movs	r1, #0
 8008180:	1d1a      	adds	r2, r3, #4
 8008182:	602a      	str	r2, [r5, #0]
 8008184:	681d      	ldr	r5, [r3, #0]
 8008186:	6862      	ldr	r2, [r4, #4]
 8008188:	4628      	mov	r0, r5
 800818a:	f000 fa0a 	bl	80085a2 <memchr>
 800818e:	b108      	cbz	r0, 8008194 <_printf_i+0x1ec>
 8008190:	1b40      	subs	r0, r0, r5
 8008192:	6060      	str	r0, [r4, #4]
 8008194:	6863      	ldr	r3, [r4, #4]
 8008196:	6123      	str	r3, [r4, #16]
 8008198:	2300      	movs	r3, #0
 800819a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800819e:	e7aa      	b.n	80080f6 <_printf_i+0x14e>
 80081a0:	462a      	mov	r2, r5
 80081a2:	4649      	mov	r1, r9
 80081a4:	4640      	mov	r0, r8
 80081a6:	6923      	ldr	r3, [r4, #16]
 80081a8:	47d0      	blx	sl
 80081aa:	3001      	adds	r0, #1
 80081ac:	d0ad      	beq.n	800810a <_printf_i+0x162>
 80081ae:	6823      	ldr	r3, [r4, #0]
 80081b0:	079b      	lsls	r3, r3, #30
 80081b2:	d413      	bmi.n	80081dc <_printf_i+0x234>
 80081b4:	68e0      	ldr	r0, [r4, #12]
 80081b6:	9b03      	ldr	r3, [sp, #12]
 80081b8:	4298      	cmp	r0, r3
 80081ba:	bfb8      	it	lt
 80081bc:	4618      	movlt	r0, r3
 80081be:	e7a6      	b.n	800810e <_printf_i+0x166>
 80081c0:	2301      	movs	r3, #1
 80081c2:	4632      	mov	r2, r6
 80081c4:	4649      	mov	r1, r9
 80081c6:	4640      	mov	r0, r8
 80081c8:	47d0      	blx	sl
 80081ca:	3001      	adds	r0, #1
 80081cc:	d09d      	beq.n	800810a <_printf_i+0x162>
 80081ce:	3501      	adds	r5, #1
 80081d0:	68e3      	ldr	r3, [r4, #12]
 80081d2:	9903      	ldr	r1, [sp, #12]
 80081d4:	1a5b      	subs	r3, r3, r1
 80081d6:	42ab      	cmp	r3, r5
 80081d8:	dcf2      	bgt.n	80081c0 <_printf_i+0x218>
 80081da:	e7eb      	b.n	80081b4 <_printf_i+0x20c>
 80081dc:	2500      	movs	r5, #0
 80081de:	f104 0619 	add.w	r6, r4, #25
 80081e2:	e7f5      	b.n	80081d0 <_printf_i+0x228>
 80081e4:	0800a3fc 	.word	0x0800a3fc
 80081e8:	0800a40d 	.word	0x0800a40d

080081ec <std>:
 80081ec:	2300      	movs	r3, #0
 80081ee:	b510      	push	{r4, lr}
 80081f0:	4604      	mov	r4, r0
 80081f2:	e9c0 3300 	strd	r3, r3, [r0]
 80081f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80081fa:	6083      	str	r3, [r0, #8]
 80081fc:	8181      	strh	r1, [r0, #12]
 80081fe:	6643      	str	r3, [r0, #100]	; 0x64
 8008200:	81c2      	strh	r2, [r0, #14]
 8008202:	6183      	str	r3, [r0, #24]
 8008204:	4619      	mov	r1, r3
 8008206:	2208      	movs	r2, #8
 8008208:	305c      	adds	r0, #92	; 0x5c
 800820a:	f000 f8f4 	bl	80083f6 <memset>
 800820e:	4b0d      	ldr	r3, [pc, #52]	; (8008244 <std+0x58>)
 8008210:	6224      	str	r4, [r4, #32]
 8008212:	6263      	str	r3, [r4, #36]	; 0x24
 8008214:	4b0c      	ldr	r3, [pc, #48]	; (8008248 <std+0x5c>)
 8008216:	62a3      	str	r3, [r4, #40]	; 0x28
 8008218:	4b0c      	ldr	r3, [pc, #48]	; (800824c <std+0x60>)
 800821a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800821c:	4b0c      	ldr	r3, [pc, #48]	; (8008250 <std+0x64>)
 800821e:	6323      	str	r3, [r4, #48]	; 0x30
 8008220:	4b0c      	ldr	r3, [pc, #48]	; (8008254 <std+0x68>)
 8008222:	429c      	cmp	r4, r3
 8008224:	d006      	beq.n	8008234 <std+0x48>
 8008226:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800822a:	4294      	cmp	r4, r2
 800822c:	d002      	beq.n	8008234 <std+0x48>
 800822e:	33d0      	adds	r3, #208	; 0xd0
 8008230:	429c      	cmp	r4, r3
 8008232:	d105      	bne.n	8008240 <std+0x54>
 8008234:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8008238:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800823c:	f000 b9ae 	b.w	800859c <__retarget_lock_init_recursive>
 8008240:	bd10      	pop	{r4, pc}
 8008242:	bf00      	nop
 8008244:	08008371 	.word	0x08008371
 8008248:	08008393 	.word	0x08008393
 800824c:	080083cb 	.word	0x080083cb
 8008250:	080083ef 	.word	0x080083ef
 8008254:	2000153c 	.word	0x2000153c

08008258 <stdio_exit_handler>:
 8008258:	4a02      	ldr	r2, [pc, #8]	; (8008264 <stdio_exit_handler+0xc>)
 800825a:	4903      	ldr	r1, [pc, #12]	; (8008268 <stdio_exit_handler+0x10>)
 800825c:	4803      	ldr	r0, [pc, #12]	; (800826c <stdio_exit_handler+0x14>)
 800825e:	f000 b869 	b.w	8008334 <_fwalk_sglue>
 8008262:	bf00      	nop
 8008264:	20000010 	.word	0x20000010
 8008268:	08009ca5 	.word	0x08009ca5
 800826c:	2000001c 	.word	0x2000001c

08008270 <cleanup_stdio>:
 8008270:	6841      	ldr	r1, [r0, #4]
 8008272:	4b0c      	ldr	r3, [pc, #48]	; (80082a4 <cleanup_stdio+0x34>)
 8008274:	b510      	push	{r4, lr}
 8008276:	4299      	cmp	r1, r3
 8008278:	4604      	mov	r4, r0
 800827a:	d001      	beq.n	8008280 <cleanup_stdio+0x10>
 800827c:	f001 fd12 	bl	8009ca4 <_fflush_r>
 8008280:	68a1      	ldr	r1, [r4, #8]
 8008282:	4b09      	ldr	r3, [pc, #36]	; (80082a8 <cleanup_stdio+0x38>)
 8008284:	4299      	cmp	r1, r3
 8008286:	d002      	beq.n	800828e <cleanup_stdio+0x1e>
 8008288:	4620      	mov	r0, r4
 800828a:	f001 fd0b 	bl	8009ca4 <_fflush_r>
 800828e:	68e1      	ldr	r1, [r4, #12]
 8008290:	4b06      	ldr	r3, [pc, #24]	; (80082ac <cleanup_stdio+0x3c>)
 8008292:	4299      	cmp	r1, r3
 8008294:	d004      	beq.n	80082a0 <cleanup_stdio+0x30>
 8008296:	4620      	mov	r0, r4
 8008298:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800829c:	f001 bd02 	b.w	8009ca4 <_fflush_r>
 80082a0:	bd10      	pop	{r4, pc}
 80082a2:	bf00      	nop
 80082a4:	2000153c 	.word	0x2000153c
 80082a8:	200015a4 	.word	0x200015a4
 80082ac:	2000160c 	.word	0x2000160c

080082b0 <global_stdio_init.part.0>:
 80082b0:	b510      	push	{r4, lr}
 80082b2:	4b0b      	ldr	r3, [pc, #44]	; (80082e0 <global_stdio_init.part.0+0x30>)
 80082b4:	4c0b      	ldr	r4, [pc, #44]	; (80082e4 <global_stdio_init.part.0+0x34>)
 80082b6:	4a0c      	ldr	r2, [pc, #48]	; (80082e8 <global_stdio_init.part.0+0x38>)
 80082b8:	4620      	mov	r0, r4
 80082ba:	601a      	str	r2, [r3, #0]
 80082bc:	2104      	movs	r1, #4
 80082be:	2200      	movs	r2, #0
 80082c0:	f7ff ff94 	bl	80081ec <std>
 80082c4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80082c8:	2201      	movs	r2, #1
 80082ca:	2109      	movs	r1, #9
 80082cc:	f7ff ff8e 	bl	80081ec <std>
 80082d0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80082d4:	2202      	movs	r2, #2
 80082d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80082da:	2112      	movs	r1, #18
 80082dc:	f7ff bf86 	b.w	80081ec <std>
 80082e0:	20001674 	.word	0x20001674
 80082e4:	2000153c 	.word	0x2000153c
 80082e8:	08008259 	.word	0x08008259

080082ec <__sfp_lock_acquire>:
 80082ec:	4801      	ldr	r0, [pc, #4]	; (80082f4 <__sfp_lock_acquire+0x8>)
 80082ee:	f000 b956 	b.w	800859e <__retarget_lock_acquire_recursive>
 80082f2:	bf00      	nop
 80082f4:	2000167d 	.word	0x2000167d

080082f8 <__sfp_lock_release>:
 80082f8:	4801      	ldr	r0, [pc, #4]	; (8008300 <__sfp_lock_release+0x8>)
 80082fa:	f000 b951 	b.w	80085a0 <__retarget_lock_release_recursive>
 80082fe:	bf00      	nop
 8008300:	2000167d 	.word	0x2000167d

08008304 <__sinit>:
 8008304:	b510      	push	{r4, lr}
 8008306:	4604      	mov	r4, r0
 8008308:	f7ff fff0 	bl	80082ec <__sfp_lock_acquire>
 800830c:	6a23      	ldr	r3, [r4, #32]
 800830e:	b11b      	cbz	r3, 8008318 <__sinit+0x14>
 8008310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008314:	f7ff bff0 	b.w	80082f8 <__sfp_lock_release>
 8008318:	4b04      	ldr	r3, [pc, #16]	; (800832c <__sinit+0x28>)
 800831a:	6223      	str	r3, [r4, #32]
 800831c:	4b04      	ldr	r3, [pc, #16]	; (8008330 <__sinit+0x2c>)
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	2b00      	cmp	r3, #0
 8008322:	d1f5      	bne.n	8008310 <__sinit+0xc>
 8008324:	f7ff ffc4 	bl	80082b0 <global_stdio_init.part.0>
 8008328:	e7f2      	b.n	8008310 <__sinit+0xc>
 800832a:	bf00      	nop
 800832c:	08008271 	.word	0x08008271
 8008330:	20001674 	.word	0x20001674

08008334 <_fwalk_sglue>:
 8008334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008338:	4607      	mov	r7, r0
 800833a:	4688      	mov	r8, r1
 800833c:	4614      	mov	r4, r2
 800833e:	2600      	movs	r6, #0
 8008340:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008344:	f1b9 0901 	subs.w	r9, r9, #1
 8008348:	d505      	bpl.n	8008356 <_fwalk_sglue+0x22>
 800834a:	6824      	ldr	r4, [r4, #0]
 800834c:	2c00      	cmp	r4, #0
 800834e:	d1f7      	bne.n	8008340 <_fwalk_sglue+0xc>
 8008350:	4630      	mov	r0, r6
 8008352:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008356:	89ab      	ldrh	r3, [r5, #12]
 8008358:	2b01      	cmp	r3, #1
 800835a:	d907      	bls.n	800836c <_fwalk_sglue+0x38>
 800835c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8008360:	3301      	adds	r3, #1
 8008362:	d003      	beq.n	800836c <_fwalk_sglue+0x38>
 8008364:	4629      	mov	r1, r5
 8008366:	4638      	mov	r0, r7
 8008368:	47c0      	blx	r8
 800836a:	4306      	orrs	r6, r0
 800836c:	3568      	adds	r5, #104	; 0x68
 800836e:	e7e9      	b.n	8008344 <_fwalk_sglue+0x10>

08008370 <__sread>:
 8008370:	b510      	push	{r4, lr}
 8008372:	460c      	mov	r4, r1
 8008374:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008378:	f000 f8c2 	bl	8008500 <_read_r>
 800837c:	2800      	cmp	r0, #0
 800837e:	bfab      	itete	ge
 8008380:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8008382:	89a3      	ldrhlt	r3, [r4, #12]
 8008384:	181b      	addge	r3, r3, r0
 8008386:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800838a:	bfac      	ite	ge
 800838c:	6563      	strge	r3, [r4, #84]	; 0x54
 800838e:	81a3      	strhlt	r3, [r4, #12]
 8008390:	bd10      	pop	{r4, pc}

08008392 <__swrite>:
 8008392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008396:	461f      	mov	r7, r3
 8008398:	898b      	ldrh	r3, [r1, #12]
 800839a:	4605      	mov	r5, r0
 800839c:	05db      	lsls	r3, r3, #23
 800839e:	460c      	mov	r4, r1
 80083a0:	4616      	mov	r6, r2
 80083a2:	d505      	bpl.n	80083b0 <__swrite+0x1e>
 80083a4:	2302      	movs	r3, #2
 80083a6:	2200      	movs	r2, #0
 80083a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80083ac:	f000 f896 	bl	80084dc <_lseek_r>
 80083b0:	89a3      	ldrh	r3, [r4, #12]
 80083b2:	4632      	mov	r2, r6
 80083b4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80083b8:	81a3      	strh	r3, [r4, #12]
 80083ba:	4628      	mov	r0, r5
 80083bc:	463b      	mov	r3, r7
 80083be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80083c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083c6:	f000 b8ad 	b.w	8008524 <_write_r>

080083ca <__sseek>:
 80083ca:	b510      	push	{r4, lr}
 80083cc:	460c      	mov	r4, r1
 80083ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80083d2:	f000 f883 	bl	80084dc <_lseek_r>
 80083d6:	1c43      	adds	r3, r0, #1
 80083d8:	89a3      	ldrh	r3, [r4, #12]
 80083da:	bf15      	itete	ne
 80083dc:	6560      	strne	r0, [r4, #84]	; 0x54
 80083de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80083e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80083e6:	81a3      	strheq	r3, [r4, #12]
 80083e8:	bf18      	it	ne
 80083ea:	81a3      	strhne	r3, [r4, #12]
 80083ec:	bd10      	pop	{r4, pc}

080083ee <__sclose>:
 80083ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80083f2:	f000 b80d 	b.w	8008410 <_close_r>

080083f6 <memset>:
 80083f6:	4603      	mov	r3, r0
 80083f8:	4402      	add	r2, r0
 80083fa:	4293      	cmp	r3, r2
 80083fc:	d100      	bne.n	8008400 <memset+0xa>
 80083fe:	4770      	bx	lr
 8008400:	f803 1b01 	strb.w	r1, [r3], #1
 8008404:	e7f9      	b.n	80083fa <memset+0x4>
	...

08008408 <_localeconv_r>:
 8008408:	4800      	ldr	r0, [pc, #0]	; (800840c <_localeconv_r+0x4>)
 800840a:	4770      	bx	lr
 800840c:	2000015c 	.word	0x2000015c

08008410 <_close_r>:
 8008410:	b538      	push	{r3, r4, r5, lr}
 8008412:	2300      	movs	r3, #0
 8008414:	4d05      	ldr	r5, [pc, #20]	; (800842c <_close_r+0x1c>)
 8008416:	4604      	mov	r4, r0
 8008418:	4608      	mov	r0, r1
 800841a:	602b      	str	r3, [r5, #0]
 800841c:	f7fa fe40 	bl	80030a0 <_close>
 8008420:	1c43      	adds	r3, r0, #1
 8008422:	d102      	bne.n	800842a <_close_r+0x1a>
 8008424:	682b      	ldr	r3, [r5, #0]
 8008426:	b103      	cbz	r3, 800842a <_close_r+0x1a>
 8008428:	6023      	str	r3, [r4, #0]
 800842a:	bd38      	pop	{r3, r4, r5, pc}
 800842c:	20001678 	.word	0x20001678

08008430 <_reclaim_reent>:
 8008430:	4b29      	ldr	r3, [pc, #164]	; (80084d8 <_reclaim_reent+0xa8>)
 8008432:	b570      	push	{r4, r5, r6, lr}
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	4604      	mov	r4, r0
 8008438:	4283      	cmp	r3, r0
 800843a:	d04b      	beq.n	80084d4 <_reclaim_reent+0xa4>
 800843c:	69c3      	ldr	r3, [r0, #28]
 800843e:	b143      	cbz	r3, 8008452 <_reclaim_reent+0x22>
 8008440:	68db      	ldr	r3, [r3, #12]
 8008442:	2b00      	cmp	r3, #0
 8008444:	d144      	bne.n	80084d0 <_reclaim_reent+0xa0>
 8008446:	69e3      	ldr	r3, [r4, #28]
 8008448:	6819      	ldr	r1, [r3, #0]
 800844a:	b111      	cbz	r1, 8008452 <_reclaim_reent+0x22>
 800844c:	4620      	mov	r0, r4
 800844e:	f000 ff33 	bl	80092b8 <_free_r>
 8008452:	6961      	ldr	r1, [r4, #20]
 8008454:	b111      	cbz	r1, 800845c <_reclaim_reent+0x2c>
 8008456:	4620      	mov	r0, r4
 8008458:	f000 ff2e 	bl	80092b8 <_free_r>
 800845c:	69e1      	ldr	r1, [r4, #28]
 800845e:	b111      	cbz	r1, 8008466 <_reclaim_reent+0x36>
 8008460:	4620      	mov	r0, r4
 8008462:	f000 ff29 	bl	80092b8 <_free_r>
 8008466:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008468:	b111      	cbz	r1, 8008470 <_reclaim_reent+0x40>
 800846a:	4620      	mov	r0, r4
 800846c:	f000 ff24 	bl	80092b8 <_free_r>
 8008470:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008472:	b111      	cbz	r1, 800847a <_reclaim_reent+0x4a>
 8008474:	4620      	mov	r0, r4
 8008476:	f000 ff1f 	bl	80092b8 <_free_r>
 800847a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800847c:	b111      	cbz	r1, 8008484 <_reclaim_reent+0x54>
 800847e:	4620      	mov	r0, r4
 8008480:	f000 ff1a 	bl	80092b8 <_free_r>
 8008484:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8008486:	b111      	cbz	r1, 800848e <_reclaim_reent+0x5e>
 8008488:	4620      	mov	r0, r4
 800848a:	f000 ff15 	bl	80092b8 <_free_r>
 800848e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8008490:	b111      	cbz	r1, 8008498 <_reclaim_reent+0x68>
 8008492:	4620      	mov	r0, r4
 8008494:	f000 ff10 	bl	80092b8 <_free_r>
 8008498:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800849a:	b111      	cbz	r1, 80084a2 <_reclaim_reent+0x72>
 800849c:	4620      	mov	r0, r4
 800849e:	f000 ff0b 	bl	80092b8 <_free_r>
 80084a2:	6a23      	ldr	r3, [r4, #32]
 80084a4:	b1b3      	cbz	r3, 80084d4 <_reclaim_reent+0xa4>
 80084a6:	4620      	mov	r0, r4
 80084a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80084ac:	4718      	bx	r3
 80084ae:	5949      	ldr	r1, [r1, r5]
 80084b0:	b941      	cbnz	r1, 80084c4 <_reclaim_reent+0x94>
 80084b2:	3504      	adds	r5, #4
 80084b4:	69e3      	ldr	r3, [r4, #28]
 80084b6:	2d80      	cmp	r5, #128	; 0x80
 80084b8:	68d9      	ldr	r1, [r3, #12]
 80084ba:	d1f8      	bne.n	80084ae <_reclaim_reent+0x7e>
 80084bc:	4620      	mov	r0, r4
 80084be:	f000 fefb 	bl	80092b8 <_free_r>
 80084c2:	e7c0      	b.n	8008446 <_reclaim_reent+0x16>
 80084c4:	680e      	ldr	r6, [r1, #0]
 80084c6:	4620      	mov	r0, r4
 80084c8:	f000 fef6 	bl	80092b8 <_free_r>
 80084cc:	4631      	mov	r1, r6
 80084ce:	e7ef      	b.n	80084b0 <_reclaim_reent+0x80>
 80084d0:	2500      	movs	r5, #0
 80084d2:	e7ef      	b.n	80084b4 <_reclaim_reent+0x84>
 80084d4:	bd70      	pop	{r4, r5, r6, pc}
 80084d6:	bf00      	nop
 80084d8:	20000068 	.word	0x20000068

080084dc <_lseek_r>:
 80084dc:	b538      	push	{r3, r4, r5, lr}
 80084de:	4604      	mov	r4, r0
 80084e0:	4608      	mov	r0, r1
 80084e2:	4611      	mov	r1, r2
 80084e4:	2200      	movs	r2, #0
 80084e6:	4d05      	ldr	r5, [pc, #20]	; (80084fc <_lseek_r+0x20>)
 80084e8:	602a      	str	r2, [r5, #0]
 80084ea:	461a      	mov	r2, r3
 80084ec:	f7fa fdfc 	bl	80030e8 <_lseek>
 80084f0:	1c43      	adds	r3, r0, #1
 80084f2:	d102      	bne.n	80084fa <_lseek_r+0x1e>
 80084f4:	682b      	ldr	r3, [r5, #0]
 80084f6:	b103      	cbz	r3, 80084fa <_lseek_r+0x1e>
 80084f8:	6023      	str	r3, [r4, #0]
 80084fa:	bd38      	pop	{r3, r4, r5, pc}
 80084fc:	20001678 	.word	0x20001678

08008500 <_read_r>:
 8008500:	b538      	push	{r3, r4, r5, lr}
 8008502:	4604      	mov	r4, r0
 8008504:	4608      	mov	r0, r1
 8008506:	4611      	mov	r1, r2
 8008508:	2200      	movs	r2, #0
 800850a:	4d05      	ldr	r5, [pc, #20]	; (8008520 <_read_r+0x20>)
 800850c:	602a      	str	r2, [r5, #0]
 800850e:	461a      	mov	r2, r3
 8008510:	f7fa fd8d 	bl	800302e <_read>
 8008514:	1c43      	adds	r3, r0, #1
 8008516:	d102      	bne.n	800851e <_read_r+0x1e>
 8008518:	682b      	ldr	r3, [r5, #0]
 800851a:	b103      	cbz	r3, 800851e <_read_r+0x1e>
 800851c:	6023      	str	r3, [r4, #0]
 800851e:	bd38      	pop	{r3, r4, r5, pc}
 8008520:	20001678 	.word	0x20001678

08008524 <_write_r>:
 8008524:	b538      	push	{r3, r4, r5, lr}
 8008526:	4604      	mov	r4, r0
 8008528:	4608      	mov	r0, r1
 800852a:	4611      	mov	r1, r2
 800852c:	2200      	movs	r2, #0
 800852e:	4d05      	ldr	r5, [pc, #20]	; (8008544 <_write_r+0x20>)
 8008530:	602a      	str	r2, [r5, #0]
 8008532:	461a      	mov	r2, r3
 8008534:	f7fa fd98 	bl	8003068 <_write>
 8008538:	1c43      	adds	r3, r0, #1
 800853a:	d102      	bne.n	8008542 <_write_r+0x1e>
 800853c:	682b      	ldr	r3, [r5, #0]
 800853e:	b103      	cbz	r3, 8008542 <_write_r+0x1e>
 8008540:	6023      	str	r3, [r4, #0]
 8008542:	bd38      	pop	{r3, r4, r5, pc}
 8008544:	20001678 	.word	0x20001678

08008548 <__errno>:
 8008548:	4b01      	ldr	r3, [pc, #4]	; (8008550 <__errno+0x8>)
 800854a:	6818      	ldr	r0, [r3, #0]
 800854c:	4770      	bx	lr
 800854e:	bf00      	nop
 8008550:	20000068 	.word	0x20000068

08008554 <__libc_init_array>:
 8008554:	b570      	push	{r4, r5, r6, lr}
 8008556:	2600      	movs	r6, #0
 8008558:	4d0c      	ldr	r5, [pc, #48]	; (800858c <__libc_init_array+0x38>)
 800855a:	4c0d      	ldr	r4, [pc, #52]	; (8008590 <__libc_init_array+0x3c>)
 800855c:	1b64      	subs	r4, r4, r5
 800855e:	10a4      	asrs	r4, r4, #2
 8008560:	42a6      	cmp	r6, r4
 8008562:	d109      	bne.n	8008578 <__libc_init_array+0x24>
 8008564:	f001 fee0 	bl	800a328 <_init>
 8008568:	2600      	movs	r6, #0
 800856a:	4d0a      	ldr	r5, [pc, #40]	; (8008594 <__libc_init_array+0x40>)
 800856c:	4c0a      	ldr	r4, [pc, #40]	; (8008598 <__libc_init_array+0x44>)
 800856e:	1b64      	subs	r4, r4, r5
 8008570:	10a4      	asrs	r4, r4, #2
 8008572:	42a6      	cmp	r6, r4
 8008574:	d105      	bne.n	8008582 <__libc_init_array+0x2e>
 8008576:	bd70      	pop	{r4, r5, r6, pc}
 8008578:	f855 3b04 	ldr.w	r3, [r5], #4
 800857c:	4798      	blx	r3
 800857e:	3601      	adds	r6, #1
 8008580:	e7ee      	b.n	8008560 <__libc_init_array+0xc>
 8008582:	f855 3b04 	ldr.w	r3, [r5], #4
 8008586:	4798      	blx	r3
 8008588:	3601      	adds	r6, #1
 800858a:	e7f2      	b.n	8008572 <__libc_init_array+0x1e>
 800858c:	0800a75c 	.word	0x0800a75c
 8008590:	0800a75c 	.word	0x0800a75c
 8008594:	0800a75c 	.word	0x0800a75c
 8008598:	0800a764 	.word	0x0800a764

0800859c <__retarget_lock_init_recursive>:
 800859c:	4770      	bx	lr

0800859e <__retarget_lock_acquire_recursive>:
 800859e:	4770      	bx	lr

080085a0 <__retarget_lock_release_recursive>:
 80085a0:	4770      	bx	lr

080085a2 <memchr>:
 80085a2:	4603      	mov	r3, r0
 80085a4:	b510      	push	{r4, lr}
 80085a6:	b2c9      	uxtb	r1, r1
 80085a8:	4402      	add	r2, r0
 80085aa:	4293      	cmp	r3, r2
 80085ac:	4618      	mov	r0, r3
 80085ae:	d101      	bne.n	80085b4 <memchr+0x12>
 80085b0:	2000      	movs	r0, #0
 80085b2:	e003      	b.n	80085bc <memchr+0x1a>
 80085b4:	7804      	ldrb	r4, [r0, #0]
 80085b6:	3301      	adds	r3, #1
 80085b8:	428c      	cmp	r4, r1
 80085ba:	d1f6      	bne.n	80085aa <memchr+0x8>
 80085bc:	bd10      	pop	{r4, pc}

080085be <memcpy>:
 80085be:	440a      	add	r2, r1
 80085c0:	4291      	cmp	r1, r2
 80085c2:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80085c6:	d100      	bne.n	80085ca <memcpy+0xc>
 80085c8:	4770      	bx	lr
 80085ca:	b510      	push	{r4, lr}
 80085cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80085d0:	4291      	cmp	r1, r2
 80085d2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80085d6:	d1f9      	bne.n	80085cc <memcpy+0xe>
 80085d8:	bd10      	pop	{r4, pc}

080085da <quorem>:
 80085da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80085de:	6903      	ldr	r3, [r0, #16]
 80085e0:	690c      	ldr	r4, [r1, #16]
 80085e2:	4607      	mov	r7, r0
 80085e4:	42a3      	cmp	r3, r4
 80085e6:	db7f      	blt.n	80086e8 <quorem+0x10e>
 80085e8:	3c01      	subs	r4, #1
 80085ea:	f100 0514 	add.w	r5, r0, #20
 80085ee:	f101 0814 	add.w	r8, r1, #20
 80085f2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80085f6:	9301      	str	r3, [sp, #4]
 80085f8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80085fc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8008600:	3301      	adds	r3, #1
 8008602:	429a      	cmp	r2, r3
 8008604:	fbb2 f6f3 	udiv	r6, r2, r3
 8008608:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800860c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8008610:	d331      	bcc.n	8008676 <quorem+0x9c>
 8008612:	f04f 0e00 	mov.w	lr, #0
 8008616:	4640      	mov	r0, r8
 8008618:	46ac      	mov	ip, r5
 800861a:	46f2      	mov	sl, lr
 800861c:	f850 2b04 	ldr.w	r2, [r0], #4
 8008620:	b293      	uxth	r3, r2
 8008622:	fb06 e303 	mla	r3, r6, r3, lr
 8008626:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800862a:	0c1a      	lsrs	r2, r3, #16
 800862c:	b29b      	uxth	r3, r3
 800862e:	fb06 220e 	mla	r2, r6, lr, r2
 8008632:	ebaa 0303 	sub.w	r3, sl, r3
 8008636:	f8dc a000 	ldr.w	sl, [ip]
 800863a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800863e:	fa1f fa8a 	uxth.w	sl, sl
 8008642:	4453      	add	r3, sl
 8008644:	f8dc a000 	ldr.w	sl, [ip]
 8008648:	b292      	uxth	r2, r2
 800864a:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800864e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8008652:	b29b      	uxth	r3, r3
 8008654:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008658:	4581      	cmp	r9, r0
 800865a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800865e:	f84c 3b04 	str.w	r3, [ip], #4
 8008662:	d2db      	bcs.n	800861c <quorem+0x42>
 8008664:	f855 300b 	ldr.w	r3, [r5, fp]
 8008668:	b92b      	cbnz	r3, 8008676 <quorem+0x9c>
 800866a:	9b01      	ldr	r3, [sp, #4]
 800866c:	3b04      	subs	r3, #4
 800866e:	429d      	cmp	r5, r3
 8008670:	461a      	mov	r2, r3
 8008672:	d32d      	bcc.n	80086d0 <quorem+0xf6>
 8008674:	613c      	str	r4, [r7, #16]
 8008676:	4638      	mov	r0, r7
 8008678:	f001 f994 	bl	80099a4 <__mcmp>
 800867c:	2800      	cmp	r0, #0
 800867e:	db23      	blt.n	80086c8 <quorem+0xee>
 8008680:	4629      	mov	r1, r5
 8008682:	2000      	movs	r0, #0
 8008684:	3601      	adds	r6, #1
 8008686:	f858 2b04 	ldr.w	r2, [r8], #4
 800868a:	f8d1 c000 	ldr.w	ip, [r1]
 800868e:	b293      	uxth	r3, r2
 8008690:	1ac3      	subs	r3, r0, r3
 8008692:	0c12      	lsrs	r2, r2, #16
 8008694:	fa1f f08c 	uxth.w	r0, ip
 8008698:	4403      	add	r3, r0
 800869a:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800869e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80086a2:	b29b      	uxth	r3, r3
 80086a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80086a8:	45c1      	cmp	r9, r8
 80086aa:	ea4f 4022 	mov.w	r0, r2, asr #16
 80086ae:	f841 3b04 	str.w	r3, [r1], #4
 80086b2:	d2e8      	bcs.n	8008686 <quorem+0xac>
 80086b4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80086b8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80086bc:	b922      	cbnz	r2, 80086c8 <quorem+0xee>
 80086be:	3b04      	subs	r3, #4
 80086c0:	429d      	cmp	r5, r3
 80086c2:	461a      	mov	r2, r3
 80086c4:	d30a      	bcc.n	80086dc <quorem+0x102>
 80086c6:	613c      	str	r4, [r7, #16]
 80086c8:	4630      	mov	r0, r6
 80086ca:	b003      	add	sp, #12
 80086cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086d0:	6812      	ldr	r2, [r2, #0]
 80086d2:	3b04      	subs	r3, #4
 80086d4:	2a00      	cmp	r2, #0
 80086d6:	d1cd      	bne.n	8008674 <quorem+0x9a>
 80086d8:	3c01      	subs	r4, #1
 80086da:	e7c8      	b.n	800866e <quorem+0x94>
 80086dc:	6812      	ldr	r2, [r2, #0]
 80086de:	3b04      	subs	r3, #4
 80086e0:	2a00      	cmp	r2, #0
 80086e2:	d1f0      	bne.n	80086c6 <quorem+0xec>
 80086e4:	3c01      	subs	r4, #1
 80086e6:	e7eb      	b.n	80086c0 <quorem+0xe6>
 80086e8:	2000      	movs	r0, #0
 80086ea:	e7ee      	b.n	80086ca <quorem+0xf0>
 80086ec:	0000      	movs	r0, r0
	...

080086f0 <_dtoa_r>:
 80086f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086f4:	4616      	mov	r6, r2
 80086f6:	461f      	mov	r7, r3
 80086f8:	69c4      	ldr	r4, [r0, #28]
 80086fa:	b099      	sub	sp, #100	; 0x64
 80086fc:	4605      	mov	r5, r0
 80086fe:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8008702:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8008706:	b974      	cbnz	r4, 8008726 <_dtoa_r+0x36>
 8008708:	2010      	movs	r0, #16
 800870a:	f000 fe1d 	bl	8009348 <malloc>
 800870e:	4602      	mov	r2, r0
 8008710:	61e8      	str	r0, [r5, #28]
 8008712:	b920      	cbnz	r0, 800871e <_dtoa_r+0x2e>
 8008714:	21ef      	movs	r1, #239	; 0xef
 8008716:	4bac      	ldr	r3, [pc, #688]	; (80089c8 <_dtoa_r+0x2d8>)
 8008718:	48ac      	ldr	r0, [pc, #688]	; (80089cc <_dtoa_r+0x2dc>)
 800871a:	f001 fafb 	bl	8009d14 <__assert_func>
 800871e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8008722:	6004      	str	r4, [r0, #0]
 8008724:	60c4      	str	r4, [r0, #12]
 8008726:	69eb      	ldr	r3, [r5, #28]
 8008728:	6819      	ldr	r1, [r3, #0]
 800872a:	b151      	cbz	r1, 8008742 <_dtoa_r+0x52>
 800872c:	685a      	ldr	r2, [r3, #4]
 800872e:	2301      	movs	r3, #1
 8008730:	4093      	lsls	r3, r2
 8008732:	604a      	str	r2, [r1, #4]
 8008734:	608b      	str	r3, [r1, #8]
 8008736:	4628      	mov	r0, r5
 8008738:	f000 fefa 	bl	8009530 <_Bfree>
 800873c:	2200      	movs	r2, #0
 800873e:	69eb      	ldr	r3, [r5, #28]
 8008740:	601a      	str	r2, [r3, #0]
 8008742:	1e3b      	subs	r3, r7, #0
 8008744:	bfaf      	iteee	ge
 8008746:	2300      	movge	r3, #0
 8008748:	2201      	movlt	r2, #1
 800874a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800874e:	9305      	strlt	r3, [sp, #20]
 8008750:	bfa8      	it	ge
 8008752:	f8c8 3000 	strge.w	r3, [r8]
 8008756:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800875a:	4b9d      	ldr	r3, [pc, #628]	; (80089d0 <_dtoa_r+0x2e0>)
 800875c:	bfb8      	it	lt
 800875e:	f8c8 2000 	strlt.w	r2, [r8]
 8008762:	ea33 0309 	bics.w	r3, r3, r9
 8008766:	d119      	bne.n	800879c <_dtoa_r+0xac>
 8008768:	f242 730f 	movw	r3, #9999	; 0x270f
 800876c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800876e:	6013      	str	r3, [r2, #0]
 8008770:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008774:	4333      	orrs	r3, r6
 8008776:	f000 8589 	beq.w	800928c <_dtoa_r+0xb9c>
 800877a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800877c:	b953      	cbnz	r3, 8008794 <_dtoa_r+0xa4>
 800877e:	4b95      	ldr	r3, [pc, #596]	; (80089d4 <_dtoa_r+0x2e4>)
 8008780:	e023      	b.n	80087ca <_dtoa_r+0xda>
 8008782:	4b95      	ldr	r3, [pc, #596]	; (80089d8 <_dtoa_r+0x2e8>)
 8008784:	9303      	str	r3, [sp, #12]
 8008786:	3308      	adds	r3, #8
 8008788:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800878a:	6013      	str	r3, [r2, #0]
 800878c:	9803      	ldr	r0, [sp, #12]
 800878e:	b019      	add	sp, #100	; 0x64
 8008790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008794:	4b8f      	ldr	r3, [pc, #572]	; (80089d4 <_dtoa_r+0x2e4>)
 8008796:	9303      	str	r3, [sp, #12]
 8008798:	3303      	adds	r3, #3
 800879a:	e7f5      	b.n	8008788 <_dtoa_r+0x98>
 800879c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80087a0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 80087a4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80087a8:	2200      	movs	r2, #0
 80087aa:	2300      	movs	r3, #0
 80087ac:	f7f8 f8fc 	bl	80009a8 <__aeabi_dcmpeq>
 80087b0:	4680      	mov	r8, r0
 80087b2:	b160      	cbz	r0, 80087ce <_dtoa_r+0xde>
 80087b4:	2301      	movs	r3, #1
 80087b6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80087b8:	6013      	str	r3, [r2, #0]
 80087ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80087bc:	2b00      	cmp	r3, #0
 80087be:	f000 8562 	beq.w	8009286 <_dtoa_r+0xb96>
 80087c2:	4b86      	ldr	r3, [pc, #536]	; (80089dc <_dtoa_r+0x2ec>)
 80087c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80087c6:	6013      	str	r3, [r2, #0]
 80087c8:	3b01      	subs	r3, #1
 80087ca:	9303      	str	r3, [sp, #12]
 80087cc:	e7de      	b.n	800878c <_dtoa_r+0x9c>
 80087ce:	ab16      	add	r3, sp, #88	; 0x58
 80087d0:	9301      	str	r3, [sp, #4]
 80087d2:	ab17      	add	r3, sp, #92	; 0x5c
 80087d4:	9300      	str	r3, [sp, #0]
 80087d6:	4628      	mov	r0, r5
 80087d8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80087dc:	f001 f98a 	bl	8009af4 <__d2b>
 80087e0:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80087e4:	4682      	mov	sl, r0
 80087e6:	2c00      	cmp	r4, #0
 80087e8:	d07e      	beq.n	80088e8 <_dtoa_r+0x1f8>
 80087ea:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80087ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80087f0:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80087f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80087f8:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80087fc:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8008800:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8008804:	4619      	mov	r1, r3
 8008806:	2200      	movs	r2, #0
 8008808:	4b75      	ldr	r3, [pc, #468]	; (80089e0 <_dtoa_r+0x2f0>)
 800880a:	f7f7 fcad 	bl	8000168 <__aeabi_dsub>
 800880e:	a368      	add	r3, pc, #416	; (adr r3, 80089b0 <_dtoa_r+0x2c0>)
 8008810:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008814:	f7f7 fe60 	bl	80004d8 <__aeabi_dmul>
 8008818:	a367      	add	r3, pc, #412	; (adr r3, 80089b8 <_dtoa_r+0x2c8>)
 800881a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800881e:	f7f7 fca5 	bl	800016c <__adddf3>
 8008822:	4606      	mov	r6, r0
 8008824:	4620      	mov	r0, r4
 8008826:	460f      	mov	r7, r1
 8008828:	f7f7 fdec 	bl	8000404 <__aeabi_i2d>
 800882c:	a364      	add	r3, pc, #400	; (adr r3, 80089c0 <_dtoa_r+0x2d0>)
 800882e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008832:	f7f7 fe51 	bl	80004d8 <__aeabi_dmul>
 8008836:	4602      	mov	r2, r0
 8008838:	460b      	mov	r3, r1
 800883a:	4630      	mov	r0, r6
 800883c:	4639      	mov	r1, r7
 800883e:	f7f7 fc95 	bl	800016c <__adddf3>
 8008842:	4606      	mov	r6, r0
 8008844:	460f      	mov	r7, r1
 8008846:	f7f8 f8f7 	bl	8000a38 <__aeabi_d2iz>
 800884a:	2200      	movs	r2, #0
 800884c:	4683      	mov	fp, r0
 800884e:	2300      	movs	r3, #0
 8008850:	4630      	mov	r0, r6
 8008852:	4639      	mov	r1, r7
 8008854:	f7f8 f8b2 	bl	80009bc <__aeabi_dcmplt>
 8008858:	b148      	cbz	r0, 800886e <_dtoa_r+0x17e>
 800885a:	4658      	mov	r0, fp
 800885c:	f7f7 fdd2 	bl	8000404 <__aeabi_i2d>
 8008860:	4632      	mov	r2, r6
 8008862:	463b      	mov	r3, r7
 8008864:	f7f8 f8a0 	bl	80009a8 <__aeabi_dcmpeq>
 8008868:	b908      	cbnz	r0, 800886e <_dtoa_r+0x17e>
 800886a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800886e:	f1bb 0f16 	cmp.w	fp, #22
 8008872:	d857      	bhi.n	8008924 <_dtoa_r+0x234>
 8008874:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8008878:	4b5a      	ldr	r3, [pc, #360]	; (80089e4 <_dtoa_r+0x2f4>)
 800887a:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800887e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008882:	f7f8 f89b 	bl	80009bc <__aeabi_dcmplt>
 8008886:	2800      	cmp	r0, #0
 8008888:	d04e      	beq.n	8008928 <_dtoa_r+0x238>
 800888a:	2300      	movs	r3, #0
 800888c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008890:	930f      	str	r3, [sp, #60]	; 0x3c
 8008892:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8008894:	1b1b      	subs	r3, r3, r4
 8008896:	1e5a      	subs	r2, r3, #1
 8008898:	bf46      	itte	mi
 800889a:	f1c3 0901 	rsbmi	r9, r3, #1
 800889e:	2300      	movmi	r3, #0
 80088a0:	f04f 0900 	movpl.w	r9, #0
 80088a4:	9209      	str	r2, [sp, #36]	; 0x24
 80088a6:	bf48      	it	mi
 80088a8:	9309      	strmi	r3, [sp, #36]	; 0x24
 80088aa:	f1bb 0f00 	cmp.w	fp, #0
 80088ae:	db3d      	blt.n	800892c <_dtoa_r+0x23c>
 80088b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80088b2:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80088b6:	445b      	add	r3, fp
 80088b8:	9309      	str	r3, [sp, #36]	; 0x24
 80088ba:	2300      	movs	r3, #0
 80088bc:	930a      	str	r3, [sp, #40]	; 0x28
 80088be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80088c0:	2b09      	cmp	r3, #9
 80088c2:	d867      	bhi.n	8008994 <_dtoa_r+0x2a4>
 80088c4:	2b05      	cmp	r3, #5
 80088c6:	bfc4      	itt	gt
 80088c8:	3b04      	subgt	r3, #4
 80088ca:	9322      	strgt	r3, [sp, #136]	; 0x88
 80088cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80088ce:	bfc8      	it	gt
 80088d0:	2400      	movgt	r4, #0
 80088d2:	f1a3 0302 	sub.w	r3, r3, #2
 80088d6:	bfd8      	it	le
 80088d8:	2401      	movle	r4, #1
 80088da:	2b03      	cmp	r3, #3
 80088dc:	f200 8086 	bhi.w	80089ec <_dtoa_r+0x2fc>
 80088e0:	e8df f003 	tbb	[pc, r3]
 80088e4:	5637392c 	.word	0x5637392c
 80088e8:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80088ec:	441c      	add	r4, r3
 80088ee:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80088f2:	2b20      	cmp	r3, #32
 80088f4:	bfc1      	itttt	gt
 80088f6:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80088fa:	fa09 f903 	lslgt.w	r9, r9, r3
 80088fe:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 8008902:	fa26 f303 	lsrgt.w	r3, r6, r3
 8008906:	bfd6      	itet	le
 8008908:	f1c3 0320 	rsble	r3, r3, #32
 800890c:	ea49 0003 	orrgt.w	r0, r9, r3
 8008910:	fa06 f003 	lslle.w	r0, r6, r3
 8008914:	f7f7 fd66 	bl	80003e4 <__aeabi_ui2d>
 8008918:	2201      	movs	r2, #1
 800891a:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 800891e:	3c01      	subs	r4, #1
 8008920:	9213      	str	r2, [sp, #76]	; 0x4c
 8008922:	e76f      	b.n	8008804 <_dtoa_r+0x114>
 8008924:	2301      	movs	r3, #1
 8008926:	e7b3      	b.n	8008890 <_dtoa_r+0x1a0>
 8008928:	900f      	str	r0, [sp, #60]	; 0x3c
 800892a:	e7b2      	b.n	8008892 <_dtoa_r+0x1a2>
 800892c:	f1cb 0300 	rsb	r3, fp, #0
 8008930:	930a      	str	r3, [sp, #40]	; 0x28
 8008932:	2300      	movs	r3, #0
 8008934:	eba9 090b 	sub.w	r9, r9, fp
 8008938:	930e      	str	r3, [sp, #56]	; 0x38
 800893a:	e7c0      	b.n	80088be <_dtoa_r+0x1ce>
 800893c:	2300      	movs	r3, #0
 800893e:	930b      	str	r3, [sp, #44]	; 0x2c
 8008940:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008942:	2b00      	cmp	r3, #0
 8008944:	dc55      	bgt.n	80089f2 <_dtoa_r+0x302>
 8008946:	2301      	movs	r3, #1
 8008948:	461a      	mov	r2, r3
 800894a:	9306      	str	r3, [sp, #24]
 800894c:	9308      	str	r3, [sp, #32]
 800894e:	9223      	str	r2, [sp, #140]	; 0x8c
 8008950:	e00b      	b.n	800896a <_dtoa_r+0x27a>
 8008952:	2301      	movs	r3, #1
 8008954:	e7f3      	b.n	800893e <_dtoa_r+0x24e>
 8008956:	2300      	movs	r3, #0
 8008958:	930b      	str	r3, [sp, #44]	; 0x2c
 800895a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800895c:	445b      	add	r3, fp
 800895e:	9306      	str	r3, [sp, #24]
 8008960:	3301      	adds	r3, #1
 8008962:	2b01      	cmp	r3, #1
 8008964:	9308      	str	r3, [sp, #32]
 8008966:	bfb8      	it	lt
 8008968:	2301      	movlt	r3, #1
 800896a:	2100      	movs	r1, #0
 800896c:	2204      	movs	r2, #4
 800896e:	69e8      	ldr	r0, [r5, #28]
 8008970:	f102 0614 	add.w	r6, r2, #20
 8008974:	429e      	cmp	r6, r3
 8008976:	d940      	bls.n	80089fa <_dtoa_r+0x30a>
 8008978:	6041      	str	r1, [r0, #4]
 800897a:	4628      	mov	r0, r5
 800897c:	f000 fd98 	bl	80094b0 <_Balloc>
 8008980:	9003      	str	r0, [sp, #12]
 8008982:	2800      	cmp	r0, #0
 8008984:	d13c      	bne.n	8008a00 <_dtoa_r+0x310>
 8008986:	4602      	mov	r2, r0
 8008988:	f240 11af 	movw	r1, #431	; 0x1af
 800898c:	4b16      	ldr	r3, [pc, #88]	; (80089e8 <_dtoa_r+0x2f8>)
 800898e:	e6c3      	b.n	8008718 <_dtoa_r+0x28>
 8008990:	2301      	movs	r3, #1
 8008992:	e7e1      	b.n	8008958 <_dtoa_r+0x268>
 8008994:	2401      	movs	r4, #1
 8008996:	2300      	movs	r3, #0
 8008998:	940b      	str	r4, [sp, #44]	; 0x2c
 800899a:	9322      	str	r3, [sp, #136]	; 0x88
 800899c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80089a0:	2200      	movs	r2, #0
 80089a2:	9306      	str	r3, [sp, #24]
 80089a4:	9308      	str	r3, [sp, #32]
 80089a6:	2312      	movs	r3, #18
 80089a8:	e7d1      	b.n	800894e <_dtoa_r+0x25e>
 80089aa:	bf00      	nop
 80089ac:	f3af 8000 	nop.w
 80089b0:	636f4361 	.word	0x636f4361
 80089b4:	3fd287a7 	.word	0x3fd287a7
 80089b8:	8b60c8b3 	.word	0x8b60c8b3
 80089bc:	3fc68a28 	.word	0x3fc68a28
 80089c0:	509f79fb 	.word	0x509f79fb
 80089c4:	3fd34413 	.word	0x3fd34413
 80089c8:	0800a42b 	.word	0x0800a42b
 80089cc:	0800a442 	.word	0x0800a442
 80089d0:	7ff00000 	.word	0x7ff00000
 80089d4:	0800a427 	.word	0x0800a427
 80089d8:	0800a41e 	.word	0x0800a41e
 80089dc:	0800a3fb 	.word	0x0800a3fb
 80089e0:	3ff80000 	.word	0x3ff80000
 80089e4:	0800a530 	.word	0x0800a530
 80089e8:	0800a49a 	.word	0x0800a49a
 80089ec:	2301      	movs	r3, #1
 80089ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80089f0:	e7d4      	b.n	800899c <_dtoa_r+0x2ac>
 80089f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80089f4:	9306      	str	r3, [sp, #24]
 80089f6:	9308      	str	r3, [sp, #32]
 80089f8:	e7b7      	b.n	800896a <_dtoa_r+0x27a>
 80089fa:	3101      	adds	r1, #1
 80089fc:	0052      	lsls	r2, r2, #1
 80089fe:	e7b7      	b.n	8008970 <_dtoa_r+0x280>
 8008a00:	69eb      	ldr	r3, [r5, #28]
 8008a02:	9a03      	ldr	r2, [sp, #12]
 8008a04:	601a      	str	r2, [r3, #0]
 8008a06:	9b08      	ldr	r3, [sp, #32]
 8008a08:	2b0e      	cmp	r3, #14
 8008a0a:	f200 80a8 	bhi.w	8008b5e <_dtoa_r+0x46e>
 8008a0e:	2c00      	cmp	r4, #0
 8008a10:	f000 80a5 	beq.w	8008b5e <_dtoa_r+0x46e>
 8008a14:	f1bb 0f00 	cmp.w	fp, #0
 8008a18:	dd34      	ble.n	8008a84 <_dtoa_r+0x394>
 8008a1a:	4b9a      	ldr	r3, [pc, #616]	; (8008c84 <_dtoa_r+0x594>)
 8008a1c:	f00b 020f 	and.w	r2, fp, #15
 8008a20:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008a24:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8008a28:	e9d3 3400 	ldrd	r3, r4, [r3]
 8008a2c:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8008a30:	ea4f 142b 	mov.w	r4, fp, asr #4
 8008a34:	d016      	beq.n	8008a64 <_dtoa_r+0x374>
 8008a36:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8008a3a:	4b93      	ldr	r3, [pc, #588]	; (8008c88 <_dtoa_r+0x598>)
 8008a3c:	2703      	movs	r7, #3
 8008a3e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008a42:	f7f7 fe73 	bl	800072c <__aeabi_ddiv>
 8008a46:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008a4a:	f004 040f 	and.w	r4, r4, #15
 8008a4e:	4e8e      	ldr	r6, [pc, #568]	; (8008c88 <_dtoa_r+0x598>)
 8008a50:	b954      	cbnz	r4, 8008a68 <_dtoa_r+0x378>
 8008a52:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008a56:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008a5a:	f7f7 fe67 	bl	800072c <__aeabi_ddiv>
 8008a5e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008a62:	e029      	b.n	8008ab8 <_dtoa_r+0x3c8>
 8008a64:	2702      	movs	r7, #2
 8008a66:	e7f2      	b.n	8008a4e <_dtoa_r+0x35e>
 8008a68:	07e1      	lsls	r1, r4, #31
 8008a6a:	d508      	bpl.n	8008a7e <_dtoa_r+0x38e>
 8008a6c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008a70:	e9d6 2300 	ldrd	r2, r3, [r6]
 8008a74:	f7f7 fd30 	bl	80004d8 <__aeabi_dmul>
 8008a78:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8008a7c:	3701      	adds	r7, #1
 8008a7e:	1064      	asrs	r4, r4, #1
 8008a80:	3608      	adds	r6, #8
 8008a82:	e7e5      	b.n	8008a50 <_dtoa_r+0x360>
 8008a84:	f000 80a5 	beq.w	8008bd2 <_dtoa_r+0x4e2>
 8008a88:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8008a8c:	f1cb 0400 	rsb	r4, fp, #0
 8008a90:	4b7c      	ldr	r3, [pc, #496]	; (8008c84 <_dtoa_r+0x594>)
 8008a92:	f004 020f 	and.w	r2, r4, #15
 8008a96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008a9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a9e:	f7f7 fd1b 	bl	80004d8 <__aeabi_dmul>
 8008aa2:	2702      	movs	r7, #2
 8008aa4:	2300      	movs	r3, #0
 8008aa6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008aaa:	4e77      	ldr	r6, [pc, #476]	; (8008c88 <_dtoa_r+0x598>)
 8008aac:	1124      	asrs	r4, r4, #4
 8008aae:	2c00      	cmp	r4, #0
 8008ab0:	f040 8084 	bne.w	8008bbc <_dtoa_r+0x4cc>
 8008ab4:	2b00      	cmp	r3, #0
 8008ab6:	d1d2      	bne.n	8008a5e <_dtoa_r+0x36e>
 8008ab8:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8008abc:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8008ac0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	f000 8087 	beq.w	8008bd6 <_dtoa_r+0x4e6>
 8008ac8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008acc:	2200      	movs	r2, #0
 8008ace:	4b6f      	ldr	r3, [pc, #444]	; (8008c8c <_dtoa_r+0x59c>)
 8008ad0:	f7f7 ff74 	bl	80009bc <__aeabi_dcmplt>
 8008ad4:	2800      	cmp	r0, #0
 8008ad6:	d07e      	beq.n	8008bd6 <_dtoa_r+0x4e6>
 8008ad8:	9b08      	ldr	r3, [sp, #32]
 8008ada:	2b00      	cmp	r3, #0
 8008adc:	d07b      	beq.n	8008bd6 <_dtoa_r+0x4e6>
 8008ade:	9b06      	ldr	r3, [sp, #24]
 8008ae0:	2b00      	cmp	r3, #0
 8008ae2:	dd38      	ble.n	8008b56 <_dtoa_r+0x466>
 8008ae4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008ae8:	2200      	movs	r2, #0
 8008aea:	4b69      	ldr	r3, [pc, #420]	; (8008c90 <_dtoa_r+0x5a0>)
 8008aec:	f7f7 fcf4 	bl	80004d8 <__aeabi_dmul>
 8008af0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008af4:	9c06      	ldr	r4, [sp, #24]
 8008af6:	f10b 38ff 	add.w	r8, fp, #4294967295	; 0xffffffff
 8008afa:	3701      	adds	r7, #1
 8008afc:	4638      	mov	r0, r7
 8008afe:	f7f7 fc81 	bl	8000404 <__aeabi_i2d>
 8008b02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008b06:	f7f7 fce7 	bl	80004d8 <__aeabi_dmul>
 8008b0a:	2200      	movs	r2, #0
 8008b0c:	4b61      	ldr	r3, [pc, #388]	; (8008c94 <_dtoa_r+0x5a4>)
 8008b0e:	f7f7 fb2d 	bl	800016c <__adddf3>
 8008b12:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8008b16:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8008b1a:	9611      	str	r6, [sp, #68]	; 0x44
 8008b1c:	2c00      	cmp	r4, #0
 8008b1e:	d15d      	bne.n	8008bdc <_dtoa_r+0x4ec>
 8008b20:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008b24:	2200      	movs	r2, #0
 8008b26:	4b5c      	ldr	r3, [pc, #368]	; (8008c98 <_dtoa_r+0x5a8>)
 8008b28:	f7f7 fb1e 	bl	8000168 <__aeabi_dsub>
 8008b2c:	4602      	mov	r2, r0
 8008b2e:	460b      	mov	r3, r1
 8008b30:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008b34:	4633      	mov	r3, r6
 8008b36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008b38:	f7f7 ff5e 	bl	80009f8 <__aeabi_dcmpgt>
 8008b3c:	2800      	cmp	r0, #0
 8008b3e:	f040 8295 	bne.w	800906c <_dtoa_r+0x97c>
 8008b42:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008b46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008b48:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8008b4c:	f7f7 ff36 	bl	80009bc <__aeabi_dcmplt>
 8008b50:	2800      	cmp	r0, #0
 8008b52:	f040 8289 	bne.w	8009068 <_dtoa_r+0x978>
 8008b56:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8008b5a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8008b5e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008b60:	2b00      	cmp	r3, #0
 8008b62:	f2c0 8151 	blt.w	8008e08 <_dtoa_r+0x718>
 8008b66:	f1bb 0f0e 	cmp.w	fp, #14
 8008b6a:	f300 814d 	bgt.w	8008e08 <_dtoa_r+0x718>
 8008b6e:	4b45      	ldr	r3, [pc, #276]	; (8008c84 <_dtoa_r+0x594>)
 8008b70:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8008b74:	e9d3 3400 	ldrd	r3, r4, [r3]
 8008b78:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8008b7c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008b7e:	2b00      	cmp	r3, #0
 8008b80:	f280 80da 	bge.w	8008d38 <_dtoa_r+0x648>
 8008b84:	9b08      	ldr	r3, [sp, #32]
 8008b86:	2b00      	cmp	r3, #0
 8008b88:	f300 80d6 	bgt.w	8008d38 <_dtoa_r+0x648>
 8008b8c:	f040 826b 	bne.w	8009066 <_dtoa_r+0x976>
 8008b90:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008b94:	2200      	movs	r2, #0
 8008b96:	4b40      	ldr	r3, [pc, #256]	; (8008c98 <_dtoa_r+0x5a8>)
 8008b98:	f7f7 fc9e 	bl	80004d8 <__aeabi_dmul>
 8008b9c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008ba0:	f7f7 ff20 	bl	80009e4 <__aeabi_dcmpge>
 8008ba4:	9c08      	ldr	r4, [sp, #32]
 8008ba6:	4626      	mov	r6, r4
 8008ba8:	2800      	cmp	r0, #0
 8008baa:	f040 8241 	bne.w	8009030 <_dtoa_r+0x940>
 8008bae:	2331      	movs	r3, #49	; 0x31
 8008bb0:	9f03      	ldr	r7, [sp, #12]
 8008bb2:	f10b 0b01 	add.w	fp, fp, #1
 8008bb6:	f807 3b01 	strb.w	r3, [r7], #1
 8008bba:	e23d      	b.n	8009038 <_dtoa_r+0x948>
 8008bbc:	07e2      	lsls	r2, r4, #31
 8008bbe:	d505      	bpl.n	8008bcc <_dtoa_r+0x4dc>
 8008bc0:	e9d6 2300 	ldrd	r2, r3, [r6]
 8008bc4:	f7f7 fc88 	bl	80004d8 <__aeabi_dmul>
 8008bc8:	2301      	movs	r3, #1
 8008bca:	3701      	adds	r7, #1
 8008bcc:	1064      	asrs	r4, r4, #1
 8008bce:	3608      	adds	r6, #8
 8008bd0:	e76d      	b.n	8008aae <_dtoa_r+0x3be>
 8008bd2:	2702      	movs	r7, #2
 8008bd4:	e770      	b.n	8008ab8 <_dtoa_r+0x3c8>
 8008bd6:	46d8      	mov	r8, fp
 8008bd8:	9c08      	ldr	r4, [sp, #32]
 8008bda:	e78f      	b.n	8008afc <_dtoa_r+0x40c>
 8008bdc:	9903      	ldr	r1, [sp, #12]
 8008bde:	4b29      	ldr	r3, [pc, #164]	; (8008c84 <_dtoa_r+0x594>)
 8008be0:	4421      	add	r1, r4
 8008be2:	9112      	str	r1, [sp, #72]	; 0x48
 8008be4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008be6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008bea:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8008bee:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008bf2:	2900      	cmp	r1, #0
 8008bf4:	d054      	beq.n	8008ca0 <_dtoa_r+0x5b0>
 8008bf6:	2000      	movs	r0, #0
 8008bf8:	4928      	ldr	r1, [pc, #160]	; (8008c9c <_dtoa_r+0x5ac>)
 8008bfa:	f7f7 fd97 	bl	800072c <__aeabi_ddiv>
 8008bfe:	463b      	mov	r3, r7
 8008c00:	4632      	mov	r2, r6
 8008c02:	f7f7 fab1 	bl	8000168 <__aeabi_dsub>
 8008c06:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8008c0a:	9f03      	ldr	r7, [sp, #12]
 8008c0c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008c10:	f7f7 ff12 	bl	8000a38 <__aeabi_d2iz>
 8008c14:	4604      	mov	r4, r0
 8008c16:	f7f7 fbf5 	bl	8000404 <__aeabi_i2d>
 8008c1a:	4602      	mov	r2, r0
 8008c1c:	460b      	mov	r3, r1
 8008c1e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008c22:	f7f7 faa1 	bl	8000168 <__aeabi_dsub>
 8008c26:	4602      	mov	r2, r0
 8008c28:	460b      	mov	r3, r1
 8008c2a:	3430      	adds	r4, #48	; 0x30
 8008c2c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008c30:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008c34:	f807 4b01 	strb.w	r4, [r7], #1
 8008c38:	f7f7 fec0 	bl	80009bc <__aeabi_dcmplt>
 8008c3c:	2800      	cmp	r0, #0
 8008c3e:	d173      	bne.n	8008d28 <_dtoa_r+0x638>
 8008c40:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008c44:	2000      	movs	r0, #0
 8008c46:	4911      	ldr	r1, [pc, #68]	; (8008c8c <_dtoa_r+0x59c>)
 8008c48:	f7f7 fa8e 	bl	8000168 <__aeabi_dsub>
 8008c4c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008c50:	f7f7 feb4 	bl	80009bc <__aeabi_dcmplt>
 8008c54:	2800      	cmp	r0, #0
 8008c56:	f040 80b6 	bne.w	8008dc6 <_dtoa_r+0x6d6>
 8008c5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008c5c:	429f      	cmp	r7, r3
 8008c5e:	f43f af7a 	beq.w	8008b56 <_dtoa_r+0x466>
 8008c62:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008c66:	2200      	movs	r2, #0
 8008c68:	4b09      	ldr	r3, [pc, #36]	; (8008c90 <_dtoa_r+0x5a0>)
 8008c6a:	f7f7 fc35 	bl	80004d8 <__aeabi_dmul>
 8008c6e:	2200      	movs	r2, #0
 8008c70:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8008c74:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008c78:	4b05      	ldr	r3, [pc, #20]	; (8008c90 <_dtoa_r+0x5a0>)
 8008c7a:	f7f7 fc2d 	bl	80004d8 <__aeabi_dmul>
 8008c7e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008c82:	e7c3      	b.n	8008c0c <_dtoa_r+0x51c>
 8008c84:	0800a530 	.word	0x0800a530
 8008c88:	0800a508 	.word	0x0800a508
 8008c8c:	3ff00000 	.word	0x3ff00000
 8008c90:	40240000 	.word	0x40240000
 8008c94:	401c0000 	.word	0x401c0000
 8008c98:	40140000 	.word	0x40140000
 8008c9c:	3fe00000 	.word	0x3fe00000
 8008ca0:	4630      	mov	r0, r6
 8008ca2:	4639      	mov	r1, r7
 8008ca4:	f7f7 fc18 	bl	80004d8 <__aeabi_dmul>
 8008ca8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008caa:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8008cae:	9c03      	ldr	r4, [sp, #12]
 8008cb0:	9314      	str	r3, [sp, #80]	; 0x50
 8008cb2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008cb6:	f7f7 febf 	bl	8000a38 <__aeabi_d2iz>
 8008cba:	9015      	str	r0, [sp, #84]	; 0x54
 8008cbc:	f7f7 fba2 	bl	8000404 <__aeabi_i2d>
 8008cc0:	4602      	mov	r2, r0
 8008cc2:	460b      	mov	r3, r1
 8008cc4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008cc8:	f7f7 fa4e 	bl	8000168 <__aeabi_dsub>
 8008ccc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008cce:	4606      	mov	r6, r0
 8008cd0:	3330      	adds	r3, #48	; 0x30
 8008cd2:	f804 3b01 	strb.w	r3, [r4], #1
 8008cd6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008cd8:	460f      	mov	r7, r1
 8008cda:	429c      	cmp	r4, r3
 8008cdc:	f04f 0200 	mov.w	r2, #0
 8008ce0:	d124      	bne.n	8008d2c <_dtoa_r+0x63c>
 8008ce2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8008ce6:	4baf      	ldr	r3, [pc, #700]	; (8008fa4 <_dtoa_r+0x8b4>)
 8008ce8:	f7f7 fa40 	bl	800016c <__adddf3>
 8008cec:	4602      	mov	r2, r0
 8008cee:	460b      	mov	r3, r1
 8008cf0:	4630      	mov	r0, r6
 8008cf2:	4639      	mov	r1, r7
 8008cf4:	f7f7 fe80 	bl	80009f8 <__aeabi_dcmpgt>
 8008cf8:	2800      	cmp	r0, #0
 8008cfa:	d163      	bne.n	8008dc4 <_dtoa_r+0x6d4>
 8008cfc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008d00:	2000      	movs	r0, #0
 8008d02:	49a8      	ldr	r1, [pc, #672]	; (8008fa4 <_dtoa_r+0x8b4>)
 8008d04:	f7f7 fa30 	bl	8000168 <__aeabi_dsub>
 8008d08:	4602      	mov	r2, r0
 8008d0a:	460b      	mov	r3, r1
 8008d0c:	4630      	mov	r0, r6
 8008d0e:	4639      	mov	r1, r7
 8008d10:	f7f7 fe54 	bl	80009bc <__aeabi_dcmplt>
 8008d14:	2800      	cmp	r0, #0
 8008d16:	f43f af1e 	beq.w	8008b56 <_dtoa_r+0x466>
 8008d1a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8008d1c:	1e7b      	subs	r3, r7, #1
 8008d1e:	9314      	str	r3, [sp, #80]	; 0x50
 8008d20:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8008d24:	2b30      	cmp	r3, #48	; 0x30
 8008d26:	d0f8      	beq.n	8008d1a <_dtoa_r+0x62a>
 8008d28:	46c3      	mov	fp, r8
 8008d2a:	e03b      	b.n	8008da4 <_dtoa_r+0x6b4>
 8008d2c:	4b9e      	ldr	r3, [pc, #632]	; (8008fa8 <_dtoa_r+0x8b8>)
 8008d2e:	f7f7 fbd3 	bl	80004d8 <__aeabi_dmul>
 8008d32:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008d36:	e7bc      	b.n	8008cb2 <_dtoa_r+0x5c2>
 8008d38:	9f03      	ldr	r7, [sp, #12]
 8008d3a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8008d3e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008d42:	4640      	mov	r0, r8
 8008d44:	4649      	mov	r1, r9
 8008d46:	f7f7 fcf1 	bl	800072c <__aeabi_ddiv>
 8008d4a:	f7f7 fe75 	bl	8000a38 <__aeabi_d2iz>
 8008d4e:	4604      	mov	r4, r0
 8008d50:	f7f7 fb58 	bl	8000404 <__aeabi_i2d>
 8008d54:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008d58:	f7f7 fbbe 	bl	80004d8 <__aeabi_dmul>
 8008d5c:	4602      	mov	r2, r0
 8008d5e:	460b      	mov	r3, r1
 8008d60:	4640      	mov	r0, r8
 8008d62:	4649      	mov	r1, r9
 8008d64:	f7f7 fa00 	bl	8000168 <__aeabi_dsub>
 8008d68:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8008d6c:	f807 6b01 	strb.w	r6, [r7], #1
 8008d70:	9e03      	ldr	r6, [sp, #12]
 8008d72:	f8dd c020 	ldr.w	ip, [sp, #32]
 8008d76:	1bbe      	subs	r6, r7, r6
 8008d78:	45b4      	cmp	ip, r6
 8008d7a:	4602      	mov	r2, r0
 8008d7c:	460b      	mov	r3, r1
 8008d7e:	d136      	bne.n	8008dee <_dtoa_r+0x6fe>
 8008d80:	f7f7 f9f4 	bl	800016c <__adddf3>
 8008d84:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008d88:	4680      	mov	r8, r0
 8008d8a:	4689      	mov	r9, r1
 8008d8c:	f7f7 fe34 	bl	80009f8 <__aeabi_dcmpgt>
 8008d90:	bb58      	cbnz	r0, 8008dea <_dtoa_r+0x6fa>
 8008d92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008d96:	4640      	mov	r0, r8
 8008d98:	4649      	mov	r1, r9
 8008d9a:	f7f7 fe05 	bl	80009a8 <__aeabi_dcmpeq>
 8008d9e:	b108      	cbz	r0, 8008da4 <_dtoa_r+0x6b4>
 8008da0:	07e3      	lsls	r3, r4, #31
 8008da2:	d422      	bmi.n	8008dea <_dtoa_r+0x6fa>
 8008da4:	4651      	mov	r1, sl
 8008da6:	4628      	mov	r0, r5
 8008da8:	f000 fbc2 	bl	8009530 <_Bfree>
 8008dac:	2300      	movs	r3, #0
 8008dae:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008db0:	703b      	strb	r3, [r7, #0]
 8008db2:	f10b 0301 	add.w	r3, fp, #1
 8008db6:	6013      	str	r3, [r2, #0]
 8008db8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008dba:	2b00      	cmp	r3, #0
 8008dbc:	f43f ace6 	beq.w	800878c <_dtoa_r+0x9c>
 8008dc0:	601f      	str	r7, [r3, #0]
 8008dc2:	e4e3      	b.n	800878c <_dtoa_r+0x9c>
 8008dc4:	4627      	mov	r7, r4
 8008dc6:	463b      	mov	r3, r7
 8008dc8:	461f      	mov	r7, r3
 8008dca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008dce:	2a39      	cmp	r2, #57	; 0x39
 8008dd0:	d107      	bne.n	8008de2 <_dtoa_r+0x6f2>
 8008dd2:	9a03      	ldr	r2, [sp, #12]
 8008dd4:	429a      	cmp	r2, r3
 8008dd6:	d1f7      	bne.n	8008dc8 <_dtoa_r+0x6d8>
 8008dd8:	2230      	movs	r2, #48	; 0x30
 8008dda:	9903      	ldr	r1, [sp, #12]
 8008ddc:	f108 0801 	add.w	r8, r8, #1
 8008de0:	700a      	strb	r2, [r1, #0]
 8008de2:	781a      	ldrb	r2, [r3, #0]
 8008de4:	3201      	adds	r2, #1
 8008de6:	701a      	strb	r2, [r3, #0]
 8008de8:	e79e      	b.n	8008d28 <_dtoa_r+0x638>
 8008dea:	46d8      	mov	r8, fp
 8008dec:	e7eb      	b.n	8008dc6 <_dtoa_r+0x6d6>
 8008dee:	2200      	movs	r2, #0
 8008df0:	4b6d      	ldr	r3, [pc, #436]	; (8008fa8 <_dtoa_r+0x8b8>)
 8008df2:	f7f7 fb71 	bl	80004d8 <__aeabi_dmul>
 8008df6:	2200      	movs	r2, #0
 8008df8:	2300      	movs	r3, #0
 8008dfa:	4680      	mov	r8, r0
 8008dfc:	4689      	mov	r9, r1
 8008dfe:	f7f7 fdd3 	bl	80009a8 <__aeabi_dcmpeq>
 8008e02:	2800      	cmp	r0, #0
 8008e04:	d09b      	beq.n	8008d3e <_dtoa_r+0x64e>
 8008e06:	e7cd      	b.n	8008da4 <_dtoa_r+0x6b4>
 8008e08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008e0a:	2a00      	cmp	r2, #0
 8008e0c:	f000 80c4 	beq.w	8008f98 <_dtoa_r+0x8a8>
 8008e10:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8008e12:	2a01      	cmp	r2, #1
 8008e14:	f300 80a8 	bgt.w	8008f68 <_dtoa_r+0x878>
 8008e18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8008e1a:	2a00      	cmp	r2, #0
 8008e1c:	f000 80a0 	beq.w	8008f60 <_dtoa_r+0x870>
 8008e20:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8008e24:	464f      	mov	r7, r9
 8008e26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008e28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008e2a:	2101      	movs	r1, #1
 8008e2c:	441a      	add	r2, r3
 8008e2e:	4628      	mov	r0, r5
 8008e30:	4499      	add	r9, r3
 8008e32:	9209      	str	r2, [sp, #36]	; 0x24
 8008e34:	f000 fc32 	bl	800969c <__i2b>
 8008e38:	4606      	mov	r6, r0
 8008e3a:	b15f      	cbz	r7, 8008e54 <_dtoa_r+0x764>
 8008e3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008e3e:	2b00      	cmp	r3, #0
 8008e40:	dd08      	ble.n	8008e54 <_dtoa_r+0x764>
 8008e42:	42bb      	cmp	r3, r7
 8008e44:	bfa8      	it	ge
 8008e46:	463b      	movge	r3, r7
 8008e48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008e4a:	eba9 0903 	sub.w	r9, r9, r3
 8008e4e:	1aff      	subs	r7, r7, r3
 8008e50:	1ad3      	subs	r3, r2, r3
 8008e52:	9309      	str	r3, [sp, #36]	; 0x24
 8008e54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008e56:	b1f3      	cbz	r3, 8008e96 <_dtoa_r+0x7a6>
 8008e58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	f000 80a0 	beq.w	8008fa0 <_dtoa_r+0x8b0>
 8008e60:	2c00      	cmp	r4, #0
 8008e62:	dd10      	ble.n	8008e86 <_dtoa_r+0x796>
 8008e64:	4631      	mov	r1, r6
 8008e66:	4622      	mov	r2, r4
 8008e68:	4628      	mov	r0, r5
 8008e6a:	f000 fcd5 	bl	8009818 <__pow5mult>
 8008e6e:	4652      	mov	r2, sl
 8008e70:	4601      	mov	r1, r0
 8008e72:	4606      	mov	r6, r0
 8008e74:	4628      	mov	r0, r5
 8008e76:	f000 fc27 	bl	80096c8 <__multiply>
 8008e7a:	4680      	mov	r8, r0
 8008e7c:	4651      	mov	r1, sl
 8008e7e:	4628      	mov	r0, r5
 8008e80:	f000 fb56 	bl	8009530 <_Bfree>
 8008e84:	46c2      	mov	sl, r8
 8008e86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008e88:	1b1a      	subs	r2, r3, r4
 8008e8a:	d004      	beq.n	8008e96 <_dtoa_r+0x7a6>
 8008e8c:	4651      	mov	r1, sl
 8008e8e:	4628      	mov	r0, r5
 8008e90:	f000 fcc2 	bl	8009818 <__pow5mult>
 8008e94:	4682      	mov	sl, r0
 8008e96:	2101      	movs	r1, #1
 8008e98:	4628      	mov	r0, r5
 8008e9a:	f000 fbff 	bl	800969c <__i2b>
 8008e9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008ea0:	4604      	mov	r4, r0
 8008ea2:	2b00      	cmp	r3, #0
 8008ea4:	f340 8082 	ble.w	8008fac <_dtoa_r+0x8bc>
 8008ea8:	461a      	mov	r2, r3
 8008eaa:	4601      	mov	r1, r0
 8008eac:	4628      	mov	r0, r5
 8008eae:	f000 fcb3 	bl	8009818 <__pow5mult>
 8008eb2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008eb4:	4604      	mov	r4, r0
 8008eb6:	2b01      	cmp	r3, #1
 8008eb8:	dd7b      	ble.n	8008fb2 <_dtoa_r+0x8c2>
 8008eba:	f04f 0800 	mov.w	r8, #0
 8008ebe:	6923      	ldr	r3, [r4, #16]
 8008ec0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8008ec4:	6918      	ldr	r0, [r3, #16]
 8008ec6:	f000 fb9b 	bl	8009600 <__hi0bits>
 8008eca:	f1c0 0020 	rsb	r0, r0, #32
 8008ece:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ed0:	4418      	add	r0, r3
 8008ed2:	f010 001f 	ands.w	r0, r0, #31
 8008ed6:	f000 8092 	beq.w	8008ffe <_dtoa_r+0x90e>
 8008eda:	f1c0 0320 	rsb	r3, r0, #32
 8008ede:	2b04      	cmp	r3, #4
 8008ee0:	f340 8085 	ble.w	8008fee <_dtoa_r+0x8fe>
 8008ee4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ee6:	f1c0 001c 	rsb	r0, r0, #28
 8008eea:	4403      	add	r3, r0
 8008eec:	4481      	add	r9, r0
 8008eee:	4407      	add	r7, r0
 8008ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8008ef2:	f1b9 0f00 	cmp.w	r9, #0
 8008ef6:	dd05      	ble.n	8008f04 <_dtoa_r+0x814>
 8008ef8:	4651      	mov	r1, sl
 8008efa:	464a      	mov	r2, r9
 8008efc:	4628      	mov	r0, r5
 8008efe:	f000 fce5 	bl	80098cc <__lshift>
 8008f02:	4682      	mov	sl, r0
 8008f04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	dd05      	ble.n	8008f16 <_dtoa_r+0x826>
 8008f0a:	4621      	mov	r1, r4
 8008f0c:	461a      	mov	r2, r3
 8008f0e:	4628      	mov	r0, r5
 8008f10:	f000 fcdc 	bl	80098cc <__lshift>
 8008f14:	4604      	mov	r4, r0
 8008f16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008f18:	2b00      	cmp	r3, #0
 8008f1a:	d072      	beq.n	8009002 <_dtoa_r+0x912>
 8008f1c:	4621      	mov	r1, r4
 8008f1e:	4650      	mov	r0, sl
 8008f20:	f000 fd40 	bl	80099a4 <__mcmp>
 8008f24:	2800      	cmp	r0, #0
 8008f26:	da6c      	bge.n	8009002 <_dtoa_r+0x912>
 8008f28:	2300      	movs	r3, #0
 8008f2a:	4651      	mov	r1, sl
 8008f2c:	220a      	movs	r2, #10
 8008f2e:	4628      	mov	r0, r5
 8008f30:	f000 fb20 	bl	8009574 <__multadd>
 8008f34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f36:	4682      	mov	sl, r0
 8008f38:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008f3c:	2b00      	cmp	r3, #0
 8008f3e:	f000 81ac 	beq.w	800929a <_dtoa_r+0xbaa>
 8008f42:	2300      	movs	r3, #0
 8008f44:	4631      	mov	r1, r6
 8008f46:	220a      	movs	r2, #10
 8008f48:	4628      	mov	r0, r5
 8008f4a:	f000 fb13 	bl	8009574 <__multadd>
 8008f4e:	9b06      	ldr	r3, [sp, #24]
 8008f50:	4606      	mov	r6, r0
 8008f52:	2b00      	cmp	r3, #0
 8008f54:	f300 8093 	bgt.w	800907e <_dtoa_r+0x98e>
 8008f58:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008f5a:	2b02      	cmp	r3, #2
 8008f5c:	dc59      	bgt.n	8009012 <_dtoa_r+0x922>
 8008f5e:	e08e      	b.n	800907e <_dtoa_r+0x98e>
 8008f60:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8008f62:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8008f66:	e75d      	b.n	8008e24 <_dtoa_r+0x734>
 8008f68:	9b08      	ldr	r3, [sp, #32]
 8008f6a:	1e5c      	subs	r4, r3, #1
 8008f6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008f6e:	42a3      	cmp	r3, r4
 8008f70:	bfbf      	itttt	lt
 8008f72:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8008f74:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 8008f76:	1ae3      	sublt	r3, r4, r3
 8008f78:	18d2      	addlt	r2, r2, r3
 8008f7a:	bfa8      	it	ge
 8008f7c:	1b1c      	subge	r4, r3, r4
 8008f7e:	9b08      	ldr	r3, [sp, #32]
 8008f80:	bfbe      	ittt	lt
 8008f82:	940a      	strlt	r4, [sp, #40]	; 0x28
 8008f84:	920e      	strlt	r2, [sp, #56]	; 0x38
 8008f86:	2400      	movlt	r4, #0
 8008f88:	2b00      	cmp	r3, #0
 8008f8a:	bfb5      	itete	lt
 8008f8c:	eba9 0703 	sublt.w	r7, r9, r3
 8008f90:	464f      	movge	r7, r9
 8008f92:	2300      	movlt	r3, #0
 8008f94:	9b08      	ldrge	r3, [sp, #32]
 8008f96:	e747      	b.n	8008e28 <_dtoa_r+0x738>
 8008f98:	464f      	mov	r7, r9
 8008f9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008f9c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8008f9e:	e74c      	b.n	8008e3a <_dtoa_r+0x74a>
 8008fa0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008fa2:	e773      	b.n	8008e8c <_dtoa_r+0x79c>
 8008fa4:	3fe00000 	.word	0x3fe00000
 8008fa8:	40240000 	.word	0x40240000
 8008fac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008fae:	2b01      	cmp	r3, #1
 8008fb0:	dc18      	bgt.n	8008fe4 <_dtoa_r+0x8f4>
 8008fb2:	9b04      	ldr	r3, [sp, #16]
 8008fb4:	b9b3      	cbnz	r3, 8008fe4 <_dtoa_r+0x8f4>
 8008fb6:	9b05      	ldr	r3, [sp, #20]
 8008fb8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008fbc:	b993      	cbnz	r3, 8008fe4 <_dtoa_r+0x8f4>
 8008fbe:	9b05      	ldr	r3, [sp, #20]
 8008fc0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008fc4:	0d1b      	lsrs	r3, r3, #20
 8008fc6:	051b      	lsls	r3, r3, #20
 8008fc8:	b17b      	cbz	r3, 8008fea <_dtoa_r+0x8fa>
 8008fca:	f04f 0801 	mov.w	r8, #1
 8008fce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008fd0:	f109 0901 	add.w	r9, r9, #1
 8008fd4:	3301      	adds	r3, #1
 8008fd6:	9309      	str	r3, [sp, #36]	; 0x24
 8008fd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008fda:	2b00      	cmp	r3, #0
 8008fdc:	f47f af6f 	bne.w	8008ebe <_dtoa_r+0x7ce>
 8008fe0:	2001      	movs	r0, #1
 8008fe2:	e774      	b.n	8008ece <_dtoa_r+0x7de>
 8008fe4:	f04f 0800 	mov.w	r8, #0
 8008fe8:	e7f6      	b.n	8008fd8 <_dtoa_r+0x8e8>
 8008fea:	4698      	mov	r8, r3
 8008fec:	e7f4      	b.n	8008fd8 <_dtoa_r+0x8e8>
 8008fee:	d080      	beq.n	8008ef2 <_dtoa_r+0x802>
 8008ff0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008ff2:	331c      	adds	r3, #28
 8008ff4:	441a      	add	r2, r3
 8008ff6:	4499      	add	r9, r3
 8008ff8:	441f      	add	r7, r3
 8008ffa:	9209      	str	r2, [sp, #36]	; 0x24
 8008ffc:	e779      	b.n	8008ef2 <_dtoa_r+0x802>
 8008ffe:	4603      	mov	r3, r0
 8009000:	e7f6      	b.n	8008ff0 <_dtoa_r+0x900>
 8009002:	9b08      	ldr	r3, [sp, #32]
 8009004:	2b00      	cmp	r3, #0
 8009006:	dc34      	bgt.n	8009072 <_dtoa_r+0x982>
 8009008:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800900a:	2b02      	cmp	r3, #2
 800900c:	dd31      	ble.n	8009072 <_dtoa_r+0x982>
 800900e:	9b08      	ldr	r3, [sp, #32]
 8009010:	9306      	str	r3, [sp, #24]
 8009012:	9b06      	ldr	r3, [sp, #24]
 8009014:	b963      	cbnz	r3, 8009030 <_dtoa_r+0x940>
 8009016:	4621      	mov	r1, r4
 8009018:	2205      	movs	r2, #5
 800901a:	4628      	mov	r0, r5
 800901c:	f000 faaa 	bl	8009574 <__multadd>
 8009020:	4601      	mov	r1, r0
 8009022:	4604      	mov	r4, r0
 8009024:	4650      	mov	r0, sl
 8009026:	f000 fcbd 	bl	80099a4 <__mcmp>
 800902a:	2800      	cmp	r0, #0
 800902c:	f73f adbf 	bgt.w	8008bae <_dtoa_r+0x4be>
 8009030:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8009032:	9f03      	ldr	r7, [sp, #12]
 8009034:	ea6f 0b03 	mvn.w	fp, r3
 8009038:	f04f 0800 	mov.w	r8, #0
 800903c:	4621      	mov	r1, r4
 800903e:	4628      	mov	r0, r5
 8009040:	f000 fa76 	bl	8009530 <_Bfree>
 8009044:	2e00      	cmp	r6, #0
 8009046:	f43f aead 	beq.w	8008da4 <_dtoa_r+0x6b4>
 800904a:	f1b8 0f00 	cmp.w	r8, #0
 800904e:	d005      	beq.n	800905c <_dtoa_r+0x96c>
 8009050:	45b0      	cmp	r8, r6
 8009052:	d003      	beq.n	800905c <_dtoa_r+0x96c>
 8009054:	4641      	mov	r1, r8
 8009056:	4628      	mov	r0, r5
 8009058:	f000 fa6a 	bl	8009530 <_Bfree>
 800905c:	4631      	mov	r1, r6
 800905e:	4628      	mov	r0, r5
 8009060:	f000 fa66 	bl	8009530 <_Bfree>
 8009064:	e69e      	b.n	8008da4 <_dtoa_r+0x6b4>
 8009066:	2400      	movs	r4, #0
 8009068:	4626      	mov	r6, r4
 800906a:	e7e1      	b.n	8009030 <_dtoa_r+0x940>
 800906c:	46c3      	mov	fp, r8
 800906e:	4626      	mov	r6, r4
 8009070:	e59d      	b.n	8008bae <_dtoa_r+0x4be>
 8009072:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009074:	2b00      	cmp	r3, #0
 8009076:	f000 80c8 	beq.w	800920a <_dtoa_r+0xb1a>
 800907a:	9b08      	ldr	r3, [sp, #32]
 800907c:	9306      	str	r3, [sp, #24]
 800907e:	2f00      	cmp	r7, #0
 8009080:	dd05      	ble.n	800908e <_dtoa_r+0x99e>
 8009082:	4631      	mov	r1, r6
 8009084:	463a      	mov	r2, r7
 8009086:	4628      	mov	r0, r5
 8009088:	f000 fc20 	bl	80098cc <__lshift>
 800908c:	4606      	mov	r6, r0
 800908e:	f1b8 0f00 	cmp.w	r8, #0
 8009092:	d05b      	beq.n	800914c <_dtoa_r+0xa5c>
 8009094:	4628      	mov	r0, r5
 8009096:	6871      	ldr	r1, [r6, #4]
 8009098:	f000 fa0a 	bl	80094b0 <_Balloc>
 800909c:	4607      	mov	r7, r0
 800909e:	b928      	cbnz	r0, 80090ac <_dtoa_r+0x9bc>
 80090a0:	4602      	mov	r2, r0
 80090a2:	f240 21ef 	movw	r1, #751	; 0x2ef
 80090a6:	4b81      	ldr	r3, [pc, #516]	; (80092ac <_dtoa_r+0xbbc>)
 80090a8:	f7ff bb36 	b.w	8008718 <_dtoa_r+0x28>
 80090ac:	6932      	ldr	r2, [r6, #16]
 80090ae:	f106 010c 	add.w	r1, r6, #12
 80090b2:	3202      	adds	r2, #2
 80090b4:	0092      	lsls	r2, r2, #2
 80090b6:	300c      	adds	r0, #12
 80090b8:	f7ff fa81 	bl	80085be <memcpy>
 80090bc:	2201      	movs	r2, #1
 80090be:	4639      	mov	r1, r7
 80090c0:	4628      	mov	r0, r5
 80090c2:	f000 fc03 	bl	80098cc <__lshift>
 80090c6:	46b0      	mov	r8, r6
 80090c8:	4606      	mov	r6, r0
 80090ca:	9b03      	ldr	r3, [sp, #12]
 80090cc:	9a03      	ldr	r2, [sp, #12]
 80090ce:	3301      	adds	r3, #1
 80090d0:	9308      	str	r3, [sp, #32]
 80090d2:	9b06      	ldr	r3, [sp, #24]
 80090d4:	4413      	add	r3, r2
 80090d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80090d8:	9b04      	ldr	r3, [sp, #16]
 80090da:	f003 0301 	and.w	r3, r3, #1
 80090de:	930a      	str	r3, [sp, #40]	; 0x28
 80090e0:	9b08      	ldr	r3, [sp, #32]
 80090e2:	4621      	mov	r1, r4
 80090e4:	3b01      	subs	r3, #1
 80090e6:	4650      	mov	r0, sl
 80090e8:	9304      	str	r3, [sp, #16]
 80090ea:	f7ff fa76 	bl	80085da <quorem>
 80090ee:	4641      	mov	r1, r8
 80090f0:	9006      	str	r0, [sp, #24]
 80090f2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80090f6:	4650      	mov	r0, sl
 80090f8:	f000 fc54 	bl	80099a4 <__mcmp>
 80090fc:	4632      	mov	r2, r6
 80090fe:	9009      	str	r0, [sp, #36]	; 0x24
 8009100:	4621      	mov	r1, r4
 8009102:	4628      	mov	r0, r5
 8009104:	f000 fc6a 	bl	80099dc <__mdiff>
 8009108:	68c2      	ldr	r2, [r0, #12]
 800910a:	4607      	mov	r7, r0
 800910c:	bb02      	cbnz	r2, 8009150 <_dtoa_r+0xa60>
 800910e:	4601      	mov	r1, r0
 8009110:	4650      	mov	r0, sl
 8009112:	f000 fc47 	bl	80099a4 <__mcmp>
 8009116:	4602      	mov	r2, r0
 8009118:	4639      	mov	r1, r7
 800911a:	4628      	mov	r0, r5
 800911c:	920c      	str	r2, [sp, #48]	; 0x30
 800911e:	f000 fa07 	bl	8009530 <_Bfree>
 8009122:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009124:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009126:	9f08      	ldr	r7, [sp, #32]
 8009128:	ea43 0102 	orr.w	r1, r3, r2
 800912c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800912e:	4319      	orrs	r1, r3
 8009130:	d110      	bne.n	8009154 <_dtoa_r+0xa64>
 8009132:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8009136:	d029      	beq.n	800918c <_dtoa_r+0xa9c>
 8009138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800913a:	2b00      	cmp	r3, #0
 800913c:	dd02      	ble.n	8009144 <_dtoa_r+0xa54>
 800913e:	9b06      	ldr	r3, [sp, #24]
 8009140:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8009144:	9b04      	ldr	r3, [sp, #16]
 8009146:	f883 9000 	strb.w	r9, [r3]
 800914a:	e777      	b.n	800903c <_dtoa_r+0x94c>
 800914c:	4630      	mov	r0, r6
 800914e:	e7ba      	b.n	80090c6 <_dtoa_r+0x9d6>
 8009150:	2201      	movs	r2, #1
 8009152:	e7e1      	b.n	8009118 <_dtoa_r+0xa28>
 8009154:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009156:	2b00      	cmp	r3, #0
 8009158:	db04      	blt.n	8009164 <_dtoa_r+0xa74>
 800915a:	9922      	ldr	r1, [sp, #136]	; 0x88
 800915c:	430b      	orrs	r3, r1
 800915e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009160:	430b      	orrs	r3, r1
 8009162:	d120      	bne.n	80091a6 <_dtoa_r+0xab6>
 8009164:	2a00      	cmp	r2, #0
 8009166:	dded      	ble.n	8009144 <_dtoa_r+0xa54>
 8009168:	4651      	mov	r1, sl
 800916a:	2201      	movs	r2, #1
 800916c:	4628      	mov	r0, r5
 800916e:	f000 fbad 	bl	80098cc <__lshift>
 8009172:	4621      	mov	r1, r4
 8009174:	4682      	mov	sl, r0
 8009176:	f000 fc15 	bl	80099a4 <__mcmp>
 800917a:	2800      	cmp	r0, #0
 800917c:	dc03      	bgt.n	8009186 <_dtoa_r+0xa96>
 800917e:	d1e1      	bne.n	8009144 <_dtoa_r+0xa54>
 8009180:	f019 0f01 	tst.w	r9, #1
 8009184:	d0de      	beq.n	8009144 <_dtoa_r+0xa54>
 8009186:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800918a:	d1d8      	bne.n	800913e <_dtoa_r+0xa4e>
 800918c:	2339      	movs	r3, #57	; 0x39
 800918e:	9a04      	ldr	r2, [sp, #16]
 8009190:	7013      	strb	r3, [r2, #0]
 8009192:	463b      	mov	r3, r7
 8009194:	461f      	mov	r7, r3
 8009196:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800919a:	3b01      	subs	r3, #1
 800919c:	2a39      	cmp	r2, #57	; 0x39
 800919e:	d06b      	beq.n	8009278 <_dtoa_r+0xb88>
 80091a0:	3201      	adds	r2, #1
 80091a2:	701a      	strb	r2, [r3, #0]
 80091a4:	e74a      	b.n	800903c <_dtoa_r+0x94c>
 80091a6:	2a00      	cmp	r2, #0
 80091a8:	dd07      	ble.n	80091ba <_dtoa_r+0xaca>
 80091aa:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80091ae:	d0ed      	beq.n	800918c <_dtoa_r+0xa9c>
 80091b0:	9a04      	ldr	r2, [sp, #16]
 80091b2:	f109 0301 	add.w	r3, r9, #1
 80091b6:	7013      	strb	r3, [r2, #0]
 80091b8:	e740      	b.n	800903c <_dtoa_r+0x94c>
 80091ba:	9b08      	ldr	r3, [sp, #32]
 80091bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80091be:	f803 9c01 	strb.w	r9, [r3, #-1]
 80091c2:	4293      	cmp	r3, r2
 80091c4:	d042      	beq.n	800924c <_dtoa_r+0xb5c>
 80091c6:	4651      	mov	r1, sl
 80091c8:	2300      	movs	r3, #0
 80091ca:	220a      	movs	r2, #10
 80091cc:	4628      	mov	r0, r5
 80091ce:	f000 f9d1 	bl	8009574 <__multadd>
 80091d2:	45b0      	cmp	r8, r6
 80091d4:	4682      	mov	sl, r0
 80091d6:	f04f 0300 	mov.w	r3, #0
 80091da:	f04f 020a 	mov.w	r2, #10
 80091de:	4641      	mov	r1, r8
 80091e0:	4628      	mov	r0, r5
 80091e2:	d107      	bne.n	80091f4 <_dtoa_r+0xb04>
 80091e4:	f000 f9c6 	bl	8009574 <__multadd>
 80091e8:	4680      	mov	r8, r0
 80091ea:	4606      	mov	r6, r0
 80091ec:	9b08      	ldr	r3, [sp, #32]
 80091ee:	3301      	adds	r3, #1
 80091f0:	9308      	str	r3, [sp, #32]
 80091f2:	e775      	b.n	80090e0 <_dtoa_r+0x9f0>
 80091f4:	f000 f9be 	bl	8009574 <__multadd>
 80091f8:	4631      	mov	r1, r6
 80091fa:	4680      	mov	r8, r0
 80091fc:	2300      	movs	r3, #0
 80091fe:	220a      	movs	r2, #10
 8009200:	4628      	mov	r0, r5
 8009202:	f000 f9b7 	bl	8009574 <__multadd>
 8009206:	4606      	mov	r6, r0
 8009208:	e7f0      	b.n	80091ec <_dtoa_r+0xafc>
 800920a:	9b08      	ldr	r3, [sp, #32]
 800920c:	9306      	str	r3, [sp, #24]
 800920e:	9f03      	ldr	r7, [sp, #12]
 8009210:	4621      	mov	r1, r4
 8009212:	4650      	mov	r0, sl
 8009214:	f7ff f9e1 	bl	80085da <quorem>
 8009218:	9b03      	ldr	r3, [sp, #12]
 800921a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800921e:	f807 9b01 	strb.w	r9, [r7], #1
 8009222:	1afa      	subs	r2, r7, r3
 8009224:	9b06      	ldr	r3, [sp, #24]
 8009226:	4293      	cmp	r3, r2
 8009228:	dd07      	ble.n	800923a <_dtoa_r+0xb4a>
 800922a:	4651      	mov	r1, sl
 800922c:	2300      	movs	r3, #0
 800922e:	220a      	movs	r2, #10
 8009230:	4628      	mov	r0, r5
 8009232:	f000 f99f 	bl	8009574 <__multadd>
 8009236:	4682      	mov	sl, r0
 8009238:	e7ea      	b.n	8009210 <_dtoa_r+0xb20>
 800923a:	9b06      	ldr	r3, [sp, #24]
 800923c:	f04f 0800 	mov.w	r8, #0
 8009240:	2b00      	cmp	r3, #0
 8009242:	bfcc      	ite	gt
 8009244:	461f      	movgt	r7, r3
 8009246:	2701      	movle	r7, #1
 8009248:	9b03      	ldr	r3, [sp, #12]
 800924a:	441f      	add	r7, r3
 800924c:	4651      	mov	r1, sl
 800924e:	2201      	movs	r2, #1
 8009250:	4628      	mov	r0, r5
 8009252:	f000 fb3b 	bl	80098cc <__lshift>
 8009256:	4621      	mov	r1, r4
 8009258:	4682      	mov	sl, r0
 800925a:	f000 fba3 	bl	80099a4 <__mcmp>
 800925e:	2800      	cmp	r0, #0
 8009260:	dc97      	bgt.n	8009192 <_dtoa_r+0xaa2>
 8009262:	d102      	bne.n	800926a <_dtoa_r+0xb7a>
 8009264:	f019 0f01 	tst.w	r9, #1
 8009268:	d193      	bne.n	8009192 <_dtoa_r+0xaa2>
 800926a:	463b      	mov	r3, r7
 800926c:	461f      	mov	r7, r3
 800926e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009272:	2a30      	cmp	r2, #48	; 0x30
 8009274:	d0fa      	beq.n	800926c <_dtoa_r+0xb7c>
 8009276:	e6e1      	b.n	800903c <_dtoa_r+0x94c>
 8009278:	9a03      	ldr	r2, [sp, #12]
 800927a:	429a      	cmp	r2, r3
 800927c:	d18a      	bne.n	8009194 <_dtoa_r+0xaa4>
 800927e:	2331      	movs	r3, #49	; 0x31
 8009280:	f10b 0b01 	add.w	fp, fp, #1
 8009284:	e797      	b.n	80091b6 <_dtoa_r+0xac6>
 8009286:	4b0a      	ldr	r3, [pc, #40]	; (80092b0 <_dtoa_r+0xbc0>)
 8009288:	f7ff ba9f 	b.w	80087ca <_dtoa_r+0xda>
 800928c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800928e:	2b00      	cmp	r3, #0
 8009290:	f47f aa77 	bne.w	8008782 <_dtoa_r+0x92>
 8009294:	4b07      	ldr	r3, [pc, #28]	; (80092b4 <_dtoa_r+0xbc4>)
 8009296:	f7ff ba98 	b.w	80087ca <_dtoa_r+0xda>
 800929a:	9b06      	ldr	r3, [sp, #24]
 800929c:	2b00      	cmp	r3, #0
 800929e:	dcb6      	bgt.n	800920e <_dtoa_r+0xb1e>
 80092a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80092a2:	2b02      	cmp	r3, #2
 80092a4:	f73f aeb5 	bgt.w	8009012 <_dtoa_r+0x922>
 80092a8:	e7b1      	b.n	800920e <_dtoa_r+0xb1e>
 80092aa:	bf00      	nop
 80092ac:	0800a49a 	.word	0x0800a49a
 80092b0:	0800a3fa 	.word	0x0800a3fa
 80092b4:	0800a41e 	.word	0x0800a41e

080092b8 <_free_r>:
 80092b8:	b538      	push	{r3, r4, r5, lr}
 80092ba:	4605      	mov	r5, r0
 80092bc:	2900      	cmp	r1, #0
 80092be:	d040      	beq.n	8009342 <_free_r+0x8a>
 80092c0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80092c4:	1f0c      	subs	r4, r1, #4
 80092c6:	2b00      	cmp	r3, #0
 80092c8:	bfb8      	it	lt
 80092ca:	18e4      	addlt	r4, r4, r3
 80092cc:	f000 f8e4 	bl	8009498 <__malloc_lock>
 80092d0:	4a1c      	ldr	r2, [pc, #112]	; (8009344 <_free_r+0x8c>)
 80092d2:	6813      	ldr	r3, [r2, #0]
 80092d4:	b933      	cbnz	r3, 80092e4 <_free_r+0x2c>
 80092d6:	6063      	str	r3, [r4, #4]
 80092d8:	6014      	str	r4, [r2, #0]
 80092da:	4628      	mov	r0, r5
 80092dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80092e0:	f000 b8e0 	b.w	80094a4 <__malloc_unlock>
 80092e4:	42a3      	cmp	r3, r4
 80092e6:	d908      	bls.n	80092fa <_free_r+0x42>
 80092e8:	6820      	ldr	r0, [r4, #0]
 80092ea:	1821      	adds	r1, r4, r0
 80092ec:	428b      	cmp	r3, r1
 80092ee:	bf01      	itttt	eq
 80092f0:	6819      	ldreq	r1, [r3, #0]
 80092f2:	685b      	ldreq	r3, [r3, #4]
 80092f4:	1809      	addeq	r1, r1, r0
 80092f6:	6021      	streq	r1, [r4, #0]
 80092f8:	e7ed      	b.n	80092d6 <_free_r+0x1e>
 80092fa:	461a      	mov	r2, r3
 80092fc:	685b      	ldr	r3, [r3, #4]
 80092fe:	b10b      	cbz	r3, 8009304 <_free_r+0x4c>
 8009300:	42a3      	cmp	r3, r4
 8009302:	d9fa      	bls.n	80092fa <_free_r+0x42>
 8009304:	6811      	ldr	r1, [r2, #0]
 8009306:	1850      	adds	r0, r2, r1
 8009308:	42a0      	cmp	r0, r4
 800930a:	d10b      	bne.n	8009324 <_free_r+0x6c>
 800930c:	6820      	ldr	r0, [r4, #0]
 800930e:	4401      	add	r1, r0
 8009310:	1850      	adds	r0, r2, r1
 8009312:	4283      	cmp	r3, r0
 8009314:	6011      	str	r1, [r2, #0]
 8009316:	d1e0      	bne.n	80092da <_free_r+0x22>
 8009318:	6818      	ldr	r0, [r3, #0]
 800931a:	685b      	ldr	r3, [r3, #4]
 800931c:	4408      	add	r0, r1
 800931e:	6010      	str	r0, [r2, #0]
 8009320:	6053      	str	r3, [r2, #4]
 8009322:	e7da      	b.n	80092da <_free_r+0x22>
 8009324:	d902      	bls.n	800932c <_free_r+0x74>
 8009326:	230c      	movs	r3, #12
 8009328:	602b      	str	r3, [r5, #0]
 800932a:	e7d6      	b.n	80092da <_free_r+0x22>
 800932c:	6820      	ldr	r0, [r4, #0]
 800932e:	1821      	adds	r1, r4, r0
 8009330:	428b      	cmp	r3, r1
 8009332:	bf01      	itttt	eq
 8009334:	6819      	ldreq	r1, [r3, #0]
 8009336:	685b      	ldreq	r3, [r3, #4]
 8009338:	1809      	addeq	r1, r1, r0
 800933a:	6021      	streq	r1, [r4, #0]
 800933c:	6063      	str	r3, [r4, #4]
 800933e:	6054      	str	r4, [r2, #4]
 8009340:	e7cb      	b.n	80092da <_free_r+0x22>
 8009342:	bd38      	pop	{r3, r4, r5, pc}
 8009344:	20001680 	.word	0x20001680

08009348 <malloc>:
 8009348:	4b02      	ldr	r3, [pc, #8]	; (8009354 <malloc+0xc>)
 800934a:	4601      	mov	r1, r0
 800934c:	6818      	ldr	r0, [r3, #0]
 800934e:	f000 b823 	b.w	8009398 <_malloc_r>
 8009352:	bf00      	nop
 8009354:	20000068 	.word	0x20000068

08009358 <sbrk_aligned>:
 8009358:	b570      	push	{r4, r5, r6, lr}
 800935a:	4e0e      	ldr	r6, [pc, #56]	; (8009394 <sbrk_aligned+0x3c>)
 800935c:	460c      	mov	r4, r1
 800935e:	6831      	ldr	r1, [r6, #0]
 8009360:	4605      	mov	r5, r0
 8009362:	b911      	cbnz	r1, 800936a <sbrk_aligned+0x12>
 8009364:	f000 fcc6 	bl	8009cf4 <_sbrk_r>
 8009368:	6030      	str	r0, [r6, #0]
 800936a:	4621      	mov	r1, r4
 800936c:	4628      	mov	r0, r5
 800936e:	f000 fcc1 	bl	8009cf4 <_sbrk_r>
 8009372:	1c43      	adds	r3, r0, #1
 8009374:	d00a      	beq.n	800938c <sbrk_aligned+0x34>
 8009376:	1cc4      	adds	r4, r0, #3
 8009378:	f024 0403 	bic.w	r4, r4, #3
 800937c:	42a0      	cmp	r0, r4
 800937e:	d007      	beq.n	8009390 <sbrk_aligned+0x38>
 8009380:	1a21      	subs	r1, r4, r0
 8009382:	4628      	mov	r0, r5
 8009384:	f000 fcb6 	bl	8009cf4 <_sbrk_r>
 8009388:	3001      	adds	r0, #1
 800938a:	d101      	bne.n	8009390 <sbrk_aligned+0x38>
 800938c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8009390:	4620      	mov	r0, r4
 8009392:	bd70      	pop	{r4, r5, r6, pc}
 8009394:	20001684 	.word	0x20001684

08009398 <_malloc_r>:
 8009398:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800939c:	1ccd      	adds	r5, r1, #3
 800939e:	f025 0503 	bic.w	r5, r5, #3
 80093a2:	3508      	adds	r5, #8
 80093a4:	2d0c      	cmp	r5, #12
 80093a6:	bf38      	it	cc
 80093a8:	250c      	movcc	r5, #12
 80093aa:	2d00      	cmp	r5, #0
 80093ac:	4607      	mov	r7, r0
 80093ae:	db01      	blt.n	80093b4 <_malloc_r+0x1c>
 80093b0:	42a9      	cmp	r1, r5
 80093b2:	d905      	bls.n	80093c0 <_malloc_r+0x28>
 80093b4:	230c      	movs	r3, #12
 80093b6:	2600      	movs	r6, #0
 80093b8:	603b      	str	r3, [r7, #0]
 80093ba:	4630      	mov	r0, r6
 80093bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80093c0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8009494 <_malloc_r+0xfc>
 80093c4:	f000 f868 	bl	8009498 <__malloc_lock>
 80093c8:	f8d8 3000 	ldr.w	r3, [r8]
 80093cc:	461c      	mov	r4, r3
 80093ce:	bb5c      	cbnz	r4, 8009428 <_malloc_r+0x90>
 80093d0:	4629      	mov	r1, r5
 80093d2:	4638      	mov	r0, r7
 80093d4:	f7ff ffc0 	bl	8009358 <sbrk_aligned>
 80093d8:	1c43      	adds	r3, r0, #1
 80093da:	4604      	mov	r4, r0
 80093dc:	d155      	bne.n	800948a <_malloc_r+0xf2>
 80093de:	f8d8 4000 	ldr.w	r4, [r8]
 80093e2:	4626      	mov	r6, r4
 80093e4:	2e00      	cmp	r6, #0
 80093e6:	d145      	bne.n	8009474 <_malloc_r+0xdc>
 80093e8:	2c00      	cmp	r4, #0
 80093ea:	d048      	beq.n	800947e <_malloc_r+0xe6>
 80093ec:	6823      	ldr	r3, [r4, #0]
 80093ee:	4631      	mov	r1, r6
 80093f0:	4638      	mov	r0, r7
 80093f2:	eb04 0903 	add.w	r9, r4, r3
 80093f6:	f000 fc7d 	bl	8009cf4 <_sbrk_r>
 80093fa:	4581      	cmp	r9, r0
 80093fc:	d13f      	bne.n	800947e <_malloc_r+0xe6>
 80093fe:	6821      	ldr	r1, [r4, #0]
 8009400:	4638      	mov	r0, r7
 8009402:	1a6d      	subs	r5, r5, r1
 8009404:	4629      	mov	r1, r5
 8009406:	f7ff ffa7 	bl	8009358 <sbrk_aligned>
 800940a:	3001      	adds	r0, #1
 800940c:	d037      	beq.n	800947e <_malloc_r+0xe6>
 800940e:	6823      	ldr	r3, [r4, #0]
 8009410:	442b      	add	r3, r5
 8009412:	6023      	str	r3, [r4, #0]
 8009414:	f8d8 3000 	ldr.w	r3, [r8]
 8009418:	2b00      	cmp	r3, #0
 800941a:	d038      	beq.n	800948e <_malloc_r+0xf6>
 800941c:	685a      	ldr	r2, [r3, #4]
 800941e:	42a2      	cmp	r2, r4
 8009420:	d12b      	bne.n	800947a <_malloc_r+0xe2>
 8009422:	2200      	movs	r2, #0
 8009424:	605a      	str	r2, [r3, #4]
 8009426:	e00f      	b.n	8009448 <_malloc_r+0xb0>
 8009428:	6822      	ldr	r2, [r4, #0]
 800942a:	1b52      	subs	r2, r2, r5
 800942c:	d41f      	bmi.n	800946e <_malloc_r+0xd6>
 800942e:	2a0b      	cmp	r2, #11
 8009430:	d917      	bls.n	8009462 <_malloc_r+0xca>
 8009432:	1961      	adds	r1, r4, r5
 8009434:	42a3      	cmp	r3, r4
 8009436:	6025      	str	r5, [r4, #0]
 8009438:	bf18      	it	ne
 800943a:	6059      	strne	r1, [r3, #4]
 800943c:	6863      	ldr	r3, [r4, #4]
 800943e:	bf08      	it	eq
 8009440:	f8c8 1000 	streq.w	r1, [r8]
 8009444:	5162      	str	r2, [r4, r5]
 8009446:	604b      	str	r3, [r1, #4]
 8009448:	4638      	mov	r0, r7
 800944a:	f104 060b 	add.w	r6, r4, #11
 800944e:	f000 f829 	bl	80094a4 <__malloc_unlock>
 8009452:	f026 0607 	bic.w	r6, r6, #7
 8009456:	1d23      	adds	r3, r4, #4
 8009458:	1af2      	subs	r2, r6, r3
 800945a:	d0ae      	beq.n	80093ba <_malloc_r+0x22>
 800945c:	1b9b      	subs	r3, r3, r6
 800945e:	50a3      	str	r3, [r4, r2]
 8009460:	e7ab      	b.n	80093ba <_malloc_r+0x22>
 8009462:	42a3      	cmp	r3, r4
 8009464:	6862      	ldr	r2, [r4, #4]
 8009466:	d1dd      	bne.n	8009424 <_malloc_r+0x8c>
 8009468:	f8c8 2000 	str.w	r2, [r8]
 800946c:	e7ec      	b.n	8009448 <_malloc_r+0xb0>
 800946e:	4623      	mov	r3, r4
 8009470:	6864      	ldr	r4, [r4, #4]
 8009472:	e7ac      	b.n	80093ce <_malloc_r+0x36>
 8009474:	4634      	mov	r4, r6
 8009476:	6876      	ldr	r6, [r6, #4]
 8009478:	e7b4      	b.n	80093e4 <_malloc_r+0x4c>
 800947a:	4613      	mov	r3, r2
 800947c:	e7cc      	b.n	8009418 <_malloc_r+0x80>
 800947e:	230c      	movs	r3, #12
 8009480:	4638      	mov	r0, r7
 8009482:	603b      	str	r3, [r7, #0]
 8009484:	f000 f80e 	bl	80094a4 <__malloc_unlock>
 8009488:	e797      	b.n	80093ba <_malloc_r+0x22>
 800948a:	6025      	str	r5, [r4, #0]
 800948c:	e7dc      	b.n	8009448 <_malloc_r+0xb0>
 800948e:	605b      	str	r3, [r3, #4]
 8009490:	deff      	udf	#255	; 0xff
 8009492:	bf00      	nop
 8009494:	20001680 	.word	0x20001680

08009498 <__malloc_lock>:
 8009498:	4801      	ldr	r0, [pc, #4]	; (80094a0 <__malloc_lock+0x8>)
 800949a:	f7ff b880 	b.w	800859e <__retarget_lock_acquire_recursive>
 800949e:	bf00      	nop
 80094a0:	2000167c 	.word	0x2000167c

080094a4 <__malloc_unlock>:
 80094a4:	4801      	ldr	r0, [pc, #4]	; (80094ac <__malloc_unlock+0x8>)
 80094a6:	f7ff b87b 	b.w	80085a0 <__retarget_lock_release_recursive>
 80094aa:	bf00      	nop
 80094ac:	2000167c 	.word	0x2000167c

080094b0 <_Balloc>:
 80094b0:	b570      	push	{r4, r5, r6, lr}
 80094b2:	69c6      	ldr	r6, [r0, #28]
 80094b4:	4604      	mov	r4, r0
 80094b6:	460d      	mov	r5, r1
 80094b8:	b976      	cbnz	r6, 80094d8 <_Balloc+0x28>
 80094ba:	2010      	movs	r0, #16
 80094bc:	f7ff ff44 	bl	8009348 <malloc>
 80094c0:	4602      	mov	r2, r0
 80094c2:	61e0      	str	r0, [r4, #28]
 80094c4:	b920      	cbnz	r0, 80094d0 <_Balloc+0x20>
 80094c6:	216b      	movs	r1, #107	; 0x6b
 80094c8:	4b17      	ldr	r3, [pc, #92]	; (8009528 <_Balloc+0x78>)
 80094ca:	4818      	ldr	r0, [pc, #96]	; (800952c <_Balloc+0x7c>)
 80094cc:	f000 fc22 	bl	8009d14 <__assert_func>
 80094d0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80094d4:	6006      	str	r6, [r0, #0]
 80094d6:	60c6      	str	r6, [r0, #12]
 80094d8:	69e6      	ldr	r6, [r4, #28]
 80094da:	68f3      	ldr	r3, [r6, #12]
 80094dc:	b183      	cbz	r3, 8009500 <_Balloc+0x50>
 80094de:	69e3      	ldr	r3, [r4, #28]
 80094e0:	68db      	ldr	r3, [r3, #12]
 80094e2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80094e6:	b9b8      	cbnz	r0, 8009518 <_Balloc+0x68>
 80094e8:	2101      	movs	r1, #1
 80094ea:	fa01 f605 	lsl.w	r6, r1, r5
 80094ee:	1d72      	adds	r2, r6, #5
 80094f0:	4620      	mov	r0, r4
 80094f2:	0092      	lsls	r2, r2, #2
 80094f4:	f000 fc2c 	bl	8009d50 <_calloc_r>
 80094f8:	b160      	cbz	r0, 8009514 <_Balloc+0x64>
 80094fa:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80094fe:	e00e      	b.n	800951e <_Balloc+0x6e>
 8009500:	2221      	movs	r2, #33	; 0x21
 8009502:	2104      	movs	r1, #4
 8009504:	4620      	mov	r0, r4
 8009506:	f000 fc23 	bl	8009d50 <_calloc_r>
 800950a:	69e3      	ldr	r3, [r4, #28]
 800950c:	60f0      	str	r0, [r6, #12]
 800950e:	68db      	ldr	r3, [r3, #12]
 8009510:	2b00      	cmp	r3, #0
 8009512:	d1e4      	bne.n	80094de <_Balloc+0x2e>
 8009514:	2000      	movs	r0, #0
 8009516:	bd70      	pop	{r4, r5, r6, pc}
 8009518:	6802      	ldr	r2, [r0, #0]
 800951a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800951e:	2300      	movs	r3, #0
 8009520:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009524:	e7f7      	b.n	8009516 <_Balloc+0x66>
 8009526:	bf00      	nop
 8009528:	0800a42b 	.word	0x0800a42b
 800952c:	0800a4ab 	.word	0x0800a4ab

08009530 <_Bfree>:
 8009530:	b570      	push	{r4, r5, r6, lr}
 8009532:	69c6      	ldr	r6, [r0, #28]
 8009534:	4605      	mov	r5, r0
 8009536:	460c      	mov	r4, r1
 8009538:	b976      	cbnz	r6, 8009558 <_Bfree+0x28>
 800953a:	2010      	movs	r0, #16
 800953c:	f7ff ff04 	bl	8009348 <malloc>
 8009540:	4602      	mov	r2, r0
 8009542:	61e8      	str	r0, [r5, #28]
 8009544:	b920      	cbnz	r0, 8009550 <_Bfree+0x20>
 8009546:	218f      	movs	r1, #143	; 0x8f
 8009548:	4b08      	ldr	r3, [pc, #32]	; (800956c <_Bfree+0x3c>)
 800954a:	4809      	ldr	r0, [pc, #36]	; (8009570 <_Bfree+0x40>)
 800954c:	f000 fbe2 	bl	8009d14 <__assert_func>
 8009550:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009554:	6006      	str	r6, [r0, #0]
 8009556:	60c6      	str	r6, [r0, #12]
 8009558:	b13c      	cbz	r4, 800956a <_Bfree+0x3a>
 800955a:	69eb      	ldr	r3, [r5, #28]
 800955c:	6862      	ldr	r2, [r4, #4]
 800955e:	68db      	ldr	r3, [r3, #12]
 8009560:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009564:	6021      	str	r1, [r4, #0]
 8009566:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800956a:	bd70      	pop	{r4, r5, r6, pc}
 800956c:	0800a42b 	.word	0x0800a42b
 8009570:	0800a4ab 	.word	0x0800a4ab

08009574 <__multadd>:
 8009574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009578:	4607      	mov	r7, r0
 800957a:	460c      	mov	r4, r1
 800957c:	461e      	mov	r6, r3
 800957e:	2000      	movs	r0, #0
 8009580:	690d      	ldr	r5, [r1, #16]
 8009582:	f101 0c14 	add.w	ip, r1, #20
 8009586:	f8dc 3000 	ldr.w	r3, [ip]
 800958a:	3001      	adds	r0, #1
 800958c:	b299      	uxth	r1, r3
 800958e:	fb02 6101 	mla	r1, r2, r1, r6
 8009592:	0c1e      	lsrs	r6, r3, #16
 8009594:	0c0b      	lsrs	r3, r1, #16
 8009596:	fb02 3306 	mla	r3, r2, r6, r3
 800959a:	b289      	uxth	r1, r1
 800959c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80095a0:	4285      	cmp	r5, r0
 80095a2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80095a6:	f84c 1b04 	str.w	r1, [ip], #4
 80095aa:	dcec      	bgt.n	8009586 <__multadd+0x12>
 80095ac:	b30e      	cbz	r6, 80095f2 <__multadd+0x7e>
 80095ae:	68a3      	ldr	r3, [r4, #8]
 80095b0:	42ab      	cmp	r3, r5
 80095b2:	dc19      	bgt.n	80095e8 <__multadd+0x74>
 80095b4:	6861      	ldr	r1, [r4, #4]
 80095b6:	4638      	mov	r0, r7
 80095b8:	3101      	adds	r1, #1
 80095ba:	f7ff ff79 	bl	80094b0 <_Balloc>
 80095be:	4680      	mov	r8, r0
 80095c0:	b928      	cbnz	r0, 80095ce <__multadd+0x5a>
 80095c2:	4602      	mov	r2, r0
 80095c4:	21ba      	movs	r1, #186	; 0xba
 80095c6:	4b0c      	ldr	r3, [pc, #48]	; (80095f8 <__multadd+0x84>)
 80095c8:	480c      	ldr	r0, [pc, #48]	; (80095fc <__multadd+0x88>)
 80095ca:	f000 fba3 	bl	8009d14 <__assert_func>
 80095ce:	6922      	ldr	r2, [r4, #16]
 80095d0:	f104 010c 	add.w	r1, r4, #12
 80095d4:	3202      	adds	r2, #2
 80095d6:	0092      	lsls	r2, r2, #2
 80095d8:	300c      	adds	r0, #12
 80095da:	f7fe fff0 	bl	80085be <memcpy>
 80095de:	4621      	mov	r1, r4
 80095e0:	4638      	mov	r0, r7
 80095e2:	f7ff ffa5 	bl	8009530 <_Bfree>
 80095e6:	4644      	mov	r4, r8
 80095e8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80095ec:	3501      	adds	r5, #1
 80095ee:	615e      	str	r6, [r3, #20]
 80095f0:	6125      	str	r5, [r4, #16]
 80095f2:	4620      	mov	r0, r4
 80095f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80095f8:	0800a49a 	.word	0x0800a49a
 80095fc:	0800a4ab 	.word	0x0800a4ab

08009600 <__hi0bits>:
 8009600:	0c02      	lsrs	r2, r0, #16
 8009602:	0412      	lsls	r2, r2, #16
 8009604:	4603      	mov	r3, r0
 8009606:	b9ca      	cbnz	r2, 800963c <__hi0bits+0x3c>
 8009608:	0403      	lsls	r3, r0, #16
 800960a:	2010      	movs	r0, #16
 800960c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8009610:	bf04      	itt	eq
 8009612:	021b      	lsleq	r3, r3, #8
 8009614:	3008      	addeq	r0, #8
 8009616:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800961a:	bf04      	itt	eq
 800961c:	011b      	lsleq	r3, r3, #4
 800961e:	3004      	addeq	r0, #4
 8009620:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8009624:	bf04      	itt	eq
 8009626:	009b      	lsleq	r3, r3, #2
 8009628:	3002      	addeq	r0, #2
 800962a:	2b00      	cmp	r3, #0
 800962c:	db05      	blt.n	800963a <__hi0bits+0x3a>
 800962e:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8009632:	f100 0001 	add.w	r0, r0, #1
 8009636:	bf08      	it	eq
 8009638:	2020      	moveq	r0, #32
 800963a:	4770      	bx	lr
 800963c:	2000      	movs	r0, #0
 800963e:	e7e5      	b.n	800960c <__hi0bits+0xc>

08009640 <__lo0bits>:
 8009640:	6803      	ldr	r3, [r0, #0]
 8009642:	4602      	mov	r2, r0
 8009644:	f013 0007 	ands.w	r0, r3, #7
 8009648:	d00b      	beq.n	8009662 <__lo0bits+0x22>
 800964a:	07d9      	lsls	r1, r3, #31
 800964c:	d421      	bmi.n	8009692 <__lo0bits+0x52>
 800964e:	0798      	lsls	r0, r3, #30
 8009650:	bf49      	itett	mi
 8009652:	085b      	lsrmi	r3, r3, #1
 8009654:	089b      	lsrpl	r3, r3, #2
 8009656:	2001      	movmi	r0, #1
 8009658:	6013      	strmi	r3, [r2, #0]
 800965a:	bf5c      	itt	pl
 800965c:	2002      	movpl	r0, #2
 800965e:	6013      	strpl	r3, [r2, #0]
 8009660:	4770      	bx	lr
 8009662:	b299      	uxth	r1, r3
 8009664:	b909      	cbnz	r1, 800966a <__lo0bits+0x2a>
 8009666:	2010      	movs	r0, #16
 8009668:	0c1b      	lsrs	r3, r3, #16
 800966a:	b2d9      	uxtb	r1, r3
 800966c:	b909      	cbnz	r1, 8009672 <__lo0bits+0x32>
 800966e:	3008      	adds	r0, #8
 8009670:	0a1b      	lsrs	r3, r3, #8
 8009672:	0719      	lsls	r1, r3, #28
 8009674:	bf04      	itt	eq
 8009676:	091b      	lsreq	r3, r3, #4
 8009678:	3004      	addeq	r0, #4
 800967a:	0799      	lsls	r1, r3, #30
 800967c:	bf04      	itt	eq
 800967e:	089b      	lsreq	r3, r3, #2
 8009680:	3002      	addeq	r0, #2
 8009682:	07d9      	lsls	r1, r3, #31
 8009684:	d403      	bmi.n	800968e <__lo0bits+0x4e>
 8009686:	085b      	lsrs	r3, r3, #1
 8009688:	f100 0001 	add.w	r0, r0, #1
 800968c:	d003      	beq.n	8009696 <__lo0bits+0x56>
 800968e:	6013      	str	r3, [r2, #0]
 8009690:	4770      	bx	lr
 8009692:	2000      	movs	r0, #0
 8009694:	4770      	bx	lr
 8009696:	2020      	movs	r0, #32
 8009698:	4770      	bx	lr
	...

0800969c <__i2b>:
 800969c:	b510      	push	{r4, lr}
 800969e:	460c      	mov	r4, r1
 80096a0:	2101      	movs	r1, #1
 80096a2:	f7ff ff05 	bl	80094b0 <_Balloc>
 80096a6:	4602      	mov	r2, r0
 80096a8:	b928      	cbnz	r0, 80096b6 <__i2b+0x1a>
 80096aa:	f240 1145 	movw	r1, #325	; 0x145
 80096ae:	4b04      	ldr	r3, [pc, #16]	; (80096c0 <__i2b+0x24>)
 80096b0:	4804      	ldr	r0, [pc, #16]	; (80096c4 <__i2b+0x28>)
 80096b2:	f000 fb2f 	bl	8009d14 <__assert_func>
 80096b6:	2301      	movs	r3, #1
 80096b8:	6144      	str	r4, [r0, #20]
 80096ba:	6103      	str	r3, [r0, #16]
 80096bc:	bd10      	pop	{r4, pc}
 80096be:	bf00      	nop
 80096c0:	0800a49a 	.word	0x0800a49a
 80096c4:	0800a4ab 	.word	0x0800a4ab

080096c8 <__multiply>:
 80096c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096cc:	4691      	mov	r9, r2
 80096ce:	690a      	ldr	r2, [r1, #16]
 80096d0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80096d4:	460c      	mov	r4, r1
 80096d6:	429a      	cmp	r2, r3
 80096d8:	bfbe      	ittt	lt
 80096da:	460b      	movlt	r3, r1
 80096dc:	464c      	movlt	r4, r9
 80096de:	4699      	movlt	r9, r3
 80096e0:	6927      	ldr	r7, [r4, #16]
 80096e2:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80096e6:	68a3      	ldr	r3, [r4, #8]
 80096e8:	6861      	ldr	r1, [r4, #4]
 80096ea:	eb07 060a 	add.w	r6, r7, sl
 80096ee:	42b3      	cmp	r3, r6
 80096f0:	b085      	sub	sp, #20
 80096f2:	bfb8      	it	lt
 80096f4:	3101      	addlt	r1, #1
 80096f6:	f7ff fedb 	bl	80094b0 <_Balloc>
 80096fa:	b930      	cbnz	r0, 800970a <__multiply+0x42>
 80096fc:	4602      	mov	r2, r0
 80096fe:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8009702:	4b43      	ldr	r3, [pc, #268]	; (8009810 <__multiply+0x148>)
 8009704:	4843      	ldr	r0, [pc, #268]	; (8009814 <__multiply+0x14c>)
 8009706:	f000 fb05 	bl	8009d14 <__assert_func>
 800970a:	f100 0514 	add.w	r5, r0, #20
 800970e:	462b      	mov	r3, r5
 8009710:	2200      	movs	r2, #0
 8009712:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8009716:	4543      	cmp	r3, r8
 8009718:	d321      	bcc.n	800975e <__multiply+0x96>
 800971a:	f104 0314 	add.w	r3, r4, #20
 800971e:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8009722:	f109 0314 	add.w	r3, r9, #20
 8009726:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800972a:	9202      	str	r2, [sp, #8]
 800972c:	1b3a      	subs	r2, r7, r4
 800972e:	3a15      	subs	r2, #21
 8009730:	f022 0203 	bic.w	r2, r2, #3
 8009734:	3204      	adds	r2, #4
 8009736:	f104 0115 	add.w	r1, r4, #21
 800973a:	428f      	cmp	r7, r1
 800973c:	bf38      	it	cc
 800973e:	2204      	movcc	r2, #4
 8009740:	9201      	str	r2, [sp, #4]
 8009742:	9a02      	ldr	r2, [sp, #8]
 8009744:	9303      	str	r3, [sp, #12]
 8009746:	429a      	cmp	r2, r3
 8009748:	d80c      	bhi.n	8009764 <__multiply+0x9c>
 800974a:	2e00      	cmp	r6, #0
 800974c:	dd03      	ble.n	8009756 <__multiply+0x8e>
 800974e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8009752:	2b00      	cmp	r3, #0
 8009754:	d05a      	beq.n	800980c <__multiply+0x144>
 8009756:	6106      	str	r6, [r0, #16]
 8009758:	b005      	add	sp, #20
 800975a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800975e:	f843 2b04 	str.w	r2, [r3], #4
 8009762:	e7d8      	b.n	8009716 <__multiply+0x4e>
 8009764:	f8b3 a000 	ldrh.w	sl, [r3]
 8009768:	f1ba 0f00 	cmp.w	sl, #0
 800976c:	d023      	beq.n	80097b6 <__multiply+0xee>
 800976e:	46a9      	mov	r9, r5
 8009770:	f04f 0c00 	mov.w	ip, #0
 8009774:	f104 0e14 	add.w	lr, r4, #20
 8009778:	f85e 2b04 	ldr.w	r2, [lr], #4
 800977c:	f8d9 1000 	ldr.w	r1, [r9]
 8009780:	fa1f fb82 	uxth.w	fp, r2
 8009784:	b289      	uxth	r1, r1
 8009786:	fb0a 110b 	mla	r1, sl, fp, r1
 800978a:	4461      	add	r1, ip
 800978c:	f8d9 c000 	ldr.w	ip, [r9]
 8009790:	0c12      	lsrs	r2, r2, #16
 8009792:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8009796:	fb0a c202 	mla	r2, sl, r2, ip
 800979a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800979e:	b289      	uxth	r1, r1
 80097a0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80097a4:	4577      	cmp	r7, lr
 80097a6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80097aa:	f849 1b04 	str.w	r1, [r9], #4
 80097ae:	d8e3      	bhi.n	8009778 <__multiply+0xb0>
 80097b0:	9a01      	ldr	r2, [sp, #4]
 80097b2:	f845 c002 	str.w	ip, [r5, r2]
 80097b6:	9a03      	ldr	r2, [sp, #12]
 80097b8:	3304      	adds	r3, #4
 80097ba:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80097be:	f1b9 0f00 	cmp.w	r9, #0
 80097c2:	d021      	beq.n	8009808 <__multiply+0x140>
 80097c4:	46ae      	mov	lr, r5
 80097c6:	f04f 0a00 	mov.w	sl, #0
 80097ca:	6829      	ldr	r1, [r5, #0]
 80097cc:	f104 0c14 	add.w	ip, r4, #20
 80097d0:	f8bc b000 	ldrh.w	fp, [ip]
 80097d4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80097d8:	b289      	uxth	r1, r1
 80097da:	fb09 220b 	mla	r2, r9, fp, r2
 80097de:	4452      	add	r2, sl
 80097e0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80097e4:	f84e 1b04 	str.w	r1, [lr], #4
 80097e8:	f85c 1b04 	ldr.w	r1, [ip], #4
 80097ec:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80097f0:	f8be 1000 	ldrh.w	r1, [lr]
 80097f4:	4567      	cmp	r7, ip
 80097f6:	fb09 110a 	mla	r1, r9, sl, r1
 80097fa:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80097fe:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8009802:	d8e5      	bhi.n	80097d0 <__multiply+0x108>
 8009804:	9a01      	ldr	r2, [sp, #4]
 8009806:	50a9      	str	r1, [r5, r2]
 8009808:	3504      	adds	r5, #4
 800980a:	e79a      	b.n	8009742 <__multiply+0x7a>
 800980c:	3e01      	subs	r6, #1
 800980e:	e79c      	b.n	800974a <__multiply+0x82>
 8009810:	0800a49a 	.word	0x0800a49a
 8009814:	0800a4ab 	.word	0x0800a4ab

08009818 <__pow5mult>:
 8009818:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800981c:	4615      	mov	r5, r2
 800981e:	f012 0203 	ands.w	r2, r2, #3
 8009822:	4606      	mov	r6, r0
 8009824:	460f      	mov	r7, r1
 8009826:	d007      	beq.n	8009838 <__pow5mult+0x20>
 8009828:	4c25      	ldr	r4, [pc, #148]	; (80098c0 <__pow5mult+0xa8>)
 800982a:	3a01      	subs	r2, #1
 800982c:	2300      	movs	r3, #0
 800982e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8009832:	f7ff fe9f 	bl	8009574 <__multadd>
 8009836:	4607      	mov	r7, r0
 8009838:	10ad      	asrs	r5, r5, #2
 800983a:	d03d      	beq.n	80098b8 <__pow5mult+0xa0>
 800983c:	69f4      	ldr	r4, [r6, #28]
 800983e:	b97c      	cbnz	r4, 8009860 <__pow5mult+0x48>
 8009840:	2010      	movs	r0, #16
 8009842:	f7ff fd81 	bl	8009348 <malloc>
 8009846:	4602      	mov	r2, r0
 8009848:	61f0      	str	r0, [r6, #28]
 800984a:	b928      	cbnz	r0, 8009858 <__pow5mult+0x40>
 800984c:	f240 11b3 	movw	r1, #435	; 0x1b3
 8009850:	4b1c      	ldr	r3, [pc, #112]	; (80098c4 <__pow5mult+0xac>)
 8009852:	481d      	ldr	r0, [pc, #116]	; (80098c8 <__pow5mult+0xb0>)
 8009854:	f000 fa5e 	bl	8009d14 <__assert_func>
 8009858:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800985c:	6004      	str	r4, [r0, #0]
 800985e:	60c4      	str	r4, [r0, #12]
 8009860:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8009864:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009868:	b94c      	cbnz	r4, 800987e <__pow5mult+0x66>
 800986a:	f240 2171 	movw	r1, #625	; 0x271
 800986e:	4630      	mov	r0, r6
 8009870:	f7ff ff14 	bl	800969c <__i2b>
 8009874:	2300      	movs	r3, #0
 8009876:	4604      	mov	r4, r0
 8009878:	f8c8 0008 	str.w	r0, [r8, #8]
 800987c:	6003      	str	r3, [r0, #0]
 800987e:	f04f 0900 	mov.w	r9, #0
 8009882:	07eb      	lsls	r3, r5, #31
 8009884:	d50a      	bpl.n	800989c <__pow5mult+0x84>
 8009886:	4639      	mov	r1, r7
 8009888:	4622      	mov	r2, r4
 800988a:	4630      	mov	r0, r6
 800988c:	f7ff ff1c 	bl	80096c8 <__multiply>
 8009890:	4680      	mov	r8, r0
 8009892:	4639      	mov	r1, r7
 8009894:	4630      	mov	r0, r6
 8009896:	f7ff fe4b 	bl	8009530 <_Bfree>
 800989a:	4647      	mov	r7, r8
 800989c:	106d      	asrs	r5, r5, #1
 800989e:	d00b      	beq.n	80098b8 <__pow5mult+0xa0>
 80098a0:	6820      	ldr	r0, [r4, #0]
 80098a2:	b938      	cbnz	r0, 80098b4 <__pow5mult+0x9c>
 80098a4:	4622      	mov	r2, r4
 80098a6:	4621      	mov	r1, r4
 80098a8:	4630      	mov	r0, r6
 80098aa:	f7ff ff0d 	bl	80096c8 <__multiply>
 80098ae:	6020      	str	r0, [r4, #0]
 80098b0:	f8c0 9000 	str.w	r9, [r0]
 80098b4:	4604      	mov	r4, r0
 80098b6:	e7e4      	b.n	8009882 <__pow5mult+0x6a>
 80098b8:	4638      	mov	r0, r7
 80098ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80098be:	bf00      	nop
 80098c0:	0800a5f8 	.word	0x0800a5f8
 80098c4:	0800a42b 	.word	0x0800a42b
 80098c8:	0800a4ab 	.word	0x0800a4ab

080098cc <__lshift>:
 80098cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098d0:	460c      	mov	r4, r1
 80098d2:	4607      	mov	r7, r0
 80098d4:	4691      	mov	r9, r2
 80098d6:	6923      	ldr	r3, [r4, #16]
 80098d8:	6849      	ldr	r1, [r1, #4]
 80098da:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80098de:	68a3      	ldr	r3, [r4, #8]
 80098e0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80098e4:	f108 0601 	add.w	r6, r8, #1
 80098e8:	42b3      	cmp	r3, r6
 80098ea:	db0b      	blt.n	8009904 <__lshift+0x38>
 80098ec:	4638      	mov	r0, r7
 80098ee:	f7ff fddf 	bl	80094b0 <_Balloc>
 80098f2:	4605      	mov	r5, r0
 80098f4:	b948      	cbnz	r0, 800990a <__lshift+0x3e>
 80098f6:	4602      	mov	r2, r0
 80098f8:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80098fc:	4b27      	ldr	r3, [pc, #156]	; (800999c <__lshift+0xd0>)
 80098fe:	4828      	ldr	r0, [pc, #160]	; (80099a0 <__lshift+0xd4>)
 8009900:	f000 fa08 	bl	8009d14 <__assert_func>
 8009904:	3101      	adds	r1, #1
 8009906:	005b      	lsls	r3, r3, #1
 8009908:	e7ee      	b.n	80098e8 <__lshift+0x1c>
 800990a:	2300      	movs	r3, #0
 800990c:	f100 0114 	add.w	r1, r0, #20
 8009910:	f100 0210 	add.w	r2, r0, #16
 8009914:	4618      	mov	r0, r3
 8009916:	4553      	cmp	r3, sl
 8009918:	db33      	blt.n	8009982 <__lshift+0xb6>
 800991a:	6920      	ldr	r0, [r4, #16]
 800991c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009920:	f104 0314 	add.w	r3, r4, #20
 8009924:	f019 091f 	ands.w	r9, r9, #31
 8009928:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800992c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009930:	d02b      	beq.n	800998a <__lshift+0xbe>
 8009932:	468a      	mov	sl, r1
 8009934:	2200      	movs	r2, #0
 8009936:	f1c9 0e20 	rsb	lr, r9, #32
 800993a:	6818      	ldr	r0, [r3, #0]
 800993c:	fa00 f009 	lsl.w	r0, r0, r9
 8009940:	4310      	orrs	r0, r2
 8009942:	f84a 0b04 	str.w	r0, [sl], #4
 8009946:	f853 2b04 	ldr.w	r2, [r3], #4
 800994a:	459c      	cmp	ip, r3
 800994c:	fa22 f20e 	lsr.w	r2, r2, lr
 8009950:	d8f3      	bhi.n	800993a <__lshift+0x6e>
 8009952:	ebac 0304 	sub.w	r3, ip, r4
 8009956:	3b15      	subs	r3, #21
 8009958:	f023 0303 	bic.w	r3, r3, #3
 800995c:	3304      	adds	r3, #4
 800995e:	f104 0015 	add.w	r0, r4, #21
 8009962:	4584      	cmp	ip, r0
 8009964:	bf38      	it	cc
 8009966:	2304      	movcc	r3, #4
 8009968:	50ca      	str	r2, [r1, r3]
 800996a:	b10a      	cbz	r2, 8009970 <__lshift+0xa4>
 800996c:	f108 0602 	add.w	r6, r8, #2
 8009970:	3e01      	subs	r6, #1
 8009972:	4638      	mov	r0, r7
 8009974:	4621      	mov	r1, r4
 8009976:	612e      	str	r6, [r5, #16]
 8009978:	f7ff fdda 	bl	8009530 <_Bfree>
 800997c:	4628      	mov	r0, r5
 800997e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009982:	f842 0f04 	str.w	r0, [r2, #4]!
 8009986:	3301      	adds	r3, #1
 8009988:	e7c5      	b.n	8009916 <__lshift+0x4a>
 800998a:	3904      	subs	r1, #4
 800998c:	f853 2b04 	ldr.w	r2, [r3], #4
 8009990:	459c      	cmp	ip, r3
 8009992:	f841 2f04 	str.w	r2, [r1, #4]!
 8009996:	d8f9      	bhi.n	800998c <__lshift+0xc0>
 8009998:	e7ea      	b.n	8009970 <__lshift+0xa4>
 800999a:	bf00      	nop
 800999c:	0800a49a 	.word	0x0800a49a
 80099a0:	0800a4ab 	.word	0x0800a4ab

080099a4 <__mcmp>:
 80099a4:	4603      	mov	r3, r0
 80099a6:	690a      	ldr	r2, [r1, #16]
 80099a8:	6900      	ldr	r0, [r0, #16]
 80099aa:	b530      	push	{r4, r5, lr}
 80099ac:	1a80      	subs	r0, r0, r2
 80099ae:	d10d      	bne.n	80099cc <__mcmp+0x28>
 80099b0:	3314      	adds	r3, #20
 80099b2:	3114      	adds	r1, #20
 80099b4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80099b8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80099bc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80099c0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80099c4:	4295      	cmp	r5, r2
 80099c6:	d002      	beq.n	80099ce <__mcmp+0x2a>
 80099c8:	d304      	bcc.n	80099d4 <__mcmp+0x30>
 80099ca:	2001      	movs	r0, #1
 80099cc:	bd30      	pop	{r4, r5, pc}
 80099ce:	42a3      	cmp	r3, r4
 80099d0:	d3f4      	bcc.n	80099bc <__mcmp+0x18>
 80099d2:	e7fb      	b.n	80099cc <__mcmp+0x28>
 80099d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80099d8:	e7f8      	b.n	80099cc <__mcmp+0x28>
	...

080099dc <__mdiff>:
 80099dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099e0:	460d      	mov	r5, r1
 80099e2:	4607      	mov	r7, r0
 80099e4:	4611      	mov	r1, r2
 80099e6:	4628      	mov	r0, r5
 80099e8:	4614      	mov	r4, r2
 80099ea:	f7ff ffdb 	bl	80099a4 <__mcmp>
 80099ee:	1e06      	subs	r6, r0, #0
 80099f0:	d111      	bne.n	8009a16 <__mdiff+0x3a>
 80099f2:	4631      	mov	r1, r6
 80099f4:	4638      	mov	r0, r7
 80099f6:	f7ff fd5b 	bl	80094b0 <_Balloc>
 80099fa:	4602      	mov	r2, r0
 80099fc:	b928      	cbnz	r0, 8009a0a <__mdiff+0x2e>
 80099fe:	f240 2137 	movw	r1, #567	; 0x237
 8009a02:	4b3a      	ldr	r3, [pc, #232]	; (8009aec <__mdiff+0x110>)
 8009a04:	483a      	ldr	r0, [pc, #232]	; (8009af0 <__mdiff+0x114>)
 8009a06:	f000 f985 	bl	8009d14 <__assert_func>
 8009a0a:	2301      	movs	r3, #1
 8009a0c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8009a10:	4610      	mov	r0, r2
 8009a12:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a16:	bfa4      	itt	ge
 8009a18:	4623      	movge	r3, r4
 8009a1a:	462c      	movge	r4, r5
 8009a1c:	4638      	mov	r0, r7
 8009a1e:	6861      	ldr	r1, [r4, #4]
 8009a20:	bfa6      	itte	ge
 8009a22:	461d      	movge	r5, r3
 8009a24:	2600      	movge	r6, #0
 8009a26:	2601      	movlt	r6, #1
 8009a28:	f7ff fd42 	bl	80094b0 <_Balloc>
 8009a2c:	4602      	mov	r2, r0
 8009a2e:	b918      	cbnz	r0, 8009a38 <__mdiff+0x5c>
 8009a30:	f240 2145 	movw	r1, #581	; 0x245
 8009a34:	4b2d      	ldr	r3, [pc, #180]	; (8009aec <__mdiff+0x110>)
 8009a36:	e7e5      	b.n	8009a04 <__mdiff+0x28>
 8009a38:	f102 0814 	add.w	r8, r2, #20
 8009a3c:	46c2      	mov	sl, r8
 8009a3e:	f04f 0c00 	mov.w	ip, #0
 8009a42:	6927      	ldr	r7, [r4, #16]
 8009a44:	60c6      	str	r6, [r0, #12]
 8009a46:	692e      	ldr	r6, [r5, #16]
 8009a48:	f104 0014 	add.w	r0, r4, #20
 8009a4c:	f105 0914 	add.w	r9, r5, #20
 8009a50:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8009a54:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8009a58:	3410      	adds	r4, #16
 8009a5a:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8009a5e:	f859 3b04 	ldr.w	r3, [r9], #4
 8009a62:	fa1f f18b 	uxth.w	r1, fp
 8009a66:	4461      	add	r1, ip
 8009a68:	fa1f fc83 	uxth.w	ip, r3
 8009a6c:	0c1b      	lsrs	r3, r3, #16
 8009a6e:	eba1 010c 	sub.w	r1, r1, ip
 8009a72:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8009a76:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8009a7a:	b289      	uxth	r1, r1
 8009a7c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8009a80:	454e      	cmp	r6, r9
 8009a82:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8009a86:	f84a 1b04 	str.w	r1, [sl], #4
 8009a8a:	d8e6      	bhi.n	8009a5a <__mdiff+0x7e>
 8009a8c:	1b73      	subs	r3, r6, r5
 8009a8e:	3b15      	subs	r3, #21
 8009a90:	f023 0303 	bic.w	r3, r3, #3
 8009a94:	3515      	adds	r5, #21
 8009a96:	3304      	adds	r3, #4
 8009a98:	42ae      	cmp	r6, r5
 8009a9a:	bf38      	it	cc
 8009a9c:	2304      	movcc	r3, #4
 8009a9e:	4418      	add	r0, r3
 8009aa0:	4443      	add	r3, r8
 8009aa2:	461e      	mov	r6, r3
 8009aa4:	4605      	mov	r5, r0
 8009aa6:	4575      	cmp	r5, lr
 8009aa8:	d30e      	bcc.n	8009ac8 <__mdiff+0xec>
 8009aaa:	f10e 0103 	add.w	r1, lr, #3
 8009aae:	1a09      	subs	r1, r1, r0
 8009ab0:	f021 0103 	bic.w	r1, r1, #3
 8009ab4:	3803      	subs	r0, #3
 8009ab6:	4586      	cmp	lr, r0
 8009ab8:	bf38      	it	cc
 8009aba:	2100      	movcc	r1, #0
 8009abc:	440b      	add	r3, r1
 8009abe:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8009ac2:	b189      	cbz	r1, 8009ae8 <__mdiff+0x10c>
 8009ac4:	6117      	str	r7, [r2, #16]
 8009ac6:	e7a3      	b.n	8009a10 <__mdiff+0x34>
 8009ac8:	f855 8b04 	ldr.w	r8, [r5], #4
 8009acc:	fa1f f188 	uxth.w	r1, r8
 8009ad0:	4461      	add	r1, ip
 8009ad2:	140c      	asrs	r4, r1, #16
 8009ad4:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8009ad8:	b289      	uxth	r1, r1
 8009ada:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8009ade:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8009ae2:	f846 1b04 	str.w	r1, [r6], #4
 8009ae6:	e7de      	b.n	8009aa6 <__mdiff+0xca>
 8009ae8:	3f01      	subs	r7, #1
 8009aea:	e7e8      	b.n	8009abe <__mdiff+0xe2>
 8009aec:	0800a49a 	.word	0x0800a49a
 8009af0:	0800a4ab 	.word	0x0800a4ab

08009af4 <__d2b>:
 8009af4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009af6:	2101      	movs	r1, #1
 8009af8:	4617      	mov	r7, r2
 8009afa:	461c      	mov	r4, r3
 8009afc:	9e08      	ldr	r6, [sp, #32]
 8009afe:	f7ff fcd7 	bl	80094b0 <_Balloc>
 8009b02:	4605      	mov	r5, r0
 8009b04:	b930      	cbnz	r0, 8009b14 <__d2b+0x20>
 8009b06:	4602      	mov	r2, r0
 8009b08:	f240 310f 	movw	r1, #783	; 0x30f
 8009b0c:	4b22      	ldr	r3, [pc, #136]	; (8009b98 <__d2b+0xa4>)
 8009b0e:	4823      	ldr	r0, [pc, #140]	; (8009b9c <__d2b+0xa8>)
 8009b10:	f000 f900 	bl	8009d14 <__assert_func>
 8009b14:	f3c4 0313 	ubfx	r3, r4, #0, #20
 8009b18:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8009b1c:	bb24      	cbnz	r4, 8009b68 <__d2b+0x74>
 8009b1e:	2f00      	cmp	r7, #0
 8009b20:	9301      	str	r3, [sp, #4]
 8009b22:	d026      	beq.n	8009b72 <__d2b+0x7e>
 8009b24:	4668      	mov	r0, sp
 8009b26:	9700      	str	r7, [sp, #0]
 8009b28:	f7ff fd8a 	bl	8009640 <__lo0bits>
 8009b2c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8009b30:	b1e8      	cbz	r0, 8009b6e <__d2b+0x7a>
 8009b32:	f1c0 0320 	rsb	r3, r0, #32
 8009b36:	fa02 f303 	lsl.w	r3, r2, r3
 8009b3a:	430b      	orrs	r3, r1
 8009b3c:	40c2      	lsrs	r2, r0
 8009b3e:	616b      	str	r3, [r5, #20]
 8009b40:	9201      	str	r2, [sp, #4]
 8009b42:	9b01      	ldr	r3, [sp, #4]
 8009b44:	2b00      	cmp	r3, #0
 8009b46:	bf14      	ite	ne
 8009b48:	2102      	movne	r1, #2
 8009b4a:	2101      	moveq	r1, #1
 8009b4c:	61ab      	str	r3, [r5, #24]
 8009b4e:	6129      	str	r1, [r5, #16]
 8009b50:	b1bc      	cbz	r4, 8009b82 <__d2b+0x8e>
 8009b52:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8009b56:	4404      	add	r4, r0
 8009b58:	6034      	str	r4, [r6, #0]
 8009b5a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8009b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009b60:	6018      	str	r0, [r3, #0]
 8009b62:	4628      	mov	r0, r5
 8009b64:	b003      	add	sp, #12
 8009b66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009b68:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8009b6c:	e7d7      	b.n	8009b1e <__d2b+0x2a>
 8009b6e:	6169      	str	r1, [r5, #20]
 8009b70:	e7e7      	b.n	8009b42 <__d2b+0x4e>
 8009b72:	a801      	add	r0, sp, #4
 8009b74:	f7ff fd64 	bl	8009640 <__lo0bits>
 8009b78:	9b01      	ldr	r3, [sp, #4]
 8009b7a:	2101      	movs	r1, #1
 8009b7c:	616b      	str	r3, [r5, #20]
 8009b7e:	3020      	adds	r0, #32
 8009b80:	e7e5      	b.n	8009b4e <__d2b+0x5a>
 8009b82:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8009b86:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 8009b8a:	6030      	str	r0, [r6, #0]
 8009b8c:	6918      	ldr	r0, [r3, #16]
 8009b8e:	f7ff fd37 	bl	8009600 <__hi0bits>
 8009b92:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8009b96:	e7e2      	b.n	8009b5e <__d2b+0x6a>
 8009b98:	0800a49a 	.word	0x0800a49a
 8009b9c:	0800a4ab 	.word	0x0800a4ab

08009ba0 <__sflush_r>:
 8009ba0:	898a      	ldrh	r2, [r1, #12]
 8009ba2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009ba4:	4605      	mov	r5, r0
 8009ba6:	0710      	lsls	r0, r2, #28
 8009ba8:	460c      	mov	r4, r1
 8009baa:	d457      	bmi.n	8009c5c <__sflush_r+0xbc>
 8009bac:	684b      	ldr	r3, [r1, #4]
 8009bae:	2b00      	cmp	r3, #0
 8009bb0:	dc04      	bgt.n	8009bbc <__sflush_r+0x1c>
 8009bb2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8009bb4:	2b00      	cmp	r3, #0
 8009bb6:	dc01      	bgt.n	8009bbc <__sflush_r+0x1c>
 8009bb8:	2000      	movs	r0, #0
 8009bba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009bbc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009bbe:	2e00      	cmp	r6, #0
 8009bc0:	d0fa      	beq.n	8009bb8 <__sflush_r+0x18>
 8009bc2:	2300      	movs	r3, #0
 8009bc4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8009bc8:	682f      	ldr	r7, [r5, #0]
 8009bca:	6a21      	ldr	r1, [r4, #32]
 8009bcc:	602b      	str	r3, [r5, #0]
 8009bce:	d032      	beq.n	8009c36 <__sflush_r+0x96>
 8009bd0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009bd2:	89a3      	ldrh	r3, [r4, #12]
 8009bd4:	075a      	lsls	r2, r3, #29
 8009bd6:	d505      	bpl.n	8009be4 <__sflush_r+0x44>
 8009bd8:	6863      	ldr	r3, [r4, #4]
 8009bda:	1ac0      	subs	r0, r0, r3
 8009bdc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8009bde:	b10b      	cbz	r3, 8009be4 <__sflush_r+0x44>
 8009be0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009be2:	1ac0      	subs	r0, r0, r3
 8009be4:	2300      	movs	r3, #0
 8009be6:	4602      	mov	r2, r0
 8009be8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009bea:	4628      	mov	r0, r5
 8009bec:	6a21      	ldr	r1, [r4, #32]
 8009bee:	47b0      	blx	r6
 8009bf0:	1c43      	adds	r3, r0, #1
 8009bf2:	89a3      	ldrh	r3, [r4, #12]
 8009bf4:	d106      	bne.n	8009c04 <__sflush_r+0x64>
 8009bf6:	6829      	ldr	r1, [r5, #0]
 8009bf8:	291d      	cmp	r1, #29
 8009bfa:	d82b      	bhi.n	8009c54 <__sflush_r+0xb4>
 8009bfc:	4a28      	ldr	r2, [pc, #160]	; (8009ca0 <__sflush_r+0x100>)
 8009bfe:	410a      	asrs	r2, r1
 8009c00:	07d6      	lsls	r6, r2, #31
 8009c02:	d427      	bmi.n	8009c54 <__sflush_r+0xb4>
 8009c04:	2200      	movs	r2, #0
 8009c06:	6062      	str	r2, [r4, #4]
 8009c08:	6922      	ldr	r2, [r4, #16]
 8009c0a:	04d9      	lsls	r1, r3, #19
 8009c0c:	6022      	str	r2, [r4, #0]
 8009c0e:	d504      	bpl.n	8009c1a <__sflush_r+0x7a>
 8009c10:	1c42      	adds	r2, r0, #1
 8009c12:	d101      	bne.n	8009c18 <__sflush_r+0x78>
 8009c14:	682b      	ldr	r3, [r5, #0]
 8009c16:	b903      	cbnz	r3, 8009c1a <__sflush_r+0x7a>
 8009c18:	6560      	str	r0, [r4, #84]	; 0x54
 8009c1a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009c1c:	602f      	str	r7, [r5, #0]
 8009c1e:	2900      	cmp	r1, #0
 8009c20:	d0ca      	beq.n	8009bb8 <__sflush_r+0x18>
 8009c22:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8009c26:	4299      	cmp	r1, r3
 8009c28:	d002      	beq.n	8009c30 <__sflush_r+0x90>
 8009c2a:	4628      	mov	r0, r5
 8009c2c:	f7ff fb44 	bl	80092b8 <_free_r>
 8009c30:	2000      	movs	r0, #0
 8009c32:	6360      	str	r0, [r4, #52]	; 0x34
 8009c34:	e7c1      	b.n	8009bba <__sflush_r+0x1a>
 8009c36:	2301      	movs	r3, #1
 8009c38:	4628      	mov	r0, r5
 8009c3a:	47b0      	blx	r6
 8009c3c:	1c41      	adds	r1, r0, #1
 8009c3e:	d1c8      	bne.n	8009bd2 <__sflush_r+0x32>
 8009c40:	682b      	ldr	r3, [r5, #0]
 8009c42:	2b00      	cmp	r3, #0
 8009c44:	d0c5      	beq.n	8009bd2 <__sflush_r+0x32>
 8009c46:	2b1d      	cmp	r3, #29
 8009c48:	d001      	beq.n	8009c4e <__sflush_r+0xae>
 8009c4a:	2b16      	cmp	r3, #22
 8009c4c:	d101      	bne.n	8009c52 <__sflush_r+0xb2>
 8009c4e:	602f      	str	r7, [r5, #0]
 8009c50:	e7b2      	b.n	8009bb8 <__sflush_r+0x18>
 8009c52:	89a3      	ldrh	r3, [r4, #12]
 8009c54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009c58:	81a3      	strh	r3, [r4, #12]
 8009c5a:	e7ae      	b.n	8009bba <__sflush_r+0x1a>
 8009c5c:	690f      	ldr	r7, [r1, #16]
 8009c5e:	2f00      	cmp	r7, #0
 8009c60:	d0aa      	beq.n	8009bb8 <__sflush_r+0x18>
 8009c62:	0793      	lsls	r3, r2, #30
 8009c64:	bf18      	it	ne
 8009c66:	2300      	movne	r3, #0
 8009c68:	680e      	ldr	r6, [r1, #0]
 8009c6a:	bf08      	it	eq
 8009c6c:	694b      	ldreq	r3, [r1, #20]
 8009c6e:	1bf6      	subs	r6, r6, r7
 8009c70:	600f      	str	r7, [r1, #0]
 8009c72:	608b      	str	r3, [r1, #8]
 8009c74:	2e00      	cmp	r6, #0
 8009c76:	dd9f      	ble.n	8009bb8 <__sflush_r+0x18>
 8009c78:	4633      	mov	r3, r6
 8009c7a:	463a      	mov	r2, r7
 8009c7c:	4628      	mov	r0, r5
 8009c7e:	6a21      	ldr	r1, [r4, #32]
 8009c80:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8009c84:	47e0      	blx	ip
 8009c86:	2800      	cmp	r0, #0
 8009c88:	dc06      	bgt.n	8009c98 <__sflush_r+0xf8>
 8009c8a:	89a3      	ldrh	r3, [r4, #12]
 8009c8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009c90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009c94:	81a3      	strh	r3, [r4, #12]
 8009c96:	e790      	b.n	8009bba <__sflush_r+0x1a>
 8009c98:	4407      	add	r7, r0
 8009c9a:	1a36      	subs	r6, r6, r0
 8009c9c:	e7ea      	b.n	8009c74 <__sflush_r+0xd4>
 8009c9e:	bf00      	nop
 8009ca0:	dfbffffe 	.word	0xdfbffffe

08009ca4 <_fflush_r>:
 8009ca4:	b538      	push	{r3, r4, r5, lr}
 8009ca6:	690b      	ldr	r3, [r1, #16]
 8009ca8:	4605      	mov	r5, r0
 8009caa:	460c      	mov	r4, r1
 8009cac:	b913      	cbnz	r3, 8009cb4 <_fflush_r+0x10>
 8009cae:	2500      	movs	r5, #0
 8009cb0:	4628      	mov	r0, r5
 8009cb2:	bd38      	pop	{r3, r4, r5, pc}
 8009cb4:	b118      	cbz	r0, 8009cbe <_fflush_r+0x1a>
 8009cb6:	6a03      	ldr	r3, [r0, #32]
 8009cb8:	b90b      	cbnz	r3, 8009cbe <_fflush_r+0x1a>
 8009cba:	f7fe fb23 	bl	8008304 <__sinit>
 8009cbe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009cc2:	2b00      	cmp	r3, #0
 8009cc4:	d0f3      	beq.n	8009cae <_fflush_r+0xa>
 8009cc6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8009cc8:	07d0      	lsls	r0, r2, #31
 8009cca:	d404      	bmi.n	8009cd6 <_fflush_r+0x32>
 8009ccc:	0599      	lsls	r1, r3, #22
 8009cce:	d402      	bmi.n	8009cd6 <_fflush_r+0x32>
 8009cd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009cd2:	f7fe fc64 	bl	800859e <__retarget_lock_acquire_recursive>
 8009cd6:	4628      	mov	r0, r5
 8009cd8:	4621      	mov	r1, r4
 8009cda:	f7ff ff61 	bl	8009ba0 <__sflush_r>
 8009cde:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009ce0:	4605      	mov	r5, r0
 8009ce2:	07da      	lsls	r2, r3, #31
 8009ce4:	d4e4      	bmi.n	8009cb0 <_fflush_r+0xc>
 8009ce6:	89a3      	ldrh	r3, [r4, #12]
 8009ce8:	059b      	lsls	r3, r3, #22
 8009cea:	d4e1      	bmi.n	8009cb0 <_fflush_r+0xc>
 8009cec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009cee:	f7fe fc57 	bl	80085a0 <__retarget_lock_release_recursive>
 8009cf2:	e7dd      	b.n	8009cb0 <_fflush_r+0xc>

08009cf4 <_sbrk_r>:
 8009cf4:	b538      	push	{r3, r4, r5, lr}
 8009cf6:	2300      	movs	r3, #0
 8009cf8:	4d05      	ldr	r5, [pc, #20]	; (8009d10 <_sbrk_r+0x1c>)
 8009cfa:	4604      	mov	r4, r0
 8009cfc:	4608      	mov	r0, r1
 8009cfe:	602b      	str	r3, [r5, #0]
 8009d00:	f7f9 f9fe 	bl	8003100 <_sbrk>
 8009d04:	1c43      	adds	r3, r0, #1
 8009d06:	d102      	bne.n	8009d0e <_sbrk_r+0x1a>
 8009d08:	682b      	ldr	r3, [r5, #0]
 8009d0a:	b103      	cbz	r3, 8009d0e <_sbrk_r+0x1a>
 8009d0c:	6023      	str	r3, [r4, #0]
 8009d0e:	bd38      	pop	{r3, r4, r5, pc}
 8009d10:	20001678 	.word	0x20001678

08009d14 <__assert_func>:
 8009d14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009d16:	4614      	mov	r4, r2
 8009d18:	461a      	mov	r2, r3
 8009d1a:	4b09      	ldr	r3, [pc, #36]	; (8009d40 <__assert_func+0x2c>)
 8009d1c:	4605      	mov	r5, r0
 8009d1e:	681b      	ldr	r3, [r3, #0]
 8009d20:	68d8      	ldr	r0, [r3, #12]
 8009d22:	b14c      	cbz	r4, 8009d38 <__assert_func+0x24>
 8009d24:	4b07      	ldr	r3, [pc, #28]	; (8009d44 <__assert_func+0x30>)
 8009d26:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009d2a:	9100      	str	r1, [sp, #0]
 8009d2c:	462b      	mov	r3, r5
 8009d2e:	4906      	ldr	r1, [pc, #24]	; (8009d48 <__assert_func+0x34>)
 8009d30:	f000 f842 	bl	8009db8 <fiprintf>
 8009d34:	f000 f852 	bl	8009ddc <abort>
 8009d38:	4b04      	ldr	r3, [pc, #16]	; (8009d4c <__assert_func+0x38>)
 8009d3a:	461c      	mov	r4, r3
 8009d3c:	e7f3      	b.n	8009d26 <__assert_func+0x12>
 8009d3e:	bf00      	nop
 8009d40:	20000068 	.word	0x20000068
 8009d44:	0800a60e 	.word	0x0800a60e
 8009d48:	0800a61b 	.word	0x0800a61b
 8009d4c:	0800a649 	.word	0x0800a649

08009d50 <_calloc_r>:
 8009d50:	b570      	push	{r4, r5, r6, lr}
 8009d52:	fba1 5402 	umull	r5, r4, r1, r2
 8009d56:	b934      	cbnz	r4, 8009d66 <_calloc_r+0x16>
 8009d58:	4629      	mov	r1, r5
 8009d5a:	f7ff fb1d 	bl	8009398 <_malloc_r>
 8009d5e:	4606      	mov	r6, r0
 8009d60:	b928      	cbnz	r0, 8009d6e <_calloc_r+0x1e>
 8009d62:	4630      	mov	r0, r6
 8009d64:	bd70      	pop	{r4, r5, r6, pc}
 8009d66:	220c      	movs	r2, #12
 8009d68:	2600      	movs	r6, #0
 8009d6a:	6002      	str	r2, [r0, #0]
 8009d6c:	e7f9      	b.n	8009d62 <_calloc_r+0x12>
 8009d6e:	462a      	mov	r2, r5
 8009d70:	4621      	mov	r1, r4
 8009d72:	f7fe fb40 	bl	80083f6 <memset>
 8009d76:	e7f4      	b.n	8009d62 <_calloc_r+0x12>

08009d78 <__ascii_mbtowc>:
 8009d78:	b082      	sub	sp, #8
 8009d7a:	b901      	cbnz	r1, 8009d7e <__ascii_mbtowc+0x6>
 8009d7c:	a901      	add	r1, sp, #4
 8009d7e:	b142      	cbz	r2, 8009d92 <__ascii_mbtowc+0x1a>
 8009d80:	b14b      	cbz	r3, 8009d96 <__ascii_mbtowc+0x1e>
 8009d82:	7813      	ldrb	r3, [r2, #0]
 8009d84:	600b      	str	r3, [r1, #0]
 8009d86:	7812      	ldrb	r2, [r2, #0]
 8009d88:	1e10      	subs	r0, r2, #0
 8009d8a:	bf18      	it	ne
 8009d8c:	2001      	movne	r0, #1
 8009d8e:	b002      	add	sp, #8
 8009d90:	4770      	bx	lr
 8009d92:	4610      	mov	r0, r2
 8009d94:	e7fb      	b.n	8009d8e <__ascii_mbtowc+0x16>
 8009d96:	f06f 0001 	mvn.w	r0, #1
 8009d9a:	e7f8      	b.n	8009d8e <__ascii_mbtowc+0x16>

08009d9c <__ascii_wctomb>:
 8009d9c:	4603      	mov	r3, r0
 8009d9e:	4608      	mov	r0, r1
 8009da0:	b141      	cbz	r1, 8009db4 <__ascii_wctomb+0x18>
 8009da2:	2aff      	cmp	r2, #255	; 0xff
 8009da4:	d904      	bls.n	8009db0 <__ascii_wctomb+0x14>
 8009da6:	228a      	movs	r2, #138	; 0x8a
 8009da8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009dac:	601a      	str	r2, [r3, #0]
 8009dae:	4770      	bx	lr
 8009db0:	2001      	movs	r0, #1
 8009db2:	700a      	strb	r2, [r1, #0]
 8009db4:	4770      	bx	lr
	...

08009db8 <fiprintf>:
 8009db8:	b40e      	push	{r1, r2, r3}
 8009dba:	b503      	push	{r0, r1, lr}
 8009dbc:	4601      	mov	r1, r0
 8009dbe:	ab03      	add	r3, sp, #12
 8009dc0:	4805      	ldr	r0, [pc, #20]	; (8009dd8 <fiprintf+0x20>)
 8009dc2:	f853 2b04 	ldr.w	r2, [r3], #4
 8009dc6:	6800      	ldr	r0, [r0, #0]
 8009dc8:	9301      	str	r3, [sp, #4]
 8009dca:	f000 f835 	bl	8009e38 <_vfiprintf_r>
 8009dce:	b002      	add	sp, #8
 8009dd0:	f85d eb04 	ldr.w	lr, [sp], #4
 8009dd4:	b003      	add	sp, #12
 8009dd6:	4770      	bx	lr
 8009dd8:	20000068 	.word	0x20000068

08009ddc <abort>:
 8009ddc:	2006      	movs	r0, #6
 8009dde:	b508      	push	{r3, lr}
 8009de0:	f000 fa02 	bl	800a1e8 <raise>
 8009de4:	2001      	movs	r0, #1
 8009de6:	f7f9 f918 	bl	800301a <_exit>

08009dea <__sfputc_r>:
 8009dea:	6893      	ldr	r3, [r2, #8]
 8009dec:	b410      	push	{r4}
 8009dee:	3b01      	subs	r3, #1
 8009df0:	2b00      	cmp	r3, #0
 8009df2:	6093      	str	r3, [r2, #8]
 8009df4:	da07      	bge.n	8009e06 <__sfputc_r+0x1c>
 8009df6:	6994      	ldr	r4, [r2, #24]
 8009df8:	42a3      	cmp	r3, r4
 8009dfa:	db01      	blt.n	8009e00 <__sfputc_r+0x16>
 8009dfc:	290a      	cmp	r1, #10
 8009dfe:	d102      	bne.n	8009e06 <__sfputc_r+0x1c>
 8009e00:	bc10      	pop	{r4}
 8009e02:	f000 b933 	b.w	800a06c <__swbuf_r>
 8009e06:	6813      	ldr	r3, [r2, #0]
 8009e08:	1c58      	adds	r0, r3, #1
 8009e0a:	6010      	str	r0, [r2, #0]
 8009e0c:	7019      	strb	r1, [r3, #0]
 8009e0e:	4608      	mov	r0, r1
 8009e10:	bc10      	pop	{r4}
 8009e12:	4770      	bx	lr

08009e14 <__sfputs_r>:
 8009e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009e16:	4606      	mov	r6, r0
 8009e18:	460f      	mov	r7, r1
 8009e1a:	4614      	mov	r4, r2
 8009e1c:	18d5      	adds	r5, r2, r3
 8009e1e:	42ac      	cmp	r4, r5
 8009e20:	d101      	bne.n	8009e26 <__sfputs_r+0x12>
 8009e22:	2000      	movs	r0, #0
 8009e24:	e007      	b.n	8009e36 <__sfputs_r+0x22>
 8009e26:	463a      	mov	r2, r7
 8009e28:	4630      	mov	r0, r6
 8009e2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009e2e:	f7ff ffdc 	bl	8009dea <__sfputc_r>
 8009e32:	1c43      	adds	r3, r0, #1
 8009e34:	d1f3      	bne.n	8009e1e <__sfputs_r+0xa>
 8009e36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009e38 <_vfiprintf_r>:
 8009e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e3c:	460d      	mov	r5, r1
 8009e3e:	4614      	mov	r4, r2
 8009e40:	4698      	mov	r8, r3
 8009e42:	4606      	mov	r6, r0
 8009e44:	b09d      	sub	sp, #116	; 0x74
 8009e46:	b118      	cbz	r0, 8009e50 <_vfiprintf_r+0x18>
 8009e48:	6a03      	ldr	r3, [r0, #32]
 8009e4a:	b90b      	cbnz	r3, 8009e50 <_vfiprintf_r+0x18>
 8009e4c:	f7fe fa5a 	bl	8008304 <__sinit>
 8009e50:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009e52:	07d9      	lsls	r1, r3, #31
 8009e54:	d405      	bmi.n	8009e62 <_vfiprintf_r+0x2a>
 8009e56:	89ab      	ldrh	r3, [r5, #12]
 8009e58:	059a      	lsls	r2, r3, #22
 8009e5a:	d402      	bmi.n	8009e62 <_vfiprintf_r+0x2a>
 8009e5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009e5e:	f7fe fb9e 	bl	800859e <__retarget_lock_acquire_recursive>
 8009e62:	89ab      	ldrh	r3, [r5, #12]
 8009e64:	071b      	lsls	r3, r3, #28
 8009e66:	d501      	bpl.n	8009e6c <_vfiprintf_r+0x34>
 8009e68:	692b      	ldr	r3, [r5, #16]
 8009e6a:	b99b      	cbnz	r3, 8009e94 <_vfiprintf_r+0x5c>
 8009e6c:	4629      	mov	r1, r5
 8009e6e:	4630      	mov	r0, r6
 8009e70:	f000 f93a 	bl	800a0e8 <__swsetup_r>
 8009e74:	b170      	cbz	r0, 8009e94 <_vfiprintf_r+0x5c>
 8009e76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009e78:	07dc      	lsls	r4, r3, #31
 8009e7a:	d504      	bpl.n	8009e86 <_vfiprintf_r+0x4e>
 8009e7c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009e80:	b01d      	add	sp, #116	; 0x74
 8009e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e86:	89ab      	ldrh	r3, [r5, #12]
 8009e88:	0598      	lsls	r0, r3, #22
 8009e8a:	d4f7      	bmi.n	8009e7c <_vfiprintf_r+0x44>
 8009e8c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009e8e:	f7fe fb87 	bl	80085a0 <__retarget_lock_release_recursive>
 8009e92:	e7f3      	b.n	8009e7c <_vfiprintf_r+0x44>
 8009e94:	2300      	movs	r3, #0
 8009e96:	9309      	str	r3, [sp, #36]	; 0x24
 8009e98:	2320      	movs	r3, #32
 8009e9a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8009e9e:	2330      	movs	r3, #48	; 0x30
 8009ea0:	f04f 0901 	mov.w	r9, #1
 8009ea4:	f8cd 800c 	str.w	r8, [sp, #12]
 8009ea8:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 800a058 <_vfiprintf_r+0x220>
 8009eac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8009eb0:	4623      	mov	r3, r4
 8009eb2:	469a      	mov	sl, r3
 8009eb4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009eb8:	b10a      	cbz	r2, 8009ebe <_vfiprintf_r+0x86>
 8009eba:	2a25      	cmp	r2, #37	; 0x25
 8009ebc:	d1f9      	bne.n	8009eb2 <_vfiprintf_r+0x7a>
 8009ebe:	ebba 0b04 	subs.w	fp, sl, r4
 8009ec2:	d00b      	beq.n	8009edc <_vfiprintf_r+0xa4>
 8009ec4:	465b      	mov	r3, fp
 8009ec6:	4622      	mov	r2, r4
 8009ec8:	4629      	mov	r1, r5
 8009eca:	4630      	mov	r0, r6
 8009ecc:	f7ff ffa2 	bl	8009e14 <__sfputs_r>
 8009ed0:	3001      	adds	r0, #1
 8009ed2:	f000 80a9 	beq.w	800a028 <_vfiprintf_r+0x1f0>
 8009ed6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009ed8:	445a      	add	r2, fp
 8009eda:	9209      	str	r2, [sp, #36]	; 0x24
 8009edc:	f89a 3000 	ldrb.w	r3, [sl]
 8009ee0:	2b00      	cmp	r3, #0
 8009ee2:	f000 80a1 	beq.w	800a028 <_vfiprintf_r+0x1f0>
 8009ee6:	2300      	movs	r3, #0
 8009ee8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009eec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009ef0:	f10a 0a01 	add.w	sl, sl, #1
 8009ef4:	9304      	str	r3, [sp, #16]
 8009ef6:	9307      	str	r3, [sp, #28]
 8009ef8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8009efc:	931a      	str	r3, [sp, #104]	; 0x68
 8009efe:	4654      	mov	r4, sl
 8009f00:	2205      	movs	r2, #5
 8009f02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009f06:	4854      	ldr	r0, [pc, #336]	; (800a058 <_vfiprintf_r+0x220>)
 8009f08:	f7fe fb4b 	bl	80085a2 <memchr>
 8009f0c:	9a04      	ldr	r2, [sp, #16]
 8009f0e:	b9d8      	cbnz	r0, 8009f48 <_vfiprintf_r+0x110>
 8009f10:	06d1      	lsls	r1, r2, #27
 8009f12:	bf44      	itt	mi
 8009f14:	2320      	movmi	r3, #32
 8009f16:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009f1a:	0713      	lsls	r3, r2, #28
 8009f1c:	bf44      	itt	mi
 8009f1e:	232b      	movmi	r3, #43	; 0x2b
 8009f20:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009f24:	f89a 3000 	ldrb.w	r3, [sl]
 8009f28:	2b2a      	cmp	r3, #42	; 0x2a
 8009f2a:	d015      	beq.n	8009f58 <_vfiprintf_r+0x120>
 8009f2c:	4654      	mov	r4, sl
 8009f2e:	2000      	movs	r0, #0
 8009f30:	f04f 0c0a 	mov.w	ip, #10
 8009f34:	9a07      	ldr	r2, [sp, #28]
 8009f36:	4621      	mov	r1, r4
 8009f38:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009f3c:	3b30      	subs	r3, #48	; 0x30
 8009f3e:	2b09      	cmp	r3, #9
 8009f40:	d94d      	bls.n	8009fde <_vfiprintf_r+0x1a6>
 8009f42:	b1b0      	cbz	r0, 8009f72 <_vfiprintf_r+0x13a>
 8009f44:	9207      	str	r2, [sp, #28]
 8009f46:	e014      	b.n	8009f72 <_vfiprintf_r+0x13a>
 8009f48:	eba0 0308 	sub.w	r3, r0, r8
 8009f4c:	fa09 f303 	lsl.w	r3, r9, r3
 8009f50:	4313      	orrs	r3, r2
 8009f52:	46a2      	mov	sl, r4
 8009f54:	9304      	str	r3, [sp, #16]
 8009f56:	e7d2      	b.n	8009efe <_vfiprintf_r+0xc6>
 8009f58:	9b03      	ldr	r3, [sp, #12]
 8009f5a:	1d19      	adds	r1, r3, #4
 8009f5c:	681b      	ldr	r3, [r3, #0]
 8009f5e:	9103      	str	r1, [sp, #12]
 8009f60:	2b00      	cmp	r3, #0
 8009f62:	bfbb      	ittet	lt
 8009f64:	425b      	neglt	r3, r3
 8009f66:	f042 0202 	orrlt.w	r2, r2, #2
 8009f6a:	9307      	strge	r3, [sp, #28]
 8009f6c:	9307      	strlt	r3, [sp, #28]
 8009f6e:	bfb8      	it	lt
 8009f70:	9204      	strlt	r2, [sp, #16]
 8009f72:	7823      	ldrb	r3, [r4, #0]
 8009f74:	2b2e      	cmp	r3, #46	; 0x2e
 8009f76:	d10c      	bne.n	8009f92 <_vfiprintf_r+0x15a>
 8009f78:	7863      	ldrb	r3, [r4, #1]
 8009f7a:	2b2a      	cmp	r3, #42	; 0x2a
 8009f7c:	d134      	bne.n	8009fe8 <_vfiprintf_r+0x1b0>
 8009f7e:	9b03      	ldr	r3, [sp, #12]
 8009f80:	3402      	adds	r4, #2
 8009f82:	1d1a      	adds	r2, r3, #4
 8009f84:	681b      	ldr	r3, [r3, #0]
 8009f86:	9203      	str	r2, [sp, #12]
 8009f88:	2b00      	cmp	r3, #0
 8009f8a:	bfb8      	it	lt
 8009f8c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8009f90:	9305      	str	r3, [sp, #20]
 8009f92:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800a05c <_vfiprintf_r+0x224>
 8009f96:	2203      	movs	r2, #3
 8009f98:	4650      	mov	r0, sl
 8009f9a:	7821      	ldrb	r1, [r4, #0]
 8009f9c:	f7fe fb01 	bl	80085a2 <memchr>
 8009fa0:	b138      	cbz	r0, 8009fb2 <_vfiprintf_r+0x17a>
 8009fa2:	2240      	movs	r2, #64	; 0x40
 8009fa4:	9b04      	ldr	r3, [sp, #16]
 8009fa6:	eba0 000a 	sub.w	r0, r0, sl
 8009faa:	4082      	lsls	r2, r0
 8009fac:	4313      	orrs	r3, r2
 8009fae:	3401      	adds	r4, #1
 8009fb0:	9304      	str	r3, [sp, #16]
 8009fb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009fb6:	2206      	movs	r2, #6
 8009fb8:	4829      	ldr	r0, [pc, #164]	; (800a060 <_vfiprintf_r+0x228>)
 8009fba:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8009fbe:	f7fe faf0 	bl	80085a2 <memchr>
 8009fc2:	2800      	cmp	r0, #0
 8009fc4:	d03f      	beq.n	800a046 <_vfiprintf_r+0x20e>
 8009fc6:	4b27      	ldr	r3, [pc, #156]	; (800a064 <_vfiprintf_r+0x22c>)
 8009fc8:	bb1b      	cbnz	r3, 800a012 <_vfiprintf_r+0x1da>
 8009fca:	9b03      	ldr	r3, [sp, #12]
 8009fcc:	3307      	adds	r3, #7
 8009fce:	f023 0307 	bic.w	r3, r3, #7
 8009fd2:	3308      	adds	r3, #8
 8009fd4:	9303      	str	r3, [sp, #12]
 8009fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009fd8:	443b      	add	r3, r7
 8009fda:	9309      	str	r3, [sp, #36]	; 0x24
 8009fdc:	e768      	b.n	8009eb0 <_vfiprintf_r+0x78>
 8009fde:	460c      	mov	r4, r1
 8009fe0:	2001      	movs	r0, #1
 8009fe2:	fb0c 3202 	mla	r2, ip, r2, r3
 8009fe6:	e7a6      	b.n	8009f36 <_vfiprintf_r+0xfe>
 8009fe8:	2300      	movs	r3, #0
 8009fea:	f04f 0c0a 	mov.w	ip, #10
 8009fee:	4619      	mov	r1, r3
 8009ff0:	3401      	adds	r4, #1
 8009ff2:	9305      	str	r3, [sp, #20]
 8009ff4:	4620      	mov	r0, r4
 8009ff6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009ffa:	3a30      	subs	r2, #48	; 0x30
 8009ffc:	2a09      	cmp	r2, #9
 8009ffe:	d903      	bls.n	800a008 <_vfiprintf_r+0x1d0>
 800a000:	2b00      	cmp	r3, #0
 800a002:	d0c6      	beq.n	8009f92 <_vfiprintf_r+0x15a>
 800a004:	9105      	str	r1, [sp, #20]
 800a006:	e7c4      	b.n	8009f92 <_vfiprintf_r+0x15a>
 800a008:	4604      	mov	r4, r0
 800a00a:	2301      	movs	r3, #1
 800a00c:	fb0c 2101 	mla	r1, ip, r1, r2
 800a010:	e7f0      	b.n	8009ff4 <_vfiprintf_r+0x1bc>
 800a012:	ab03      	add	r3, sp, #12
 800a014:	9300      	str	r3, [sp, #0]
 800a016:	462a      	mov	r2, r5
 800a018:	4630      	mov	r0, r6
 800a01a:	4b13      	ldr	r3, [pc, #76]	; (800a068 <_vfiprintf_r+0x230>)
 800a01c:	a904      	add	r1, sp, #16
 800a01e:	f7fd fd23 	bl	8007a68 <_printf_float>
 800a022:	4607      	mov	r7, r0
 800a024:	1c78      	adds	r0, r7, #1
 800a026:	d1d6      	bne.n	8009fd6 <_vfiprintf_r+0x19e>
 800a028:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800a02a:	07d9      	lsls	r1, r3, #31
 800a02c:	d405      	bmi.n	800a03a <_vfiprintf_r+0x202>
 800a02e:	89ab      	ldrh	r3, [r5, #12]
 800a030:	059a      	lsls	r2, r3, #22
 800a032:	d402      	bmi.n	800a03a <_vfiprintf_r+0x202>
 800a034:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800a036:	f7fe fab3 	bl	80085a0 <__retarget_lock_release_recursive>
 800a03a:	89ab      	ldrh	r3, [r5, #12]
 800a03c:	065b      	lsls	r3, r3, #25
 800a03e:	f53f af1d 	bmi.w	8009e7c <_vfiprintf_r+0x44>
 800a042:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a044:	e71c      	b.n	8009e80 <_vfiprintf_r+0x48>
 800a046:	ab03      	add	r3, sp, #12
 800a048:	9300      	str	r3, [sp, #0]
 800a04a:	462a      	mov	r2, r5
 800a04c:	4630      	mov	r0, r6
 800a04e:	4b06      	ldr	r3, [pc, #24]	; (800a068 <_vfiprintf_r+0x230>)
 800a050:	a904      	add	r1, sp, #16
 800a052:	f7fd ffa9 	bl	8007fa8 <_printf_i>
 800a056:	e7e4      	b.n	800a022 <_vfiprintf_r+0x1ea>
 800a058:	0800a74b 	.word	0x0800a74b
 800a05c:	0800a751 	.word	0x0800a751
 800a060:	0800a755 	.word	0x0800a755
 800a064:	08007a69 	.word	0x08007a69
 800a068:	08009e15 	.word	0x08009e15

0800a06c <__swbuf_r>:
 800a06c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a06e:	460e      	mov	r6, r1
 800a070:	4614      	mov	r4, r2
 800a072:	4605      	mov	r5, r0
 800a074:	b118      	cbz	r0, 800a07e <__swbuf_r+0x12>
 800a076:	6a03      	ldr	r3, [r0, #32]
 800a078:	b90b      	cbnz	r3, 800a07e <__swbuf_r+0x12>
 800a07a:	f7fe f943 	bl	8008304 <__sinit>
 800a07e:	69a3      	ldr	r3, [r4, #24]
 800a080:	60a3      	str	r3, [r4, #8]
 800a082:	89a3      	ldrh	r3, [r4, #12]
 800a084:	071a      	lsls	r2, r3, #28
 800a086:	d525      	bpl.n	800a0d4 <__swbuf_r+0x68>
 800a088:	6923      	ldr	r3, [r4, #16]
 800a08a:	b31b      	cbz	r3, 800a0d4 <__swbuf_r+0x68>
 800a08c:	6823      	ldr	r3, [r4, #0]
 800a08e:	6922      	ldr	r2, [r4, #16]
 800a090:	b2f6      	uxtb	r6, r6
 800a092:	1a98      	subs	r0, r3, r2
 800a094:	6963      	ldr	r3, [r4, #20]
 800a096:	4637      	mov	r7, r6
 800a098:	4283      	cmp	r3, r0
 800a09a:	dc04      	bgt.n	800a0a6 <__swbuf_r+0x3a>
 800a09c:	4621      	mov	r1, r4
 800a09e:	4628      	mov	r0, r5
 800a0a0:	f7ff fe00 	bl	8009ca4 <_fflush_r>
 800a0a4:	b9e0      	cbnz	r0, 800a0e0 <__swbuf_r+0x74>
 800a0a6:	68a3      	ldr	r3, [r4, #8]
 800a0a8:	3b01      	subs	r3, #1
 800a0aa:	60a3      	str	r3, [r4, #8]
 800a0ac:	6823      	ldr	r3, [r4, #0]
 800a0ae:	1c5a      	adds	r2, r3, #1
 800a0b0:	6022      	str	r2, [r4, #0]
 800a0b2:	701e      	strb	r6, [r3, #0]
 800a0b4:	6962      	ldr	r2, [r4, #20]
 800a0b6:	1c43      	adds	r3, r0, #1
 800a0b8:	429a      	cmp	r2, r3
 800a0ba:	d004      	beq.n	800a0c6 <__swbuf_r+0x5a>
 800a0bc:	89a3      	ldrh	r3, [r4, #12]
 800a0be:	07db      	lsls	r3, r3, #31
 800a0c0:	d506      	bpl.n	800a0d0 <__swbuf_r+0x64>
 800a0c2:	2e0a      	cmp	r6, #10
 800a0c4:	d104      	bne.n	800a0d0 <__swbuf_r+0x64>
 800a0c6:	4621      	mov	r1, r4
 800a0c8:	4628      	mov	r0, r5
 800a0ca:	f7ff fdeb 	bl	8009ca4 <_fflush_r>
 800a0ce:	b938      	cbnz	r0, 800a0e0 <__swbuf_r+0x74>
 800a0d0:	4638      	mov	r0, r7
 800a0d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a0d4:	4621      	mov	r1, r4
 800a0d6:	4628      	mov	r0, r5
 800a0d8:	f000 f806 	bl	800a0e8 <__swsetup_r>
 800a0dc:	2800      	cmp	r0, #0
 800a0de:	d0d5      	beq.n	800a08c <__swbuf_r+0x20>
 800a0e0:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800a0e4:	e7f4      	b.n	800a0d0 <__swbuf_r+0x64>
	...

0800a0e8 <__swsetup_r>:
 800a0e8:	b538      	push	{r3, r4, r5, lr}
 800a0ea:	4b2a      	ldr	r3, [pc, #168]	; (800a194 <__swsetup_r+0xac>)
 800a0ec:	4605      	mov	r5, r0
 800a0ee:	6818      	ldr	r0, [r3, #0]
 800a0f0:	460c      	mov	r4, r1
 800a0f2:	b118      	cbz	r0, 800a0fc <__swsetup_r+0x14>
 800a0f4:	6a03      	ldr	r3, [r0, #32]
 800a0f6:	b90b      	cbnz	r3, 800a0fc <__swsetup_r+0x14>
 800a0f8:	f7fe f904 	bl	8008304 <__sinit>
 800a0fc:	89a3      	ldrh	r3, [r4, #12]
 800a0fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800a102:	0718      	lsls	r0, r3, #28
 800a104:	d422      	bmi.n	800a14c <__swsetup_r+0x64>
 800a106:	06d9      	lsls	r1, r3, #27
 800a108:	d407      	bmi.n	800a11a <__swsetup_r+0x32>
 800a10a:	2309      	movs	r3, #9
 800a10c:	602b      	str	r3, [r5, #0]
 800a10e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800a112:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a116:	81a3      	strh	r3, [r4, #12]
 800a118:	e034      	b.n	800a184 <__swsetup_r+0x9c>
 800a11a:	0758      	lsls	r0, r3, #29
 800a11c:	d512      	bpl.n	800a144 <__swsetup_r+0x5c>
 800a11e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a120:	b141      	cbz	r1, 800a134 <__swsetup_r+0x4c>
 800a122:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800a126:	4299      	cmp	r1, r3
 800a128:	d002      	beq.n	800a130 <__swsetup_r+0x48>
 800a12a:	4628      	mov	r0, r5
 800a12c:	f7ff f8c4 	bl	80092b8 <_free_r>
 800a130:	2300      	movs	r3, #0
 800a132:	6363      	str	r3, [r4, #52]	; 0x34
 800a134:	89a3      	ldrh	r3, [r4, #12]
 800a136:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800a13a:	81a3      	strh	r3, [r4, #12]
 800a13c:	2300      	movs	r3, #0
 800a13e:	6063      	str	r3, [r4, #4]
 800a140:	6923      	ldr	r3, [r4, #16]
 800a142:	6023      	str	r3, [r4, #0]
 800a144:	89a3      	ldrh	r3, [r4, #12]
 800a146:	f043 0308 	orr.w	r3, r3, #8
 800a14a:	81a3      	strh	r3, [r4, #12]
 800a14c:	6923      	ldr	r3, [r4, #16]
 800a14e:	b94b      	cbnz	r3, 800a164 <__swsetup_r+0x7c>
 800a150:	89a3      	ldrh	r3, [r4, #12]
 800a152:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800a156:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a15a:	d003      	beq.n	800a164 <__swsetup_r+0x7c>
 800a15c:	4621      	mov	r1, r4
 800a15e:	4628      	mov	r0, r5
 800a160:	f000 f883 	bl	800a26a <__smakebuf_r>
 800a164:	89a0      	ldrh	r0, [r4, #12]
 800a166:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800a16a:	f010 0301 	ands.w	r3, r0, #1
 800a16e:	d00a      	beq.n	800a186 <__swsetup_r+0x9e>
 800a170:	2300      	movs	r3, #0
 800a172:	60a3      	str	r3, [r4, #8]
 800a174:	6963      	ldr	r3, [r4, #20]
 800a176:	425b      	negs	r3, r3
 800a178:	61a3      	str	r3, [r4, #24]
 800a17a:	6923      	ldr	r3, [r4, #16]
 800a17c:	b943      	cbnz	r3, 800a190 <__swsetup_r+0xa8>
 800a17e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800a182:	d1c4      	bne.n	800a10e <__swsetup_r+0x26>
 800a184:	bd38      	pop	{r3, r4, r5, pc}
 800a186:	0781      	lsls	r1, r0, #30
 800a188:	bf58      	it	pl
 800a18a:	6963      	ldrpl	r3, [r4, #20]
 800a18c:	60a3      	str	r3, [r4, #8]
 800a18e:	e7f4      	b.n	800a17a <__swsetup_r+0x92>
 800a190:	2000      	movs	r0, #0
 800a192:	e7f7      	b.n	800a184 <__swsetup_r+0x9c>
 800a194:	20000068 	.word	0x20000068

0800a198 <_raise_r>:
 800a198:	291f      	cmp	r1, #31
 800a19a:	b538      	push	{r3, r4, r5, lr}
 800a19c:	4604      	mov	r4, r0
 800a19e:	460d      	mov	r5, r1
 800a1a0:	d904      	bls.n	800a1ac <_raise_r+0x14>
 800a1a2:	2316      	movs	r3, #22
 800a1a4:	6003      	str	r3, [r0, #0]
 800a1a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a1aa:	bd38      	pop	{r3, r4, r5, pc}
 800a1ac:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800a1ae:	b112      	cbz	r2, 800a1b6 <_raise_r+0x1e>
 800a1b0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a1b4:	b94b      	cbnz	r3, 800a1ca <_raise_r+0x32>
 800a1b6:	4620      	mov	r0, r4
 800a1b8:	f000 f830 	bl	800a21c <_getpid_r>
 800a1bc:	462a      	mov	r2, r5
 800a1be:	4601      	mov	r1, r0
 800a1c0:	4620      	mov	r0, r4
 800a1c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a1c6:	f000 b817 	b.w	800a1f8 <_kill_r>
 800a1ca:	2b01      	cmp	r3, #1
 800a1cc:	d00a      	beq.n	800a1e4 <_raise_r+0x4c>
 800a1ce:	1c59      	adds	r1, r3, #1
 800a1d0:	d103      	bne.n	800a1da <_raise_r+0x42>
 800a1d2:	2316      	movs	r3, #22
 800a1d4:	6003      	str	r3, [r0, #0]
 800a1d6:	2001      	movs	r0, #1
 800a1d8:	e7e7      	b.n	800a1aa <_raise_r+0x12>
 800a1da:	2400      	movs	r4, #0
 800a1dc:	4628      	mov	r0, r5
 800a1de:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800a1e2:	4798      	blx	r3
 800a1e4:	2000      	movs	r0, #0
 800a1e6:	e7e0      	b.n	800a1aa <_raise_r+0x12>

0800a1e8 <raise>:
 800a1e8:	4b02      	ldr	r3, [pc, #8]	; (800a1f4 <raise+0xc>)
 800a1ea:	4601      	mov	r1, r0
 800a1ec:	6818      	ldr	r0, [r3, #0]
 800a1ee:	f7ff bfd3 	b.w	800a198 <_raise_r>
 800a1f2:	bf00      	nop
 800a1f4:	20000068 	.word	0x20000068

0800a1f8 <_kill_r>:
 800a1f8:	b538      	push	{r3, r4, r5, lr}
 800a1fa:	2300      	movs	r3, #0
 800a1fc:	4d06      	ldr	r5, [pc, #24]	; (800a218 <_kill_r+0x20>)
 800a1fe:	4604      	mov	r4, r0
 800a200:	4608      	mov	r0, r1
 800a202:	4611      	mov	r1, r2
 800a204:	602b      	str	r3, [r5, #0]
 800a206:	f7f8 fef8 	bl	8002ffa <_kill>
 800a20a:	1c43      	adds	r3, r0, #1
 800a20c:	d102      	bne.n	800a214 <_kill_r+0x1c>
 800a20e:	682b      	ldr	r3, [r5, #0]
 800a210:	b103      	cbz	r3, 800a214 <_kill_r+0x1c>
 800a212:	6023      	str	r3, [r4, #0]
 800a214:	bd38      	pop	{r3, r4, r5, pc}
 800a216:	bf00      	nop
 800a218:	20001678 	.word	0x20001678

0800a21c <_getpid_r>:
 800a21c:	f7f8 bee6 	b.w	8002fec <_getpid>

0800a220 <__swhatbuf_r>:
 800a220:	b570      	push	{r4, r5, r6, lr}
 800a222:	460c      	mov	r4, r1
 800a224:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a228:	4615      	mov	r5, r2
 800a22a:	2900      	cmp	r1, #0
 800a22c:	461e      	mov	r6, r3
 800a22e:	b096      	sub	sp, #88	; 0x58
 800a230:	da0c      	bge.n	800a24c <__swhatbuf_r+0x2c>
 800a232:	89a3      	ldrh	r3, [r4, #12]
 800a234:	2100      	movs	r1, #0
 800a236:	f013 0f80 	tst.w	r3, #128	; 0x80
 800a23a:	bf0c      	ite	eq
 800a23c:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800a240:	2340      	movne	r3, #64	; 0x40
 800a242:	2000      	movs	r0, #0
 800a244:	6031      	str	r1, [r6, #0]
 800a246:	602b      	str	r3, [r5, #0]
 800a248:	b016      	add	sp, #88	; 0x58
 800a24a:	bd70      	pop	{r4, r5, r6, pc}
 800a24c:	466a      	mov	r2, sp
 800a24e:	f000 f849 	bl	800a2e4 <_fstat_r>
 800a252:	2800      	cmp	r0, #0
 800a254:	dbed      	blt.n	800a232 <__swhatbuf_r+0x12>
 800a256:	9901      	ldr	r1, [sp, #4]
 800a258:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800a25c:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800a260:	4259      	negs	r1, r3
 800a262:	4159      	adcs	r1, r3
 800a264:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a268:	e7eb      	b.n	800a242 <__swhatbuf_r+0x22>

0800a26a <__smakebuf_r>:
 800a26a:	898b      	ldrh	r3, [r1, #12]
 800a26c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a26e:	079d      	lsls	r5, r3, #30
 800a270:	4606      	mov	r6, r0
 800a272:	460c      	mov	r4, r1
 800a274:	d507      	bpl.n	800a286 <__smakebuf_r+0x1c>
 800a276:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800a27a:	6023      	str	r3, [r4, #0]
 800a27c:	6123      	str	r3, [r4, #16]
 800a27e:	2301      	movs	r3, #1
 800a280:	6163      	str	r3, [r4, #20]
 800a282:	b002      	add	sp, #8
 800a284:	bd70      	pop	{r4, r5, r6, pc}
 800a286:	466a      	mov	r2, sp
 800a288:	ab01      	add	r3, sp, #4
 800a28a:	f7ff ffc9 	bl	800a220 <__swhatbuf_r>
 800a28e:	9900      	ldr	r1, [sp, #0]
 800a290:	4605      	mov	r5, r0
 800a292:	4630      	mov	r0, r6
 800a294:	f7ff f880 	bl	8009398 <_malloc_r>
 800a298:	b948      	cbnz	r0, 800a2ae <__smakebuf_r+0x44>
 800a29a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a29e:	059a      	lsls	r2, r3, #22
 800a2a0:	d4ef      	bmi.n	800a282 <__smakebuf_r+0x18>
 800a2a2:	f023 0303 	bic.w	r3, r3, #3
 800a2a6:	f043 0302 	orr.w	r3, r3, #2
 800a2aa:	81a3      	strh	r3, [r4, #12]
 800a2ac:	e7e3      	b.n	800a276 <__smakebuf_r+0xc>
 800a2ae:	89a3      	ldrh	r3, [r4, #12]
 800a2b0:	6020      	str	r0, [r4, #0]
 800a2b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a2b6:	81a3      	strh	r3, [r4, #12]
 800a2b8:	9b00      	ldr	r3, [sp, #0]
 800a2ba:	6120      	str	r0, [r4, #16]
 800a2bc:	6163      	str	r3, [r4, #20]
 800a2be:	9b01      	ldr	r3, [sp, #4]
 800a2c0:	b15b      	cbz	r3, 800a2da <__smakebuf_r+0x70>
 800a2c2:	4630      	mov	r0, r6
 800a2c4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a2c8:	f000 f81e 	bl	800a308 <_isatty_r>
 800a2cc:	b128      	cbz	r0, 800a2da <__smakebuf_r+0x70>
 800a2ce:	89a3      	ldrh	r3, [r4, #12]
 800a2d0:	f023 0303 	bic.w	r3, r3, #3
 800a2d4:	f043 0301 	orr.w	r3, r3, #1
 800a2d8:	81a3      	strh	r3, [r4, #12]
 800a2da:	89a3      	ldrh	r3, [r4, #12]
 800a2dc:	431d      	orrs	r5, r3
 800a2de:	81a5      	strh	r5, [r4, #12]
 800a2e0:	e7cf      	b.n	800a282 <__smakebuf_r+0x18>
	...

0800a2e4 <_fstat_r>:
 800a2e4:	b538      	push	{r3, r4, r5, lr}
 800a2e6:	2300      	movs	r3, #0
 800a2e8:	4d06      	ldr	r5, [pc, #24]	; (800a304 <_fstat_r+0x20>)
 800a2ea:	4604      	mov	r4, r0
 800a2ec:	4608      	mov	r0, r1
 800a2ee:	4611      	mov	r1, r2
 800a2f0:	602b      	str	r3, [r5, #0]
 800a2f2:	f7f8 fee0 	bl	80030b6 <_fstat>
 800a2f6:	1c43      	adds	r3, r0, #1
 800a2f8:	d102      	bne.n	800a300 <_fstat_r+0x1c>
 800a2fa:	682b      	ldr	r3, [r5, #0]
 800a2fc:	b103      	cbz	r3, 800a300 <_fstat_r+0x1c>
 800a2fe:	6023      	str	r3, [r4, #0]
 800a300:	bd38      	pop	{r3, r4, r5, pc}
 800a302:	bf00      	nop
 800a304:	20001678 	.word	0x20001678

0800a308 <_isatty_r>:
 800a308:	b538      	push	{r3, r4, r5, lr}
 800a30a:	2300      	movs	r3, #0
 800a30c:	4d05      	ldr	r5, [pc, #20]	; (800a324 <_isatty_r+0x1c>)
 800a30e:	4604      	mov	r4, r0
 800a310:	4608      	mov	r0, r1
 800a312:	602b      	str	r3, [r5, #0]
 800a314:	f7f8 fede 	bl	80030d4 <_isatty>
 800a318:	1c43      	adds	r3, r0, #1
 800a31a:	d102      	bne.n	800a322 <_isatty_r+0x1a>
 800a31c:	682b      	ldr	r3, [r5, #0]
 800a31e:	b103      	cbz	r3, 800a322 <_isatty_r+0x1a>
 800a320:	6023      	str	r3, [r4, #0]
 800a322:	bd38      	pop	{r3, r4, r5, pc}
 800a324:	20001678 	.word	0x20001678

0800a328 <_init>:
 800a328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a32a:	bf00      	nop
 800a32c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a32e:	bc08      	pop	{r3}
 800a330:	469e      	mov	lr, r3
 800a332:	4770      	bx	lr

0800a334 <_fini>:
 800a334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a336:	bf00      	nop
 800a338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a33a:	bc08      	pop	{r3}
 800a33c:	469e      	mov	lr, r3
 800a33e:	4770      	bx	lr
